
i2c_test.elf:     file format elf32-littlenios2
i2c_test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040238

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x000119ec memsz 0x000119ec flags r-x
    LOAD off    0x00012a0c vaddr 0x00051a0c paddr 0x000535e4 align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x000001bc vaddr 0x000551bc paddr 0x000551bc align 2**12
         filesz 0x00000000 memsz 0x00000174 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011104  00040238  00040238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006d0  0005133c  0005133c  0001233c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  00051a0c  000535e4  00012a0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000174  000551bc  000551bc  000151bc  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_mem   00000000  00055330  00055330  000145e4  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  000145e4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001190  00000000  00000000  00014618  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002e907  00000000  00000000  000157a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000c9d9  00000000  00000000  000440af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00012106  00000000  00000000  00050a88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  000027cc  00000000  00000000  00062b90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00002a8c  00000000  00000000  0006535c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_alt_sim_info 00000060  00000000  00000000  00067de8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000070  00000000  00000000  00067e48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line_str 000021d5  00000000  00000000  00067eb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_loclists 00016145  00000000  00000000  0006a08d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 0000194c  00000000  00000000  000801d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .thread_model 00000003  00000000  00000000  00085266  2**0
                  CONTENTS, READONLY
 20 .cpu          00000003  00000000  00000000  00085269  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  0008526c  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  0008526d  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   0000000b  00000000  00000000  0008526e  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    0000000b  00000000  00000000  00085279  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   0000000b  00000000  00000000  00085284  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 0000000c  00000000  00000000  0008528f  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 00000035  00000000  00000000  0008529b  2**0
                  CONTENTS, READONLY
 28 .jdi          00004b4c  00000000  00000000  000852d0  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0004a4da  00000000  00000000  00089e1c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040238 l    d  .text	00000000 .text
0005133c l    d  .rodata	00000000 .rodata
00051a0c l    d  .rwdata	00000000 .rwdata
000551bc l    d  .bss	00000000 .bss
00055330 l    d  .onchip_mem	00000000 .onchip_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 crt0.o
00040280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
000407a8 l     F .text	00000048 handle_interrupts
000407f0 l     F .text	00000064 init_interrupt_pio
00040854 l     F .text	000000d4 timer_isr
000551d0 l     O .bss	00000004 count.0
00000000 l    df *ABS*	00000000 i2c_avalon_mm_if.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00051504 l     O .rodata	00000010 zeroes.0
00043e20 l     F .text	000000c4 __sbprintf
00051514 l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00044030 l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00045d00 l     F .text	00000008 __fp_lock
00045d14 l     F .text	00000008 __fp_unlock
00045d1c l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00051a0c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000515c0 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004915c l     F .text	000000f4 __sprint_r.part.0
000516e4 l     O .rodata	00000010 zeroes.0
0004a4f4 l     F .text	000000c4 __sbprintf
000516f4 l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0004e960 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004ea6c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004ead4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0004ee78 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0004ef58 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004f084 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004f170 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004f344 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000535d8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0004f5bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004f6f0 l     F .text	00000034 alt_dev_reg
0005254c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004f9e4 l     F .text	00000214 altera_avalon_jtag_uart_irq
0004fbf8 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00050244 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00050648 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0005089c l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
000509c8 l     F .text	0000003c alt_get_errno
00050a04 l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
000551f8 g     O .bss	00000004 alt_instruction_exception_handler
00048884 g     F .text	00000070 _mprec_log10
00048970 g     F .text	00000060 __any_on
0004abfc g     F .text	00000058 _isatty_r
000515cc g     O .rodata	00000028 __mprec_tinytens
0004f280 g     F .text	0000007c alt_main
00040978 g     F .text	00000034 led_write
000418e4 g     F .text	000000d0 _puts_r
00055230 g     O .bss	00000100 alt_irq
0004ad48 g     F .text	00000064 _lseek_r
000535e4 g       *ABS*	00000000 __flash_rwdata_start
0004d448 g     F .text	00000094 .hidden __eqdf2
00055330 g       *ABS*	00000000 __alt_heap_start
0004b684 g     F .text	00000060 _kill_r
000418ac g     F .text	00000038 printf
0004b07c g     F .text	0000006c _wcrtomb_r
0004b220 g     F .text	00000090 _signal_r
000490f8 g     F .text	0000005c __sseek
00046034 g     F .text	00000010 __sinit
0004af1c g     F .text	00000148 __swbuf_r
0004ac54 g     F .text	00000074 _setlocale_r
00045e84 g     F .text	00000068 __sfmoreglue
0004f320 g     F .text	00000024 __malloc_unlock
00040c08 g     F .text	00000180 read_from_i2c_device
00040d88 g     F .text	00000418 .hidden __divsf3
00040b30 g     F .text	00000040 check_mm_if_busy
0004765c g     F .text	00000128 memmove
00046020 g     F .text	00000014 _cleanup
0004787c g     F .text	000000a4 _Balloc
00041588 g     F .text	00000070 .hidden __fixsfsi
0004d4dc g     F .text	000000fc .hidden __gtdf2
00050de0 g     F .text	00000024 altera_nios2_gen2_irq_init
0004a830 g     F .text	0000000c __errno
00040000 g     F .entry	0000001c __reset
00046a8c g     F .text	00000008 __localeconv_l
000551cc g     O .bss	00000004 edge_capture
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004ab9c g     F .text	00000060 _fstat_r
000551e0 g     O .bss	00000004 errno
00049070 g     F .text	00000008 __seofread
000551f0 g     O .bss	00000004 alt_argv
0005b5ac g       *ABS*	00000000 _gp
0004f58c g     F .text	00000030 usleep
0004ebc0 g     F .text	00000020 getpid
000523cc g     O .rwdata	00000180 alt_fd_list
00050e04 g     F .text	00000090 alt_find_dev
0004755c g     F .text	00000100 memcpy
00045d08 g     F .text	0000000c _cleanup_r
0004e818 g     F .text	000000b8 .hidden __floatsidf
0005094c g     F .text	0000007c alt_io_redirect
0004d5d8 g     F .text	000000f8 .hidden __ltdf2
0005133c g       *ABS*	00000000 __DTOR_END__
000419b4 g     F .text	00000010 puts
00050828 g     F .text	00000074 alt_exception_cause_generated_bad_addr
000487dc g     F .text	000000a8 __ratio
0004a4d8 g     F .text	0000001c __vfiprintf_internal
0004fdfc g     F .text	00000220 altera_avalon_jtag_uart_read
0004187c g     F .text	00000030 _printf_r
0004c23c g     F .text	00000064 .hidden __udivsi3
0004eeb4 g     F .text	000000a4 isatty
0004b2b0 g     F .text	000000b0 _raise_r
0004a674 g     F .text	00000064 __assert_func
0005161c g     O .rodata	000000c8 __mprec_tens
0005103c g     F .text	00000090 alt_icache_flush
000551dc g     O .bss	00000004 __malloc_top_pad
0004b6e4 g     F .text	00000004 _getpid_r
00046a94 g     F .text	0000000c _localeconv_r
00047cd0 g     F .text	000000b0 __i2b
000464a8 g     F .text	000004a4 __sfvwrite_r
0004b360 g     F .text	000000bc __sigtramp_r
00048fc4 g     F .text	00000058 _sbrk_r
0004adfc g     F .text	00000064 _read_r
000535cc g     O .rwdata	00000004 alt_max_fd
0004a83c g     F .text	000000f8 _fclose_r
0004041c g     F .text	00000048 read_device_id
00045c7c g     F .text	00000084 fflush
000551d8 g     O .bss	00000004 __malloc_max_sbrked_mem
0004c2fc g     F .text	00000904 .hidden __adddf3
00048584 g     F .text	00000100 __b2d
0004bc38 g     F .text	00000510 .hidden __umoddi3
0004f1ac g     F .text	000000d4 lseek
000535ac g     O .rwdata	00000004 _global_impure_ptr
000489d0 g     F .text	000005f4 _realloc_r
00055330 g       *ABS*	00000000 __bss_end
0004ed90 g     F .text	000000e8 alt_iic_isr_register
00050cb4 g     F .text	0000012c alt_tick
0004b6e8 g     F .text	00000550 .hidden __udivdi3
0004ab00 g     F .text	00000024 _fputwc_r
000515f4 g     O .rodata	00000028 __mprec_bigtens
00047a74 g     F .text	00000138 __s2b
0004b1ac g     F .text	00000018 abort
0004e8d0 g     F .text	00000090 .hidden __floatunsidf
0004829c g     F .text	00000058 __mcmp
00046054 g     F .text	00000014 __fp_lock_all
0004ed44 g     F .text	0000004c alt_ic_irq_enabled
00050c10 g     F .text	000000a4 alt_alarm_stop
000551e8 g     O .bss	00000004 alt_irq_active
00040000 g       *ABS*	00000000 __alt_mem_onchip_mem
000400fc g     F .exceptions	000000c8 alt_irq_handler
000523a4 g     O .rwdata	00000028 alt_dev_null
000505fc g     F .text	0000004c alt_dcache_flush_all
00047bac g     F .text	00000074 __hi0bits
0004e798 g     F .text	00000080 .hidden __fixdfsi
000535e4 g       *ABS*	00000000 __ram_rwdata_end
000535c4 g     O .rwdata	00000008 alt_dev_list
00040b70 g     F .text	00000098 write_to_i2c_device
0004f5f8 g     F .text	000000f8 write
00051a0c g       *ABS*	00000000 __ram_rodata_end
0004eb10 g     F .text	000000b0 fstat
0004ef94 g     F .text	000000f0 kill
0004d5d8 g     F .text	000000f8 .hidden __ledf2
00047fd4 g     F .text	00000140 __pow5mult
000551bd g     O .bss	00000001 led
00049268 g     F .text	00001270 ___vfiprintf_internal_r
0004c2a0 g     F .text	0000005c .hidden __umodsi3
00055330 g       *ABS*	00000000 end
0004f924 g     F .text	000000c0 altera_avalon_jtag_uart_init
000401c4 g     F .exceptions	00000074 alt_instruction_exception_entry
0005133c g       *ABS*	00000000 __CTOR_LIST__
00065800 g       *ABS*	00000000 __alt_stack_pointer
000502c0 g     F .text	00000084 alt_avalon_timer_sc_init
0004182c g     F .text	00000050 .hidden __clzsi2
0005001c g     F .text	00000228 altera_avalon_jtag_uart_write
00046044 g     F .text	00000004 __sfp_lock_acquire
0004748c g     F .text	000000d0 memchr
00041a5c g     F .text	000023a8 ___vfprintf_internal_r
00040928 g     F .text	00000050 init_timer_interrupt
000461a0 g     F .text	00000308 _free_r
00051858 g     O .rodata	00000180 _ctype_b
0004acc8 g     F .text	0000000c __locale_mb_cur_max
0005121c g     F .text	00000120 __call_exitprocs
000535b4 g     O .rwdata	00000004 __malloc_sbrk_base
00040238 g     F .text	0000004c _start
000551c0 g     O .bss	00000004 level
000551fc g     O .bss	00000004 _alt_tick_rate
00048114 g     F .text	00000188 __lshift
00055200 g     O .bss	00000008 _alt_nticks
0004b4d0 g     F .text	00000098 signal
0004f380 g     F .text	000000fc read
0004f760 g     F .text	00000060 alt_sys_init
000415f8 g     F .text	00000128 .hidden __floatsisf
0005118c g     F .text	00000090 __register_exitproc
00047d80 g     F .text	00000254 __multiply
0004fca0 g     F .text	00000068 altera_avalon_jtag_uart_close
00051a0c g       *ABS*	00000000 __ram_rwdata_start
0005133c g       *ABS*	00000000 __ram_rodata_start
00055208 g     O .bss	00000028 __malloc_current_mallinfo
00048684 g     F .text	00000158 __d2b
00040284 g     F .text	00000198 config_device
0004f7c0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00050f9c g     F .text	000000a0 alt_get_fd
000504a4 g     F .text	00000158 alt_busy_sleep
0004a61c g     F .text	00000058 _close_r
00051114 g     F .text	00000078 memcmp
0004f880 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00055330 g       *ABS*	00000000 __alt_stack_base
0004f8d0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00043ee4 g     F .text	0000014c __swsetup_r
0004cc00 g     F .text	00000848 .hidden __divdf3
00045eec g     F .text	00000134 __sfp
000488f4 g     F .text	0000007c __copybits
00051e30 g     O .rwdata	00000408 __malloc_av_
00046050 g     F .text	00000004 __sinit_lock_release
0004d6d0 g     F .text	000006d8 .hidden __muldf3
0004901c g     F .text	00000054 __sread
00050e94 g     F .text	00000108 alt_find_file
00050684 g     F .text	000000a8 alt_dev_llist_insert
0004f2fc g     F .text	00000024 __malloc_lock
0004f4d4 g     F .text	000000b8 sbrk
00045c1c g     F .text	00000060 _fflush_r
0004a6ec g     F .text	00000144 _calloc_r
000551bc g       *ABS*	00000000 __bss_start
00047784 g     F .text	000000f8 memset
00040a3c g     F .text	000000f4 main
000551f4 g     O .bss	00000004 alt_envp
000551d4 g     O .bss	00000004 __malloc_max_total_mem
0004f820 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004b064 g     F .text	00000018 __swbuf
00049154 g     F .text	00000008 __sclose
00065800 g       *ABS*	00000000 __alt_heap_limit
0004a934 g     F .text	00000010 fclose
0004422c g     F .text	000017e8 _dtoa_r
00046cd8 g     F .text	000007b4 _malloc_r
0004b17c g     F .text	00000030 __ascii_wctomb
000404c0 g     F .text	00000068 read_adxl345_reg
000535d0 g     O .rwdata	00000004 alt_errno
0004a944 g     F .text	00000020 _fiprintf_r
0004b568 g     F .text	00000060 _init_signal
0004694c g     F .text	00000098 _fwalk
0004adac g     F .text	0000000c _mbtowc_r
0004c148 g     F .text	00000080 .hidden __divsi3
0004607c g     F .text	00000124 _malloc_trim_r
0005133c g       *ABS*	00000000 __CTOR_END__
000411a0 g     F .text	000003e8 .hidden __mulsf3
0004ae60 g     F .text	000000b8 strcmp
0005133c g       *ABS*	00000000 __flash_rodata_start
0005133c g       *ABS*	00000000 __DTOR_LIST__
0004d448 g     F .text	00000094 .hidden __nedf2
0004f724 g     F .text	0000003c alt_irq_init
0004f47c g     F .text	00000058 alt_release_fd
000513bc g     O .rodata	00000100 .hidden __clz_tab
000551e4 g     O .bss	00000004 _PathLocale
000510cc g     F .text	00000014 atexit
0004a5b8 g     F .text	00000064 _write_r
0004acd4 g     F .text	00000074 setlocale
000535b0 g     O .rwdata	00000004 _impure_ptr
000551ec g     O .bss	00000004 alt_argc
00045a14 g     F .text	00000208 __sflush_r
00050790 g     F .text	00000064 _do_dtors
00040020 g       .exceptions	00000000 alt_irq_entry
0004adb8 g     F .text	00000044 __ascii_mbtowc
00048524 g     F .text	00000060 __ulp
00046068 g     F .text	00000014 __fp_unlock_all
000551bc g     O .bss	00000001 pwm
000535bc g     O .rwdata	00000008 alt_fs_list
00040528 g     F .text	00000280 read_acceleration_data
00040020 g       *ABS*	00000000 __ram_exceptions_start
00046aa0 g     F .text	0000000c localeconv
00046c4c g     F .text	0000008c __swhatbuf_r
0004ebe0 g     F .text	00000050 alt_ic_isr_register
000535e4 g       *ABS*	00000000 _edata
00055330 g       *ABS*	00000000 _end
0004a99c g     F .text	00000164 __fputwc
00040238 g       *ABS*	00000000 __ram_exceptions_end
000551c4 g     O .bss	00000004 accel_range
0004fd08 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
000551c8 g     O .bss	00000004 _range_accel
0004ecb8 g     F .text	0000008c alt_ic_irq_disable
00049078 g     F .text	00000080 __swrite
000535b8 g     O .rwdata	00000004 __malloc_trim_threshold
000510e0 g     F .text	00000034 exit
0004a964 g     F .text	00000038 fiprintf
0004af18 g     F .text	00000004 _vfiprintf_r
000469e4 g     F .text	000000a8 _fwalk_reent
00041720 g     F .text	0000010c .hidden __floatunsisf
000482f4 g     F .text	00000230 __mdiff
0004c1c8 g     F .text	00000074 .hidden __modsi3
00065800 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00046048 g     F .text	00000004 __sfp_lock_release
00051754 g     O .rodata	00000101 _ctype_
0004e744 g     F .text	00000054 .hidden __unorddf2
000409ac g     F .text	00000090 convert_read
0004ea98 g     F .text	0000003c _exit
00050344 g     F .text	00000160 alt_alarm_start
00046aac g     F .text	000001a0 __smakebuf_r
000419c4 g     F .text	00000098 strlen
00040464 g     F .text	0000005c read_irq_reg
0004b1c4 g     F .text	0000005c _init_signal_r
00050abc g     F .text	00000154 open
0004d4dc g     F .text	000000fc .hidden __gedf2
0004a6d8 g     F .text	00000014 __assert
00049250 g     F .text	00000018 __sprint_r
000507f4 g     F .text	00000034 alt_icache_flush_all
000535d4 g     O .rwdata	00000004 alt_priority_mask
0004ec30 g     F .text	00000088 alt_ic_irq_enable
00043e04 g     F .text	0000001c __vfprintf_internal
0004b170 g     F .text	0000000c _wctomb_r
0004dda8 g     F .text	0000099c .hidden __subdf3
00047c20 g     F .text	000000b0 __lo0bits
000535dc g     O .rwdata	00000008 alt_alarm_list
0005072c g     F .text	00000064 _do_ctors
0004b5c8 g     F .text	000000bc __sigtramp
0004b0e8 g     F .text	00000088 wcrtomb
0004e99c g     F .text	000000d0 close
00052238 g     O .rwdata	0000016c __global_locale
0004f0ec g     F .text	00000084 alt_load
0004ab24 g     F .text	00000078 fputwc
0004b41c g     F .text	000000b4 raise
0004604c g     F .text	00000004 __sinit_lock_acquire
00047944 g     F .text	00000130 __multadd
00047920 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08408e14 	ori	at,at,568
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__reset-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
   40094:	e93fff04 	addi	r4,ea,-4
   40098:	00401c40 	call	401c4 <alt_instruction_exception_entry>
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>
   400a0:	ebffff04 	addi	r15,ea,-4
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   40118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0ffff17 	ldw	r3,-4(fp)
   40130:	e0bffe17 	ldw	r2,-8(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001126 	beq	r2,zero,40180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	e0bffd17 	ldw	r2,-12(fp)
   40140:	100690fa 	slli	r3,r2,3
   40144:	00800174 	movhi	r2,5
   40148:	1885883a 	add	r2,r3,r2
   4014c:	10d48c17 	ldw	r3,21040(r2)
   40150:	e0bffd17 	ldw	r2,-12(fp)
   40154:	100890fa 	slli	r4,r2,3
   40158:	00800174 	movhi	r2,5
   4015c:	2085883a 	add	r2,r4,r2
   40160:	10948d17 	ldw	r2,21044(r2)
   40164:	1009883a 	mov	r4,r2
   40168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   4016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   40170:	0005313a 	rdctl	r2,ipending
   40174:	e0bffb15 	stw	r2,-20(fp)
  return active;
   40178:	e0bffb17 	ldw	r2,-20(fp)
   4017c:	00000706 	br	4019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
   40180:	e0bffe17 	ldw	r2,-8(fp)
   40184:	1085883a 	add	r2,r2,r2
   40188:	e0bffe15 	stw	r2,-8(fp)
      i++;
   4018c:	e0bffd17 	ldw	r2,-12(fp)
   40190:	10800044 	addi	r2,r2,1
   40194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   40198:	003fe406 	br	4012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   4019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   401a0:	e0bfff17 	ldw	r2,-4(fp)
   401a4:	103fde1e 	bne	r2,zero,40120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401a8:	0001883a 	nop
}
   401ac:	0001883a 	nop
   401b0:	e037883a 	mov	sp,fp
   401b4:	dfc00117 	ldw	ra,4(sp)
   401b8:	df000017 	ldw	fp,0(sp)
   401bc:	dec00204 	addi	sp,sp,8
   401c0:	f800283a 	ret

000401c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401c4:	defffb04 	addi	sp,sp,-20
   401c8:	dfc00415 	stw	ra,16(sp)
   401cc:	df000315 	stw	fp,12(sp)
   401d0:	df000304 	addi	fp,sp,12
   401d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401d8:	000531fa 	rdctl	r2,exception
   401dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401e0:	e0bfff17 	ldw	r2,-4(fp)
   401e4:	1004d0ba 	srli	r2,r2,2
   401e8:	108007cc 	andi	r2,r2,31
   401ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401f0:	0005333a 	rdctl	r2,badaddr
   401f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401f8:	d0a71317 	ldw	r2,-25524(gp)
   401fc:	10000726 	beq	r2,zero,4021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   40200:	d0a71317 	ldw	r2,-25524(gp)
   40204:	e0ffff17 	ldw	r3,-4(fp)
   40208:	e1bffe17 	ldw	r6,-8(fp)
   4020c:	e17ffd17 	ldw	r5,-12(fp)
   40210:	1809883a 	mov	r4,r3
   40214:	103ee83a 	callr	r2
   40218:	00000206 	br	40224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   4021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   40220:	0005883a 	mov	r2,zero
}
   40224:	e037883a 	mov	sp,fp
   40228:	dfc00117 	ldw	ra,4(sp)
   4022c:	df000017 	ldw	fp,0(sp)
   40230:	dec00204 	addi	sp,sp,8
   40234:	f800283a 	ret

Disassembly of section .text:

00040238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   4023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   40240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40244:	00bffd16 	blt	zero,r2,4023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40248:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   4024c:	ded60014 	ori	sp,sp,22528
    movhi gp, %hi(_gp)
   40250:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40254:	d6ad6b14 	ori	gp,gp,46508
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40258:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   4025c:	10946f14 	ori	r2,r2,20924

    movhi r3, %hi(__bss_end)
   40260:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40264:	18d4cc14 	ori	r3,r3,21296

    beq r2, r3, 1f
   40268:	10c00326 	beq	r2,r3,40278 <_start+0x40>

0:
    stw zero, (r2)
   4026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   40270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40274:	10fffd36 	bltu	r2,r3,4026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40278:	004f0ec0 	call	4f0ec <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   4027c:	004f2800 	call	4f280 <alt_main>

00040280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40280:	003fff06 	br	40280 <alt_after_alt_main>

00040284 <config_device>:

adxl345_accel_range_t accel_range;
float _range_accel;


void config_device(adxl345_accel_range_t accel_range){
   40284:	defffc04 	addi	sp,sp,-16
   40288:	dfc00315 	stw	ra,12(sp)
   4028c:	df000215 	stw	fp,8(sp)
   40290:	df000204 	addi	fp,sp,8
   40294:	e13ffe15 	stw	r4,-8(fp)


    //Set device into measurement mode by making sure that the Measure bit is set to 1 in the
    //POWER_CTL register. Default value is 0xA, thus it is already on by default.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_POWER_CTL_REG,1,0xA);
   40298:	01c00284 	movi	r7,10
   4029c:	01800044 	movi	r6,1
   402a0:	01400b44 	movi	r5,45
   402a4:	010014c4 	movi	r4,83
   402a8:	0040b700 	call	40b70 <write_to_i2c_device>

    //Set device data format
    _range_accel = accel_range;
   402ac:	e13ffe17 	ldw	r4,-8(fp)
   402b0:	00417200 	call	41720 <__floatunsisf>
   402b4:	1007883a 	mov	r3,r2
   402b8:	d0e70715 	stw	r3,-25572(gp)

    // Set bit D3 to full resolution
    // Set INT_INVERT bit to 1 to activate active low interrupt
    // All other values are default 0

    alt_u8 set_accel_config =  0x20 | 0x8;
   402bc:	00800a04 	movi	r2,40
   402c0:	e0bfffc5 	stb	r2,-1(fp)


    // Add settings for g-range
    switch(accel_range) {
   402c4:	e0bffe17 	ldw	r2,-8(fp)
   402c8:	10800420 	cmpeqi	r2,r2,16
   402cc:	1000171e 	bne	r2,zero,4032c <config_device+0xa8>
   402d0:	e0bffe17 	ldw	r2,-8(fp)
   402d4:	10800468 	cmpgeui	r2,r2,17
   402d8:	1000191e 	bne	r2,zero,40340 <config_device+0xbc>
   402dc:	e0bffe17 	ldw	r2,-8(fp)
   402e0:	10800220 	cmpeqi	r2,r2,8
   402e4:	10000d1e 	bne	r2,zero,4031c <config_device+0x98>
   402e8:	e0bffe17 	ldw	r2,-8(fp)
   402ec:	10800268 	cmpgeui	r2,r2,9
   402f0:	1000131e 	bne	r2,zero,40340 <config_device+0xbc>
   402f4:	e0bffe17 	ldw	r2,-8(fp)
   402f8:	108000a0 	cmpeqi	r2,r2,2
   402fc:	10000f1e 	bne	r2,zero,4033c <config_device+0xb8>
   40300:	e0bffe17 	ldw	r2,-8(fp)
   40304:	10800120 	cmpeqi	r2,r2,4
   40308:	10000d26 	beq	r2,zero,40340 <config_device+0xbc>
    case (ACCEL_RANGE_2G):
        set_accel_config = set_accel_config | (0b00);
        break;
    case (ACCEL_RANGE_4G):
        set_accel_config= set_accel_config | (0b01);
   4030c:	e0bfffc3 	ldbu	r2,-1(fp)
   40310:	10800054 	ori	r2,r2,1
   40314:	e0bfffc5 	stb	r2,-1(fp)
        break;
   40318:	00000906 	br	40340 <config_device+0xbc>
    case (ACCEL_RANGE_8G):
        set_accel_config= set_accel_config | (0b10);
   4031c:	e0bfffc3 	ldbu	r2,-1(fp)
   40320:	10800094 	ori	r2,r2,2
   40324:	e0bfffc5 	stb	r2,-1(fp)
        break;
   40328:	00000506 	br	40340 <config_device+0xbc>
    case (ACCEL_RANGE_16G):
        set_accel_config= set_accel_config | (0b11);
   4032c:	e0bfffc3 	ldbu	r2,-1(fp)
   40330:	108000d4 	ori	r2,r2,3
   40334:	e0bfffc5 	stb	r2,-1(fp)
        break;
   40338:	00000106 	br	40340 <config_device+0xbc>
        break;
   4033c:	0001883a 	nop




    //Data format register
    write_to_i2c_device(ADXL345_ADDR,ADXL345_DATA_FORMAT_REG,1,set_accel_config);
   40340:	e0bfffc3 	ldbu	r2,-1(fp)
   40344:	100f883a 	mov	r7,r2
   40348:	01800044 	movi	r6,1
   4034c:	01400c44 	movi	r5,49
   40350:	010014c4 	movi	r4,83
   40354:	0040b700 	call	40b70 <write_to_i2c_device>
    printf("Configuring ADXL345\n");
   40358:	01000174 	movhi	r4,5
   4035c:	2104cf04 	addi	r4,r4,4924
   40360:	00419b40 	call	419b4 <puts>

    //Disable FIFO, STREAM and Trigger mode. Not necessary as default is 0x0.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_FIFO_CTL_REG,1,0x00);
   40364:	000f883a 	mov	r7,zero
   40368:	01800044 	movi	r6,1
   4036c:	01400e04 	movi	r5,56
   40370:	010014c4 	movi	r4,83
   40374:	0040b700 	call	40b70 <write_to_i2c_device>

    //set tap thresholds
    // The THRESH_TAP register is eight bits and holds the threshold value for tap interrupts. The data format is unsigned, therefore, the magnitude of the tap event is compared with the value in THRESH_TAP for normal tap detection. The scale factor is 62.5 mg/LSB (that is, 0xFF = 16 g). A value of 0 may result in undesirable behavior if single tap/double tap interrupts are enabled.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_THRESH_TAP_REG,1,0x20); //1000 mg
   40378:	01c00804 	movi	r7,32
   4037c:	01800044 	movi	r6,1
   40380:	01400744 	movi	r5,29
   40384:	010014c4 	movi	r4,83
   40388:	0040b700 	call	40b70 <write_to_i2c_device>
    //The DUR register is eight bits and contains an unsigned time value representing the maximum time that an event must be above the THRESH_TAP threshold to qualify as a tap event. The scale factor is 625 μs/LSB. A value of 0 disables the single tap/ double tap functions.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_DUR_REG,1,0x40); // < 30 ms
   4038c:	01c01004 	movi	r7,64
   40390:	01800044 	movi	r6,1
   40394:	01400844 	movi	r5,33
   40398:	010014c4 	movi	r4,83
   4039c:	0040b700 	call	40b70 <write_to_i2c_device>
    //The latent register is eight bits and contains an unsigned time value representing the wait time from the detection of a tap event to the start of the time window (defined by the window register) during which a possible second tap event can be detected. The scale factor is 1.25 ms/LSB. A value of 0 disables the double tap function.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_LATENT_REG,1,0x60); //40 ms
   403a0:	01c01804 	movi	r7,96
   403a4:	01800044 	movi	r6,1
   403a8:	01400884 	movi	r5,34
   403ac:	010014c4 	movi	r4,83
   403b0:	0040b700 	call	40b70 <write_to_i2c_device>
    //The window register is eight bits and contains an unsigned time value representing the amount of time after the expiration of the latency time (determined by the latent register) during which a second valid tap can begin. The scale factor is 1.25 ms/LSB. A value of 0 disables the double tap function
    write_to_i2c_device(ADXL345_ADDR,ADXL345_WINDOW_REG,1,0xFF); //38.75 ms
   403b4:	01c03fc4 	movi	r7,255
   403b8:	01800044 	movi	r6,1
   403bc:	014008c4 	movi	r5,35
   403c0:	010014c4 	movi	r4,83
   403c4:	0040b700 	call	40b70 <write_to_i2c_device>


    //Initialize interrupts to be used
    write_to_i2c_device(ADXL345_ADDR,ADXL345_INT_MAP_REG,1,0x20); // map double tap to int2 pin and data ready to int1 pin
   403c8:	01c00804 	movi	r7,32
   403cc:	01800044 	movi	r6,1
   403d0:	01400bc4 	movi	r5,47
   403d4:	010014c4 	movi	r4,83
   403d8:	0040b700 	call	40b70 <write_to_i2c_device>
    write_to_i2c_device(ADXL345_ADDR,ADXL345_TAP_AXES_REG,1,0x07); // x,y,z-axis
   403dc:	01c001c4 	movi	r7,7
   403e0:	01800044 	movi	r6,1
   403e4:	01400a84 	movi	r5,42
   403e8:	010014c4 	movi	r4,83
   403ec:	0040b700 	call	40b70 <write_to_i2c_device>
    write_to_i2c_device(ADXL345_ADDR,ADXL345_INT_ENABLE_REG,1,0xa0); // Enable data ready and double tap
   403f0:	01c02804 	movi	r7,160
   403f4:	01800044 	movi	r6,1
   403f8:	01400b84 	movi	r5,46
   403fc:	010014c4 	movi	r4,83
   40400:	0040b700 	call	40b70 <write_to_i2c_device>

}
   40404:	0001883a 	nop
   40408:	e037883a 	mov	sp,fp
   4040c:	dfc00117 	ldw	ra,4(sp)
   40410:	df000017 	ldw	fp,0(sp)
   40414:	dec00204 	addi	sp,sp,8
   40418:	f800283a 	ret

0004041c <read_device_id>:

alt_u8 read_device_id(void){
   4041c:	defffc04 	addi	sp,sp,-16
   40420:	dfc00315 	stw	ra,12(sp)
   40424:	df000215 	stw	fp,8(sp)
   40428:	df000204 	addi	fp,sp,8

    alt_u8 data[8] = {0};
   4042c:	e03ffe15 	stw	zero,-8(fp)
   40430:	e03fff15 	stw	zero,-4(fp)
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DEV_ID_REG,1,&data[0]);
   40434:	e0bffe04 	addi	r2,fp,-8
   40438:	100f883a 	mov	r7,r2
   4043c:	01800044 	movi	r6,1
   40440:	000b883a 	mov	r5,zero
   40444:	010014c4 	movi	r4,83
   40448:	0040c080 	call	40c08 <read_from_i2c_device>

    return ((alt_u8) data[0]) & 0xff;
   4044c:	e0bffe03 	ldbu	r2,-8(fp)
}
   40450:	e037883a 	mov	sp,fp
   40454:	dfc00117 	ldw	ra,4(sp)
   40458:	df000017 	ldw	fp,0(sp)
   4045c:	dec00204 	addi	sp,sp,8
   40460:	f800283a 	ret

00040464 <read_irq_reg>:


alt_u8 read_irq_reg(void){
   40464:	defffd04 	addi	sp,sp,-12
   40468:	dfc00215 	stw	ra,8(sp)
   4046c:	df000115 	stw	fp,4(sp)
   40470:	df000104 	addi	fp,sp,4
    alt_u8 data = 0;
   40474:	e03fffc5 	stb	zero,-1(fp)
    read_from_i2c_device(ADXL345_ADDR,ADXL345_INT_SOURCE_REG,1,&data);
   40478:	e0bfffc4 	addi	r2,fp,-1
   4047c:	100f883a 	mov	r7,r2
   40480:	01800044 	movi	r6,1
   40484:	01400c04 	movi	r5,48
   40488:	010014c4 	movi	r4,83
   4048c:	0040c080 	call	40c08 <read_from_i2c_device>
    printf("IRQREG: 0x%x\n",data);
   40490:	e0bfffc3 	ldbu	r2,-1(fp)
   40494:	10803fcc 	andi	r2,r2,255
   40498:	100b883a 	mov	r5,r2
   4049c:	01000174 	movhi	r4,5
   404a0:	2104d404 	addi	r4,r4,4944
   404a4:	00418ac0 	call	418ac <printf>
    return data;
   404a8:	e0bfffc3 	ldbu	r2,-1(fp)
}
   404ac:	e037883a 	mov	sp,fp
   404b0:	dfc00117 	ldw	ra,4(sp)
   404b4:	df000017 	ldw	fp,0(sp)
   404b8:	dec00204 	addi	sp,sp,8
   404bc:	f800283a 	ret

000404c0 <read_adxl345_reg>:

alt_u8 read_adxl345_reg(int reg_addr){
   404c0:	defffc04 	addi	sp,sp,-16
   404c4:	dfc00315 	stw	ra,12(sp)
   404c8:	df000215 	stw	fp,8(sp)
   404cc:	df000204 	addi	fp,sp,8
   404d0:	e13ffe15 	stw	r4,-8(fp)
    alt_u8 data = 0;
   404d4:	e03fffc5 	stb	zero,-1(fp)
    read_from_i2c_device(ADXL345_ADDR,reg_addr,1,&data);
   404d8:	e0bffe17 	ldw	r2,-8(fp)
   404dc:	10803fcc 	andi	r2,r2,255
   404e0:	e0ffffc4 	addi	r3,fp,-1
   404e4:	180f883a 	mov	r7,r3
   404e8:	01800044 	movi	r6,1
   404ec:	100b883a 	mov	r5,r2
   404f0:	010014c4 	movi	r4,83
   404f4:	0040c080 	call	40c08 <read_from_i2c_device>
    printf("IRQREG: 0x%x\n",data);
   404f8:	e0bfffc3 	ldbu	r2,-1(fp)
   404fc:	10803fcc 	andi	r2,r2,255
   40500:	100b883a 	mov	r5,r2
   40504:	01000174 	movhi	r4,5
   40508:	2104d404 	addi	r4,r4,4944
   4050c:	00418ac0 	call	418ac <printf>
    return data;
   40510:	e0bfffc3 	ldbu	r2,-1(fp)
}
   40514:	e037883a 	mov	sp,fp
   40518:	dfc00117 	ldw	ra,4(sp)
   4051c:	df000017 	ldw	fp,0(sp)
   40520:	dec00204 	addi	sp,sp,8
   40524:	f800283a 	ret

00040528 <read_acceleration_data>:


adxl345_data_t read_acceleration_data(){
   40528:	defff204 	addi	sp,sp,-56
   4052c:	dfc00d15 	stw	ra,52(sp)
   40530:	df000c15 	stw	fp,48(sp)
   40534:	df000c04 	addi	fp,sp,48
   40538:	e13ff415 	stw	r4,-48(fp)


    alt_u16 ax = 0, ay = 0, az = 0;
   4053c:	e03ffe8d 	sth	zero,-6(fp)
   40540:	e03ffe0d 	sth	zero,-8(fp)
   40544:	e03ffd8d 	sth	zero,-10(fp)
    float value = 0;
   40548:	e03ffc15 	stw	zero,-16(fp)
    adxl345_data_t accel_data;
    alt_u8 data[8] = {0};
   4054c:	e03ff515 	stw	zero,-44(fp)
   40550:	e03ff615 	stw	zero,-40(fp)
    alt_u8 no_bytes =6;
   40554:	00800184 	movi	r2,6
   40558:	e0bffbc5 	stb	r2,-17(fp)
    //read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAX0_REG,no_bytes,&data[0]);

    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAX0_REG,1,&data[0]);
   4055c:	e0bff504 	addi	r2,fp,-44
   40560:	100f883a 	mov	r7,r2
   40564:	01800044 	movi	r6,1
   40568:	01400c84 	movi	r5,50
   4056c:	010014c4 	movi	r4,83
   40570:	0040c080 	call	40c08 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAX1_REG,1,&data[1]);
   40574:	e0bff504 	addi	r2,fp,-44
   40578:	10800044 	addi	r2,r2,1
   4057c:	100f883a 	mov	r7,r2
   40580:	01800044 	movi	r6,1
   40584:	01400cc4 	movi	r5,51
   40588:	010014c4 	movi	r4,83
   4058c:	0040c080 	call	40c08 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAY0_REG,1,&data[2]);
   40590:	e0bff504 	addi	r2,fp,-44
   40594:	10800084 	addi	r2,r2,2
   40598:	100f883a 	mov	r7,r2
   4059c:	01800044 	movi	r6,1
   405a0:	01400d04 	movi	r5,52
   405a4:	010014c4 	movi	r4,83
   405a8:	0040c080 	call	40c08 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAY1_REG,1,&data[3]);
   405ac:	e0bff504 	addi	r2,fp,-44
   405b0:	108000c4 	addi	r2,r2,3
   405b4:	100f883a 	mov	r7,r2
   405b8:	01800044 	movi	r6,1
   405bc:	01400d44 	movi	r5,53
   405c0:	010014c4 	movi	r4,83
   405c4:	0040c080 	call	40c08 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAZ0_REG,1,&data[4]);
   405c8:	e0bff504 	addi	r2,fp,-44
   405cc:	10800104 	addi	r2,r2,4
   405d0:	100f883a 	mov	r7,r2
   405d4:	01800044 	movi	r6,1
   405d8:	01400d84 	movi	r5,54
   405dc:	010014c4 	movi	r4,83
   405e0:	0040c080 	call	40c08 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAZ1_REG,1,&data[5]);
   405e4:	e0bff504 	addi	r2,fp,-44
   405e8:	10800144 	addi	r2,r2,5
   405ec:	100f883a 	mov	r7,r2
   405f0:	01800044 	movi	r6,1
   405f4:	01400dc4 	movi	r5,55
   405f8:	010014c4 	movi	r4,83
   405fc:	0040c080 	call	40c08 <read_from_i2c_device>

    ax = data[1] << 8 | data[0];
   40600:	e0bff543 	ldbu	r2,-43(fp)
   40604:	10803fcc 	andi	r2,r2,255
   40608:	1004923a 	slli	r2,r2,8
   4060c:	1007883a 	mov	r3,r2
   40610:	e0bff503 	ldbu	r2,-44(fp)
   40614:	10803fcc 	andi	r2,r2,255
   40618:	1884b03a 	or	r2,r3,r2
   4061c:	e0bffe8d 	sth	r2,-6(fp)
    ay = data[3] << 8 | data[2];
   40620:	e0bff5c3 	ldbu	r2,-41(fp)
   40624:	10803fcc 	andi	r2,r2,255
   40628:	1004923a 	slli	r2,r2,8
   4062c:	1007883a 	mov	r3,r2
   40630:	e0bff583 	ldbu	r2,-42(fp)
   40634:	10803fcc 	andi	r2,r2,255
   40638:	1884b03a 	or	r2,r3,r2
   4063c:	e0bffe0d 	sth	r2,-8(fp)
    az = data[5] << 8 | data[4];
   40640:	e0bff643 	ldbu	r2,-39(fp)
   40644:	10803fcc 	andi	r2,r2,255
   40648:	1004923a 	slli	r2,r2,8
   4064c:	1007883a 	mov	r3,r2
   40650:	e0bff603 	ldbu	r2,-40(fp)
   40654:	10803fcc 	andi	r2,r2,255
   40658:	1884b03a 	or	r2,r3,r2
   4065c:	e0bffd8d 	sth	r2,-10(fp)


    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATA_FORMAT_REG,1,&data[0]);
   40660:	e0bff504 	addi	r2,fp,-44
   40664:	100f883a 	mov	r7,r2
   40668:	01800044 	movi	r6,1
   4066c:	01400c44 	movi	r5,49
   40670:	010014c4 	movi	r4,83
   40674:	0040c080 	call	40c08 <read_from_i2c_device>

    int full_res_bit = (data[0] >> 3 ) & 0x1;
   40678:	e0bff503 	ldbu	r2,-44(fp)
   4067c:	10803fcc 	andi	r2,r2,255
   40680:	1004d0fa 	srli	r2,r2,3
   40684:	10803fcc 	andi	r2,r2,255
   40688:	1080004c 	andi	r2,r2,1
   4068c:	e0bffa15 	stw	r2,-24(fp)


    float resolution = (float) _range_accel / 512.0;
   40690:	d0a70717 	ldw	r2,-25572(gp)
   40694:	01510034 	movhi	r5,17408
   40698:	1009883a 	mov	r4,r2
   4069c:	0040d880 	call	40d88 <__divsf3>
   406a0:	1007883a 	mov	r3,r2
   406a4:	e0ffff15 	stw	r3,-4(fp)

    if (full_res_bit) {
   406a8:	e0bffa17 	ldw	r2,-24(fp)
   406ac:	10000226 	beq	r2,zero,406b8 <read_acceleration_data+0x190>
        resolution  = (float) 2/512;
   406b0:	008ee034 	movhi	r2,15232
   406b4:	e0bfff15 	stw	r2,-4(fp)
    }



    value = (alt_16)ax;
   406b8:	e0bffe8b 	ldhu	r2,-6(fp)
   406bc:	10bfffcc 	andi	r2,r2,65535
   406c0:	10a0001c 	xori	r2,r2,32768
   406c4:	10a00004 	addi	r2,r2,-32768
   406c8:	1009883a 	mov	r4,r2
   406cc:	00415f80 	call	415f8 <__floatsisf>
   406d0:	1007883a 	mov	r3,r2
   406d4:	e0fffc15 	stw	r3,-16(fp)
    //accel_raw_data.x = ax;
    accel_data.x = value * resolution *100;
   406d8:	e17fff17 	ldw	r5,-4(fp)
   406dc:	e13ffc17 	ldw	r4,-16(fp)
   406e0:	00411a00 	call	411a0 <__mulsf3>
   406e4:	1007883a 	mov	r3,r2
   406e8:	1805883a 	mov	r2,r3
   406ec:	0150b234 	movhi	r5,17096
   406f0:	1009883a 	mov	r4,r2
   406f4:	00411a00 	call	411a0 <__mulsf3>
   406f8:	1007883a 	mov	r3,r2
   406fc:	1805883a 	mov	r2,r3
   40700:	e0bff715 	stw	r2,-36(fp)

    value = (alt_16)ay;
   40704:	e0bffe0b 	ldhu	r2,-8(fp)
   40708:	10bfffcc 	andi	r2,r2,65535
   4070c:	10a0001c 	xori	r2,r2,32768
   40710:	10a00004 	addi	r2,r2,-32768
   40714:	1009883a 	mov	r4,r2
   40718:	00415f80 	call	415f8 <__floatsisf>
   4071c:	1007883a 	mov	r3,r2
   40720:	e0fffc15 	stw	r3,-16(fp)
    //accel_raw_data.y = ay;
    accel_data.y = value * resolution;
   40724:	e17fff17 	ldw	r5,-4(fp)
   40728:	e13ffc17 	ldw	r4,-16(fp)
   4072c:	00411a00 	call	411a0 <__mulsf3>
   40730:	1007883a 	mov	r3,r2
   40734:	1805883a 	mov	r2,r3
   40738:	e0bff815 	stw	r2,-32(fp)

    value = (alt_16)az;
   4073c:	e0bffd8b 	ldhu	r2,-10(fp)
   40740:	10bfffcc 	andi	r2,r2,65535
   40744:	10a0001c 	xori	r2,r2,32768
   40748:	10a00004 	addi	r2,r2,-32768
   4074c:	1009883a 	mov	r4,r2
   40750:	00415f80 	call	415f8 <__floatsisf>
   40754:	1007883a 	mov	r3,r2
   40758:	e0fffc15 	stw	r3,-16(fp)
    //accel_raw_data.z = az;   //accRange * value / 32768;
    accel_data.z = value * resolution;
   4075c:	e17fff17 	ldw	r5,-4(fp)
   40760:	e13ffc17 	ldw	r4,-16(fp)
   40764:	00411a00 	call	411a0 <__mulsf3>
   40768:	1007883a 	mov	r3,r2
   4076c:	1805883a 	mov	r2,r3
   40770:	e0bff915 	stw	r2,-28(fp)

    return accel_data;
   40774:	e0bff417 	ldw	r2,-48(fp)
   40778:	e0fff717 	ldw	r3,-36(fp)
   4077c:	10c00015 	stw	r3,0(r2)
   40780:	e0fff817 	ldw	r3,-32(fp)
   40784:	10c00115 	stw	r3,4(r2)
   40788:	e0fff917 	ldw	r3,-28(fp)
   4078c:	10c00215 	stw	r3,8(r2)

}
   40790:	e0bff417 	ldw	r2,-48(fp)
   40794:	e037883a 	mov	sp,fp
   40798:	dfc00117 	ldw	ra,4(sp)
   4079c:	df000017 	ldw	fp,0(sp)
   407a0:	dec00204 	addi	sp,sp,8
   407a4:	f800283a 	ret

000407a8 <handle_interrupts>:

volatile int edge_capture;

// This is the ISR which will be called when the system signals an interrupt.
static void handle_interrupts(void* context)
{
   407a8:	defffd04 	addi	sp,sp,-12
   407ac:	df000215 	stw	fp,8(sp)
   407b0:	df000204 	addi	fp,sp,8
   407b4:	e13ffe15 	stw	r4,-8(fp)
	//Cast context to edge_capture's type
	//Volatile to avoid compiler optimization
  //this will point to the edge_capture variable.
	volatile int* edge_capture_ptr = (volatile int*) context;
   407b8:	e0bffe17 	ldw	r2,-8(fp)
   407bc:	e0bfff15 	stw	r2,-4(fp)

	//Read the edge capture register on the PIO and store the value
  //The value will be stored in the edge_capture variable and accessible
  //from other parts of the code.
	*edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(INTERRUPT_PIO_BASE);
   407c0:	00800234 	movhi	r2,8
   407c4:	10c41337 	ldwio	r3,4172(r2)
   407c8:	e0bfff17 	ldw	r2,-4(fp)
   407cc:	10c00015 	stw	r3,0(r2)

	//Write to edge capture register to reset it
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(INTERRUPT_PIO_BASE,0);
   407d0:	0007883a 	mov	r3,zero
   407d4:	00800234 	movhi	r2,8
   407d8:	10c41335 	stwio	r3,4172(r2)
}
   407dc:	0001883a 	nop
   407e0:	e037883a 	mov	sp,fp
   407e4:	df000017 	ldw	fp,0(sp)
   407e8:	dec00104 	addi	sp,sp,4
   407ec:	f800283a 	ret

000407f0 <init_interrupt_pio>:


// This function is used to initializes and registers the interrupt handler.
static void init_interrupt_pio()
{
   407f0:	defffc04 	addi	sp,sp,-16
   407f4:	dfc00315 	stw	ra,12(sp)
   407f8:	df000215 	stw	fp,8(sp)
   407fc:	df000204 	addi	fp,sp,8
	//Recast the edge_capture point to match the
	//alt_irq_register() function prototypo
	void* edge_capture_ptr = (void*)&edge_capture;
   40800:	d0a70804 	addi	r2,gp,-25568
   40804:	e0bfff15 	stw	r2,-4(fp)

	//Enable all 3 interrupt inputs by writing a one to the corresponding interruptmask bit locations
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(INTERRUPT_PIO_BASE,0x7);
   40808:	00c001c4 	movi	r3,7
   4080c:	00800234 	movhi	r2,8
   40810:	10c41235 	stwio	r3,4168(r2)

	//Reset the edge capture register
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(INTERRUPT_PIO_BASE,0);
   40814:	0007883a 	mov	r3,zero
   40818:	00800234 	movhi	r2,8
   4081c:	10c41335 	stwio	r3,4172(r2)

	//Register the interrupt handler in the system
  //The ID and PIO_IRQ number is available from the system.h file.
	alt_ic_isr_register(INTERRUPT_PIO_IRQ_INTERRUPT_CONTROLLER_ID,
   40820:	d8000015 	stw	zero,0(sp)
   40824:	e1ffff17 	ldw	r7,-4(fp)
   40828:	01800134 	movhi	r6,4
   4082c:	3181ea04 	addi	r6,r6,1960
   40830:	01400144 	movi	r5,5
   40834:	0009883a 	mov	r4,zero
   40838:	004ebe00 	call	4ebe0 <alt_ic_isr_register>
			INTERRUPT_PIO_IRQ, handle_interrupts, edge_capture_ptr, 0x0);
}
   4083c:	0001883a 	nop
   40840:	e037883a 	mov	sp,fp
   40844:	dfc00117 	ldw	ra,4(sp)
   40848:	df000017 	ldw	fp,0(sp)
   4084c:	dec00204 	addi	sp,sp,8
   40850:	f800283a 	ret

00040854 <timer_isr>:



static void timer_isr( void * context, alt_u32 id )
{
   40854:	defffc04 	addi	sp,sp,-16
   40858:	dfc00315 	stw	ra,12(sp)
   4085c:	df000215 	stw	fp,8(sp)
   40860:	df000204 	addi	fp,sp,8
   40864:	e13fff15 	stw	r4,-4(fp)
   40868:	e17ffe15 	stw	r5,-8(fp)
	static int count = 0;

	// Clear the interrupt
	IOWR_ALTERA_AVALON_TIMER_STATUS(SYS_CLK_TIMER_BASE, 0);
   4086c:	0007883a 	mov	r3,zero
   40870:	00800234 	movhi	r2,8
   40874:	10c40835 	stwio	r3,4128(r2)

	// Do something
	//printf("\nTimer Expired: %d", count++);

	 if (pwm < abs(level)) {
   40878:	d0a70403 	ldbu	r2,-25584(gp)
   4087c:	10c03fcc 	andi	r3,r2,255
   40880:	18c0201c 	xori	r3,r3,128
   40884:	18ffe004 	addi	r3,r3,-128
   40888:	d0a70517 	ldw	r2,-25580(gp)
   4088c:	1000010e 	bge	r2,zero,40894 <timer_isr+0x40>
   40890:	0085c83a 	sub	r2,zero,r2
   40894:	18800f0e 	bge	r3,r2,408d4 <timer_isr+0x80>

	        if (level < 0) {
   40898:	d0a70517 	ldw	r2,-25580(gp)
   4089c:	1000060e 	bge	r2,zero,408b8 <timer_isr+0x64>
	            led_write(led << 1);
   408a0:	d0a70443 	ldbu	r2,-25583(gp)
   408a4:	10803fcc 	andi	r2,r2,255
   408a8:	1085883a 	add	r2,r2,r2
   408ac:	1009883a 	mov	r4,r2
   408b0:	00409780 	call	40978 <led_write>
   408b4:	00000b06 	br	408e4 <timer_isr+0x90>
	        } else {
	            led_write(led >> 1);
   408b8:	d0a70443 	ldbu	r2,-25583(gp)
   408bc:	10803fcc 	andi	r2,r2,255
   408c0:	1004d07a 	srli	r2,r2,1
   408c4:	10803fcc 	andi	r2,r2,255
   408c8:	1009883a 	mov	r4,r2
   408cc:	00409780 	call	40978 <led_write>
   408d0:	00000406 	br	408e4 <timer_isr+0x90>
	        }

	    } else {
	        led_write(led);
   408d4:	d0a70443 	ldbu	r2,-25583(gp)
   408d8:	10803fcc 	andi	r2,r2,255
   408dc:	1009883a 	mov	r4,r2
   408e0:	00409780 	call	40978 <led_write>
	    }

	    if (pwm > PWM_PERIOD) {
   408e4:	d0a70403 	ldbu	r2,-25584(gp)
   408e8:	10803fcc 	andi	r2,r2,255
   408ec:	1080201c 	xori	r2,r2,128
   408f0:	10bfe004 	addi	r2,r2,-128
   408f4:	10800450 	cmplti	r2,r2,17
   408f8:	1000021e 	bne	r2,zero,40904 <timer_isr+0xb0>
	        pwm = 0;
   408fc:	d0270405 	stb	zero,-25584(gp)
	    } else {
	        pwm++;
	    }

}
   40900:	00000306 	br	40910 <timer_isr+0xbc>
	        pwm++;
   40904:	d0a70403 	ldbu	r2,-25584(gp)
   40908:	10800044 	addi	r2,r2,1
   4090c:	d0a70405 	stb	r2,-25584(gp)
}
   40910:	0001883a 	nop
   40914:	e037883a 	mov	sp,fp
   40918:	dfc00117 	ldw	ra,4(sp)
   4091c:	df000017 	ldw	fp,0(sp)
   40920:	dec00204 	addi	sp,sp,8
   40924:	f800283a 	ret

00040928 <init_timer_interrupt>:

void init_timer_interrupt( void )
{
   40928:	defffd04 	addi	sp,sp,-12
   4092c:	dfc00215 	stw	ra,8(sp)
   40930:	df000115 	stw	fp,4(sp)
   40934:	df000104 	addi	fp,sp,4
	// Register the ISR with HAL
	alt_ic_isr_register(SYS_CLK_TIMER_IRQ_INTERRUPT_CONTROLLER_ID, SYS_CLK_TIMER_IRQ, (void *)timer_isr, NULL, 0x0);
   40938:	d8000015 	stw	zero,0(sp)
   4093c:	000f883a 	mov	r7,zero
   40940:	01800134 	movhi	r6,4
   40944:	31821504 	addi	r6,r6,2132
   40948:	01400044 	movi	r5,1
   4094c:	0009883a 	mov	r4,zero
   40950:	004ebe00 	call	4ebe0 <alt_ic_isr_register>

	// Start the timer
	IOWR_ALTERA_AVALON_TIMER_CONTROL(SYS_CLK_TIMER_BASE, ALTERA_AVALON_TIMER_CONTROL_CONT_MSK
   40954:	00c001c4 	movi	r3,7
   40958:	00800234 	movhi	r2,8
   4095c:	10c40935 	stwio	r3,4132(r2)
			                                   | ALTERA_AVALON_TIMER_CONTROL_START_MSK
											   | ALTERA_AVALON_TIMER_CONTROL_ITO_MSK);
}
   40960:	0001883a 	nop
   40964:	e037883a 	mov	sp,fp
   40968:	dfc00117 	ldw	ra,4(sp)
   4096c:	df000017 	ldw	fp,0(sp)
   40970:	dec00204 	addi	sp,sp,8
   40974:	f800283a 	ret

00040978 <led_write>:


// The led pattern is stored in 8-bits.
void led_write(alt_u8 led_pattern) {
   40978:	defffe04 	addi	sp,sp,-8
   4097c:	df000115 	stw	fp,4(sp)
   40980:	df000104 	addi	fp,sp,4
   40984:	2005883a 	mov	r2,r4
   40988:	e0bfff05 	stb	r2,-4(fp)
    IOWR(LED_PIO_BASE, 0, led_pattern);
   4098c:	e0ffff03 	ldbu	r3,-4(fp)
   40990:	00800234 	movhi	r2,8
   40994:	10c41435 	stwio	r3,4176(r2)
}
   40998:	0001883a 	nop
   4099c:	e037883a 	mov	sp,fp
   409a0:	df000017 	ldw	fp,0(sp)
   409a4:	dec00104 	addi	sp,sp,4
   409a8:	f800283a 	ret

000409ac <convert_read>:

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
   409ac:	defffb04 	addi	sp,sp,-20
   409b0:	df000415 	stw	fp,16(sp)
   409b4:	df000404 	addi	fp,sp,16
   409b8:	e13ffe15 	stw	r4,-8(fp)
   409bc:	e17ffd15 	stw	r5,-12(fp)
   409c0:	e1bffc15 	stw	r6,-16(fp)
    acc_read += OFFSET;
   409c4:	e0bffe17 	ldw	r2,-8(fp)
   409c8:	10bff804 	addi	r2,r2,-32
   409cc:	e0bffe15 	stw	r2,-8(fp)
    alt_u8 val = (acc_read >> 6) & 0x07;
   409d0:	e0bffe17 	ldw	r2,-8(fp)
   409d4:	1005d1ba 	srai	r2,r2,6
   409d8:	108001cc 	andi	r2,r2,7
   409dc:	e0bfffc5 	stb	r2,-1(fp)
    * led = (8 >> val) | (8 << (8 - val));
   409e0:	e0bfffc3 	ldbu	r2,-1(fp)
   409e4:	00c00204 	movi	r3,8
   409e8:	1885d83a 	sra	r2,r3,r2
   409ec:	1009883a 	mov	r4,r2
   409f0:	e0bfffc3 	ldbu	r2,-1(fp)
   409f4:	00c00204 	movi	r3,8
   409f8:	1885c83a 	sub	r2,r3,r2
   409fc:	00c00204 	movi	r3,8
   40a00:	1884983a 	sll	r2,r3,r2
   40a04:	2084b03a 	or	r2,r4,r2
   40a08:	1007883a 	mov	r3,r2
   40a0c:	e0bffc17 	ldw	r2,-16(fp)
   40a10:	10c00005 	stb	r3,0(r2)
    * level = (acc_read >> 1) & 0x1f;
   40a14:	e0bffe17 	ldw	r2,-8(fp)
   40a18:	1005d07a 	srai	r2,r2,1
   40a1c:	10c007cc 	andi	r3,r2,31
   40a20:	e0bffd17 	ldw	r2,-12(fp)
   40a24:	10c00015 	stw	r3,0(r2)
}
   40a28:	0001883a 	nop
   40a2c:	e037883a 	mov	sp,fp
   40a30:	df000017 	ldw	fp,0(sp)
   40a34:	dec00104 	addi	sp,sp,4
   40a38:	f800283a 	ret

00040a3c <main>:


int main(void)
{
   40a3c:	defff604 	addi	sp,sp,-40
   40a40:	dfc00915 	stw	ra,36(sp)
   40a44:	df000815 	stw	fp,32(sp)
   40a48:	df000804 	addi	fp,sp,32
    alt_u8 dev_id =  0;
   40a4c:	e03fffc5 	stb	zero,-1(fp)
    adxl345_data_t accel_data;

	init_interrupt_pio();
   40a50:	00407f00 	call	407f0 <init_interrupt_pio>

  //Variable to hold values from switches
	int sw_data = 0;
   40a54:	e03ffe15 	stw	zero,-8(fp)
	printf("Hello from Nios II!\n");
   40a58:	01000174 	movhi	r4,5
   40a5c:	2104d804 	addi	r4,r4,4960
   40a60:	00419b40 	call	419b4 <puts>

    dev_id = read_device_id();
   40a64:	004041c0 	call	4041c <read_device_id>
   40a68:	e0bfffc5 	stb	r2,-1(fp)
    if(dev_id != ADXL345_DEV_ID){
   40a6c:	e0bfffc3 	ldbu	r2,-1(fp)
   40a70:	10803960 	cmpeqi	r2,r2,229
   40a74:	1000081e 	bne	r2,zero,40a98 <main+0x5c>
      printf("Wrong device ID: 0x%x!\n",dev_id);
   40a78:	e0bfffc3 	ldbu	r2,-1(fp)
   40a7c:	100b883a 	mov	r5,r2
   40a80:	01000174 	movhi	r4,5
   40a84:	2104dd04 	addi	r4,r4,4980
   40a88:	00418ac0 	call	418ac <printf>
      usleep(5000000); //Wait for 5 seconds
   40a8c:	01001334 	movhi	r4,76
   40a90:	2112d004 	addi	r4,r4,19264
   40a94:	004f58c0 	call	4f58c <usleep>
    }
    config_device(ACCEL_RANGE_8G);
   40a98:	01000204 	movi	r4,8
   40a9c:	00402840 	call	40284 <config_device>

    //Variable to hold values from switches

    //alt_u64 adxl345_data = 0;
    accel_data = read_acceleration_data();
   40aa0:	e0bffb04 	addi	r2,fp,-20
   40aa4:	1009883a 	mov	r4,r2
   40aa8:	00405280 	call	40528 <read_acceleration_data>
    init_timer_interrupt();
   40aac:	00409280 	call	40928 <init_timer_interrupt>
	while(1){

    //use the IORD and IOWR functions to read and write from LEDs and SW
	sw_data = IORD(SW_PIO_BASE,0);
   40ab0:	00800234 	movhi	r2,8
   40ab4:	10841837 	ldwio	r2,4192(r2)
   40ab8:	e0bffe15 	stw	r2,-8(fp)
	IOWR(LED_PIO_BASE,0,sw_data);
   40abc:	e0fffe17 	ldw	r3,-8(fp)
   40ac0:	00800234 	movhi	r2,8
   40ac4:	10c41435 	stwio	r3,4176(r2)

	  if (edge_capture == 0x1) //bit position 0 corresponds to button press
   40ac8:	d0a70817 	ldw	r2,-25568(gp)
   40acc:	10800058 	cmpnei	r2,r2,1
   40ad0:	1000051e 	bne	r2,zero,40ae8 <main+0xac>
	  	  {
		   printf("Hi from interrupt routine, Key1 was pressed!\n");
   40ad4:	01000174 	movhi	r4,5
   40ad8:	2104e304 	addi	r4,r4,5004
   40adc:	00419b40 	call	419b4 <puts>
		   edge_capture = 0; // reset variable to "unregister" event
   40ae0:	d0270815 	stw	zero,-25568(gp)
   40ae4:	003ff206 	br	40ab0 <main+0x74>
	  	  }
	  else
        {
            accel_data = read_acceleration_data(); // Reading data registers will clear data related interrupts
   40ae8:	e0bff804 	addi	r2,fp,-32
   40aec:	1009883a 	mov	r4,r2
   40af0:	00405280 	call	40528 <read_acceleration_data>
   40af4:	e0bff817 	ldw	r2,-32(fp)
   40af8:	e0bffb15 	stw	r2,-20(fp)
   40afc:	e0bff917 	ldw	r2,-28(fp)
   40b00:	e0bffc15 	stw	r2,-16(fp)
   40b04:	e0bffa17 	ldw	r2,-24(fp)
   40b08:	e0bffd15 	stw	r2,-12(fp)
            edge_capture = 0;                     // reset variable to "unregister" event
   40b0c:	d0270815 	stw	zero,-25568(gp)
            //printf("ax: %-.5f, ay: %-.5f, az: %-.5f\n",accel_data.x,accel_data.y,accel_data.z);
            convert_read(accel_data.x, & level, & led);
   40b10:	e0bffb17 	ldw	r2,-20(fp)
   40b14:	1009883a 	mov	r4,r2
   40b18:	00415880 	call	41588 <__fixsfsi>
   40b1c:	d1a70444 	addi	r6,gp,-25583
   40b20:	d1670504 	addi	r5,gp,-25580
   40b24:	1009883a 	mov	r4,r2
   40b28:	00409ac0 	call	409ac <convert_read>
	sw_data = IORD(SW_PIO_BASE,0);
   40b2c:	003fe006 	br	40ab0 <main+0x74>

00040b30 <check_mm_if_busy>:
#include "unistd.h" //usleep()

// #define DEBUG

int check_mm_if_busy(void)
{
   40b30:	defffe04 	addi	sp,sp,-8
   40b34:	df000115 	stw	fp,4(sp)
   40b38:	df000104 	addi	fp,sp,4
    //Read control register of I2C-mm if
    int res = IORD(I2C_AVALON_MM_IF_0_BASE,CTRL_REG);
   40b3c:	00800234 	movhi	r2,8
   40b40:	10840037 	ldwio	r2,4096(r2)
   40b44:	e0bfff15 	stw	r2,-4(fp)
    //check if I2C_AVALON_MM_IF state machine is busy
  #ifdef DEBUG
    printf("CTRL: 0x%x\n",res);
  #endif
    if (check_bit(res,MM_IF_BUSY))
   40b48:	e0bfff17 	ldw	r2,-4(fp)
   40b4c:	1080200c 	andi	r2,r2,128
   40b50:	10000226 	beq	r2,zero,40b5c <check_mm_if_busy+0x2c>
    {
        return 1;
   40b54:	00800044 	movi	r2,1
   40b58:	00000106 	br	40b60 <check_mm_if_busy+0x30>
    }
    else
    {
        return 0;
   40b5c:	0005883a 	mov	r2,zero
    }
}
   40b60:	e037883a 	mov	sp,fp
   40b64:	df000017 	ldw	fp,0(sp)
   40b68:	dec00104 	addi	sp,sp,4
   40b6c:	f800283a 	ret

00040b70 <write_to_i2c_device>:

void write_to_i2c_device(alt_u8 i2c_device_addr, alt_u8 i2c_reg_addr,alt_u8 no_bytes,alt_u32 data)
{
   40b70:	defffa04 	addi	sp,sp,-24
   40b74:	dfc00515 	stw	ra,20(sp)
   40b78:	df000415 	stw	fp,16(sp)
   40b7c:	df000404 	addi	fp,sp,16
   40b80:	2005883a 	mov	r2,r4
   40b84:	2809883a 	mov	r4,r5
   40b88:	3007883a 	mov	r3,r6
   40b8c:	e1fffc15 	stw	r7,-16(fp)
   40b90:	e0bfff05 	stb	r2,-4(fp)
   40b94:	2005883a 	mov	r2,r4
   40b98:	e0bffe05 	stb	r2,-8(fp)
   40b9c:	1805883a 	mov	r2,r3
   40ba0:	e0bffd05 	stb	r2,-12(fp)
    //write to address register of i2c mm if
    IOWR(I2C_AVALON_MM_IF_0_BASE,ADDR_REG, i2c_reg_addr << 8 | i2c_device_addr);
   40ba4:	e0bffe03 	ldbu	r2,-8(fp)
   40ba8:	1006923a 	slli	r3,r2,8
   40bac:	e0bfff03 	ldbu	r2,-4(fp)
   40bb0:	1886b03a 	or	r3,r3,r2
   40bb4:	00800234 	movhi	r2,8
   40bb8:	10c40135 	stwio	r3,4100(r2)
    //write to the data register of the i2c mm if
    IOWR(I2C_AVALON_MM_IF_0_BASE,WRITE_REG,data);
   40bbc:	e0fffc17 	ldw	r3,-16(fp)
   40bc0:	00800234 	movhi	r2,8
   40bc4:	10c40235 	stwio	r3,4104(r2)
    //Set the corresponding bits of the ctrl register to enable the i2c communication
    IOWR(I2C_AVALON_MM_IF_0_BASE,CTRL_REG,no_bytes << 2 | CMD_ENA_WR);
   40bc8:	e0bffd03 	ldbu	r2,-12(fp)
   40bcc:	100490ba 	slli	r2,r2,2
   40bd0:	10c00054 	ori	r3,r2,1
   40bd4:	00800234 	movhi	r2,8
   40bd8:	10c40035 	stwio	r3,4096(r2)
    //Check for busy in the ctrl register (i2c busy or mm if busy), and continue when no longer busy
    while(check_mm_if_busy()) continue;
   40bdc:	00000106 	br	40be4 <write_to_i2c_device+0x74>
   40be0:	0001883a 	nop
   40be4:	0040b300 	call	40b30 <check_mm_if_busy>
   40be8:	103ffd1e 	bne	r2,zero,40be0 <write_to_i2c_device+0x70>
}
   40bec:	0001883a 	nop
   40bf0:	0001883a 	nop
   40bf4:	e037883a 	mov	sp,fp
   40bf8:	dfc00117 	ldw	ra,4(sp)
   40bfc:	df000017 	ldw	fp,0(sp)
   40c00:	dec00204 	addi	sp,sp,8
   40c04:	f800283a 	ret

00040c08 <read_from_i2c_device>:

void read_from_i2c_device(alt_u8 i2c_device_addr,alt_u8 i2c_reg_addr,alt_u8 no_bytes, alt_u8* data)
{
   40c08:	defff404 	addi	sp,sp,-48
   40c0c:	dfc00b15 	stw	ra,44(sp)
   40c10:	df000a15 	stw	fp,40(sp)
   40c14:	df000a04 	addi	fp,sp,40
   40c18:	2005883a 	mov	r2,r4
   40c1c:	2809883a 	mov	r4,r5
   40c20:	3007883a 	mov	r3,r6
   40c24:	e1fff615 	stw	r7,-40(fp)
   40c28:	e0bff905 	stb	r2,-28(fp)
   40c2c:	2005883a 	mov	r2,r4
   40c30:	e0bff805 	stb	r2,-32(fp)
   40c34:	1805883a 	mov	r2,r3
   40c38:	e0bff705 	stb	r2,-36(fp)
    alt_u32 read_reg[2] = {0};
   40c3c:	0005883a 	mov	r2,zero
   40c40:	0007883a 	mov	r3,zero
   40c44:	e0bffc15 	stw	r2,-16(fp)
   40c48:	e0fffd15 	stw	r3,-12(fp)
    alt_u8 data_temp[8] = {0};
   40c4c:	e03ffa15 	stw	zero,-24(fp)
   40c50:	e03ffb15 	stw	zero,-20(fp)

    //write to address register of i2c mm if
    //6..0: 7-bits i2c device addres
    //15..8: 8 bits register address of i2c device
    IOWR(I2C_AVALON_MM_IF_0_BASE,ADDR_REG, i2c_reg_addr << 8 | i2c_device_addr);
   40c54:	e0bff803 	ldbu	r2,-32(fp)
   40c58:	1006923a 	slli	r3,r2,8
   40c5c:	e0bff903 	ldbu	r2,-28(fp)
   40c60:	1886b03a 	or	r3,r3,r2
   40c64:	00800234 	movhi	r2,8
   40c68:	10c40135 	stwio	r3,4100(r2)
    //Write to i2c mm if ctrl register to enable i2c command
    IOWR(I2C_AVALON_MM_IF_0_BASE,CTRL_REG, CMD_ENA_WR);
   40c6c:	00c00044 	movi	r3,1
   40c70:	00800234 	movhi	r2,8
   40c74:	10c40035 	stwio	r3,4096(r2)
    //Check for busy in the ctrl register (i2c busy or mm if busy), and continue when no longer busy
    while(check_mm_if_busy()) continue;
   40c78:	00000106 	br	40c80 <read_from_i2c_device+0x78>
   40c7c:	0001883a 	nop
   40c80:	0040b300 	call	40b30 <check_mm_if_busy>
   40c84:	103ffd1e 	bne	r2,zero,40c7c <read_from_i2c_device+0x74>

    //no_bytes to be read from the i2c device

    IOWR(I2C_AVALON_MM_IF_0_BASE,CTRL_REG,no_bytes << 2 | CMD_ENA_RD);
   40c88:	e0bff703 	ldbu	r2,-36(fp)
   40c8c:	100490ba 	slli	r2,r2,2
   40c90:	10c000d4 	ori	r3,r2,3
   40c94:	00800234 	movhi	r2,8
   40c98:	10c40035 	stwio	r3,4096(r2)
    while(check_mm_if_busy()) continue;
   40c9c:	00000106 	br	40ca4 <read_from_i2c_device+0x9c>
   40ca0:	0001883a 	nop
   40ca4:	0040b300 	call	40b30 <check_mm_if_busy>
   40ca8:	103ffd1e 	bne	r2,zero,40ca0 <read_from_i2c_device+0x98>

    read_reg[0] = IORD(I2C_AVALON_MM_IF_0_BASE,READ_REG_LOW);
   40cac:	00800234 	movhi	r2,8
   40cb0:	10840337 	ldwio	r2,4108(r2)
   40cb4:	e0bffc15 	stw	r2,-16(fp)
    read_reg[1] = IORD(I2C_AVALON_MM_IF_0_BASE,READ_REG_HIGH);
   40cb8:	00800234 	movhi	r2,8
   40cbc:	10840437 	ldwio	r2,4112(r2)
   40cc0:	e0bffd15 	stw	r2,-12(fp)

    //Move data in to byte array
    for(int i = 0; i<4; i++) {
   40cc4:	e03fff15 	stw	zero,-4(fp)
   40cc8:	00001306 	br	40d18 <read_from_i2c_device+0x110>
        data_temp[i] = (read_reg[0] >> i*8) & 0xff;
   40ccc:	e0fffc17 	ldw	r3,-16(fp)
   40cd0:	e0bfff17 	ldw	r2,-4(fp)
   40cd4:	100490fa 	slli	r2,r2,3
   40cd8:	1884d83a 	srl	r2,r3,r2
   40cdc:	1007883a 	mov	r3,r2
   40ce0:	e0bfff17 	ldw	r2,-4(fp)
   40ce4:	e085883a 	add	r2,fp,r2
   40ce8:	10fffa05 	stb	r3,-24(r2)
        data_temp[i+4] = (read_reg[1] >> i*8) & 0xff;
   40cec:	e0fffd17 	ldw	r3,-12(fp)
   40cf0:	e0bfff17 	ldw	r2,-4(fp)
   40cf4:	100490fa 	slli	r2,r2,3
   40cf8:	1886d83a 	srl	r3,r3,r2
   40cfc:	e0bfff17 	ldw	r2,-4(fp)
   40d00:	10800104 	addi	r2,r2,4
   40d04:	e085883a 	add	r2,fp,r2
   40d08:	10fffa05 	stb	r3,-24(r2)
    for(int i = 0; i<4; i++) {
   40d0c:	e0bfff17 	ldw	r2,-4(fp)
   40d10:	10800044 	addi	r2,r2,1
   40d14:	e0bfff15 	stw	r2,-4(fp)
   40d18:	e0bfff17 	ldw	r2,-4(fp)
   40d1c:	10800110 	cmplti	r2,r2,4
   40d20:	103fea1e 	bne	r2,zero,40ccc <read_from_i2c_device+0xc4>
    }

    //reverse byte array to have first received byte in the lowest array position
    for(int i = 0; i<no_bytes; i++) {
   40d24:	e03ffe15 	stw	zero,-8(fp)
   40d28:	00000d06 	br	40d60 <read_from_i2c_device+0x158>
        data[i] = data_temp[(no_bytes-1)-i];
   40d2c:	e0bff703 	ldbu	r2,-36(fp)
   40d30:	10ffffc4 	addi	r3,r2,-1
   40d34:	e0bffe17 	ldw	r2,-8(fp)
   40d38:	1887c83a 	sub	r3,r3,r2
   40d3c:	e0bffe17 	ldw	r2,-8(fp)
   40d40:	e13ff617 	ldw	r4,-40(fp)
   40d44:	2085883a 	add	r2,r4,r2
   40d48:	e0c7883a 	add	r3,fp,r3
   40d4c:	18fffa03 	ldbu	r3,-24(r3)
   40d50:	10c00005 	stb	r3,0(r2)
    for(int i = 0; i<no_bytes; i++) {
   40d54:	e0bffe17 	ldw	r2,-8(fp)
   40d58:	10800044 	addi	r2,r2,1
   40d5c:	e0bffe15 	stw	r2,-8(fp)
   40d60:	e0bff703 	ldbu	r2,-36(fp)
   40d64:	e0fffe17 	ldw	r3,-8(fp)
   40d68:	18bff016 	blt	r3,r2,40d2c <read_from_i2c_device+0x124>
     // printf("i: %d, no_bytes: %d\n" ,i,(no_bytes-1)-i);
    }

}
   40d6c:	0001883a 	nop
   40d70:	0001883a 	nop
   40d74:	e037883a 	mov	sp,fp
   40d78:	dfc00117 	ldw	ra,4(sp)
   40d7c:	df000017 	ldw	fp,0(sp)
   40d80:	dec00204 	addi	sp,sp,8
   40d84:	f800283a 	ret

00040d88 <__divsf3>:
   40d88:	defff604 	addi	sp,sp,-40
   40d8c:	2006d5fa 	srli	r3,r4,23
   40d90:	dcc00415 	stw	r19,16(sp)
   40d94:	2026d7fa 	srli	r19,r4,31
   40d98:	00802034 	movhi	r2,128
   40d9c:	dd000515 	stw	r20,20(sp)
   40da0:	dc400215 	stw	r17,8(sp)
   40da4:	10bfffc4 	addi	r2,r2,-1
   40da8:	dfc00915 	stw	ra,36(sp)
   40dac:	ddc00815 	stw	r23,32(sp)
   40db0:	dd800715 	stw	r22,28(sp)
   40db4:	dd400615 	stw	r21,24(sp)
   40db8:	dc800315 	stw	r18,12(sp)
   40dbc:	dc000115 	stw	r16,4(sp)
   40dc0:	18c03fcc 	andi	r3,r3,255
   40dc4:	1128703a 	and	r20,r2,r4
   40dc8:	9823883a 	mov	r17,r19
   40dcc:	18004d26 	beq	r3,zero,40f04 <__divsf3+0x17c>
   40dd0:	18803fe0 	cmpeqi	r2,r3,255
   40dd4:	1000501e 	bne	r2,zero,40f18 <__divsf3+0x190>
   40dd8:	a00490fa 	slli	r2,r20,3
   40ddc:	1d7fe044 	addi	r21,r3,-127
   40de0:	0021883a 	mov	r16,zero
   40de4:	15010034 	orhi	r20,r2,1024
   40de8:	002f883a 	mov	r23,zero
   40dec:	2806d5fa 	srli	r3,r5,23
   40df0:	01002034 	movhi	r4,128
   40df4:	213fffc4 	addi	r4,r4,-1
   40df8:	18c03fcc 	andi	r3,r3,255
   40dfc:	282cd7fa 	srli	r22,r5,31
   40e00:	2164703a 	and	r18,r4,r5
   40e04:	18002426 	beq	r3,zero,40e98 <__divsf3+0x110>
   40e08:	18803fe0 	cmpeqi	r2,r3,255
   40e0c:	10001e1e 	bne	r2,zero,40e88 <__divsf3+0x100>
   40e10:	900890fa 	slli	r4,r18,3
   40e14:	18ffe044 	addi	r3,r3,-127
   40e18:	000b883a 	mov	r5,zero
   40e1c:	24810034 	orhi	r18,r4,1024
   40e20:	9da6f03a 	xor	r19,r19,r22
   40e24:	80800428 	cmpgeui	r2,r16,16
   40e28:	9809883a 	mov	r4,r19
   40e2c:	a8ebc83a 	sub	r21,r21,r3
   40e30:	1000b11e 	bne	r2,zero,410f8 <__divsf3+0x370>
   40e34:	802090ba 	slli	r16,r16,2
   40e38:	00800134 	movhi	r2,4
   40e3c:	8085883a 	add	r2,r16,r2
   40e40:	10839217 	ldw	r2,3656(r2)
   40e44:	1000683a 	jmp	r2
   40e48:	000410f8 	rdprs	zero,zero,4163
   40e4c:	00040f98 	cmpnei	zero,zero,4158
   40e50:	00040fe4 	muli	zero,zero,4159
   40e54:	00041018 	cmpnei	zero,zero,4160
   40e58:	00040fe4 	muli	zero,zero,4159
   40e5c:	00041070 	cmpltui	zero,zero,4161
   40e60:	00040fe4 	muli	zero,zero,4159
   40e64:	00041018 	cmpnei	zero,zero,4160
   40e68:	00040f98 	cmpnei	zero,zero,4158
   40e6c:	00040f98 	cmpnei	zero,zero,4158
   40e70:	00041070 	cmpltui	zero,zero,4161
   40e74:	00041018 	cmpnei	zero,zero,4160
   40e78:	00040ff4 	movhi	zero,4159
   40e7c:	00040ff4 	movhi	zero,4159
   40e80:	00040ff4 	movhi	zero,4159
   40e84:	00041084 	movi	zero,4162
   40e88:	90003f1e 	bne	r18,zero,40f88 <__divsf3+0x200>
   40e8c:	ad7fc044 	addi	r21,r21,-255
   40e90:	00800084 	movi	r2,2
   40e94:	00000206 	br	40ea0 <__divsf3+0x118>
   40e98:	9000331e 	bne	r18,zero,40f68 <__divsf3+0x1e0>
   40e9c:	00800044 	movi	r2,1
   40ea0:	1420b03a 	or	r16,r2,r16
   40ea4:	9da6f03a 	xor	r19,r19,r22
   40ea8:	80c003e8 	cmpgeui	r3,r16,15
   40eac:	9809883a 	mov	r4,r19
   40eb0:	1800391e 	bne	r3,zero,40f98 <__divsf3+0x210>
   40eb4:	802090ba 	slli	r16,r16,2
   40eb8:	00c00134 	movhi	r3,4
   40ebc:	80c7883a 	add	r3,r16,r3
   40ec0:	18c3b217 	ldw	r3,3784(r3)
   40ec4:	1800683a 	jmp	r3
   40ec8:	00040f98 	cmpnei	zero,zero,4158
   40ecc:	00040f98 	cmpnei	zero,zero,4158
   40ed0:	00040fe4 	muli	zero,zero,4159
   40ed4:	00041154 	movui	zero,4165
   40ed8:	00040fe4 	muli	zero,zero,4159
   40edc:	00041070 	cmpltui	zero,zero,4161
   40ee0:	00040fe4 	muli	zero,zero,4159
   40ee4:	00041154 	movui	zero,4165
   40ee8:	00040f98 	cmpnei	zero,zero,4158
   40eec:	00040f98 	cmpnei	zero,zero,4158
   40ef0:	00041070 	cmpltui	zero,zero,4161
   40ef4:	00041154 	movui	zero,4165
   40ef8:	00040ff4 	movhi	zero,4159
   40efc:	00040ff4 	movhi	zero,4159
   40f00:	00040ff4 	movhi	zero,4159
   40f04:	a0000d1e 	bne	r20,zero,40f3c <__divsf3+0x1b4>
   40f08:	04000104 	movi	r16,4
   40f0c:	002b883a 	mov	r21,zero
   40f10:	05c00044 	movi	r23,1
   40f14:	003fb506 	br	40dec <__divsf3+0x64>
   40f18:	a000041e 	bne	r20,zero,40f2c <__divsf3+0x1a4>
   40f1c:	04000204 	movi	r16,8
   40f20:	05403fc4 	movi	r21,255
   40f24:	05c00084 	movi	r23,2
   40f28:	003fb006 	br	40dec <__divsf3+0x64>
   40f2c:	04000304 	movi	r16,12
   40f30:	05403fc4 	movi	r21,255
   40f34:	05c000c4 	movi	r23,3
   40f38:	003fac06 	br	40dec <__divsf3+0x64>
   40f3c:	a009883a 	mov	r4,r20
   40f40:	d9400015 	stw	r5,0(sp)
   40f44:	004182c0 	call	4182c <__clzsi2>
   40f48:	10fffec4 	addi	r3,r2,-5
   40f4c:	a0e8983a 	sll	r20,r20,r3
   40f50:	00ffe284 	movi	r3,-118
   40f54:	d9400017 	ldw	r5,0(sp)
   40f58:	18abc83a 	sub	r21,r3,r2
   40f5c:	0021883a 	mov	r16,zero
   40f60:	002f883a 	mov	r23,zero
   40f64:	003fa106 	br	40dec <__divsf3+0x64>
   40f68:	9009883a 	mov	r4,r18
   40f6c:	004182c0 	call	4182c <__clzsi2>
   40f70:	10fffec4 	addi	r3,r2,-5
   40f74:	90e4983a 	sll	r18,r18,r3
   40f78:	00ffe284 	movi	r3,-118
   40f7c:	1887c83a 	sub	r3,r3,r2
   40f80:	000b883a 	mov	r5,zero
   40f84:	003fa606 	br	40e20 <__divsf3+0x98>
   40f88:	840000d4 	ori	r16,r16,3
   40f8c:	00c03fc4 	movi	r3,255
   40f90:	014000c4 	movi	r5,3
   40f94:	003fa206 	br	40e20 <__divsf3+0x98>
   40f98:	9823883a 	mov	r17,r19
   40f9c:	00ffffc4 	movi	r3,-1
   40fa0:	0009883a 	mov	r4,zero
   40fa4:	18803fcc 	andi	r2,r3,255
   40fa8:	100495fa 	slli	r2,r2,23
   40fac:	882297fa 	slli	r17,r17,31
   40fb0:	1104b03a 	or	r2,r2,r4
   40fb4:	1444b03a 	or	r2,r2,r17
   40fb8:	dfc00917 	ldw	ra,36(sp)
   40fbc:	ddc00817 	ldw	r23,32(sp)
   40fc0:	dd800717 	ldw	r22,28(sp)
   40fc4:	dd400617 	ldw	r21,24(sp)
   40fc8:	dd000517 	ldw	r20,20(sp)
   40fcc:	dcc00417 	ldw	r19,16(sp)
   40fd0:	dc800317 	ldw	r18,12(sp)
   40fd4:	dc400217 	ldw	r17,8(sp)
   40fd8:	dc000117 	ldw	r16,4(sp)
   40fdc:	dec00a04 	addi	sp,sp,40
   40fe0:	f800283a 	ret
   40fe4:	2023883a 	mov	r17,r4
   40fe8:	0007883a 	mov	r3,zero
   40fec:	0009883a 	mov	r4,zero
   40ff0:	003fec06 	br	40fa4 <__divsf3+0x21c>
   40ff4:	b88000a0 	cmpeqi	r2,r23,2
   40ff8:	103fe81e 	bne	r2,zero,40f9c <__divsf3+0x214>
   40ffc:	b88000e0 	cmpeqi	r2,r23,3
   41000:	1000241e 	bne	r2,zero,41094 <__divsf3+0x30c>
   41004:	bdc00060 	cmpeqi	r23,r23,1
   41008:	b8006126 	beq	r23,zero,41190 <__divsf3+0x408>
   4100c:	0007883a 	mov	r3,zero
   41010:	0009883a 	mov	r4,zero
   41014:	003fe306 	br	40fa4 <__divsf3+0x21c>
   41018:	294000e0 	cmpeqi	r5,r5,3
   4101c:	b023883a 	mov	r17,r22
   41020:	28005d1e 	bne	r5,zero,41198 <__divsf3+0x410>
   41024:	a8c01fc4 	addi	r3,r21,127
   41028:	00c01f0e 	bge	zero,r3,410a8 <__divsf3+0x320>
   4102c:	908001cc 	andi	r2,r18,7
   41030:	10000426 	beq	r2,zero,41044 <__divsf3+0x2bc>
   41034:	908003cc 	andi	r2,r18,15
   41038:	10800120 	cmpeqi	r2,r2,4
   4103c:	1000011e 	bne	r2,zero,41044 <__divsf3+0x2bc>
   41040:	94800104 	addi	r18,r18,4
   41044:	9082002c 	andhi	r2,r18,2048
   41048:	10000426 	beq	r2,zero,4105c <__divsf3+0x2d4>
   4104c:	00be0034 	movhi	r2,63488
   41050:	10bfffc4 	addi	r2,r2,-1
   41054:	90a4703a 	and	r18,r18,r2
   41058:	a8c02004 	addi	r3,r21,128
   4105c:	18803fc8 	cmpgei	r2,r3,255
   41060:	103fce1e 	bne	r2,zero,40f9c <__divsf3+0x214>
   41064:	900891ba 	slli	r4,r18,6
   41068:	2008d27a 	srli	r4,r4,9
   4106c:	003fcd06 	br	40fa4 <__divsf3+0x21c>
   41070:	01002034 	movhi	r4,128
   41074:	0023883a 	mov	r17,zero
   41078:	213fffc4 	addi	r4,r4,-1
   4107c:	00ffffc4 	movi	r3,-1
   41080:	003fc806 	br	40fa4 <__divsf3+0x21c>
   41084:	a080102c 	andhi	r2,r20,64
   41088:	10000226 	beq	r2,zero,41094 <__divsf3+0x30c>
   4108c:	9080102c 	andhi	r2,r18,64
   41090:	10003926 	beq	r2,zero,41178 <__divsf3+0x3f0>
   41094:	00802034 	movhi	r2,128
   41098:	a1001034 	orhi	r4,r20,64
   4109c:	10bfffc4 	addi	r2,r2,-1
   410a0:	2088703a 	and	r4,r4,r2
   410a4:	003ff506 	br	4107c <__divsf3+0x2f4>
   410a8:	00800044 	movi	r2,1
   410ac:	10c5c83a 	sub	r2,r2,r3
   410b0:	10c00710 	cmplti	r3,r2,28
   410b4:	183fd526 	beq	r3,zero,4100c <__divsf3+0x284>
   410b8:	a8c02784 	addi	r3,r21,158
   410bc:	90c6983a 	sll	r3,r18,r3
   410c0:	9088d83a 	srl	r4,r18,r2
   410c4:	1806c03a 	cmpne	r3,r3,zero
   410c8:	20c8b03a 	or	r4,r4,r3
   410cc:	208001cc 	andi	r2,r4,7
   410d0:	10000426 	beq	r2,zero,410e4 <__divsf3+0x35c>
   410d4:	208003cc 	andi	r2,r4,15
   410d8:	10800120 	cmpeqi	r2,r2,4
   410dc:	1000011e 	bne	r2,zero,410e4 <__divsf3+0x35c>
   410e0:	21000104 	addi	r4,r4,4
   410e4:	2081002c 	andhi	r2,r4,1024
   410e8:	10001f26 	beq	r2,zero,41168 <__divsf3+0x3e0>
   410ec:	00c00044 	movi	r3,1
   410f0:	0009883a 	mov	r4,zero
   410f4:	003fab06 	br	40fa4 <__divsf3+0x21c>
   410f8:	a004917a 	slli	r2,r20,5
   410fc:	900c917a 	slli	r6,r18,5
   41100:	1180102e 	bgeu	r2,r6,41144 <__divsf3+0x3bc>
   41104:	ad7fffc4 	addi	r21,r21,-1
   41108:	014006c4 	movi	r5,27
   4110c:	0009883a 	mov	r4,zero
   41110:	1007883a 	mov	r3,r2
   41114:	297fffc4 	addi	r5,r5,-1
   41118:	1085883a 	add	r2,r2,r2
   4111c:	2109883a 	add	r4,r4,r4
   41120:	18000116 	blt	r3,zero,41128 <__divsf3+0x3a0>
   41124:	11800236 	bltu	r2,r6,41130 <__divsf3+0x3a8>
   41128:	1185c83a 	sub	r2,r2,r6
   4112c:	21000054 	ori	r4,r4,1
   41130:	283ff71e 	bne	r5,zero,41110 <__divsf3+0x388>
   41134:	1004c03a 	cmpne	r2,r2,zero
   41138:	1124b03a 	or	r18,r2,r4
   4113c:	9823883a 	mov	r17,r19
   41140:	003fb806 	br	41024 <__divsf3+0x29c>
   41144:	1185c83a 	sub	r2,r2,r6
   41148:	01400684 	movi	r5,26
   4114c:	01000044 	movi	r4,1
   41150:	003fef06 	br	41110 <__divsf3+0x388>
   41154:	108000a0 	cmpeqi	r2,r2,2
   41158:	0087c83a 	sub	r3,zero,r2
   4115c:	b023883a 	mov	r17,r22
   41160:	0009883a 	mov	r4,zero
   41164:	003f8f06 	br	40fa4 <__divsf3+0x21c>
   41168:	200891ba 	slli	r4,r4,6
   4116c:	0007883a 	mov	r3,zero
   41170:	2008d27a 	srli	r4,r4,9
   41174:	003f8b06 	br	40fa4 <__divsf3+0x21c>
   41178:	00802034 	movhi	r2,128
   4117c:	91001034 	orhi	r4,r18,64
   41180:	10bfffc4 	addi	r2,r2,-1
   41184:	2088703a 	and	r4,r4,r2
   41188:	b023883a 	mov	r17,r22
   4118c:	003fbb06 	br	4107c <__divsf3+0x2f4>
   41190:	a025883a 	mov	r18,r20
   41194:	003fa306 	br	41024 <__divsf3+0x29c>
   41198:	9029883a 	mov	r20,r18
   4119c:	003fbd06 	br	41094 <__divsf3+0x30c>

000411a0 <__mulsf3>:
   411a0:	defff604 	addi	sp,sp,-40
   411a4:	2004d5fa 	srli	r2,r4,23
   411a8:	dd400615 	stw	r21,24(sp)
   411ac:	202ad7fa 	srli	r21,r4,31
   411b0:	00c02034 	movhi	r3,128
   411b4:	dd000515 	stw	r20,20(sp)
   411b8:	dcc00415 	stw	r19,16(sp)
   411bc:	18ffffc4 	addi	r3,r3,-1
   411c0:	dfc00915 	stw	ra,36(sp)
   411c4:	ddc00815 	stw	r23,32(sp)
   411c8:	dd800715 	stw	r22,28(sp)
   411cc:	dc800315 	stw	r18,12(sp)
   411d0:	dc400215 	stw	r17,8(sp)
   411d4:	dc000115 	stw	r16,4(sp)
   411d8:	10803fcc 	andi	r2,r2,255
   411dc:	1928703a 	and	r20,r3,r4
   411e0:	a827883a 	mov	r19,r21
   411e4:	10006c26 	beq	r2,zero,41398 <__mulsf3+0x1f8>
   411e8:	10c03fe0 	cmpeqi	r3,r2,255
   411ec:	18006f1e 	bne	r3,zero,413ac <__mulsf3+0x20c>
   411f0:	a00890fa 	slli	r4,r20,3
   411f4:	14bfe044 	addi	r18,r2,-127
   411f8:	0023883a 	mov	r17,zero
   411fc:	25010034 	orhi	r20,r4,1024
   41200:	002f883a 	mov	r23,zero
   41204:	2804d5fa 	srli	r2,r5,23
   41208:	04002034 	movhi	r16,128
   4120c:	843fffc4 	addi	r16,r16,-1
   41210:	10803fcc 	andi	r2,r2,255
   41214:	282cd7fa 	srli	r22,r5,31
   41218:	8160703a 	and	r16,r16,r5
   4121c:	10005626 	beq	r2,zero,41378 <__mulsf3+0x1d8>
   41220:	10c03fe0 	cmpeqi	r3,r2,255
   41224:	1800241e 	bne	r3,zero,412b8 <__mulsf3+0x118>
   41228:	802090fa 	slli	r16,r16,3
   4122c:	10bfe044 	addi	r2,r2,-127
   41230:	1485883a 	add	r2,r2,r18
   41234:	88c002c8 	cmpgei	r3,r17,11
   41238:	84010034 	orhi	r16,r16,1024
   4123c:	0009883a 	mov	r4,zero
   41240:	14800044 	addi	r18,r2,1
   41244:	1800291e 	bne	r3,zero,412ec <__mulsf3+0x14c>
   41248:	b566f03a 	xor	r19,r22,r21
   4124c:	88c000c8 	cmpgei	r3,r17,3
   41250:	1800221e 	bne	r3,zero,412dc <__mulsf3+0x13c>
   41254:	8c7fffc4 	addi	r17,r17,-1
   41258:	8c4000a8 	cmpgeui	r17,r17,2
   4125c:	8800951e 	bne	r17,zero,414b4 <__mulsf3+0x314>
   41260:	208000a0 	cmpeqi	r2,r4,2
   41264:	1000561e 	bne	r2,zero,413c0 <__mulsf3+0x220>
   41268:	21000060 	cmpeqi	r4,r4,1
   4126c:	20002726 	beq	r4,zero,4130c <__mulsf3+0x16c>
   41270:	0007883a 	mov	r3,zero
   41274:	0009883a 	mov	r4,zero
   41278:	18803fcc 	andi	r2,r3,255
   4127c:	100495fa 	slli	r2,r2,23
   41280:	982697fa 	slli	r19,r19,31
   41284:	1104b03a 	or	r2,r2,r4
   41288:	14c4b03a 	or	r2,r2,r19
   4128c:	dfc00917 	ldw	ra,36(sp)
   41290:	ddc00817 	ldw	r23,32(sp)
   41294:	dd800717 	ldw	r22,28(sp)
   41298:	dd400617 	ldw	r21,24(sp)
   4129c:	dd000517 	ldw	r20,20(sp)
   412a0:	dcc00417 	ldw	r19,16(sp)
   412a4:	dc800317 	ldw	r18,12(sp)
   412a8:	dc400217 	ldw	r17,8(sp)
   412ac:	dc000117 	ldw	r16,4(sp)
   412b0:	dec00a04 	addi	sp,sp,40
   412b4:	f800283a 	ret
   412b8:	90803fc4 	addi	r2,r18,255
   412bc:	80004826 	beq	r16,zero,413e0 <__mulsf3+0x240>
   412c0:	8c4000d4 	ori	r17,r17,3
   412c4:	88c002c8 	cmpgei	r3,r17,11
   412c8:	b56af03a 	xor	r21,r22,r21
   412cc:	94804004 	addi	r18,r18,256
   412d0:	1800a41e 	bne	r3,zero,41564 <__mulsf3+0x3c4>
   412d4:	a827883a 	mov	r19,r21
   412d8:	010000c4 	movi	r4,3
   412dc:	00c00044 	movi	r3,1
   412e0:	1c46983a 	sll	r3,r3,r17
   412e4:	19414c0c 	andi	r5,r3,1328
   412e8:	28001b26 	beq	r5,zero,41358 <__mulsf3+0x1b8>
   412ec:	b88000a0 	cmpeqi	r2,r23,2
   412f0:	1000331e 	bne	r2,zero,413c0 <__mulsf3+0x220>
   412f4:	b88000e0 	cmpeqi	r2,r23,3
   412f8:	10008f1e 	bne	r2,zero,41538 <__mulsf3+0x398>
   412fc:	b809883a 	mov	r4,r23
   41300:	21000060 	cmpeqi	r4,r4,1
   41304:	a021883a 	mov	r16,r20
   41308:	203fd91e 	bne	r4,zero,41270 <__mulsf3+0xd0>
   4130c:	90c01fc4 	addi	r3,r18,127
   41310:	00c0540e 	bge	zero,r3,41464 <__mulsf3+0x2c4>
   41314:	808001cc 	andi	r2,r16,7
   41318:	10000426 	beq	r2,zero,4132c <__mulsf3+0x18c>
   4131c:	808003cc 	andi	r2,r16,15
   41320:	10800120 	cmpeqi	r2,r2,4
   41324:	1000011e 	bne	r2,zero,4132c <__mulsf3+0x18c>
   41328:	84000104 	addi	r16,r16,4
   4132c:	8082002c 	andhi	r2,r16,2048
   41330:	10000426 	beq	r2,zero,41344 <__mulsf3+0x1a4>
   41334:	00be0034 	movhi	r2,63488
   41338:	10bfffc4 	addi	r2,r2,-1
   4133c:	80a0703a 	and	r16,r16,r2
   41340:	90c02004 	addi	r3,r18,128
   41344:	18803fc8 	cmpgei	r2,r3,255
   41348:	10001d1e 	bne	r2,zero,413c0 <__mulsf3+0x220>
   4134c:	800891ba 	slli	r4,r16,6
   41350:	2008d27a 	srli	r4,r4,9
   41354:	003fc806 	br	41278 <__mulsf3+0xd8>
   41358:	1940900c 	andi	r5,r3,576
   4135c:	28001b1e 	bne	r5,zero,413cc <__mulsf3+0x22c>
   41360:	18c0220c 	andi	r3,r3,136
   41364:	18005326 	beq	r3,zero,414b4 <__mulsf3+0x314>
   41368:	b027883a 	mov	r19,r22
   4136c:	8029883a 	mov	r20,r16
   41370:	202f883a 	mov	r23,r4
   41374:	003fdd06 	br	412ec <__mulsf3+0x14c>
   41378:	80002f1e 	bne	r16,zero,41438 <__mulsf3+0x298>
   4137c:	8c400054 	ori	r17,r17,1
   41380:	9005883a 	mov	r2,r18
   41384:	88c002c8 	cmpgei	r3,r17,11
   41388:	01000044 	movi	r4,1
   4138c:	14800044 	addi	r18,r2,1
   41390:	183fad26 	beq	r3,zero,41248 <__mulsf3+0xa8>
   41394:	003fd506 	br	412ec <__mulsf3+0x14c>
   41398:	a0001c1e 	bne	r20,zero,4140c <__mulsf3+0x26c>
   4139c:	04400104 	movi	r17,4
   413a0:	0025883a 	mov	r18,zero
   413a4:	05c00044 	movi	r23,1
   413a8:	003f9606 	br	41204 <__mulsf3+0x64>
   413ac:	a000131e 	bne	r20,zero,413fc <__mulsf3+0x25c>
   413b0:	04400204 	movi	r17,8
   413b4:	04803fc4 	movi	r18,255
   413b8:	05c00084 	movi	r23,2
   413bc:	003f9106 	br	41204 <__mulsf3+0x64>
   413c0:	00ffffc4 	movi	r3,-1
   413c4:	0009883a 	mov	r4,zero
   413c8:	003fab06 	br	41278 <__mulsf3+0xd8>
   413cc:	01002034 	movhi	r4,128
   413d0:	0027883a 	mov	r19,zero
   413d4:	213fffc4 	addi	r4,r4,-1
   413d8:	00ffffc4 	movi	r3,-1
   413dc:	003fa606 	br	41278 <__mulsf3+0xd8>
   413e0:	8c400094 	ori	r17,r17,2
   413e4:	88c002c8 	cmpgei	r3,r17,11
   413e8:	94804004 	addi	r18,r18,256
   413ec:	183fbf1e 	bne	r3,zero,412ec <__mulsf3+0x14c>
   413f0:	b566f03a 	xor	r19,r22,r21
   413f4:	01000084 	movi	r4,2
   413f8:	003f9406 	br	4124c <__mulsf3+0xac>
   413fc:	04400304 	movi	r17,12
   41400:	04803fc4 	movi	r18,255
   41404:	05c000c4 	movi	r23,3
   41408:	003f7e06 	br	41204 <__mulsf3+0x64>
   4140c:	a009883a 	mov	r4,r20
   41410:	d9400015 	stw	r5,0(sp)
   41414:	004182c0 	call	4182c <__clzsi2>
   41418:	10fffec4 	addi	r3,r2,-5
   4141c:	04bfe284 	movi	r18,-118
   41420:	a0e8983a 	sll	r20,r20,r3
   41424:	d9400017 	ldw	r5,0(sp)
   41428:	90a5c83a 	sub	r18,r18,r2
   4142c:	0023883a 	mov	r17,zero
   41430:	002f883a 	mov	r23,zero
   41434:	003f7306 	br	41204 <__mulsf3+0x64>
   41438:	8009883a 	mov	r4,r16
   4143c:	004182c0 	call	4182c <__clzsi2>
   41440:	10fffec4 	addi	r3,r2,-5
   41444:	9085c83a 	sub	r2,r18,r2
   41448:	80e0983a 	sll	r16,r16,r3
   4144c:	10bfe284 	addi	r2,r2,-118
   41450:	88c002c8 	cmpgei	r3,r17,11
   41454:	0009883a 	mov	r4,zero
   41458:	14800044 	addi	r18,r2,1
   4145c:	183f7a26 	beq	r3,zero,41248 <__mulsf3+0xa8>
   41460:	003fa206 	br	412ec <__mulsf3+0x14c>
   41464:	01000044 	movi	r4,1
   41468:	20c7c83a 	sub	r3,r4,r3
   4146c:	18800708 	cmpgei	r2,r3,28
   41470:	103f7f1e 	bne	r2,zero,41270 <__mulsf3+0xd0>
   41474:	94802784 	addi	r18,r18,158
   41478:	84a4983a 	sll	r18,r16,r18
   4147c:	80c6d83a 	srl	r3,r16,r3
   41480:	9024c03a 	cmpne	r18,r18,zero
   41484:	1c86b03a 	or	r3,r3,r18
   41488:	188001cc 	andi	r2,r3,7
   4148c:	10000426 	beq	r2,zero,414a0 <__mulsf3+0x300>
   41490:	188003cc 	andi	r2,r3,15
   41494:	10800120 	cmpeqi	r2,r2,4
   41498:	1000011e 	bne	r2,zero,414a0 <__mulsf3+0x300>
   4149c:	18c00104 	addi	r3,r3,4
   414a0:	1881002c 	andhi	r2,r3,1024
   414a4:	10002b26 	beq	r2,zero,41554 <__mulsf3+0x3b4>
   414a8:	00c00044 	movi	r3,1
   414ac:	0009883a 	mov	r4,zero
   414b0:	003f7106 	br	41278 <__mulsf3+0xd8>
   414b4:	a00ad43a 	srli	r5,r20,16
   414b8:	8010d43a 	srli	r8,r16,16
   414bc:	a13fffcc 	andi	r4,r20,65535
   414c0:	81bfffcc 	andi	r6,r16,65535
   414c4:	218f383a 	mul	r7,r4,r6
   414c8:	4129383a 	mul	r20,r8,r4
   414cc:	298d383a 	mul	r6,r5,r6
   414d0:	3806d43a 	srli	r3,r7,16
   414d4:	2a0b383a 	mul	r5,r5,r8
   414d8:	a1a9883a 	add	r20,r20,r6
   414dc:	1d07883a 	add	r3,r3,r20
   414e0:	1980022e 	bgeu	r3,r6,414ec <__mulsf3+0x34c>
   414e4:	01000074 	movhi	r4,1
   414e8:	290b883a 	add	r5,r5,r4
   414ec:	1808943a 	slli	r4,r3,16
   414f0:	1820d43a 	srli	r16,r3,16
   414f4:	39ffffcc 	andi	r7,r7,65535
   414f8:	21c7883a 	add	r3,r4,r7
   414fc:	180891ba 	slli	r4,r3,6
   41500:	8161883a 	add	r16,r16,r5
   41504:	802091ba 	slli	r16,r16,6
   41508:	1806d6ba 	srli	r3,r3,26
   4150c:	2008c03a 	cmpne	r4,r4,zero
   41510:	8142002c 	andhi	r5,r16,2048
   41514:	20c6b03a 	or	r3,r4,r3
   41518:	80e0b03a 	or	r16,r16,r3
   4151c:	28000b26 	beq	r5,zero,4154c <__mulsf3+0x3ac>
   41520:	8004d07a 	srli	r2,r16,1
   41524:	8400004c 	andi	r16,r16,1
   41528:	1420b03a 	or	r16,r2,r16
   4152c:	003f7706 	br	4130c <__mulsf3+0x16c>
   41530:	b027883a 	mov	r19,r22
   41534:	8029883a 	mov	r20,r16
   41538:	00802034 	movhi	r2,128
   4153c:	a1001034 	orhi	r4,r20,64
   41540:	10bfffc4 	addi	r2,r2,-1
   41544:	2088703a 	and	r4,r4,r2
   41548:	003fa306 	br	413d8 <__mulsf3+0x238>
   4154c:	1025883a 	mov	r18,r2
   41550:	003f6e06 	br	4130c <__mulsf3+0x16c>
   41554:	180891ba 	slli	r4,r3,6
   41558:	0007883a 	mov	r3,zero
   4155c:	2008d27a 	srli	r4,r4,9
   41560:	003f4506 	br	41278 <__mulsf3+0xd8>
   41564:	8c4003e0 	cmpeqi	r17,r17,15
   41568:	883ff126 	beq	r17,zero,41530 <__mulsf3+0x390>
   4156c:	a080102c 	andhi	r2,r20,64
   41570:	103ff126 	beq	r2,zero,41538 <__mulsf3+0x398>
   41574:	2940102c 	andhi	r5,r5,64
   41578:	283fef1e 	bne	r5,zero,41538 <__mulsf3+0x398>
   4157c:	81001034 	orhi	r4,r16,64
   41580:	b027883a 	mov	r19,r22
   41584:	003f9406 	br	413d8 <__mulsf3+0x238>

00041588 <__fixsfsi>:
   41588:	200ad5fa 	srli	r5,r4,23
   4158c:	00c02034 	movhi	r3,128
   41590:	18ffffc4 	addi	r3,r3,-1
   41594:	29403fcc 	andi	r5,r5,255
   41598:	28801fd0 	cmplti	r2,r5,127
   4159c:	200cd7fa 	srli	r6,r4,31
   415a0:	1906703a 	and	r3,r3,r4
   415a4:	1000061e 	bne	r2,zero,415c0 <__fixsfsi+0x38>
   415a8:	28802790 	cmplti	r2,r5,158
   415ac:	1000061e 	bne	r2,zero,415c8 <__fixsfsi+0x40>
   415b0:	00a00034 	movhi	r2,32768
   415b4:	10bfffc4 	addi	r2,r2,-1
   415b8:	3085883a 	add	r2,r6,r2
   415bc:	f800283a 	ret
   415c0:	0005883a 	mov	r2,zero
   415c4:	f800283a 	ret
   415c8:	29002590 	cmplti	r4,r5,150
   415cc:	18802034 	orhi	r2,r3,128
   415d0:	2000051e 	bne	r4,zero,415e8 <__fixsfsi+0x60>
   415d4:	297fda84 	addi	r5,r5,-150
   415d8:	1144983a 	sll	r2,r2,r5
   415dc:	303ff926 	beq	r6,zero,415c4 <__fixsfsi+0x3c>
   415e0:	0085c83a 	sub	r2,zero,r2
   415e4:	f800283a 	ret
   415e8:	00c02584 	movi	r3,150
   415ec:	1947c83a 	sub	r3,r3,r5
   415f0:	10c4d83a 	srl	r2,r2,r3
   415f4:	003ff906 	br	415dc <__fixsfsi+0x54>

000415f8 <__floatsisf>:
   415f8:	defffd04 	addi	sp,sp,-12
   415fc:	dfc00215 	stw	ra,8(sp)
   41600:	dc400115 	stw	r17,4(sp)
   41604:	dc000015 	stw	r16,0(sp)
   41608:	20001226 	beq	r4,zero,41654 <__floatsisf+0x5c>
   4160c:	2022d7fa 	srli	r17,r4,31
   41610:	2021883a 	mov	r16,r4
   41614:	20003316 	blt	r4,zero,416e4 <__floatsisf+0xec>
   41618:	8009883a 	mov	r4,r16
   4161c:	004182c0 	call	4182c <__clzsi2>
   41620:	1009883a 	mov	r4,r2
   41624:	00802784 	movi	r2,158
   41628:	1105c83a 	sub	r2,r2,r4
   4162c:	10c025c8 	cmpgei	r3,r2,151
   41630:	1800151e 	bne	r3,zero,41688 <__floatsisf+0x90>
   41634:	20c00218 	cmpnei	r3,r4,8
   41638:	18003426 	beq	r3,zero,4170c <__floatsisf+0x114>
   4163c:	20fffe04 	addi	r3,r4,-8
   41640:	80c6983a 	sll	r3,r16,r3
   41644:	01002034 	movhi	r4,128
   41648:	213fffc4 	addi	r4,r4,-1
   4164c:	1906703a 	and	r3,r3,r4
   41650:	00000306 	br	41660 <__floatsisf+0x68>
   41654:	0023883a 	mov	r17,zero
   41658:	0005883a 	mov	r2,zero
   4165c:	0007883a 	mov	r3,zero
   41660:	10803fcc 	andi	r2,r2,255
   41664:	100495fa 	slli	r2,r2,23
   41668:	880897fa 	slli	r4,r17,31
   4166c:	10c4b03a 	or	r2,r2,r3
   41670:	1104b03a 	or	r2,r2,r4
   41674:	dfc00217 	ldw	ra,8(sp)
   41678:	dc400117 	ldw	r17,4(sp)
   4167c:	dc000017 	ldw	r16,0(sp)
   41680:	dec00304 	addi	sp,sp,12
   41684:	f800283a 	ret
   41688:	10c02690 	cmplti	r3,r2,154
   4168c:	18001726 	beq	r3,zero,416ec <__floatsisf+0xf4>
   41690:	20c00160 	cmpeqi	r3,r4,5
   41694:	217ffec4 	addi	r5,r4,-5
   41698:	1800011e 	bne	r3,zero,416a0 <__floatsisf+0xa8>
   4169c:	8160983a 	sll	r16,r16,r5
   416a0:	017f0034 	movhi	r5,64512
   416a4:	297fffc4 	addi	r5,r5,-1
   416a8:	818001cc 	andi	r6,r16,7
   416ac:	8146703a 	and	r3,r16,r5
   416b0:	30000926 	beq	r6,zero,416d8 <__floatsisf+0xe0>
   416b4:	840003cc 	andi	r16,r16,15
   416b8:	84000120 	cmpeqi	r16,r16,4
   416bc:	8000061e 	bne	r16,zero,416d8 <__floatsisf+0xe0>
   416c0:	18c00104 	addi	r3,r3,4
   416c4:	1981002c 	andhi	r6,r3,1024
   416c8:	30000326 	beq	r6,zero,416d8 <__floatsisf+0xe0>
   416cc:	008027c4 	movi	r2,159
   416d0:	1946703a 	and	r3,r3,r5
   416d4:	1105c83a 	sub	r2,r2,r4
   416d8:	180691ba 	slli	r3,r3,6
   416dc:	1806d27a 	srli	r3,r3,9
   416e0:	003fdf06 	br	41660 <__floatsisf+0x68>
   416e4:	0121c83a 	sub	r16,zero,r4
   416e8:	003fcb06 	br	41618 <__floatsisf+0x20>
   416ec:	20c006c4 	addi	r3,r4,27
   416f0:	01400144 	movi	r5,5
   416f4:	80c6983a 	sll	r3,r16,r3
   416f8:	290bc83a 	sub	r5,r5,r4
   416fc:	8160d83a 	srl	r16,r16,r5
   41700:	1806c03a 	cmpne	r3,r3,zero
   41704:	80e0b03a 	or	r16,r16,r3
   41708:	003fe506 	br	416a0 <__floatsisf+0xa8>
   4170c:	00c02034 	movhi	r3,128
   41710:	18ffffc4 	addi	r3,r3,-1
   41714:	80c6703a 	and	r3,r16,r3
   41718:	00bfe584 	movi	r2,-106
   4171c:	003fd006 	br	41660 <__floatsisf+0x68>

00041720 <__floatunsisf>:
   41720:	20001826 	beq	r4,zero,41784 <__floatunsisf+0x64>
   41724:	defffe04 	addi	sp,sp,-8
   41728:	dc000015 	stw	r16,0(sp)
   4172c:	dfc00115 	stw	ra,4(sp)
   41730:	2021883a 	mov	r16,r4
   41734:	004182c0 	call	4182c <__clzsi2>
   41738:	1009883a 	mov	r4,r2
   4173c:	00802784 	movi	r2,158
   41740:	1105c83a 	sub	r2,r2,r4
   41744:	10c025c8 	cmpgei	r3,r2,151
   41748:	1800141e 	bne	r3,zero,4179c <__floatunsisf+0x7c>
   4174c:	20c00218 	cmpnei	r3,r4,8
   41750:	18003126 	beq	r3,zero,41818 <__floatunsisf+0xf8>
   41754:	213ffe04 	addi	r4,r4,-8
   41758:	8106983a 	sll	r3,r16,r4
   4175c:	01002034 	movhi	r4,128
   41760:	213fffc4 	addi	r4,r4,-1
   41764:	1906703a 	and	r3,r3,r4
   41768:	10803fcc 	andi	r2,r2,255
   4176c:	100495fa 	slli	r2,r2,23
   41770:	10c4b03a 	or	r2,r2,r3
   41774:	dfc00117 	ldw	ra,4(sp)
   41778:	dc000017 	ldw	r16,0(sp)
   4177c:	dec00204 	addi	sp,sp,8
   41780:	f800283a 	ret
   41784:	0005883a 	mov	r2,zero
   41788:	10803fcc 	andi	r2,r2,255
   4178c:	100495fa 	slli	r2,r2,23
   41790:	0007883a 	mov	r3,zero
   41794:	10c4b03a 	or	r2,r2,r3
   41798:	f800283a 	ret
   4179c:	10c02690 	cmplti	r3,r2,154
   417a0:	18001526 	beq	r3,zero,417f8 <__floatunsisf+0xd8>
   417a4:	20c00160 	cmpeqi	r3,r4,5
   417a8:	217ffec4 	addi	r5,r4,-5
   417ac:	1800011e 	bne	r3,zero,417b4 <__floatunsisf+0x94>
   417b0:	8160983a 	sll	r16,r16,r5
   417b4:	017f0034 	movhi	r5,64512
   417b8:	297fffc4 	addi	r5,r5,-1
   417bc:	818001cc 	andi	r6,r16,7
   417c0:	8146703a 	and	r3,r16,r5
   417c4:	30000926 	beq	r6,zero,417ec <__floatunsisf+0xcc>
   417c8:	840003cc 	andi	r16,r16,15
   417cc:	84000120 	cmpeqi	r16,r16,4
   417d0:	8000061e 	bne	r16,zero,417ec <__floatunsisf+0xcc>
   417d4:	18c00104 	addi	r3,r3,4
   417d8:	1981002c 	andhi	r6,r3,1024
   417dc:	30000326 	beq	r6,zero,417ec <__floatunsisf+0xcc>
   417e0:	008027c4 	movi	r2,159
   417e4:	1946703a 	and	r3,r3,r5
   417e8:	1105c83a 	sub	r2,r2,r4
   417ec:	180691ba 	slli	r3,r3,6
   417f0:	1806d27a 	srli	r3,r3,9
   417f4:	003fdc06 	br	41768 <__floatunsisf+0x48>
   417f8:	20c006c4 	addi	r3,r4,27
   417fc:	01400144 	movi	r5,5
   41800:	80c6983a 	sll	r3,r16,r3
   41804:	290bc83a 	sub	r5,r5,r4
   41808:	8160d83a 	srl	r16,r16,r5
   4180c:	1806c03a 	cmpne	r3,r3,zero
   41810:	1c20b03a 	or	r16,r3,r16
   41814:	003fe706 	br	417b4 <__floatunsisf+0x94>
   41818:	00c02034 	movhi	r3,128
   4181c:	18ffffc4 	addi	r3,r3,-1
   41820:	80c6703a 	and	r3,r16,r3
   41824:	00bfe584 	movi	r2,-106
   41828:	003fcf06 	br	41768 <__floatunsisf+0x48>

0004182c <__clzsi2>:
   4182c:	00bfffd4 	movui	r2,65535
   41830:	11000a36 	bltu	r2,r4,4185c <__clzsi2+0x30>
   41834:	20c04028 	cmpgeui	r3,r4,256
   41838:	180690fa 	slli	r3,r3,3
   4183c:	00800804 	movi	r2,32
   41840:	10c5c83a 	sub	r2,r2,r3
   41844:	20c8d83a 	srl	r4,r4,r3
   41848:	00c00174 	movhi	r3,5
   4184c:	20c7883a 	add	r3,r4,r3
   41850:	18c4ef03 	ldbu	r3,5052(r3)
   41854:	10c5c83a 	sub	r2,r2,r3
   41858:	f800283a 	ret
   4185c:	00804034 	movhi	r2,256
   41860:	2080032e 	bgeu	r4,r2,41870 <__clzsi2+0x44>
   41864:	00800404 	movi	r2,16
   41868:	00c00404 	movi	r3,16
   4186c:	003ff506 	br	41844 <__clzsi2+0x18>
   41870:	00800204 	movi	r2,8
   41874:	00c00604 	movi	r3,24
   41878:	003ff206 	br	41844 <__clzsi2+0x18>

0004187c <_printf_r>:
   4187c:	defffd04 	addi	sp,sp,-12
   41880:	2805883a 	mov	r2,r5
   41884:	dfc00015 	stw	ra,0(sp)
   41888:	d9800115 	stw	r6,4(sp)
   4188c:	d9c00215 	stw	r7,8(sp)
   41890:	21400217 	ldw	r5,8(r4)
   41894:	d9c00104 	addi	r7,sp,4
   41898:	100d883a 	mov	r6,r2
   4189c:	0041a5c0 	call	41a5c <___vfprintf_internal_r>
   418a0:	dfc00017 	ldw	ra,0(sp)
   418a4:	dec00304 	addi	sp,sp,12
   418a8:	f800283a 	ret

000418ac <printf>:
   418ac:	defffc04 	addi	sp,sp,-16
   418b0:	dfc00015 	stw	ra,0(sp)
   418b4:	d9400115 	stw	r5,4(sp)
   418b8:	d9800215 	stw	r6,8(sp)
   418bc:	d9c00315 	stw	r7,12(sp)
   418c0:	00800174 	movhi	r2,5
   418c4:	108d6c17 	ldw	r2,13744(r2)
   418c8:	200b883a 	mov	r5,r4
   418cc:	d9800104 	addi	r6,sp,4
   418d0:	11000217 	ldw	r4,8(r2)
   418d4:	0043e040 	call	43e04 <__vfprintf_internal>
   418d8:	dfc00017 	ldw	ra,0(sp)
   418dc:	dec00404 	addi	sp,sp,16
   418e0:	f800283a 	ret

000418e4 <_puts_r>:
   418e4:	defff504 	addi	sp,sp,-44
   418e8:	dc000815 	stw	r16,32(sp)
   418ec:	2021883a 	mov	r16,r4
   418f0:	2809883a 	mov	r4,r5
   418f4:	dc400915 	stw	r17,36(sp)
   418f8:	dfc00a15 	stw	ra,40(sp)
   418fc:	2823883a 	mov	r17,r5
   41900:	00419c40 	call	419c4 <strlen>
   41904:	11000044 	addi	r4,r2,1
   41908:	d8800515 	stw	r2,20(sp)
   4190c:	00800044 	movi	r2,1
   41910:	00c00174 	movhi	r3,5
   41914:	d8800715 	stw	r2,28(sp)
   41918:	d8800404 	addi	r2,sp,16
   4191c:	18c52f04 	addi	r3,r3,5308
   41920:	d8800115 	stw	r2,4(sp)
   41924:	00800084 	movi	r2,2
   41928:	dc400415 	stw	r17,16(sp)
   4192c:	d8c00615 	stw	r3,24(sp)
   41930:	d9000315 	stw	r4,12(sp)
   41934:	d8800215 	stw	r2,8(sp)
   41938:	81400217 	ldw	r5,8(r16)
   4193c:	80000226 	beq	r16,zero,41948 <_puts_r+0x64>
   41940:	80800e17 	ldw	r2,56(r16)
   41944:	10001426 	beq	r2,zero,41998 <_puts_r+0xb4>
   41948:	2880030b 	ldhu	r2,12(r5)
   4194c:	10c8000c 	andi	r3,r2,8192
   41950:	1800061e 	bne	r3,zero,4196c <_puts_r+0x88>
   41954:	28c01917 	ldw	r3,100(r5)
   41958:	0137ffc4 	movi	r4,-8193
   4195c:	10880014 	ori	r2,r2,8192
   41960:	1906703a 	and	r3,r3,r4
   41964:	2880030d 	sth	r2,12(r5)
   41968:	28c01915 	stw	r3,100(r5)
   4196c:	d9800104 	addi	r6,sp,4
   41970:	8009883a 	mov	r4,r16
   41974:	00464a80 	call	464a8 <__sfvwrite_r>
   41978:	1007883a 	mov	r3,r2
   4197c:	00800284 	movi	r2,10
   41980:	18000a1e 	bne	r3,zero,419ac <_puts_r+0xc8>
   41984:	dfc00a17 	ldw	ra,40(sp)
   41988:	dc400917 	ldw	r17,36(sp)
   4198c:	dc000817 	ldw	r16,32(sp)
   41990:	dec00b04 	addi	sp,sp,44
   41994:	f800283a 	ret
   41998:	8009883a 	mov	r4,r16
   4199c:	d9400015 	stw	r5,0(sp)
   419a0:	00460340 	call	46034 <__sinit>
   419a4:	d9400017 	ldw	r5,0(sp)
   419a8:	003fe706 	br	41948 <_puts_r+0x64>
   419ac:	00bfffc4 	movi	r2,-1
   419b0:	003ff406 	br	41984 <_puts_r+0xa0>

000419b4 <puts>:
   419b4:	00800174 	movhi	r2,5
   419b8:	200b883a 	mov	r5,r4
   419bc:	110d6c17 	ldw	r4,13744(r2)
   419c0:	00418e41 	jmpi	418e4 <_puts_r>

000419c4 <strlen>:
   419c4:	208000cc 	andi	r2,r4,3
   419c8:	10000926 	beq	r2,zero,419f0 <strlen+0x2c>
   419cc:	2005883a 	mov	r2,r4
   419d0:	00000306 	br	419e0 <strlen+0x1c>
   419d4:	10800044 	addi	r2,r2,1
   419d8:	10c000cc 	andi	r3,r2,3
   419dc:	18000526 	beq	r3,zero,419f4 <strlen+0x30>
   419e0:	10c00007 	ldb	r3,0(r2)
   419e4:	183ffb1e 	bne	r3,zero,419d4 <strlen+0x10>
   419e8:	1105c83a 	sub	r2,r2,r4
   419ec:	f800283a 	ret
   419f0:	2005883a 	mov	r2,r4
   419f4:	11400017 	ldw	r5,0(r2)
   419f8:	01ffbff4 	movhi	r7,65279
   419fc:	39ffbfc4 	addi	r7,r7,-257
   41a00:	29c7883a 	add	r3,r5,r7
   41a04:	01a02074 	movhi	r6,32897
   41a08:	014a303a 	nor	r5,zero,r5
   41a0c:	1946703a 	and	r3,r3,r5
   41a10:	31a02004 	addi	r6,r6,-32640
   41a14:	1986703a 	and	r3,r3,r6
   41a18:	1800071e 	bne	r3,zero,41a38 <strlen+0x74>
   41a1c:	11400117 	ldw	r5,4(r2)
   41a20:	10800104 	addi	r2,r2,4
   41a24:	29c7883a 	add	r3,r5,r7
   41a28:	014a303a 	nor	r5,zero,r5
   41a2c:	1946703a 	and	r3,r3,r5
   41a30:	1986703a 	and	r3,r3,r6
   41a34:	183ff926 	beq	r3,zero,41a1c <strlen+0x58>
   41a38:	10c00007 	ldb	r3,0(r2)
   41a3c:	183fea26 	beq	r3,zero,419e8 <strlen+0x24>
   41a40:	10c00047 	ldb	r3,1(r2)
   41a44:	10800044 	addi	r2,r2,1
   41a48:	183fe726 	beq	r3,zero,419e8 <strlen+0x24>
   41a4c:	10c00047 	ldb	r3,1(r2)
   41a50:	10800044 	addi	r2,r2,1
   41a54:	183ffa1e 	bne	r3,zero,41a40 <strlen+0x7c>
   41a58:	003fe306 	br	419e8 <strlen+0x24>

00041a5c <___vfprintf_internal_r>:
   41a5c:	deffbc04 	addi	sp,sp,-272
   41a60:	dfc04315 	stw	ra,268(sp)
   41a64:	dc803c15 	stw	r18,240(sp)
   41a68:	dc003a15 	stw	r16,232(sp)
   41a6c:	d9000515 	stw	r4,20(sp)
   41a70:	2021883a 	mov	r16,r4
   41a74:	d9400415 	stw	r5,16(sp)
   41a78:	3025883a 	mov	r18,r6
   41a7c:	d9c00715 	stw	r7,28(sp)
   41a80:	df004215 	stw	fp,264(sp)
   41a84:	ddc04115 	stw	r23,260(sp)
   41a88:	dd804015 	stw	r22,256(sp)
   41a8c:	dd403f15 	stw	r21,252(sp)
   41a90:	dd003e15 	stw	r20,248(sp)
   41a94:	dcc03d15 	stw	r19,244(sp)
   41a98:	dc403b15 	stw	r17,236(sp)
   41a9c:	0046a940 	call	46a94 <_localeconv_r>
   41aa0:	10800017 	ldw	r2,0(r2)
   41aa4:	1009883a 	mov	r4,r2
   41aa8:	d8800d15 	stw	r2,52(sp)
   41aac:	00419c40 	call	419c4 <strlen>
   41ab0:	d8800c15 	stw	r2,48(sp)
   41ab4:	80000226 	beq	r16,zero,41ac0 <___vfprintf_internal_r+0x64>
   41ab8:	80800e17 	ldw	r2,56(r16)
   41abc:	10022b26 	beq	r2,zero,4236c <___vfprintf_internal_r+0x910>
   41ac0:	d9400417 	ldw	r5,16(sp)
   41ac4:	2880030b 	ldhu	r2,12(r5)
   41ac8:	10c8000c 	andi	r3,r2,8192
   41acc:	1800071e 	bne	r3,zero,41aec <___vfprintf_internal_r+0x90>
   41ad0:	28c01917 	ldw	r3,100(r5)
   41ad4:	11080014 	ori	r4,r2,8192
   41ad8:	00b7ffc4 	movi	r2,-8193
   41adc:	1886703a 	and	r3,r3,r2
   41ae0:	2900030d 	sth	r4,12(r5)
   41ae4:	2005883a 	mov	r2,r4
   41ae8:	28c01915 	stw	r3,100(r5)
   41aec:	10c0020c 	andi	r3,r2,8
   41af0:	1800f626 	beq	r3,zero,41ecc <___vfprintf_internal_r+0x470>
   41af4:	d8c00417 	ldw	r3,16(sp)
   41af8:	18c00417 	ldw	r3,16(r3)
   41afc:	1800f326 	beq	r3,zero,41ecc <___vfprintf_internal_r+0x470>
   41b00:	1080068c 	andi	r2,r2,26
   41b04:	10800298 	cmpnei	r2,r2,10
   41b08:	1000f926 	beq	r2,zero,41ef0 <___vfprintf_internal_r+0x494>
   41b0c:	dc402a04 	addi	r17,sp,168
   41b10:	04c00174 	movhi	r19,5
   41b14:	9029883a 	mov	r20,r18
   41b18:	dc401d15 	stw	r17,116(sp)
   41b1c:	d8001f15 	stw	zero,124(sp)
   41b20:	d8001e15 	stw	zero,120(sp)
   41b24:	d8000915 	stw	zero,36(sp)
   41b28:	d8000a15 	stw	zero,40(sp)
   41b2c:	d8000b15 	stw	zero,44(sp)
   41b30:	d8000e15 	stw	zero,56(sp)
   41b34:	d8001115 	stw	zero,68(sp)
   41b38:	d8000615 	stw	zero,24(sp)
   41b3c:	9cc54104 	addi	r19,r19,5380
   41b40:	8825883a 	mov	r18,r17
   41b44:	a0800007 	ldb	r2,0(r20)
   41b48:	1000cd26 	beq	r2,zero,41e80 <___vfprintf_internal_r+0x424>
   41b4c:	a021883a 	mov	r16,r20
   41b50:	00000306 	br	41b60 <___vfprintf_internal_r+0x104>
   41b54:	80800047 	ldb	r2,1(r16)
   41b58:	84000044 	addi	r16,r16,1
   41b5c:	10015126 	beq	r2,zero,420a4 <___vfprintf_internal_r+0x648>
   41b60:	10800958 	cmpnei	r2,r2,37
   41b64:	103ffb1e 	bne	r2,zero,41b54 <___vfprintf_internal_r+0xf8>
   41b68:	852fc83a 	sub	r23,r16,r20
   41b6c:	85014f1e 	bne	r16,r20,420ac <___vfprintf_internal_r+0x650>
   41b70:	80800003 	ldbu	r2,0(r16)
   41b74:	10803fcc 	andi	r2,r2,255
   41b78:	1080201c 	xori	r2,r2,128
   41b7c:	10bfe004 	addi	r2,r2,-128
   41b80:	1000bf26 	beq	r2,zero,41e80 <___vfprintf_internal_r+0x424>
   41b84:	82c00047 	ldb	r11,1(r16)
   41b88:	85000044 	addi	r20,r16,1
   41b8c:	d8001645 	stb	zero,89(sp)
   41b90:	023fffc4 	movi	r8,-1
   41b94:	0021883a 	mov	r16,zero
   41b98:	001b883a 	mov	r13,zero
   41b9c:	a5000044 	addi	r20,r20,1
   41ba0:	5839883a 	mov	fp,r11
   41ba4:	e0bff804 	addi	r2,fp,-32
   41ba8:	10c01668 	cmpgeui	r3,r2,89
   41bac:	18006a1e 	bne	r3,zero,41d58 <___vfprintf_internal_r+0x2fc>
   41bb0:	100490ba 	slli	r2,r2,2
   41bb4:	00c00134 	movhi	r3,4
   41bb8:	10c7883a 	add	r3,r2,r3
   41bbc:	1886f117 	ldw	r2,7108(r3)
   41bc0:	1000683a 	jmp	r2
   41bc4:	0004243c 	xorhi	zero,zero,4240
   41bc8:	00041d58 	cmpnei	zero,zero,4213
   41bcc:	00041d58 	cmpnei	zero,zero,4213
   41bd0:	00042430 	cmpltui	zero,zero,4240
   41bd4:	00041d58 	cmpnei	zero,zero,4213
   41bd8:	00041d58 	cmpnei	zero,zero,4213
   41bdc:	00041d58 	cmpnei	zero,zero,4213
   41be0:	00041d58 	cmpnei	zero,zero,4213
   41be4:	00041d58 	cmpnei	zero,zero,4213
   41be8:	00041d58 	cmpnei	zero,zero,4213
   41bec:	000423ac 	andhi	zero,zero,4238
   41bf0:	00042420 	cmpeqi	zero,zero,4240
   41bf4:	00041d58 	cmpnei	zero,zero,4213
   41bf8:	000423c4 	movi	zero,4239
   41bfc:	000423d0 	cmplti	zero,zero,4239
   41c00:	00041d58 	cmpnei	zero,zero,4213
   41c04:	00042414 	movui	zero,4240
   41c08:	00041d28 	cmpgeui	zero,zero,4212
   41c0c:	00041d28 	cmpgeui	zero,zero,4212
   41c10:	00041d28 	cmpgeui	zero,zero,4212
   41c14:	00041d28 	cmpgeui	zero,zero,4212
   41c18:	00041d28 	cmpgeui	zero,zero,4212
   41c1c:	00041d28 	cmpgeui	zero,zero,4212
   41c20:	00041d28 	cmpgeui	zero,zero,4212
   41c24:	00041d28 	cmpgeui	zero,zero,4212
   41c28:	00041d28 	cmpgeui	zero,zero,4212
   41c2c:	00041d58 	cmpnei	zero,zero,4213
   41c30:	00041d58 	cmpnei	zero,zero,4213
   41c34:	00041d58 	cmpnei	zero,zero,4213
   41c38:	00041d58 	cmpnei	zero,zero,4213
   41c3c:	00041d58 	cmpnei	zero,zero,4213
   41c40:	00041d58 	cmpnei	zero,zero,4213
   41c44:	00041d58 	cmpnei	zero,zero,4213
   41c48:	00041d58 	cmpnei	zero,zero,4213
   41c4c:	00041d58 	cmpnei	zero,zero,4213
   41c50:	00041d58 	cmpnei	zero,zero,4213
   41c54:	00041f3c 	xorhi	zero,zero,4220
   41c58:	000421d8 	cmpnei	zero,zero,4231
   41c5c:	00041d58 	cmpnei	zero,zero,4213
   41c60:	000421d8 	cmpnei	zero,zero,4231
   41c64:	00041d58 	cmpnei	zero,zero,4213
   41c68:	00041d58 	cmpnei	zero,zero,4213
   41c6c:	00041d58 	cmpnei	zero,zero,4213
   41c70:	00041d58 	cmpnei	zero,zero,4213
   41c74:	00042488 	cmpgei	zero,zero,4242
   41c78:	00041d58 	cmpnei	zero,zero,4213
   41c7c:	00041d58 	cmpnei	zero,zero,4213
   41c80:	00041fa4 	muli	zero,zero,4222
   41c84:	00041d58 	cmpnei	zero,zero,4213
   41c88:	00041d58 	cmpnei	zero,zero,4213
   41c8c:	00041d58 	cmpnei	zero,zero,4213
   41c90:	00041d58 	cmpnei	zero,zero,4213
   41c94:	00041d58 	cmpnei	zero,zero,4213
   41c98:	00041fcc 	andi	zero,zero,4223
   41c9c:	00041d58 	cmpnei	zero,zero,4213
   41ca0:	00041d58 	cmpnei	zero,zero,4213
   41ca4:	00043014 	movui	zero,4288
   41ca8:	00041d58 	cmpnei	zero,zero,4213
   41cac:	00041d58 	cmpnei	zero,zero,4213
   41cb0:	00041d58 	cmpnei	zero,zero,4213
   41cb4:	00041d58 	cmpnei	zero,zero,4213
   41cb8:	00041d58 	cmpnei	zero,zero,4213
   41cbc:	00041d58 	cmpnei	zero,zero,4213
   41cc0:	00041d58 	cmpnei	zero,zero,4213
   41cc4:	00041d58 	cmpnei	zero,zero,4213
   41cc8:	00041d58 	cmpnei	zero,zero,4213
   41ccc:	00041d58 	cmpnei	zero,zero,4213
   41cd0:	000424a0 	cmpeqi	zero,zero,4242
   41cd4:	00041f40 	call	41f4 <__reset-0x3be0c>
   41cd8:	000421d8 	cmpnei	zero,zero,4231
   41cdc:	000421d8 	cmpnei	zero,zero,4231
   41ce0:	000421d8 	cmpnei	zero,zero,4231
   41ce4:	00042494 	movui	zero,4242
   41ce8:	00041f40 	call	41f4 <__reset-0x3be0c>
   41cec:	00041d58 	cmpnei	zero,zero,4213
   41cf0:	00041d58 	cmpnei	zero,zero,4213
   41cf4:	00042460 	cmpeqi	zero,zero,4241
   41cf8:	00041d58 	cmpnei	zero,zero,4213
   41cfc:	0004255c 	xori	zero,zero,4245
   41d00:	00041fa8 	cmpgeui	zero,zero,4222
   41d04:	00042524 	muli	zero,zero,4244
   41d08:	00042518 	cmpnei	zero,zero,4244
   41d0c:	00041d58 	cmpnei	zero,zero,4213
   41d10:	000424c8 	cmpgei	zero,zero,4243
   41d14:	00041d58 	cmpnei	zero,zero,4213
   41d18:	00041fd0 	cmplti	zero,zero,4223
   41d1c:	00041d58 	cmpnei	zero,zero,4213
   41d20:	00041d58 	cmpnei	zero,zero,4213
   41d24:	00043084 	movi	zero,4290
   41d28:	0021883a 	mov	r16,zero
   41d2c:	e0bff404 	addi	r2,fp,-48
   41d30:	a7000007 	ldb	fp,0(r20)
   41d34:	840002a4 	muli	r16,r16,10
   41d38:	a5000044 	addi	r20,r20,1
   41d3c:	1421883a 	add	r16,r2,r16
   41d40:	e0bff404 	addi	r2,fp,-48
   41d44:	10c002b0 	cmpltui	r3,r2,10
   41d48:	183ff91e 	bne	r3,zero,41d30 <___vfprintf_internal_r+0x2d4>
   41d4c:	e0bff804 	addi	r2,fp,-32
   41d50:	10c01668 	cmpgeui	r3,r2,89
   41d54:	183f9626 	beq	r3,zero,41bb0 <___vfprintf_internal_r+0x154>
   41d58:	e0004926 	beq	fp,zero,41e80 <___vfprintf_internal_r+0x424>
   41d5c:	df002005 	stb	fp,128(sp)
   41d60:	d8001645 	stb	zero,89(sp)
   41d64:	03000044 	movi	r12,1
   41d68:	01c00044 	movi	r7,1
   41d6c:	dd402004 	addi	r21,sp,128
   41d70:	6807883a 	mov	r3,r13
   41d74:	0011883a 	mov	r8,zero
   41d78:	d8000815 	stw	zero,32(sp)
   41d7c:	1b80008c 	andi	r14,r3,2
   41d80:	70000126 	beq	r14,zero,41d88 <___vfprintf_internal_r+0x32c>
   41d84:	63000084 	addi	r12,r12,2
   41d88:	1b40210c 	andi	r13,r3,132
   41d8c:	6800021e 	bne	r13,zero,41d98 <___vfprintf_internal_r+0x33c>
   41d90:	832dc83a 	sub	r22,r16,r12
   41d94:	05832916 	blt	zero,r22,42a3c <___vfprintf_internal_r+0xfe0>
   41d98:	d8801647 	ldb	r2,89(sp)
   41d9c:	dd801f17 	ldw	r22,124(sp)
   41da0:	10000c26 	beq	r2,zero,41dd4 <___vfprintf_internal_r+0x378>
   41da4:	d8801e17 	ldw	r2,120(sp)
   41da8:	d9001644 	addi	r4,sp,89
   41dac:	b5800044 	addi	r22,r22,1
   41db0:	10800044 	addi	r2,r2,1
   41db4:	91000015 	stw	r4,0(r18)
   41db8:	01000044 	movi	r4,1
   41dbc:	d8801e15 	stw	r2,120(sp)
   41dc0:	91000115 	stw	r4,4(r18)
   41dc4:	dd801f15 	stw	r22,124(sp)
   41dc8:	10800208 	cmpgei	r2,r2,8
   41dcc:	10037b1e 	bne	r2,zero,42bbc <___vfprintf_internal_r+0x1160>
   41dd0:	94800204 	addi	r18,r18,8
   41dd4:	70000c26 	beq	r14,zero,41e08 <___vfprintf_internal_r+0x3ac>
   41dd8:	d8801e17 	ldw	r2,120(sp)
   41ddc:	d9001684 	addi	r4,sp,90
   41de0:	b5800084 	addi	r22,r22,2
   41de4:	10800044 	addi	r2,r2,1
   41de8:	91000015 	stw	r4,0(r18)
   41dec:	01000084 	movi	r4,2
   41df0:	d8801e15 	stw	r2,120(sp)
   41df4:	91000115 	stw	r4,4(r18)
   41df8:	dd801f15 	stw	r22,124(sp)
   41dfc:	10800208 	cmpgei	r2,r2,8
   41e00:	1003821e 	bne	r2,zero,42c0c <___vfprintf_internal_r+0x11b0>
   41e04:	94800204 	addi	r18,r18,8
   41e08:	6b402018 	cmpnei	r13,r13,128
   41e0c:	68023426 	beq	r13,zero,426e0 <___vfprintf_internal_r+0xc84>
   41e10:	41efc83a 	sub	r23,r8,r7
   41e14:	05c27416 	blt	zero,r23,427e8 <___vfprintf_internal_r+0xd8c>
   41e18:	1880400c 	andi	r2,r3,256
   41e1c:	1001db1e 	bne	r2,zero,4258c <___vfprintf_internal_r+0xb30>
   41e20:	d8801e17 	ldw	r2,120(sp)
   41e24:	3d89883a 	add	r4,r7,r22
   41e28:	95400015 	stw	r21,0(r18)
   41e2c:	10800044 	addi	r2,r2,1
   41e30:	d8801e15 	stw	r2,120(sp)
   41e34:	91c00115 	stw	r7,4(r18)
   41e38:	d9001f15 	stw	r4,124(sp)
   41e3c:	10800208 	cmpgei	r2,r2,8
   41e40:	1003521e 	bne	r2,zero,42b8c <___vfprintf_internal_r+0x1130>
   41e44:	94800204 	addi	r18,r18,8
   41e48:	18c0010c 	andi	r3,r3,4
   41e4c:	18000226 	beq	r3,zero,41e58 <___vfprintf_internal_r+0x3fc>
   41e50:	8339c83a 	sub	fp,r16,r12
   41e54:	0700ac16 	blt	zero,fp,42108 <___vfprintf_internal_r+0x6ac>
   41e58:	8300010e 	bge	r16,r12,41e60 <___vfprintf_internal_r+0x404>
   41e5c:	6021883a 	mov	r16,r12
   41e60:	d8800617 	ldw	r2,24(sp)
   41e64:	1405883a 	add	r2,r2,r16
   41e68:	d8800615 	stw	r2,24(sp)
   41e6c:	2002b01e 	bne	r4,zero,42930 <___vfprintf_internal_r+0xed4>
   41e70:	a0800007 	ldb	r2,0(r20)
   41e74:	d8001e15 	stw	zero,120(sp)
   41e78:	8825883a 	mov	r18,r17
   41e7c:	103f331e 	bne	r2,zero,41b4c <___vfprintf_internal_r+0xf0>
   41e80:	d8801f17 	ldw	r2,124(sp)
   41e84:	10063b1e 	bne	r2,zero,43774 <___vfprintf_internal_r+0x1d18>
   41e88:	d8800417 	ldw	r2,16(sp)
   41e8c:	1080030b 	ldhu	r2,12(r2)
   41e90:	1080100c 	andi	r2,r2,64
   41e94:	10075f1e 	bne	r2,zero,43c14 <___vfprintf_internal_r+0x21b8>
   41e98:	d8800617 	ldw	r2,24(sp)
   41e9c:	dfc04317 	ldw	ra,268(sp)
   41ea0:	df004217 	ldw	fp,264(sp)
   41ea4:	ddc04117 	ldw	r23,260(sp)
   41ea8:	dd804017 	ldw	r22,256(sp)
   41eac:	dd403f17 	ldw	r21,252(sp)
   41eb0:	dd003e17 	ldw	r20,248(sp)
   41eb4:	dcc03d17 	ldw	r19,244(sp)
   41eb8:	dc803c17 	ldw	r18,240(sp)
   41ebc:	dc403b17 	ldw	r17,236(sp)
   41ec0:	dc003a17 	ldw	r16,232(sp)
   41ec4:	dec04404 	addi	sp,sp,272
   41ec8:	f800283a 	ret
   41ecc:	d9400417 	ldw	r5,16(sp)
   41ed0:	d9000517 	ldw	r4,20(sp)
   41ed4:	0043ee40 	call	43ee4 <__swsetup_r>
   41ed8:	10074e1e 	bne	r2,zero,43c14 <___vfprintf_internal_r+0x21b8>
   41edc:	d8800417 	ldw	r2,16(sp)
   41ee0:	1080030b 	ldhu	r2,12(r2)
   41ee4:	1080068c 	andi	r2,r2,26
   41ee8:	10800298 	cmpnei	r2,r2,10
   41eec:	103f071e 	bne	r2,zero,41b0c <___vfprintf_internal_r+0xb0>
   41ef0:	d8800417 	ldw	r2,16(sp)
   41ef4:	1080038f 	ldh	r2,14(r2)
   41ef8:	103f0416 	blt	r2,zero,41b0c <___vfprintf_internal_r+0xb0>
   41efc:	d9c00717 	ldw	r7,28(sp)
   41f00:	d9400417 	ldw	r5,16(sp)
   41f04:	d9000517 	ldw	r4,20(sp)
   41f08:	900d883a 	mov	r6,r18
   41f0c:	dfc04317 	ldw	ra,268(sp)
   41f10:	df004217 	ldw	fp,264(sp)
   41f14:	ddc04117 	ldw	r23,260(sp)
   41f18:	dd804017 	ldw	r22,256(sp)
   41f1c:	dd403f17 	ldw	r21,252(sp)
   41f20:	dd003e17 	ldw	r20,248(sp)
   41f24:	dcc03d17 	ldw	r19,244(sp)
   41f28:	dc803c17 	ldw	r18,240(sp)
   41f2c:	dc403b17 	ldw	r17,236(sp)
   41f30:	dc003a17 	ldw	r16,232(sp)
   41f34:	dec04404 	addi	sp,sp,272
   41f38:	0043e201 	jmpi	43e20 <__sbprintf>
   41f3c:	6b400414 	ori	r13,r13,16
   41f40:	6880080c 	andi	r2,r13,32
   41f44:	1000dc26 	beq	r2,zero,422b8 <___vfprintf_internal_r+0x85c>
   41f48:	d8c00717 	ldw	r3,28(sp)
   41f4c:	18800117 	ldw	r2,4(r3)
   41f50:	1d800017 	ldw	r22,0(r3)
   41f54:	18c00204 	addi	r3,r3,8
   41f58:	d8c00715 	stw	r3,28(sp)
   41f5c:	102f883a 	mov	r23,r2
   41f60:	1000e316 	blt	r2,zero,422f0 <___vfprintf_internal_r+0x894>
   41f64:	40bfffd8 	cmpnei	r2,r8,-1
   41f68:	d9001643 	ldbu	r4,89(sp)
   41f6c:	10010626 	beq	r2,zero,42388 <___vfprintf_internal_r+0x92c>
   41f70:	00ffdfc4 	movi	r3,-129
   41f74:	b5c4b03a 	or	r2,r22,r23
   41f78:	68c6703a 	and	r3,r13,r3
   41f7c:	1001011e 	bne	r2,zero,42384 <___vfprintf_internal_r+0x928>
   41f80:	00800044 	movi	r2,1
   41f84:	4002531e 	bne	r8,zero,428d4 <___vfprintf_internal_r+0xe78>
   41f88:	1003ad1e 	bne	r2,zero,42e40 <___vfprintf_internal_r+0x13e4>
   41f8c:	69c0004c 	andi	r7,r13,1
   41f90:	3803f626 	beq	r7,zero,42f6c <___vfprintf_internal_r+0x1510>
   41f94:	00800c04 	movi	r2,48
   41f98:	d88029c5 	stb	r2,167(sp)
   41f9c:	dd4029c4 	addi	r21,sp,167
   41fa0:	00003606 	br	4207c <___vfprintf_internal_r+0x620>
   41fa4:	6b400414 	ori	r13,r13,16
   41fa8:	6880080c 	andi	r2,r13,32
   41fac:	1000e326 	beq	r2,zero,4233c <___vfprintf_internal_r+0x8e0>
   41fb0:	d8c00717 	ldw	r3,28(sp)
   41fb4:	0005883a 	mov	r2,zero
   41fb8:	1d800017 	ldw	r22,0(r3)
   41fbc:	1dc00117 	ldw	r23,4(r3)
   41fc0:	18c00204 	addi	r3,r3,8
   41fc4:	d8c00715 	stw	r3,28(sp)
   41fc8:	00000906 	br	41ff0 <___vfprintf_internal_r+0x594>
   41fcc:	6b400414 	ori	r13,r13,16
   41fd0:	6880080c 	andi	r2,r13,32
   41fd4:	1000cd26 	beq	r2,zero,4230c <___vfprintf_internal_r+0x8b0>
   41fd8:	d8c00717 	ldw	r3,28(sp)
   41fdc:	00800044 	movi	r2,1
   41fe0:	1d800017 	ldw	r22,0(r3)
   41fe4:	1dc00117 	ldw	r23,4(r3)
   41fe8:	18c00204 	addi	r3,r3,8
   41fec:	d8c00715 	stw	r3,28(sp)
   41ff0:	0009883a 	mov	r4,zero
   41ff4:	d9001645 	stb	r4,89(sp)
   41ff8:	40ffffe0 	cmpeqi	r3,r8,-1
   41ffc:	1800051e 	bne	r3,zero,42014 <___vfprintf_internal_r+0x5b8>
   42000:	00ffdfc4 	movi	r3,-129
   42004:	b5cab03a 	or	r5,r22,r23
   42008:	68c6703a 	and	r3,r13,r3
   4200c:	283fdd26 	beq	r5,zero,41f84 <___vfprintf_internal_r+0x528>
   42010:	181b883a 	mov	r13,r3
   42014:	10c00060 	cmpeqi	r3,r2,1
   42018:	1800db1e 	bne	r3,zero,42388 <___vfprintf_internal_r+0x92c>
   4201c:	108000a0 	cmpeqi	r2,r2,2
   42020:	1002331e 	bne	r2,zero,428f0 <___vfprintf_internal_r+0xe94>
   42024:	882b883a 	mov	r21,r17
   42028:	b006d0fa 	srli	r3,r22,3
   4202c:	b80c977a 	slli	r6,r23,29
   42030:	b82ed0fa 	srli	r23,r23,3
   42034:	b58001cc 	andi	r22,r22,7
   42038:	b0800c04 	addi	r2,r22,48
   4203c:	30ecb03a 	or	r22,r6,r3
   42040:	a8bfffc5 	stb	r2,-1(r21)
   42044:	b5c6b03a 	or	r3,r22,r23
   42048:	a80b883a 	mov	r5,r21
   4204c:	ad7fffc4 	addi	r21,r21,-1
   42050:	183ff51e 	bne	r3,zero,42028 <___vfprintf_internal_r+0x5cc>
   42054:	68c0004c 	andi	r3,r13,1
   42058:	18023226 	beq	r3,zero,42924 <___vfprintf_internal_r+0xec8>
   4205c:	10800c18 	cmpnei	r2,r2,48
   42060:	10023026 	beq	r2,zero,42924 <___vfprintf_internal_r+0xec8>
   42064:	297fff84 	addi	r5,r5,-2
   42068:	00800c04 	movi	r2,48
   4206c:	a8bfffc5 	stb	r2,-1(r21)
   42070:	894fc83a 	sub	r7,r17,r5
   42074:	6807883a 	mov	r3,r13
   42078:	282b883a 	mov	r21,r5
   4207c:	4019883a 	mov	r12,r8
   42080:	41c0010e 	bge	r8,r7,42088 <___vfprintf_internal_r+0x62c>
   42084:	3819883a 	mov	r12,r7
   42088:	d8000815 	stw	zero,32(sp)
   4208c:	21003fcc 	andi	r4,r4,255
   42090:	2100201c 	xori	r4,r4,128
   42094:	213fe004 	addi	r4,r4,-128
   42098:	203f3826 	beq	r4,zero,41d7c <___vfprintf_internal_r+0x320>
   4209c:	63000044 	addi	r12,r12,1
   420a0:	003f3606 	br	41d7c <___vfprintf_internal_r+0x320>
   420a4:	852fc83a 	sub	r23,r16,r20
   420a8:	853f7526 	beq	r16,r20,41e80 <___vfprintf_internal_r+0x424>
   420ac:	dd801f17 	ldw	r22,124(sp)
   420b0:	d8801e17 	ldw	r2,120(sp)
   420b4:	95000015 	stw	r20,0(r18)
   420b8:	b5ed883a 	add	r22,r22,r23
   420bc:	10800044 	addi	r2,r2,1
   420c0:	d8801e15 	stw	r2,120(sp)
   420c4:	95c00115 	stw	r23,4(r18)
   420c8:	dd801f15 	stw	r22,124(sp)
   420cc:	10800208 	cmpgei	r2,r2,8
   420d0:	1000061e 	bne	r2,zero,420ec <___vfprintf_internal_r+0x690>
   420d4:	94800204 	addi	r18,r18,8
   420d8:	d8c00617 	ldw	r3,24(sp)
   420dc:	80800003 	ldbu	r2,0(r16)
   420e0:	1dc7883a 	add	r3,r3,r23
   420e4:	d8c00615 	stw	r3,24(sp)
   420e8:	003ea206 	br	41b74 <___vfprintf_internal_r+0x118>
   420ec:	d9400417 	ldw	r5,16(sp)
   420f0:	d9000517 	ldw	r4,20(sp)
   420f4:	d9801d04 	addi	r6,sp,116
   420f8:	00492500 	call	49250 <__sprint_r>
   420fc:	103f621e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42100:	8825883a 	mov	r18,r17
   42104:	003ff406 	br	420d8 <___vfprintf_internal_r+0x67c>
   42108:	05c00174 	movhi	r23,5
   4210c:	e0c00450 	cmplti	r3,fp,17
   42110:	d8801e17 	ldw	r2,120(sp)
   42114:	bdc54504 	addi	r23,r23,5396
   42118:	18001e1e 	bne	r3,zero,42194 <___vfprintf_internal_r+0x738>
   4211c:	9007883a 	mov	r3,r18
   42120:	dd400517 	ldw	r21,20(sp)
   42124:	05800404 	movi	r22,16
   42128:	6025883a 	mov	r18,r12
   4212c:	00000406 	br	42140 <___vfprintf_internal_r+0x6e4>
   42130:	e73ffc04 	addi	fp,fp,-16
   42134:	e1400448 	cmpgei	r5,fp,17
   42138:	18c00204 	addi	r3,r3,8
   4213c:	28001326 	beq	r5,zero,4218c <___vfprintf_internal_r+0x730>
   42140:	10800044 	addi	r2,r2,1
   42144:	21000404 	addi	r4,r4,16
   42148:	1dc00015 	stw	r23,0(r3)
   4214c:	1d800115 	stw	r22,4(r3)
   42150:	d9001f15 	stw	r4,124(sp)
   42154:	d8801e15 	stw	r2,120(sp)
   42158:	11400208 	cmpgei	r5,r2,8
   4215c:	283ff426 	beq	r5,zero,42130 <___vfprintf_internal_r+0x6d4>
   42160:	d9400417 	ldw	r5,16(sp)
   42164:	d9801d04 	addi	r6,sp,116
   42168:	a809883a 	mov	r4,r21
   4216c:	00492500 	call	49250 <__sprint_r>
   42170:	103f451e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42174:	e73ffc04 	addi	fp,fp,-16
   42178:	e1400448 	cmpgei	r5,fp,17
   4217c:	d9001f17 	ldw	r4,124(sp)
   42180:	d8801e17 	ldw	r2,120(sp)
   42184:	8807883a 	mov	r3,r17
   42188:	283fed1e 	bne	r5,zero,42140 <___vfprintf_internal_r+0x6e4>
   4218c:	9019883a 	mov	r12,r18
   42190:	1825883a 	mov	r18,r3
   42194:	10800044 	addi	r2,r2,1
   42198:	2709883a 	add	r4,r4,fp
   4219c:	d8801e15 	stw	r2,120(sp)
   421a0:	95c00015 	stw	r23,0(r18)
   421a4:	97000115 	stw	fp,4(r18)
   421a8:	d9001f15 	stw	r4,124(sp)
   421ac:	10800210 	cmplti	r2,r2,8
   421b0:	103f291e 	bne	r2,zero,41e58 <___vfprintf_internal_r+0x3fc>
   421b4:	d9400417 	ldw	r5,16(sp)
   421b8:	d9000517 	ldw	r4,20(sp)
   421bc:	d9801d04 	addi	r6,sp,116
   421c0:	db000815 	stw	r12,32(sp)
   421c4:	00492500 	call	49250 <__sprint_r>
   421c8:	103f2f1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   421cc:	d9001f17 	ldw	r4,124(sp)
   421d0:	db000817 	ldw	r12,32(sp)
   421d4:	003f2006 	br	41e58 <___vfprintf_internal_r+0x3fc>
   421d8:	d8c00717 	ldw	r3,28(sp)
   421dc:	6880020c 	andi	r2,r13,8
   421e0:	19000204 	addi	r4,r3,8
   421e4:	d9000f15 	stw	r4,60(sp)
   421e8:	1003621e 	bne	r2,zero,42f74 <___vfprintf_internal_r+0x1518>
   421ec:	d8800717 	ldw	r2,28(sp)
   421f0:	10c00017 	ldw	r3,0(r2)
   421f4:	10800117 	ldw	r2,4(r2)
   421f8:	d8c00a15 	stw	r3,40(sp)
   421fc:	d8800b15 	stw	r2,44(sp)
   42200:	ddc00b17 	ldw	r23,44(sp)
   42204:	dd800a17 	ldw	r22,40(sp)
   42208:	00a00034 	movhi	r2,32768
   4220c:	10bfffc4 	addi	r2,r2,-1
   42210:	b8aa703a 	and	r21,r23,r2
   42214:	01dffc34 	movhi	r7,32752
   42218:	01bfffc4 	movi	r6,-1
   4221c:	39ffffc4 	addi	r7,r7,-1
   42220:	b009883a 	mov	r4,r22
   42224:	a80b883a 	mov	r5,r21
   42228:	da000815 	stw	r8,32(sp)
   4222c:	db400715 	stw	r13,28(sp)
   42230:	004e7440 	call	4e744 <__unorddf2>
   42234:	db400717 	ldw	r13,28(sp)
   42238:	da000817 	ldw	r8,32(sp)
   4223c:	10044f1e 	bne	r2,zero,4337c <___vfprintf_internal_r+0x1920>
   42240:	01dffc34 	movhi	r7,32752
   42244:	01bfffc4 	movi	r6,-1
   42248:	39ffffc4 	addi	r7,r7,-1
   4224c:	b009883a 	mov	r4,r22
   42250:	a80b883a 	mov	r5,r21
   42254:	004d5d80 	call	4d5d8 <__ledf2>
   42258:	db400717 	ldw	r13,28(sp)
   4225c:	da000817 	ldw	r8,32(sp)
   42260:	0084460e 	bge	zero,r2,4337c <___vfprintf_internal_r+0x1920>
   42264:	000d883a 	mov	r6,zero
   42268:	000f883a 	mov	r7,zero
   4226c:	b009883a 	mov	r4,r22
   42270:	b80b883a 	mov	r5,r23
   42274:	004d5d80 	call	4d5d8 <__ledf2>
   42278:	db400717 	ldw	r13,28(sp)
   4227c:	10052616 	blt	r2,zero,43718 <___vfprintf_internal_r+0x1cbc>
   42280:	d9001643 	ldbu	r4,89(sp)
   42284:	e0801210 	cmplti	r2,fp,72
   42288:	1005091e 	bne	r2,zero,436b0 <___vfprintf_internal_r+0x1c54>
   4228c:	05400174 	movhi	r21,5
   42290:	ad453104 	addi	r21,r21,5316
   42294:	d8800f17 	ldw	r2,60(sp)
   42298:	00ffdfc4 	movi	r3,-129
   4229c:	68c6703a 	and	r3,r13,r3
   422a0:	d8800715 	stw	r2,28(sp)
   422a4:	030000c4 	movi	r12,3
   422a8:	01c000c4 	movi	r7,3
   422ac:	0011883a 	mov	r8,zero
   422b0:	d8000815 	stw	zero,32(sp)
   422b4:	003f7506 	br	4208c <___vfprintf_internal_r+0x630>
   422b8:	d8c00717 	ldw	r3,28(sp)
   422bc:	6880040c 	andi	r2,r13,16
   422c0:	1d800017 	ldw	r22,0(r3)
   422c4:	18c00104 	addi	r3,r3,4
   422c8:	d8c00715 	stw	r3,28(sp)
   422cc:	10002a1e 	bne	r2,zero,42378 <___vfprintf_internal_r+0x91c>
   422d0:	6880100c 	andi	r2,r13,64
   422d4:	10002826 	beq	r2,zero,42378 <___vfprintf_internal_r+0x91c>
   422d8:	b5bfffcc 	andi	r22,r22,65535
   422dc:	b5a0001c 	xori	r22,r22,32768
   422e0:	b5a00004 	addi	r22,r22,-32768
   422e4:	b02fd7fa 	srai	r23,r22,31
   422e8:	b805883a 	mov	r2,r23
   422ec:	103f1d0e 	bge	r2,zero,41f64 <___vfprintf_internal_r+0x508>
   422f0:	b004c03a 	cmpne	r2,r22,zero
   422f4:	05efc83a 	sub	r23,zero,r23
   422f8:	b8afc83a 	sub	r23,r23,r2
   422fc:	05adc83a 	sub	r22,zero,r22
   42300:	01000b44 	movi	r4,45
   42304:	00800044 	movi	r2,1
   42308:	003f3a06 	br	41ff4 <___vfprintf_internal_r+0x598>
   4230c:	d8c00717 	ldw	r3,28(sp)
   42310:	6880040c 	andi	r2,r13,16
   42314:	1d800017 	ldw	r22,0(r3)
   42318:	18c00104 	addi	r3,r3,4
   4231c:	d8c00715 	stw	r3,28(sp)
   42320:	1000031e 	bne	r2,zero,42330 <___vfprintf_internal_r+0x8d4>
   42324:	6880100c 	andi	r2,r13,64
   42328:	10000126 	beq	r2,zero,42330 <___vfprintf_internal_r+0x8d4>
   4232c:	b5bfffcc 	andi	r22,r22,65535
   42330:	002f883a 	mov	r23,zero
   42334:	00800044 	movi	r2,1
   42338:	003f2d06 	br	41ff0 <___vfprintf_internal_r+0x594>
   4233c:	d8c00717 	ldw	r3,28(sp)
   42340:	6880040c 	andi	r2,r13,16
   42344:	1d800017 	ldw	r22,0(r3)
   42348:	18c00104 	addi	r3,r3,4
   4234c:	d8c00715 	stw	r3,28(sp)
   42350:	1000031e 	bne	r2,zero,42360 <___vfprintf_internal_r+0x904>
   42354:	6880100c 	andi	r2,r13,64
   42358:	10000126 	beq	r2,zero,42360 <___vfprintf_internal_r+0x904>
   4235c:	b5bfffcc 	andi	r22,r22,65535
   42360:	002f883a 	mov	r23,zero
   42364:	0005883a 	mov	r2,zero
   42368:	003f2106 	br	41ff0 <___vfprintf_internal_r+0x594>
   4236c:	d9000517 	ldw	r4,20(sp)
   42370:	00460340 	call	46034 <__sinit>
   42374:	003dd206 	br	41ac0 <___vfprintf_internal_r+0x64>
   42378:	b02fd7fa 	srai	r23,r22,31
   4237c:	b805883a 	mov	r2,r23
   42380:	003ef706 	br	41f60 <___vfprintf_internal_r+0x504>
   42384:	181b883a 	mov	r13,r3
   42388:	b803681e 	bne	r23,zero,4312c <___vfprintf_internal_r+0x16d0>
   4238c:	b08002a8 	cmpgeui	r2,r22,10
   42390:	1003661e 	bne	r2,zero,4312c <___vfprintf_internal_r+0x16d0>
   42394:	b5800c04 	addi	r22,r22,48
   42398:	dd8029c5 	stb	r22,167(sp)
   4239c:	6807883a 	mov	r3,r13
   423a0:	01c00044 	movi	r7,1
   423a4:	dd4029c4 	addi	r21,sp,167
   423a8:	003f3406 	br	4207c <___vfprintf_internal_r+0x620>
   423ac:	d8800717 	ldw	r2,28(sp)
   423b0:	14000017 	ldw	r16,0(r2)
   423b4:	10800104 	addi	r2,r2,4
   423b8:	8002e90e 	bge	r16,zero,42f60 <___vfprintf_internal_r+0x1504>
   423bc:	0421c83a 	sub	r16,zero,r16
   423c0:	d8800715 	stw	r2,28(sp)
   423c4:	a2c00007 	ldb	r11,0(r20)
   423c8:	6b400114 	ori	r13,r13,4
   423cc:	003df306 	br	41b9c <___vfprintf_internal_r+0x140>
   423d0:	a7000007 	ldb	fp,0(r20)
   423d4:	a0c00044 	addi	r3,r20,1
   423d8:	e0800aa0 	cmpeqi	r2,fp,42
   423dc:	10066f1e 	bne	r2,zero,43d9c <___vfprintf_internal_r+0x2340>
   423e0:	e0bff404 	addi	r2,fp,-48
   423e4:	110002b0 	cmpltui	r4,r2,10
   423e8:	1829883a 	mov	r20,r3
   423ec:	0011883a 	mov	r8,zero
   423f0:	203dec26 	beq	r4,zero,41ba4 <___vfprintf_internal_r+0x148>
   423f4:	a7000007 	ldb	fp,0(r20)
   423f8:	420002a4 	muli	r8,r8,10
   423fc:	a5000044 	addi	r20,r20,1
   42400:	4091883a 	add	r8,r8,r2
   42404:	e0bff404 	addi	r2,fp,-48
   42408:	10c002b0 	cmpltui	r3,r2,10
   4240c:	183ff91e 	bne	r3,zero,423f4 <___vfprintf_internal_r+0x998>
   42410:	003de406 	br	41ba4 <___vfprintf_internal_r+0x148>
   42414:	a2c00007 	ldb	r11,0(r20)
   42418:	6b402014 	ori	r13,r13,128
   4241c:	003ddf06 	br	41b9c <___vfprintf_internal_r+0x140>
   42420:	00800ac4 	movi	r2,43
   42424:	a2c00007 	ldb	r11,0(r20)
   42428:	d8801645 	stb	r2,89(sp)
   4242c:	003ddb06 	br	41b9c <___vfprintf_internal_r+0x140>
   42430:	a2c00007 	ldb	r11,0(r20)
   42434:	6b400054 	ori	r13,r13,1
   42438:	003dd806 	br	41b9c <___vfprintf_internal_r+0x140>
   4243c:	d8801647 	ldb	r2,89(sp)
   42440:	a7000003 	ldbu	fp,0(r20)
   42444:	10000c1e 	bne	r2,zero,42478 <___vfprintf_internal_r+0xa1c>
   42448:	e2c03fcc 	andi	r11,fp,255
   4244c:	00800804 	movi	r2,32
   42450:	5ac0201c 	xori	r11,r11,128
   42454:	d8801645 	stb	r2,89(sp)
   42458:	5affe004 	addi	r11,r11,-128
   4245c:	003dcf06 	br	41b9c <___vfprintf_internal_r+0x140>
   42460:	a2c00007 	ldb	r11,0(r20)
   42464:	58801b18 	cmpnei	r2,r11,108
   42468:	1002bb1e 	bne	r2,zero,42f58 <___vfprintf_internal_r+0x14fc>
   4246c:	a7000043 	ldbu	fp,1(r20)
   42470:	6b400814 	ori	r13,r13,32
   42474:	a5000044 	addi	r20,r20,1
   42478:	e2c03fcc 	andi	r11,fp,255
   4247c:	5ac0201c 	xori	r11,r11,128
   42480:	5affe004 	addi	r11,r11,-128
   42484:	003dc506 	br	41b9c <___vfprintf_internal_r+0x140>
   42488:	a2c00007 	ldb	r11,0(r20)
   4248c:	6b400214 	ori	r13,r13,8
   42490:	003dc206 	br	41b9c <___vfprintf_internal_r+0x140>
   42494:	a2c00007 	ldb	r11,0(r20)
   42498:	6b401014 	ori	r13,r13,64
   4249c:	003dbf06 	br	41b9c <___vfprintf_internal_r+0x140>
   424a0:	d8c00717 	ldw	r3,28(sp)
   424a4:	d8001645 	stb	zero,89(sp)
   424a8:	03000044 	movi	r12,1
   424ac:	18800017 	ldw	r2,0(r3)
   424b0:	18c00104 	addi	r3,r3,4
   424b4:	d8c00715 	stw	r3,28(sp)
   424b8:	d8802005 	stb	r2,128(sp)
   424bc:	01c00044 	movi	r7,1
   424c0:	dd402004 	addi	r21,sp,128
   424c4:	003e2a06 	br	41d70 <___vfprintf_internal_r+0x314>
   424c8:	d8800717 	ldw	r2,28(sp)
   424cc:	d8001645 	stb	zero,89(sp)
   424d0:	15400017 	ldw	r21,0(r2)
   424d4:	15800104 	addi	r22,r2,4
   424d8:	a802e226 	beq	r21,zero,43064 <___vfprintf_internal_r+0x1608>
   424dc:	db400815 	stw	r13,32(sp)
   424e0:	40bfffe0 	cmpeqi	r2,r8,-1
   424e4:	10046b1e 	bne	r2,zero,43694 <___vfprintf_internal_r+0x1c38>
   424e8:	400d883a 	mov	r6,r8
   424ec:	000b883a 	mov	r5,zero
   424f0:	a809883a 	mov	r4,r21
   424f4:	da000715 	stw	r8,28(sp)
   424f8:	004748c0 	call	4748c <memchr>
   424fc:	da000717 	ldw	r8,28(sp)
   42500:	db400817 	ldw	r13,32(sp)
   42504:	1005b126 	beq	r2,zero,43bcc <___vfprintf_internal_r+0x2170>
   42508:	154fc83a 	sub	r7,r2,r21
   4250c:	3819883a 	mov	r12,r7
   42510:	dd800715 	stw	r22,28(sp)
   42514:	003e1606 	br	41d70 <___vfprintf_internal_r+0x314>
   42518:	a2c00007 	ldb	r11,0(r20)
   4251c:	6b400814 	ori	r13,r13,32
   42520:	003d9e06 	br	41b9c <___vfprintf_internal_r+0x140>
   42524:	d8c00717 	ldw	r3,28(sp)
   42528:	009e0c04 	movi	r2,30768
   4252c:	01000174 	movhi	r4,5
   42530:	d880168d 	sth	r2,90(sp)
   42534:	18800104 	addi	r2,r3,4
   42538:	d8800715 	stw	r2,28(sp)
   4253c:	20853904 	addi	r2,r4,5348
   42540:	d8800e15 	stw	r2,56(sp)
   42544:	1d800017 	ldw	r22,0(r3)
   42548:	002f883a 	mov	r23,zero
   4254c:	6b400094 	ori	r13,r13,2
   42550:	00800084 	movi	r2,2
   42554:	07001e04 	movi	fp,120
   42558:	003ea506 	br	41ff0 <___vfprintf_internal_r+0x594>
   4255c:	6880080c 	andi	r2,r13,32
   42560:	10028926 	beq	r2,zero,42f88 <___vfprintf_internal_r+0x152c>
   42564:	d9000617 	ldw	r4,24(sp)
   42568:	d8800717 	ldw	r2,28(sp)
   4256c:	2007d7fa 	srai	r3,r4,31
   42570:	10800017 	ldw	r2,0(r2)
   42574:	11000015 	stw	r4,0(r2)
   42578:	10c00115 	stw	r3,4(r2)
   4257c:	d8800717 	ldw	r2,28(sp)
   42580:	10800104 	addi	r2,r2,4
   42584:	d8800715 	stw	r2,28(sp)
   42588:	003d6e06 	br	41b44 <___vfprintf_internal_r+0xe8>
   4258c:	e2c01990 	cmplti	r11,fp,102
   42590:	5800ed1e 	bne	r11,zero,42948 <___vfprintf_internal_r+0xeec>
   42594:	d9000a17 	ldw	r4,40(sp)
   42598:	d9400b17 	ldw	r5,44(sp)
   4259c:	000d883a 	mov	r6,zero
   425a0:	000f883a 	mov	r7,zero
   425a4:	db001015 	stw	r12,64(sp)
   425a8:	d8c00f15 	stw	r3,60(sp)
   425ac:	004d4480 	call	4d448 <__eqdf2>
   425b0:	d8c00f17 	ldw	r3,60(sp)
   425b4:	db001017 	ldw	r12,64(sp)
   425b8:	1001a61e 	bne	r2,zero,42c54 <___vfprintf_internal_r+0x11f8>
   425bc:	d8801e17 	ldw	r2,120(sp)
   425c0:	01000174 	movhi	r4,5
   425c4:	21054004 	addi	r4,r4,5376
   425c8:	10800044 	addi	r2,r2,1
   425cc:	b5800044 	addi	r22,r22,1
   425d0:	91000015 	stw	r4,0(r18)
   425d4:	01000044 	movi	r4,1
   425d8:	d8801e15 	stw	r2,120(sp)
   425dc:	91000115 	stw	r4,4(r18)
   425e0:	dd801f15 	stw	r22,124(sp)
   425e4:	10800208 	cmpgei	r2,r2,8
   425e8:	1003c41e 	bne	r2,zero,434fc <___vfprintf_internal_r+0x1aa0>
   425ec:	94800204 	addi	r18,r18,8
   425f0:	d8801717 	ldw	r2,92(sp)
   425f4:	d9000917 	ldw	r4,36(sp)
   425f8:	11000416 	blt	r2,r4,4260c <___vfprintf_internal_r+0xbb0>
   425fc:	1880004c 	andi	r2,r3,1
   42600:	1000021e 	bne	r2,zero,4260c <___vfprintf_internal_r+0xbb0>
   42604:	b009883a 	mov	r4,r22
   42608:	003e0f06 	br	41e48 <___vfprintf_internal_r+0x3ec>
   4260c:	d8800d17 	ldw	r2,52(sp)
   42610:	d9400c17 	ldw	r5,48(sp)
   42614:	90800015 	stw	r2,0(r18)
   42618:	d8801e17 	ldw	r2,120(sp)
   4261c:	2d89883a 	add	r4,r5,r22
   42620:	91400115 	stw	r5,4(r18)
   42624:	10800044 	addi	r2,r2,1
   42628:	d8801e15 	stw	r2,120(sp)
   4262c:	d9001f15 	stw	r4,124(sp)
   42630:	10800208 	cmpgei	r2,r2,8
   42634:	10026b1e 	bne	r2,zero,42fe4 <___vfprintf_internal_r+0x1588>
   42638:	94800204 	addi	r18,r18,8
   4263c:	d8800917 	ldw	r2,36(sp)
   42640:	15ffffc4 	addi	r23,r2,-1
   42644:	05fe000e 	bge	zero,r23,41e48 <___vfprintf_internal_r+0x3ec>
   42648:	05800174 	movhi	r22,5
   4264c:	b9400450 	cmplti	r5,r23,17
   42650:	d8801e17 	ldw	r2,120(sp)
   42654:	b5854104 	addi	r22,r22,5380
   42658:	2801441e 	bne	r5,zero,42b6c <___vfprintf_internal_r+0x1110>
   4265c:	900d883a 	mov	r6,r18
   42660:	980b883a 	mov	r5,r19
   42664:	1825883a 	mov	r18,r3
   42668:	b02b883a 	mov	r21,r22
   4266c:	8027883a 	mov	r19,r16
   42670:	a02d883a 	mov	r22,r20
   42674:	b821883a 	mov	r16,r23
   42678:	07000404 	movi	fp,16
   4267c:	6029883a 	mov	r20,r12
   42680:	282f883a 	mov	r23,r5
   42684:	3007883a 	mov	r3,r6
   42688:	00000406 	br	4269c <___vfprintf_internal_r+0xc40>
   4268c:	18c00204 	addi	r3,r3,8
   42690:	843ffc04 	addi	r16,r16,-16
   42694:	81400448 	cmpgei	r5,r16,17
   42698:	28012a26 	beq	r5,zero,42b44 <___vfprintf_internal_r+0x10e8>
   4269c:	10800044 	addi	r2,r2,1
   426a0:	21000404 	addi	r4,r4,16
   426a4:	1d400015 	stw	r21,0(r3)
   426a8:	1f000115 	stw	fp,4(r3)
   426ac:	d9001f15 	stw	r4,124(sp)
   426b0:	d8801e15 	stw	r2,120(sp)
   426b4:	11400208 	cmpgei	r5,r2,8
   426b8:	283ff426 	beq	r5,zero,4268c <___vfprintf_internal_r+0xc30>
   426bc:	d9400417 	ldw	r5,16(sp)
   426c0:	d9000517 	ldw	r4,20(sp)
   426c4:	d9801d04 	addi	r6,sp,116
   426c8:	00492500 	call	49250 <__sprint_r>
   426cc:	103dee1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   426d0:	d9001f17 	ldw	r4,124(sp)
   426d4:	d8801e17 	ldw	r2,120(sp)
   426d8:	8807883a 	mov	r3,r17
   426dc:	003fec06 	br	42690 <___vfprintf_internal_r+0xc34>
   426e0:	832fc83a 	sub	r23,r16,r12
   426e4:	05fdca0e 	bge	zero,r23,41e10 <___vfprintf_internal_r+0x3b4>
   426e8:	b009883a 	mov	r4,r22
   426ec:	b9400450 	cmplti	r5,r23,17
   426f0:	05800174 	movhi	r22,5
   426f4:	d8801e17 	ldw	r2,120(sp)
   426f8:	b5854104 	addi	r22,r22,5380
   426fc:	28002e1e 	bne	r5,zero,427b8 <___vfprintf_internal_r+0xd5c>
   42700:	d8c00f15 	stw	r3,60(sp)
   42704:	dc001015 	stw	r16,64(sp)
   42708:	9007883a 	mov	r3,r18
   4270c:	b821883a 	mov	r16,r23
   42710:	b025883a 	mov	r18,r22
   42714:	982f883a 	mov	r23,r19
   42718:	a02d883a 	mov	r22,r20
   4271c:	03400404 	movi	r13,16
   42720:	da001215 	stw	r8,72(sp)
   42724:	6029883a 	mov	r20,r12
   42728:	3827883a 	mov	r19,r7
   4272c:	00000406 	br	42740 <___vfprintf_internal_r+0xce4>
   42730:	843ffc04 	addi	r16,r16,-16
   42734:	81400448 	cmpgei	r5,r16,17
   42738:	18c00204 	addi	r3,r3,8
   4273c:	28001426 	beq	r5,zero,42790 <___vfprintf_internal_r+0xd34>
   42740:	10800044 	addi	r2,r2,1
   42744:	21000404 	addi	r4,r4,16
   42748:	1c800015 	stw	r18,0(r3)
   4274c:	1b400115 	stw	r13,4(r3)
   42750:	d9001f15 	stw	r4,124(sp)
   42754:	d8801e15 	stw	r2,120(sp)
   42758:	11400208 	cmpgei	r5,r2,8
   4275c:	283ff426 	beq	r5,zero,42730 <___vfprintf_internal_r+0xcd4>
   42760:	d9400417 	ldw	r5,16(sp)
   42764:	d9000517 	ldw	r4,20(sp)
   42768:	d9801d04 	addi	r6,sp,116
   4276c:	00492500 	call	49250 <__sprint_r>
   42770:	103dc51e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42774:	843ffc04 	addi	r16,r16,-16
   42778:	81400448 	cmpgei	r5,r16,17
   4277c:	d9001f17 	ldw	r4,124(sp)
   42780:	d8801e17 	ldw	r2,120(sp)
   42784:	8807883a 	mov	r3,r17
   42788:	03400404 	movi	r13,16
   4278c:	283fec1e 	bne	r5,zero,42740 <___vfprintf_internal_r+0xce4>
   42790:	980f883a 	mov	r7,r19
   42794:	a019883a 	mov	r12,r20
   42798:	b827883a 	mov	r19,r23
   4279c:	b029883a 	mov	r20,r22
   427a0:	802f883a 	mov	r23,r16
   427a4:	902d883a 	mov	r22,r18
   427a8:	da001217 	ldw	r8,72(sp)
   427ac:	1825883a 	mov	r18,r3
   427b0:	dc001017 	ldw	r16,64(sp)
   427b4:	d8c00f17 	ldw	r3,60(sp)
   427b8:	10800044 	addi	r2,r2,1
   427bc:	b909883a 	add	r4,r23,r4
   427c0:	d8801e15 	stw	r2,120(sp)
   427c4:	95800015 	stw	r22,0(r18)
   427c8:	95c00115 	stw	r23,4(r18)
   427cc:	d9001f15 	stw	r4,124(sp)
   427d0:	10800208 	cmpgei	r2,r2,8
   427d4:	1003621e 	bne	r2,zero,43560 <___vfprintf_internal_r+0x1b04>
   427d8:	41efc83a 	sub	r23,r8,r7
   427dc:	94800204 	addi	r18,r18,8
   427e0:	202d883a 	mov	r22,r4
   427e4:	05fd8c0e 	bge	zero,r23,41e18 <___vfprintf_internal_r+0x3bc>
   427e8:	b9400450 	cmplti	r5,r23,17
   427ec:	d8801e17 	ldw	r2,120(sp)
   427f0:	b009883a 	mov	r4,r22
   427f4:	2803b11e 	bne	r5,zero,436bc <___vfprintf_internal_r+0x1c60>
   427f8:	d8c00f15 	stw	r3,60(sp)
   427fc:	dc001015 	stw	r16,64(sp)
   42800:	9007883a 	mov	r3,r18
   42804:	b821883a 	mov	r16,r23
   42808:	a02d883a 	mov	r22,r20
   4280c:	982f883a 	mov	r23,r19
   42810:	9825883a 	mov	r18,r19
   42814:	02000404 	movi	r8,16
   42818:	6029883a 	mov	r20,r12
   4281c:	3827883a 	mov	r19,r7
   42820:	00000406 	br	42834 <___vfprintf_internal_r+0xdd8>
   42824:	843ffc04 	addi	r16,r16,-16
   42828:	81400448 	cmpgei	r5,r16,17
   4282c:	18c00204 	addi	r3,r3,8
   42830:	28001426 	beq	r5,zero,42884 <___vfprintf_internal_r+0xe28>
   42834:	10800044 	addi	r2,r2,1
   42838:	21000404 	addi	r4,r4,16
   4283c:	1c800015 	stw	r18,0(r3)
   42840:	1a000115 	stw	r8,4(r3)
   42844:	d9001f15 	stw	r4,124(sp)
   42848:	d8801e15 	stw	r2,120(sp)
   4284c:	11400208 	cmpgei	r5,r2,8
   42850:	283ff426 	beq	r5,zero,42824 <___vfprintf_internal_r+0xdc8>
   42854:	d9400417 	ldw	r5,16(sp)
   42858:	d9000517 	ldw	r4,20(sp)
   4285c:	d9801d04 	addi	r6,sp,116
   42860:	00492500 	call	49250 <__sprint_r>
   42864:	103d881e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42868:	843ffc04 	addi	r16,r16,-16
   4286c:	81400448 	cmpgei	r5,r16,17
   42870:	d9001f17 	ldw	r4,124(sp)
   42874:	d8801e17 	ldw	r2,120(sp)
   42878:	8807883a 	mov	r3,r17
   4287c:	02000404 	movi	r8,16
   42880:	283fec1e 	bne	r5,zero,42834 <___vfprintf_internal_r+0xdd8>
   42884:	980f883a 	mov	r7,r19
   42888:	a019883a 	mov	r12,r20
   4288c:	9027883a 	mov	r19,r18
   42890:	b029883a 	mov	r20,r22
   42894:	1825883a 	mov	r18,r3
   42898:	b82d883a 	mov	r22,r23
   4289c:	d8c00f17 	ldw	r3,60(sp)
   428a0:	802f883a 	mov	r23,r16
   428a4:	dc001017 	ldw	r16,64(sp)
   428a8:	10800044 	addi	r2,r2,1
   428ac:	b909883a 	add	r4,r23,r4
   428b0:	d8801e15 	stw	r2,120(sp)
   428b4:	95800015 	stw	r22,0(r18)
   428b8:	95c00115 	stw	r23,4(r18)
   428bc:	d9001f15 	stw	r4,124(sp)
   428c0:	10800208 	cmpgei	r2,r2,8
   428c4:	10018a1e 	bne	r2,zero,42ef0 <___vfprintf_internal_r+0x1494>
   428c8:	94800204 	addi	r18,r18,8
   428cc:	202d883a 	mov	r22,r4
   428d0:	003d5106 	br	41e18 <___vfprintf_internal_r+0x3bc>
   428d4:	11400060 	cmpeqi	r5,r2,1
   428d8:	181b883a 	mov	r13,r3
   428dc:	002d883a 	mov	r22,zero
   428e0:	283eac1e 	bne	r5,zero,42394 <___vfprintf_internal_r+0x938>
   428e4:	108000a0 	cmpeqi	r2,r2,2
   428e8:	002f883a 	mov	r23,zero
   428ec:	103dcd26 	beq	r2,zero,42024 <___vfprintf_internal_r+0x5c8>
   428f0:	d9400e17 	ldw	r5,56(sp)
   428f4:	882b883a 	mov	r21,r17
   428f8:	b08003cc 	andi	r2,r22,15
   428fc:	b806973a 	slli	r3,r23,28
   42900:	b02cd13a 	srli	r22,r22,4
   42904:	2885883a 	add	r2,r5,r2
   42908:	10800003 	ldbu	r2,0(r2)
   4290c:	b82ed13a 	srli	r23,r23,4
   42910:	1dacb03a 	or	r22,r3,r22
   42914:	a8bfffc5 	stb	r2,-1(r21)
   42918:	b5c4b03a 	or	r2,r22,r23
   4291c:	ad7fffc4 	addi	r21,r21,-1
   42920:	103ff51e 	bne	r2,zero,428f8 <___vfprintf_internal_r+0xe9c>
   42924:	8d4fc83a 	sub	r7,r17,r21
   42928:	6807883a 	mov	r3,r13
   4292c:	003dd306 	br	4207c <___vfprintf_internal_r+0x620>
   42930:	d9400417 	ldw	r5,16(sp)
   42934:	d9000517 	ldw	r4,20(sp)
   42938:	d9801d04 	addi	r6,sp,116
   4293c:	00492500 	call	49250 <__sprint_r>
   42940:	103d4b26 	beq	r2,zero,41e70 <___vfprintf_internal_r+0x414>
   42944:	003d5006 	br	41e88 <___vfprintf_internal_r+0x42c>
   42948:	d8800917 	ldw	r2,36(sp)
   4294c:	95c00204 	addi	r23,r18,8
   42950:	10800088 	cmpgei	r2,r2,2
   42954:	10012126 	beq	r2,zero,42ddc <___vfprintf_internal_r+0x1380>
   42958:	da001e17 	ldw	r8,120(sp)
   4295c:	00800044 	movi	r2,1
   42960:	b5800044 	addi	r22,r22,1
   42964:	42000044 	addi	r8,r8,1
   42968:	90800115 	stw	r2,4(r18)
   4296c:	95400015 	stw	r21,0(r18)
   42970:	dd801f15 	stw	r22,124(sp)
   42974:	da001e15 	stw	r8,120(sp)
   42978:	40800210 	cmplti	r2,r8,8
   4297c:	10022a26 	beq	r2,zero,43228 <___vfprintf_internal_r+0x17cc>
   42980:	d8800c17 	ldw	r2,48(sp)
   42984:	d9000d17 	ldw	r4,52(sp)
   42988:	42000044 	addi	r8,r8,1
   4298c:	15b9883a 	add	fp,r2,r22
   42990:	b8800115 	stw	r2,4(r23)
   42994:	b9000015 	stw	r4,0(r23)
   42998:	df001f15 	stw	fp,124(sp)
   4299c:	da001e15 	stw	r8,120(sp)
   429a0:	40800208 	cmpgei	r2,r8,8
   429a4:	10022d1e 	bne	r2,zero,4325c <___vfprintf_internal_r+0x1800>
   429a8:	bdc00204 	addi	r23,r23,8
   429ac:	d9000a17 	ldw	r4,40(sp)
   429b0:	d9400b17 	ldw	r5,44(sp)
   429b4:	000d883a 	mov	r6,zero
   429b8:	000f883a 	mov	r7,zero
   429bc:	db001015 	stw	r12,64(sp)
   429c0:	d8c00f15 	stw	r3,60(sp)
   429c4:	da000815 	stw	r8,32(sp)
   429c8:	004d4480 	call	4d448 <__eqdf2>
   429cc:	d8c00917 	ldw	r3,36(sp)
   429d0:	da000817 	ldw	r8,32(sp)
   429d4:	db001017 	ldw	r12,64(sp)
   429d8:	1cbfffc4 	addi	r18,r3,-1
   429dc:	d8c00f17 	ldw	r3,60(sp)
   429e0:	10011a26 	beq	r2,zero,42e4c <___vfprintf_internal_r+0x13f0>
   429e4:	aa400044 	addi	r9,r21,1
   429e8:	42000044 	addi	r8,r8,1
   429ec:	e4b9883a 	add	fp,fp,r18
   429f0:	ba400015 	stw	r9,0(r23)
   429f4:	bc800115 	stw	r18,4(r23)
   429f8:	df001f15 	stw	fp,124(sp)
   429fc:	da001e15 	stw	r8,120(sp)
   42a00:	40800208 	cmpgei	r2,r8,8
   42a04:	1002c91e 	bne	r2,zero,4352c <___vfprintf_internal_r+0x1ad0>
   42a08:	bdc00204 	addi	r23,r23,8
   42a0c:	d9401117 	ldw	r5,68(sp)
   42a10:	42000044 	addi	r8,r8,1
   42a14:	d8801904 	addi	r2,sp,100
   42a18:	2f09883a 	add	r4,r5,fp
   42a1c:	da001e15 	stw	r8,120(sp)
   42a20:	b8800015 	stw	r2,0(r23)
   42a24:	b9400115 	stw	r5,4(r23)
   42a28:	d9001f15 	stw	r4,124(sp)
   42a2c:	42000208 	cmpgei	r8,r8,8
   42a30:	40013d1e 	bne	r8,zero,42f28 <___vfprintf_internal_r+0x14cc>
   42a34:	bc800204 	addi	r18,r23,8
   42a38:	003d0306 	br	41e48 <___vfprintf_internal_r+0x3ec>
   42a3c:	05c00174 	movhi	r23,5
   42a40:	b1400450 	cmplti	r5,r22,17
   42a44:	d9001f17 	ldw	r4,124(sp)
   42a48:	d8801e17 	ldw	r2,120(sp)
   42a4c:	bdc54504 	addi	r23,r23,5396
   42a50:	2800321e 	bne	r5,zero,42b1c <___vfprintf_internal_r+0x10c0>
   42a54:	d8c01215 	stw	r3,72(sp)
   42a58:	dc001315 	stw	r16,76(sp)
   42a5c:	9007883a 	mov	r3,r18
   42a60:	b021883a 	mov	r16,r22
   42a64:	b825883a 	mov	r18,r23
   42a68:	a02d883a 	mov	r22,r20
   42a6c:	982f883a 	mov	r23,r19
   42a70:	03c00404 	movi	r15,16
   42a74:	db800f15 	stw	r14,60(sp)
   42a78:	db401015 	stw	r13,64(sp)
   42a7c:	da001415 	stw	r8,80(sp)
   42a80:	6029883a 	mov	r20,r12
   42a84:	3827883a 	mov	r19,r7
   42a88:	00000406 	br	42a9c <___vfprintf_internal_r+0x1040>
   42a8c:	843ffc04 	addi	r16,r16,-16
   42a90:	81400448 	cmpgei	r5,r16,17
   42a94:	18c00204 	addi	r3,r3,8
   42a98:	28001426 	beq	r5,zero,42aec <___vfprintf_internal_r+0x1090>
   42a9c:	10800044 	addi	r2,r2,1
   42aa0:	21000404 	addi	r4,r4,16
   42aa4:	1c800015 	stw	r18,0(r3)
   42aa8:	1bc00115 	stw	r15,4(r3)
   42aac:	d9001f15 	stw	r4,124(sp)
   42ab0:	d8801e15 	stw	r2,120(sp)
   42ab4:	11400208 	cmpgei	r5,r2,8
   42ab8:	283ff426 	beq	r5,zero,42a8c <___vfprintf_internal_r+0x1030>
   42abc:	d9400417 	ldw	r5,16(sp)
   42ac0:	d9000517 	ldw	r4,20(sp)
   42ac4:	d9801d04 	addi	r6,sp,116
   42ac8:	00492500 	call	49250 <__sprint_r>
   42acc:	103cee1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42ad0:	843ffc04 	addi	r16,r16,-16
   42ad4:	81400448 	cmpgei	r5,r16,17
   42ad8:	d9001f17 	ldw	r4,124(sp)
   42adc:	d8801e17 	ldw	r2,120(sp)
   42ae0:	8807883a 	mov	r3,r17
   42ae4:	03c00404 	movi	r15,16
   42ae8:	283fec1e 	bne	r5,zero,42a9c <___vfprintf_internal_r+0x1040>
   42aec:	980f883a 	mov	r7,r19
   42af0:	a019883a 	mov	r12,r20
   42af4:	b827883a 	mov	r19,r23
   42af8:	b029883a 	mov	r20,r22
   42afc:	902f883a 	mov	r23,r18
   42b00:	802d883a 	mov	r22,r16
   42b04:	1825883a 	mov	r18,r3
   42b08:	db800f17 	ldw	r14,60(sp)
   42b0c:	db401017 	ldw	r13,64(sp)
   42b10:	da001417 	ldw	r8,80(sp)
   42b14:	dc001317 	ldw	r16,76(sp)
   42b18:	d8c01217 	ldw	r3,72(sp)
   42b1c:	10800044 	addi	r2,r2,1
   42b20:	b109883a 	add	r4,r22,r4
   42b24:	d8801e15 	stw	r2,120(sp)
   42b28:	95c00015 	stw	r23,0(r18)
   42b2c:	95800115 	stw	r22,4(r18)
   42b30:	d9001f15 	stw	r4,124(sp)
   42b34:	10800208 	cmpgei	r2,r2,8
   42b38:	1001d51e 	bne	r2,zero,43290 <___vfprintf_internal_r+0x1834>
   42b3c:	94800204 	addi	r18,r18,8
   42b40:	003c9506 	br	41d98 <___vfprintf_internal_r+0x33c>
   42b44:	180d883a 	mov	r6,r3
   42b48:	b80b883a 	mov	r5,r23
   42b4c:	9007883a 	mov	r3,r18
   42b50:	a019883a 	mov	r12,r20
   42b54:	802f883a 	mov	r23,r16
   42b58:	b029883a 	mov	r20,r22
   42b5c:	9821883a 	mov	r16,r19
   42b60:	a82d883a 	mov	r22,r21
   42b64:	2827883a 	mov	r19,r5
   42b68:	3025883a 	mov	r18,r6
   42b6c:	10800044 	addi	r2,r2,1
   42b70:	95800015 	stw	r22,0(r18)
   42b74:	95c00115 	stw	r23,4(r18)
   42b78:	25c9883a 	add	r4,r4,r23
   42b7c:	d8801e15 	stw	r2,120(sp)
   42b80:	d9001f15 	stw	r4,124(sp)
   42b84:	10800208 	cmpgei	r2,r2,8
   42b88:	103cae26 	beq	r2,zero,41e44 <___vfprintf_internal_r+0x3e8>
   42b8c:	d9400417 	ldw	r5,16(sp)
   42b90:	d9000517 	ldw	r4,20(sp)
   42b94:	d9801d04 	addi	r6,sp,116
   42b98:	db000f15 	stw	r12,60(sp)
   42b9c:	d8c00815 	stw	r3,32(sp)
   42ba0:	00492500 	call	49250 <__sprint_r>
   42ba4:	103cb81e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42ba8:	d9001f17 	ldw	r4,124(sp)
   42bac:	d8c00817 	ldw	r3,32(sp)
   42bb0:	db000f17 	ldw	r12,60(sp)
   42bb4:	8825883a 	mov	r18,r17
   42bb8:	003ca306 	br	41e48 <___vfprintf_internal_r+0x3ec>
   42bbc:	d9400417 	ldw	r5,16(sp)
   42bc0:	d9000517 	ldw	r4,20(sp)
   42bc4:	d9801d04 	addi	r6,sp,116
   42bc8:	db001515 	stw	r12,84(sp)
   42bcc:	d9c01415 	stw	r7,80(sp)
   42bd0:	da001315 	stw	r8,76(sp)
   42bd4:	d8c01215 	stw	r3,72(sp)
   42bd8:	db401015 	stw	r13,64(sp)
   42bdc:	db800f15 	stw	r14,60(sp)
   42be0:	00492500 	call	49250 <__sprint_r>
   42be4:	103ca81e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42be8:	dd801f17 	ldw	r22,124(sp)
   42bec:	db001517 	ldw	r12,84(sp)
   42bf0:	d9c01417 	ldw	r7,80(sp)
   42bf4:	da001317 	ldw	r8,76(sp)
   42bf8:	d8c01217 	ldw	r3,72(sp)
   42bfc:	db401017 	ldw	r13,64(sp)
   42c00:	db800f17 	ldw	r14,60(sp)
   42c04:	8825883a 	mov	r18,r17
   42c08:	003c7206 	br	41dd4 <___vfprintf_internal_r+0x378>
   42c0c:	d9400417 	ldw	r5,16(sp)
   42c10:	d9000517 	ldw	r4,20(sp)
   42c14:	d9801d04 	addi	r6,sp,116
   42c18:	db001415 	stw	r12,80(sp)
   42c1c:	d9c01315 	stw	r7,76(sp)
   42c20:	da001215 	stw	r8,72(sp)
   42c24:	d8c01015 	stw	r3,64(sp)
   42c28:	db400f15 	stw	r13,60(sp)
   42c2c:	00492500 	call	49250 <__sprint_r>
   42c30:	103c951e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42c34:	dd801f17 	ldw	r22,124(sp)
   42c38:	db001417 	ldw	r12,80(sp)
   42c3c:	d9c01317 	ldw	r7,76(sp)
   42c40:	da001217 	ldw	r8,72(sp)
   42c44:	d8c01017 	ldw	r3,64(sp)
   42c48:	db400f17 	ldw	r13,60(sp)
   42c4c:	8825883a 	mov	r18,r17
   42c50:	003c6d06 	br	41e08 <___vfprintf_internal_r+0x3ac>
   42c54:	ddc01717 	ldw	r23,92(sp)
   42c58:	05c1a00e 	bge	zero,r23,432dc <___vfprintf_internal_r+0x1880>
   42c5c:	d8800917 	ldw	r2,36(sp)
   42c60:	d9000817 	ldw	r4,32(sp)
   42c64:	102f883a 	mov	r23,r2
   42c68:	2080d016 	blt	r4,r2,42fac <___vfprintf_internal_r+0x1550>
   42c6c:	05c00a0e 	bge	zero,r23,42c98 <___vfprintf_internal_r+0x123c>
   42c70:	d8801e17 	ldw	r2,120(sp)
   42c74:	b5ed883a 	add	r22,r22,r23
   42c78:	95400015 	stw	r21,0(r18)
   42c7c:	10800044 	addi	r2,r2,1
   42c80:	d8801e15 	stw	r2,120(sp)
   42c84:	95c00115 	stw	r23,4(r18)
   42c88:	dd801f15 	stw	r22,124(sp)
   42c8c:	10800208 	cmpgei	r2,r2,8
   42c90:	1003921e 	bne	r2,zero,43adc <___vfprintf_internal_r+0x2080>
   42c94:	94800204 	addi	r18,r18,8
   42c98:	b800d016 	blt	r23,zero,42fdc <___vfprintf_internal_r+0x1580>
   42c9c:	d8800817 	ldw	r2,32(sp)
   42ca0:	15efc83a 	sub	r23,r2,r23
   42ca4:	05c0fb16 	blt	zero,r23,43094 <___vfprintf_internal_r+0x1638>
   42ca8:	ddc01717 	ldw	r23,92(sp)
   42cac:	d9000917 	ldw	r4,36(sp)
   42cb0:	b900c10e 	bge	r23,r4,42fb8 <___vfprintf_internal_r+0x155c>
   42cb4:	d8800d17 	ldw	r2,52(sp)
   42cb8:	d9400c17 	ldw	r5,48(sp)
   42cbc:	90800015 	stw	r2,0(r18)
   42cc0:	d8801e17 	ldw	r2,120(sp)
   42cc4:	2d89883a 	add	r4,r5,r22
   42cc8:	91400115 	stw	r5,4(r18)
   42ccc:	10800044 	addi	r2,r2,1
   42cd0:	d8801e15 	stw	r2,120(sp)
   42cd4:	d9001f15 	stw	r4,124(sp)
   42cd8:	10800208 	cmpgei	r2,r2,8
   42cdc:	1003651e 	bne	r2,zero,43a74 <___vfprintf_internal_r+0x2018>
   42ce0:	94800204 	addi	r18,r18,8
   42ce4:	d8800917 	ldw	r2,36(sp)
   42ce8:	d9400817 	ldw	r5,32(sp)
   42cec:	15efc83a 	sub	r23,r2,r23
   42cf0:	1179c83a 	sub	fp,r2,r5
   42cf4:	bf00010e 	bge	r23,fp,42cfc <___vfprintf_internal_r+0x12a0>
   42cf8:	b839883a 	mov	fp,r23
   42cfc:	07000c0e 	bge	zero,fp,42d30 <___vfprintf_internal_r+0x12d4>
   42d00:	d8800817 	ldw	r2,32(sp)
   42d04:	2709883a 	add	r4,r4,fp
   42d08:	97000115 	stw	fp,4(r18)
   42d0c:	a893883a 	add	r9,r21,r2
   42d10:	d8801e17 	ldw	r2,120(sp)
   42d14:	92400015 	stw	r9,0(r18)
   42d18:	d9001f15 	stw	r4,124(sp)
   42d1c:	10800044 	addi	r2,r2,1
   42d20:	d8801e15 	stw	r2,120(sp)
   42d24:	10800208 	cmpgei	r2,r2,8
   42d28:	10037b1e 	bne	r2,zero,43b18 <___vfprintf_internal_r+0x20bc>
   42d2c:	94800204 	addi	r18,r18,8
   42d30:	e005883a 	mov	r2,fp
   42d34:	e000010e 	bge	fp,zero,42d3c <___vfprintf_internal_r+0x12e0>
   42d38:	0005883a 	mov	r2,zero
   42d3c:	b8afc83a 	sub	r23,r23,r2
   42d40:	05fc410e 	bge	zero,r23,41e48 <___vfprintf_internal_r+0x3ec>
   42d44:	05800174 	movhi	r22,5
   42d48:	b9400450 	cmplti	r5,r23,17
   42d4c:	d8801e17 	ldw	r2,120(sp)
   42d50:	b5854104 	addi	r22,r22,5380
   42d54:	283f851e 	bne	r5,zero,42b6c <___vfprintf_internal_r+0x1110>
   42d58:	980b883a 	mov	r5,r19
   42d5c:	d8c00815 	stw	r3,32(sp)
   42d60:	8027883a 	mov	r19,r16
   42d64:	9007883a 	mov	r3,r18
   42d68:	b821883a 	mov	r16,r23
   42d6c:	b025883a 	mov	r18,r22
   42d70:	dd400517 	ldw	r21,20(sp)
   42d74:	a02d883a 	mov	r22,r20
   42d78:	07000404 	movi	fp,16
   42d7c:	6029883a 	mov	r20,r12
   42d80:	282f883a 	mov	r23,r5
   42d84:	00000406 	br	42d98 <___vfprintf_internal_r+0x133c>
   42d88:	18c00204 	addi	r3,r3,8
   42d8c:	843ffc04 	addi	r16,r16,-16
   42d90:	81400448 	cmpgei	r5,r16,17
   42d94:	28034426 	beq	r5,zero,43aa8 <___vfprintf_internal_r+0x204c>
   42d98:	10800044 	addi	r2,r2,1
   42d9c:	21000404 	addi	r4,r4,16
   42da0:	1c800015 	stw	r18,0(r3)
   42da4:	1f000115 	stw	fp,4(r3)
   42da8:	d9001f15 	stw	r4,124(sp)
   42dac:	d8801e15 	stw	r2,120(sp)
   42db0:	11400208 	cmpgei	r5,r2,8
   42db4:	283ff426 	beq	r5,zero,42d88 <___vfprintf_internal_r+0x132c>
   42db8:	d9400417 	ldw	r5,16(sp)
   42dbc:	d9801d04 	addi	r6,sp,116
   42dc0:	a809883a 	mov	r4,r21
   42dc4:	00492500 	call	49250 <__sprint_r>
   42dc8:	103c2f1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42dcc:	d9001f17 	ldw	r4,124(sp)
   42dd0:	d8801e17 	ldw	r2,120(sp)
   42dd4:	8807883a 	mov	r3,r17
   42dd8:	003fec06 	br	42d8c <___vfprintf_internal_r+0x1330>
   42ddc:	1880004c 	andi	r2,r3,1
   42de0:	103edd1e 	bne	r2,zero,42958 <___vfprintf_internal_r+0xefc>
   42de4:	da001e17 	ldw	r8,120(sp)
   42de8:	00800044 	movi	r2,1
   42dec:	b7000044 	addi	fp,r22,1
   42df0:	42000044 	addi	r8,r8,1
   42df4:	90800115 	stw	r2,4(r18)
   42df8:	95400015 	stw	r21,0(r18)
   42dfc:	df001f15 	stw	fp,124(sp)
   42e00:	da001e15 	stw	r8,120(sp)
   42e04:	40800210 	cmplti	r2,r8,8
   42e08:	103f001e 	bne	r2,zero,42a0c <___vfprintf_internal_r+0xfb0>
   42e0c:	d9400417 	ldw	r5,16(sp)
   42e10:	d9000517 	ldw	r4,20(sp)
   42e14:	d9801d04 	addi	r6,sp,116
   42e18:	db000f15 	stw	r12,60(sp)
   42e1c:	d8c00815 	stw	r3,32(sp)
   42e20:	00492500 	call	49250 <__sprint_r>
   42e24:	103c181e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42e28:	df001f17 	ldw	fp,124(sp)
   42e2c:	da001e17 	ldw	r8,120(sp)
   42e30:	db000f17 	ldw	r12,60(sp)
   42e34:	d8c00817 	ldw	r3,32(sp)
   42e38:	882f883a 	mov	r23,r17
   42e3c:	003ef306 	br	42a0c <___vfprintf_internal_r+0xfb0>
   42e40:	000f883a 	mov	r7,zero
   42e44:	882b883a 	mov	r21,r17
   42e48:	003c8c06 	br	4207c <___vfprintf_internal_r+0x620>
   42e4c:	d8800917 	ldw	r2,36(sp)
   42e50:	10800090 	cmplti	r2,r2,2
   42e54:	103eed1e 	bne	r2,zero,42a0c <___vfprintf_internal_r+0xfb0>
   42e58:	d8800917 	ldw	r2,36(sp)
   42e5c:	05800174 	movhi	r22,5
   42e60:	b5854104 	addi	r22,r22,5380
   42e64:	10800490 	cmplti	r2,r2,18
   42e68:	1002061e 	bne	r2,zero,43684 <___vfprintf_internal_r+0x1c28>
   42e6c:	9809883a 	mov	r4,r19
   42e70:	b805883a 	mov	r2,r23
   42e74:	1827883a 	mov	r19,r3
   42e78:	a02f883a 	mov	r23,r20
   42e7c:	e007883a 	mov	r3,fp
   42e80:	8029883a 	mov	r20,r16
   42e84:	05400404 	movi	r21,16
   42e88:	9021883a 	mov	r16,r18
   42e8c:	2039883a 	mov	fp,r4
   42e90:	b025883a 	mov	r18,r22
   42e94:	602d883a 	mov	r22,r12
   42e98:	00000406 	br	42eac <___vfprintf_internal_r+0x1450>
   42e9c:	10800204 	addi	r2,r2,8
   42ea0:	843ffc04 	addi	r16,r16,-16
   42ea4:	81000448 	cmpgei	r4,r16,17
   42ea8:	2001ec26 	beq	r4,zero,4365c <___vfprintf_internal_r+0x1c00>
   42eac:	42000044 	addi	r8,r8,1
   42eb0:	18c00404 	addi	r3,r3,16
   42eb4:	14800015 	stw	r18,0(r2)
   42eb8:	15400115 	stw	r21,4(r2)
   42ebc:	d8c01f15 	stw	r3,124(sp)
   42ec0:	da001e15 	stw	r8,120(sp)
   42ec4:	41000208 	cmpgei	r4,r8,8
   42ec8:	203ff426 	beq	r4,zero,42e9c <___vfprintf_internal_r+0x1440>
   42ecc:	d9400417 	ldw	r5,16(sp)
   42ed0:	d9000517 	ldw	r4,20(sp)
   42ed4:	d9801d04 	addi	r6,sp,116
   42ed8:	00492500 	call	49250 <__sprint_r>
   42edc:	103bea1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42ee0:	d8c01f17 	ldw	r3,124(sp)
   42ee4:	da001e17 	ldw	r8,120(sp)
   42ee8:	8805883a 	mov	r2,r17
   42eec:	003fec06 	br	42ea0 <___vfprintf_internal_r+0x1444>
   42ef0:	d9400417 	ldw	r5,16(sp)
   42ef4:	d9000517 	ldw	r4,20(sp)
   42ef8:	d9801d04 	addi	r6,sp,116
   42efc:	db001215 	stw	r12,72(sp)
   42f00:	d9c01015 	stw	r7,64(sp)
   42f04:	d8c00f15 	stw	r3,60(sp)
   42f08:	00492500 	call	49250 <__sprint_r>
   42f0c:	103bde1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42f10:	dd801f17 	ldw	r22,124(sp)
   42f14:	db001217 	ldw	r12,72(sp)
   42f18:	d9c01017 	ldw	r7,64(sp)
   42f1c:	d8c00f17 	ldw	r3,60(sp)
   42f20:	8825883a 	mov	r18,r17
   42f24:	003bbc06 	br	41e18 <___vfprintf_internal_r+0x3bc>
   42f28:	d9400417 	ldw	r5,16(sp)
   42f2c:	d9000517 	ldw	r4,20(sp)
   42f30:	d9801d04 	addi	r6,sp,116
   42f34:	db000f15 	stw	r12,60(sp)
   42f38:	d8c00815 	stw	r3,32(sp)
   42f3c:	00492500 	call	49250 <__sprint_r>
   42f40:	103bd11e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   42f44:	d9001f17 	ldw	r4,124(sp)
   42f48:	db000f17 	ldw	r12,60(sp)
   42f4c:	d8c00817 	ldw	r3,32(sp)
   42f50:	8825883a 	mov	r18,r17
   42f54:	003bbc06 	br	41e48 <___vfprintf_internal_r+0x3ec>
   42f58:	6b400414 	ori	r13,r13,16
   42f5c:	003b0f06 	br	41b9c <___vfprintf_internal_r+0x140>
   42f60:	a2c00007 	ldb	r11,0(r20)
   42f64:	d8800715 	stw	r2,28(sp)
   42f68:	003b0c06 	br	41b9c <___vfprintf_internal_r+0x140>
   42f6c:	882b883a 	mov	r21,r17
   42f70:	003c4206 	br	4207c <___vfprintf_internal_r+0x620>
   42f74:	18800017 	ldw	r2,0(r3)
   42f78:	d8800a15 	stw	r2,40(sp)
   42f7c:	18800117 	ldw	r2,4(r3)
   42f80:	d8800b15 	stw	r2,44(sp)
   42f84:	003c9e06 	br	42200 <___vfprintf_internal_r+0x7a4>
   42f88:	6880040c 	andi	r2,r13,16
   42f8c:	1000921e 	bne	r2,zero,431d8 <___vfprintf_internal_r+0x177c>
   42f90:	6b40100c 	andi	r13,r13,64
   42f94:	68009026 	beq	r13,zero,431d8 <___vfprintf_internal_r+0x177c>
   42f98:	d8800717 	ldw	r2,28(sp)
   42f9c:	d8c00617 	ldw	r3,24(sp)
   42fa0:	10800017 	ldw	r2,0(r2)
   42fa4:	10c0000d 	sth	r3,0(r2)
   42fa8:	003d7406 	br	4257c <___vfprintf_internal_r+0xb20>
   42fac:	202f883a 	mov	r23,r4
   42fb0:	05ff2f16 	blt	zero,r23,42c70 <___vfprintf_internal_r+0x1214>
   42fb4:	003f3806 	br	42c98 <___vfprintf_internal_r+0x123c>
   42fb8:	1880004c 	andi	r2,r3,1
   42fbc:	103f3d1e 	bne	r2,zero,42cb4 <___vfprintf_internal_r+0x1258>
   42fc0:	d8800817 	ldw	r2,32(sp)
   42fc4:	25efc83a 	sub	r23,r4,r23
   42fc8:	20b9c83a 	sub	fp,r4,r2
   42fcc:	b009883a 	mov	r4,r22
   42fd0:	bf3f570e 	bge	r23,fp,42d30 <___vfprintf_internal_r+0x12d4>
   42fd4:	b839883a 	mov	fp,r23
   42fd8:	003f5506 	br	42d30 <___vfprintf_internal_r+0x12d4>
   42fdc:	002f883a 	mov	r23,zero
   42fe0:	003f2e06 	br	42c9c <___vfprintf_internal_r+0x1240>
   42fe4:	d9400417 	ldw	r5,16(sp)
   42fe8:	d9000517 	ldw	r4,20(sp)
   42fec:	d9801d04 	addi	r6,sp,116
   42ff0:	db000f15 	stw	r12,60(sp)
   42ff4:	d8c00815 	stw	r3,32(sp)
   42ff8:	00492500 	call	49250 <__sprint_r>
   42ffc:	103ba21e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43000:	d9001f17 	ldw	r4,124(sp)
   43004:	db000f17 	ldw	r12,60(sp)
   43008:	d8c00817 	ldw	r3,32(sp)
   4300c:	8825883a 	mov	r18,r17
   43010:	003d8a06 	br	4263c <___vfprintf_internal_r+0xbe0>
   43014:	00800174 	movhi	r2,5
   43018:	10853404 	addi	r2,r2,5328
   4301c:	d8800e15 	stw	r2,56(sp)
   43020:	6880080c 	andi	r2,r13,32
   43024:	10007326 	beq	r2,zero,431f4 <___vfprintf_internal_r+0x1798>
   43028:	d8800717 	ldw	r2,28(sp)
   4302c:	15800017 	ldw	r22,0(r2)
   43030:	15c00117 	ldw	r23,4(r2)
   43034:	10800204 	addi	r2,r2,8
   43038:	d8800715 	stw	r2,28(sp)
   4303c:	6880004c 	andi	r2,r13,1
   43040:	10006a26 	beq	r2,zero,431ec <___vfprintf_internal_r+0x1790>
   43044:	b5c4b03a 	or	r2,r22,r23
   43048:	10006826 	beq	r2,zero,431ec <___vfprintf_internal_r+0x1790>
   4304c:	00800c04 	movi	r2,48
   43050:	d8801685 	stb	r2,90(sp)
   43054:	df0016c5 	stb	fp,91(sp)
   43058:	6b400094 	ori	r13,r13,2
   4305c:	00800084 	movi	r2,2
   43060:	003be306 	br	41ff0 <___vfprintf_internal_r+0x594>
   43064:	408001f0 	cmpltui	r2,r8,7
   43068:	400f883a 	mov	r7,r8
   4306c:	1001bf26 	beq	r2,zero,4376c <___vfprintf_internal_r+0x1d10>
   43070:	05400174 	movhi	r21,5
   43074:	3819883a 	mov	r12,r7
   43078:	dd800715 	stw	r22,28(sp)
   4307c:	ad453e04 	addi	r21,r21,5368
   43080:	003b3b06 	br	41d70 <___vfprintf_internal_r+0x314>
   43084:	00800174 	movhi	r2,5
   43088:	10853904 	addi	r2,r2,5348
   4308c:	d8800e15 	stw	r2,56(sp)
   43090:	003fe306 	br	43020 <___vfprintf_internal_r+0x15c4>
   43094:	b009883a 	mov	r4,r22
   43098:	b9400450 	cmplti	r5,r23,17
   4309c:	05800174 	movhi	r22,5
   430a0:	d8801e17 	ldw	r2,120(sp)
   430a4:	b5854104 	addi	r22,r22,5380
   430a8:	2801901e 	bne	r5,zero,436ec <___vfprintf_internal_r+0x1c90>
   430ac:	980b883a 	mov	r5,r19
   430b0:	d8c00f15 	stw	r3,60(sp)
   430b4:	8027883a 	mov	r19,r16
   430b8:	9007883a 	mov	r3,r18
   430bc:	b821883a 	mov	r16,r23
   430c0:	b025883a 	mov	r18,r22
   430c4:	07000404 	movi	fp,16
   430c8:	a02d883a 	mov	r22,r20
   430cc:	282f883a 	mov	r23,r5
   430d0:	6029883a 	mov	r20,r12
   430d4:	00000406 	br	430e8 <___vfprintf_internal_r+0x168c>
   430d8:	18c00204 	addi	r3,r3,8
   430dc:	843ffc04 	addi	r16,r16,-16
   430e0:	81400448 	cmpgei	r5,r16,17
   430e4:	28017826 	beq	r5,zero,436c8 <___vfprintf_internal_r+0x1c6c>
   430e8:	10800044 	addi	r2,r2,1
   430ec:	21000404 	addi	r4,r4,16
   430f0:	1c800015 	stw	r18,0(r3)
   430f4:	1f000115 	stw	fp,4(r3)
   430f8:	d9001f15 	stw	r4,124(sp)
   430fc:	d8801e15 	stw	r2,120(sp)
   43100:	11400208 	cmpgei	r5,r2,8
   43104:	283ff426 	beq	r5,zero,430d8 <___vfprintf_internal_r+0x167c>
   43108:	d9400417 	ldw	r5,16(sp)
   4310c:	d9000517 	ldw	r4,20(sp)
   43110:	d9801d04 	addi	r6,sp,116
   43114:	00492500 	call	49250 <__sprint_r>
   43118:	103b5b1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   4311c:	d9001f17 	ldw	r4,124(sp)
   43120:	d8801e17 	ldw	r2,120(sp)
   43124:	8807883a 	mov	r3,r17
   43128:	003fec06 	br	430dc <___vfprintf_internal_r+0x1680>
   4312c:	b007883a 	mov	r3,r22
   43130:	9805883a 	mov	r2,r19
   43134:	dc000f15 	stw	r16,60(sp)
   43138:	a02d883a 	mov	r22,r20
   4313c:	b827883a 	mov	r19,r23
   43140:	9029883a 	mov	r20,r18
   43144:	db400815 	stw	r13,32(sp)
   43148:	8821883a 	mov	r16,r17
   4314c:	da001015 	stw	r8,64(sp)
   43150:	202b883a 	mov	r21,r4
   43154:	102f883a 	mov	r23,r2
   43158:	1825883a 	mov	r18,r3
   4315c:	9009883a 	mov	r4,r18
   43160:	980b883a 	mov	r5,r19
   43164:	01800284 	movi	r6,10
   43168:	000f883a 	mov	r7,zero
   4316c:	004bc380 	call	4bc38 <__umoddi3>
   43170:	10800c04 	addi	r2,r2,48
   43174:	9009883a 	mov	r4,r18
   43178:	980b883a 	mov	r5,r19
   4317c:	01800284 	movi	r6,10
   43180:	000f883a 	mov	r7,zero
   43184:	80bfffc5 	stb	r2,-1(r16)
   43188:	004b6e80 	call	4b6e8 <__udivdi3>
   4318c:	980d883a 	mov	r6,r19
   43190:	900f883a 	mov	r7,r18
   43194:	843fffc4 	addi	r16,r16,-1
   43198:	1025883a 	mov	r18,r2
   4319c:	1827883a 	mov	r19,r3
   431a0:	303fee1e 	bne	r6,zero,4315c <___vfprintf_internal_r+0x1700>
   431a4:	39c002a8 	cmpgeui	r7,r7,10
   431a8:	383fec1e 	bne	r7,zero,4315c <___vfprintf_internal_r+0x1700>
   431ac:	db400817 	ldw	r13,32(sp)
   431b0:	a809883a 	mov	r4,r21
   431b4:	802b883a 	mov	r21,r16
   431b8:	a025883a 	mov	r18,r20
   431bc:	da001017 	ldw	r8,64(sp)
   431c0:	dc000f17 	ldw	r16,60(sp)
   431c4:	b029883a 	mov	r20,r22
   431c8:	b827883a 	mov	r19,r23
   431cc:	8d4fc83a 	sub	r7,r17,r21
   431d0:	6807883a 	mov	r3,r13
   431d4:	003ba906 	br	4207c <___vfprintf_internal_r+0x620>
   431d8:	d8800717 	ldw	r2,28(sp)
   431dc:	d8c00617 	ldw	r3,24(sp)
   431e0:	10800017 	ldw	r2,0(r2)
   431e4:	10c00015 	stw	r3,0(r2)
   431e8:	003ce406 	br	4257c <___vfprintf_internal_r+0xb20>
   431ec:	00800084 	movi	r2,2
   431f0:	003b7f06 	br	41ff0 <___vfprintf_internal_r+0x594>
   431f4:	d8c00717 	ldw	r3,28(sp)
   431f8:	6880040c 	andi	r2,r13,16
   431fc:	1d800017 	ldw	r22,0(r3)
   43200:	18c00104 	addi	r3,r3,4
   43204:	d8c00715 	stw	r3,28(sp)
   43208:	1000051e 	bne	r2,zero,43220 <___vfprintf_internal_r+0x17c4>
   4320c:	6880100c 	andi	r2,r13,64
   43210:	10000326 	beq	r2,zero,43220 <___vfprintf_internal_r+0x17c4>
   43214:	b5bfffcc 	andi	r22,r22,65535
   43218:	002f883a 	mov	r23,zero
   4321c:	003f8706 	br	4303c <___vfprintf_internal_r+0x15e0>
   43220:	002f883a 	mov	r23,zero
   43224:	003f8506 	br	4303c <___vfprintf_internal_r+0x15e0>
   43228:	d9400417 	ldw	r5,16(sp)
   4322c:	d9000517 	ldw	r4,20(sp)
   43230:	d9801d04 	addi	r6,sp,116
   43234:	db000f15 	stw	r12,60(sp)
   43238:	d8c00815 	stw	r3,32(sp)
   4323c:	00492500 	call	49250 <__sprint_r>
   43240:	103b111e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43244:	dd801f17 	ldw	r22,124(sp)
   43248:	da001e17 	ldw	r8,120(sp)
   4324c:	db000f17 	ldw	r12,60(sp)
   43250:	d8c00817 	ldw	r3,32(sp)
   43254:	882f883a 	mov	r23,r17
   43258:	003dc906 	br	42980 <___vfprintf_internal_r+0xf24>
   4325c:	d9400417 	ldw	r5,16(sp)
   43260:	d9000517 	ldw	r4,20(sp)
   43264:	d9801d04 	addi	r6,sp,116
   43268:	db000f15 	stw	r12,60(sp)
   4326c:	d8c00815 	stw	r3,32(sp)
   43270:	00492500 	call	49250 <__sprint_r>
   43274:	103b041e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43278:	df001f17 	ldw	fp,124(sp)
   4327c:	da001e17 	ldw	r8,120(sp)
   43280:	db000f17 	ldw	r12,60(sp)
   43284:	d8c00817 	ldw	r3,32(sp)
   43288:	882f883a 	mov	r23,r17
   4328c:	003dc706 	br	429ac <___vfprintf_internal_r+0xf50>
   43290:	d9400417 	ldw	r5,16(sp)
   43294:	d9000517 	ldw	r4,20(sp)
   43298:	d9801d04 	addi	r6,sp,116
   4329c:	db001515 	stw	r12,84(sp)
   432a0:	d9c01415 	stw	r7,80(sp)
   432a4:	da001315 	stw	r8,76(sp)
   432a8:	d8c01215 	stw	r3,72(sp)
   432ac:	db401015 	stw	r13,64(sp)
   432b0:	db800f15 	stw	r14,60(sp)
   432b4:	00492500 	call	49250 <__sprint_r>
   432b8:	103af31e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   432bc:	db001517 	ldw	r12,84(sp)
   432c0:	d9c01417 	ldw	r7,80(sp)
   432c4:	da001317 	ldw	r8,76(sp)
   432c8:	d8c01217 	ldw	r3,72(sp)
   432cc:	db401017 	ldw	r13,64(sp)
   432d0:	db800f17 	ldw	r14,60(sp)
   432d4:	8825883a 	mov	r18,r17
   432d8:	003aaf06 	br	41d98 <___vfprintf_internal_r+0x33c>
   432dc:	d8801e17 	ldw	r2,120(sp)
   432e0:	01400174 	movhi	r5,5
   432e4:	29454004 	addi	r5,r5,5376
   432e8:	10800044 	addi	r2,r2,1
   432ec:	b1000044 	addi	r4,r22,1
   432f0:	91400015 	stw	r5,0(r18)
   432f4:	01400044 	movi	r5,1
   432f8:	d8801e15 	stw	r2,120(sp)
   432fc:	91400115 	stw	r5,4(r18)
   43300:	d9001f15 	stw	r4,124(sp)
   43304:	10800208 	cmpgei	r2,r2,8
   43308:	1001071e 	bne	r2,zero,43728 <___vfprintf_internal_r+0x1ccc>
   4330c:	94800204 	addi	r18,r18,8
   43310:	b800a31e 	bne	r23,zero,435a0 <___vfprintf_internal_r+0x1b44>
   43314:	d9400917 	ldw	r5,36(sp)
   43318:	1880004c 	andi	r2,r3,1
   4331c:	1144b03a 	or	r2,r2,r5
   43320:	103ac926 	beq	r2,zero,41e48 <___vfprintf_internal_r+0x3ec>
   43324:	d8800d17 	ldw	r2,52(sp)
   43328:	d9400c17 	ldw	r5,48(sp)
   4332c:	90800015 	stw	r2,0(r18)
   43330:	d8801e17 	ldw	r2,120(sp)
   43334:	2909883a 	add	r4,r5,r4
   43338:	91400115 	stw	r5,4(r18)
   4333c:	10800044 	addi	r2,r2,1
   43340:	d9001f15 	stw	r4,124(sp)
   43344:	d8801e15 	stw	r2,120(sp)
   43348:	11400208 	cmpgei	r5,r2,8
   4334c:	28010e1e 	bne	r5,zero,43788 <___vfprintf_internal_r+0x1d2c>
   43350:	94800204 	addi	r18,r18,8
   43354:	d9400917 	ldw	r5,36(sp)
   43358:	10800044 	addi	r2,r2,1
   4335c:	d8801e15 	stw	r2,120(sp)
   43360:	2909883a 	add	r4,r5,r4
   43364:	95400015 	stw	r21,0(r18)
   43368:	91400115 	stw	r5,4(r18)
   4336c:	d9001f15 	stw	r4,124(sp)
   43370:	10800208 	cmpgei	r2,r2,8
   43374:	103ab326 	beq	r2,zero,41e44 <___vfprintf_internal_r+0x3e8>
   43378:	003e0406 	br	42b8c <___vfprintf_internal_r+0x1130>
   4337c:	d9000a17 	ldw	r4,40(sp)
   43380:	d9400b17 	ldw	r5,44(sp)
   43384:	da000815 	stw	r8,32(sp)
   43388:	200d883a 	mov	r6,r4
   4338c:	280f883a 	mov	r7,r5
   43390:	db400715 	stw	r13,28(sp)
   43394:	004e7440 	call	4e744 <__unorddf2>
   43398:	db400717 	ldw	r13,28(sp)
   4339c:	da000817 	ldw	r8,32(sp)
   433a0:	10024c1e 	bne	r2,zero,43cd4 <___vfprintf_internal_r+0x2278>
   433a4:	057ff7c4 	movi	r21,-33
   433a8:	40bfffe0 	cmpeqi	r2,r8,-1
   433ac:	e56c703a 	and	r22,fp,r21
   433b0:	1001d71e 	bne	r2,zero,43b10 <___vfprintf_internal_r+0x20b4>
   433b4:	b08011d8 	cmpnei	r2,r22,71
   433b8:	1001c526 	beq	r2,zero,43ad0 <___vfprintf_internal_r+0x2074>
   433bc:	d8800b17 	ldw	r2,44(sp)
   433c0:	68c04014 	ori	r3,r13,256
   433c4:	1000e516 	blt	r2,zero,4375c <___vfprintf_internal_r+0x1d00>
   433c8:	ddc00b17 	ldw	r23,44(sp)
   433cc:	d8000705 	stb	zero,28(sp)
   433d0:	e08019a0 	cmpeqi	r2,fp,102
   433d4:	d8801015 	stw	r2,64(sp)
   433d8:	10017c1e 	bne	r2,zero,439cc <___vfprintf_internal_r+0x1f70>
   433dc:	b0801158 	cmpnei	r2,r22,69
   433e0:	1000f826 	beq	r2,zero,437c4 <___vfprintf_internal_r+0x1d68>
   433e4:	d8801b04 	addi	r2,sp,108
   433e8:	d9000517 	ldw	r4,20(sp)
   433ec:	d8800315 	stw	r2,12(sp)
   433f0:	d9400a17 	ldw	r5,40(sp)
   433f4:	d8801804 	addi	r2,sp,96
   433f8:	d8800215 	stw	r2,8(sp)
   433fc:	d8801704 	addi	r2,sp,92
   43400:	da000015 	stw	r8,0(sp)
   43404:	d8800115 	stw	r2,4(sp)
   43408:	01c00084 	movi	r7,2
   4340c:	b80d883a 	mov	r6,r23
   43410:	d8c01215 	stw	r3,72(sp)
   43414:	db400915 	stw	r13,36(sp)
   43418:	da000815 	stw	r8,32(sp)
   4341c:	004422c0 	call	4422c <_dtoa_r>
   43420:	e10019e0 	cmpeqi	r4,fp,103
   43424:	da000817 	ldw	r8,32(sp)
   43428:	db400917 	ldw	r13,36(sp)
   4342c:	d8c01217 	ldw	r3,72(sp)
   43430:	102b883a 	mov	r21,r2
   43434:	20010b26 	beq	r4,zero,43864 <___vfprintf_internal_r+0x1e08>
   43438:	6880004c 	andi	r2,r13,1
   4343c:	10010b26 	beq	r2,zero,4386c <___vfprintf_internal_r+0x1e10>
   43440:	aa19883a 	add	r12,r21,r8
   43444:	d9000a17 	ldw	r4,40(sp)
   43448:	000d883a 	mov	r6,zero
   4344c:	000f883a 	mov	r7,zero
   43450:	b80b883a 	mov	r5,r23
   43454:	db001315 	stw	r12,76(sp)
   43458:	da001215 	stw	r8,72(sp)
   4345c:	d8c00915 	stw	r3,36(sp)
   43460:	db400815 	stw	r13,32(sp)
   43464:	004d4480 	call	4d448 <__eqdf2>
   43468:	db400817 	ldw	r13,32(sp)
   4346c:	d8c00917 	ldw	r3,36(sp)
   43470:	da001217 	ldw	r8,72(sp)
   43474:	db001317 	ldw	r12,76(sp)
   43478:	10023326 	beq	r2,zero,43d48 <___vfprintf_internal_r+0x22ec>
   4347c:	d8801b17 	ldw	r2,108(sp)
   43480:	1300062e 	bgeu	r2,r12,4349c <___vfprintf_internal_r+0x1a40>
   43484:	01400c04 	movi	r5,48
   43488:	11000044 	addi	r4,r2,1
   4348c:	d9001b15 	stw	r4,108(sp)
   43490:	11400005 	stb	r5,0(r2)
   43494:	d8801b17 	ldw	r2,108(sp)
   43498:	133ffb36 	bltu	r2,r12,43488 <___vfprintf_internal_r+0x1a2c>
   4349c:	d9c01717 	ldw	r7,92(sp)
   434a0:	1545c83a 	sub	r2,r2,r21
   434a4:	b10011d8 	cmpnei	r4,r22,71
   434a8:	d8800915 	stw	r2,36(sp)
   434ac:	d9c00815 	stw	r7,32(sp)
   434b0:	2000f226 	beq	r4,zero,4387c <___vfprintf_internal_r+0x1e20>
   434b4:	d8801017 	ldw	r2,64(sp)
   434b8:	10021d26 	beq	r2,zero,43d30 <___vfprintf_internal_r+0x22d4>
   434bc:	d9000817 	ldw	r4,32(sp)
   434c0:	6880004c 	andi	r2,r13,1
   434c4:	1204b03a 	or	r2,r2,r8
   434c8:	0102430e 	bge	zero,r4,43dd8 <___vfprintf_internal_r+0x237c>
   434cc:	1002221e 	bne	r2,zero,43d58 <___vfprintf_internal_r+0x22fc>
   434d0:	d9c00817 	ldw	r7,32(sp)
   434d4:	3819883a 	mov	r12,r7
   434d8:	07001984 	movi	fp,102
   434dc:	ddc00707 	ldb	r23,28(sp)
   434e0:	b8013526 	beq	r23,zero,439b8 <___vfprintf_internal_r+0x1f5c>
   434e4:	00800b44 	movi	r2,45
   434e8:	d8801645 	stb	r2,89(sp)
   434ec:	d8800f17 	ldw	r2,60(sp)
   434f0:	0011883a 	mov	r8,zero
   434f4:	d8800715 	stw	r2,28(sp)
   434f8:	003ae806 	br	4209c <___vfprintf_internal_r+0x640>
   434fc:	d9400417 	ldw	r5,16(sp)
   43500:	d9000517 	ldw	r4,20(sp)
   43504:	d9801d04 	addi	r6,sp,116
   43508:	db000f15 	stw	r12,60(sp)
   4350c:	d8c00815 	stw	r3,32(sp)
   43510:	00492500 	call	49250 <__sprint_r>
   43514:	103a5c1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43518:	dd801f17 	ldw	r22,124(sp)
   4351c:	db000f17 	ldw	r12,60(sp)
   43520:	d8c00817 	ldw	r3,32(sp)
   43524:	8825883a 	mov	r18,r17
   43528:	003c3106 	br	425f0 <___vfprintf_internal_r+0xb94>
   4352c:	d9400417 	ldw	r5,16(sp)
   43530:	d9000517 	ldw	r4,20(sp)
   43534:	d9801d04 	addi	r6,sp,116
   43538:	db000f15 	stw	r12,60(sp)
   4353c:	d8c00815 	stw	r3,32(sp)
   43540:	00492500 	call	49250 <__sprint_r>
   43544:	103a501e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43548:	df001f17 	ldw	fp,124(sp)
   4354c:	da001e17 	ldw	r8,120(sp)
   43550:	d8c00817 	ldw	r3,32(sp)
   43554:	db000f17 	ldw	r12,60(sp)
   43558:	882f883a 	mov	r23,r17
   4355c:	003d2b06 	br	42a0c <___vfprintf_internal_r+0xfb0>
   43560:	d9400417 	ldw	r5,16(sp)
   43564:	d9000517 	ldw	r4,20(sp)
   43568:	d9801d04 	addi	r6,sp,116
   4356c:	db001315 	stw	r12,76(sp)
   43570:	d9c01215 	stw	r7,72(sp)
   43574:	da001015 	stw	r8,64(sp)
   43578:	d8c00f15 	stw	r3,60(sp)
   4357c:	00492500 	call	49250 <__sprint_r>
   43580:	103a411e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43584:	dd801f17 	ldw	r22,124(sp)
   43588:	db001317 	ldw	r12,76(sp)
   4358c:	d9c01217 	ldw	r7,72(sp)
   43590:	da001017 	ldw	r8,64(sp)
   43594:	d8c00f17 	ldw	r3,60(sp)
   43598:	8825883a 	mov	r18,r17
   4359c:	003a1c06 	br	41e10 <___vfprintf_internal_r+0x3b4>
   435a0:	d8800d17 	ldw	r2,52(sp)
   435a4:	d9400c17 	ldw	r5,48(sp)
   435a8:	90800015 	stw	r2,0(r18)
   435ac:	d8801e17 	ldw	r2,120(sp)
   435b0:	2909883a 	add	r4,r5,r4
   435b4:	91400115 	stw	r5,4(r18)
   435b8:	10800044 	addi	r2,r2,1
   435bc:	d9001f15 	stw	r4,124(sp)
   435c0:	d8801e15 	stw	r2,120(sp)
   435c4:	11400208 	cmpgei	r5,r2,8
   435c8:	28006f1e 	bne	r5,zero,43788 <___vfprintf_internal_r+0x1d2c>
   435cc:	94800204 	addi	r18,r18,8
   435d0:	b83f600e 	bge	r23,zero,43354 <___vfprintf_internal_r+0x18f8>
   435d4:	05800174 	movhi	r22,5
   435d8:	b97ffc08 	cmpgei	r5,r23,-16
   435dc:	b5854104 	addi	r22,r22,5380
   435e0:	05efc83a 	sub	r23,zero,r23
   435e4:	2801941e 	bne	r5,zero,43c38 <___vfprintf_internal_r+0x21dc>
   435e8:	d8c00815 	stw	r3,32(sp)
   435ec:	07000404 	movi	fp,16
   435f0:	9007883a 	mov	r3,r18
   435f4:	8025883a 	mov	r18,r16
   435f8:	b021883a 	mov	r16,r22
   435fc:	982d883a 	mov	r22,r19
   43600:	6027883a 	mov	r19,r12
   43604:	00000406 	br	43618 <___vfprintf_internal_r+0x1bbc>
   43608:	18c00204 	addi	r3,r3,8
   4360c:	bdfffc04 	addi	r23,r23,-16
   43610:	b9400448 	cmpgei	r5,r23,17
   43614:	28018226 	beq	r5,zero,43c20 <___vfprintf_internal_r+0x21c4>
   43618:	10800044 	addi	r2,r2,1
   4361c:	21000404 	addi	r4,r4,16
   43620:	1c000015 	stw	r16,0(r3)
   43624:	1f000115 	stw	fp,4(r3)
   43628:	d9001f15 	stw	r4,124(sp)
   4362c:	d8801e15 	stw	r2,120(sp)
   43630:	11400208 	cmpgei	r5,r2,8
   43634:	283ff426 	beq	r5,zero,43608 <___vfprintf_internal_r+0x1bac>
   43638:	d9400417 	ldw	r5,16(sp)
   4363c:	d9000517 	ldw	r4,20(sp)
   43640:	d9801d04 	addi	r6,sp,116
   43644:	00492500 	call	49250 <__sprint_r>
   43648:	103a0f1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   4364c:	d9001f17 	ldw	r4,124(sp)
   43650:	d8801e17 	ldw	r2,120(sp)
   43654:	8807883a 	mov	r3,r17
   43658:	003fec06 	br	4360c <___vfprintf_internal_r+0x1bb0>
   4365c:	b019883a 	mov	r12,r22
   43660:	902d883a 	mov	r22,r18
   43664:	8025883a 	mov	r18,r16
   43668:	a021883a 	mov	r16,r20
   4366c:	b829883a 	mov	r20,r23
   43670:	102f883a 	mov	r23,r2
   43674:	e005883a 	mov	r2,fp
   43678:	1839883a 	mov	fp,r3
   4367c:	9807883a 	mov	r3,r19
   43680:	1027883a 	mov	r19,r2
   43684:	42000044 	addi	r8,r8,1
   43688:	e4b9883a 	add	fp,fp,r18
   4368c:	bd800015 	stw	r22,0(r23)
   43690:	003cd806 	br	429f4 <___vfprintf_internal_r+0xf98>
   43694:	a809883a 	mov	r4,r21
   43698:	00419c40 	call	419c4 <strlen>
   4369c:	db400817 	ldw	r13,32(sp)
   436a0:	100f883a 	mov	r7,r2
   436a4:	1019883a 	mov	r12,r2
   436a8:	dd800715 	stw	r22,28(sp)
   436ac:	0039b006 	br	41d70 <___vfprintf_internal_r+0x314>
   436b0:	05400174 	movhi	r21,5
   436b4:	ad453004 	addi	r21,r21,5312
   436b8:	003af606 	br	42294 <___vfprintf_internal_r+0x838>
   436bc:	05800174 	movhi	r22,5
   436c0:	b5854104 	addi	r22,r22,5380
   436c4:	003c7806 	br	428a8 <___vfprintf_internal_r+0xe4c>
   436c8:	a019883a 	mov	r12,r20
   436cc:	b029883a 	mov	r20,r22
   436d0:	902d883a 	mov	r22,r18
   436d4:	1825883a 	mov	r18,r3
   436d8:	d8c00f17 	ldw	r3,60(sp)
   436dc:	b80b883a 	mov	r5,r23
   436e0:	802f883a 	mov	r23,r16
   436e4:	9821883a 	mov	r16,r19
   436e8:	2827883a 	mov	r19,r5
   436ec:	10800044 	addi	r2,r2,1
   436f0:	b909883a 	add	r4,r23,r4
   436f4:	d8801e15 	stw	r2,120(sp)
   436f8:	95800015 	stw	r22,0(r18)
   436fc:	95c00115 	stw	r23,4(r18)
   43700:	d9001f15 	stw	r4,124(sp)
   43704:	10800208 	cmpgei	r2,r2,8
   43708:	10004a1e 	bne	r2,zero,43834 <___vfprintf_internal_r+0x1dd8>
   4370c:	94800204 	addi	r18,r18,8
   43710:	202d883a 	mov	r22,r4
   43714:	003d6406 	br	42ca8 <___vfprintf_internal_r+0x124c>
   43718:	00800b44 	movi	r2,45
   4371c:	d8801645 	stb	r2,89(sp)
   43720:	01000b44 	movi	r4,45
   43724:	003ad706 	br	42284 <___vfprintf_internal_r+0x828>
   43728:	d9400417 	ldw	r5,16(sp)
   4372c:	d9000517 	ldw	r4,20(sp)
   43730:	d9801d04 	addi	r6,sp,116
   43734:	db000f15 	stw	r12,60(sp)
   43738:	d8c00815 	stw	r3,32(sp)
   4373c:	00492500 	call	49250 <__sprint_r>
   43740:	1039d11e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43744:	ddc01717 	ldw	r23,92(sp)
   43748:	d9001f17 	ldw	r4,124(sp)
   4374c:	db000f17 	ldw	r12,60(sp)
   43750:	d8c00817 	ldw	r3,32(sp)
   43754:	8825883a 	mov	r18,r17
   43758:	003eed06 	br	43310 <___vfprintf_internal_r+0x18b4>
   4375c:	15e0003c 	xorhi	r23,r2,32768
   43760:	00800b44 	movi	r2,45
   43764:	d8800705 	stb	r2,28(sp)
   43768:	003f1906 	br	433d0 <___vfprintf_internal_r+0x1974>
   4376c:	01c00184 	movi	r7,6
   43770:	003e3f06 	br	43070 <___vfprintf_internal_r+0x1614>
   43774:	d9400417 	ldw	r5,16(sp)
   43778:	d9000517 	ldw	r4,20(sp)
   4377c:	d9801d04 	addi	r6,sp,116
   43780:	00492500 	call	49250 <__sprint_r>
   43784:	0039c006 	br	41e88 <___vfprintf_internal_r+0x42c>
   43788:	d9400417 	ldw	r5,16(sp)
   4378c:	d9000517 	ldw	r4,20(sp)
   43790:	d9801d04 	addi	r6,sp,116
   43794:	db000f15 	stw	r12,60(sp)
   43798:	d8c00815 	stw	r3,32(sp)
   4379c:	00492500 	call	49250 <__sprint_r>
   437a0:	1039b91e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   437a4:	ddc01717 	ldw	r23,92(sp)
   437a8:	d9001f17 	ldw	r4,124(sp)
   437ac:	d8801e17 	ldw	r2,120(sp)
   437b0:	db000f17 	ldw	r12,60(sp)
   437b4:	d8c00817 	ldw	r3,32(sp)
   437b8:	8825883a 	mov	r18,r17
   437bc:	b83ee50e 	bge	r23,zero,43354 <___vfprintf_internal_r+0x18f8>
   437c0:	003f8406 	br	435d4 <___vfprintf_internal_r+0x1b78>
   437c4:	d8801b04 	addi	r2,sp,108
   437c8:	d8800315 	stw	r2,12(sp)
   437cc:	d9400a17 	ldw	r5,40(sp)
   437d0:	d8801804 	addi	r2,sp,96
   437d4:	d9000517 	ldw	r4,20(sp)
   437d8:	d8c01315 	stw	r3,76(sp)
   437dc:	d8800215 	stw	r2,8(sp)
   437e0:	40c00044 	addi	r3,r8,1
   437e4:	d8801704 	addi	r2,sp,92
   437e8:	d8c00015 	stw	r3,0(sp)
   437ec:	d8800115 	stw	r2,4(sp)
   437f0:	01c00084 	movi	r7,2
   437f4:	b80d883a 	mov	r6,r23
   437f8:	db401215 	stw	r13,72(sp)
   437fc:	da000815 	stw	r8,32(sp)
   43800:	d8c00915 	stw	r3,36(sp)
   43804:	004422c0 	call	4422c <_dtoa_r>
   43808:	da000817 	ldw	r8,32(sp)
   4380c:	db401217 	ldw	r13,72(sp)
   43810:	d8c01317 	ldw	r3,76(sp)
   43814:	102b883a 	mov	r21,r2
   43818:	e08011d8 	cmpnei	r2,fp,71
   4381c:	1001351e 	bne	r2,zero,43cf4 <___vfprintf_internal_r+0x2298>
   43820:	6880004c 	andi	r2,r13,1
   43824:	10001126 	beq	r2,zero,4386c <___vfprintf_internal_r+0x1e10>
   43828:	d8800917 	ldw	r2,36(sp)
   4382c:	a899883a 	add	r12,r21,r2
   43830:	003f0406 	br	43444 <___vfprintf_internal_r+0x19e8>
   43834:	d9400417 	ldw	r5,16(sp)
   43838:	d9000517 	ldw	r4,20(sp)
   4383c:	d9801d04 	addi	r6,sp,116
   43840:	db001015 	stw	r12,64(sp)
   43844:	d8c00f15 	stw	r3,60(sp)
   43848:	00492500 	call	49250 <__sprint_r>
   4384c:	10398e1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43850:	dd801f17 	ldw	r22,124(sp)
   43854:	db001017 	ldw	r12,64(sp)
   43858:	d8c00f17 	ldw	r3,60(sp)
   4385c:	8825883a 	mov	r18,r17
   43860:	003d1106 	br	42ca8 <___vfprintf_internal_r+0x124c>
   43864:	da000915 	stw	r8,36(sp)
   43868:	003feb06 	br	43818 <___vfprintf_internal_r+0x1dbc>
   4386c:	d8801b17 	ldw	r2,108(sp)
   43870:	d9c01717 	ldw	r7,92(sp)
   43874:	1545c83a 	sub	r2,r2,r21
   43878:	d8800915 	stw	r2,36(sp)
   4387c:	38bfff48 	cmpgei	r2,r7,-3
   43880:	d9c00815 	stw	r7,32(sp)
   43884:	1000b31e 	bne	r2,zero,43b54 <___vfprintf_internal_r+0x20f8>
   43888:	e73fff84 	addi	fp,fp,-2
   4388c:	397fffc4 	addi	r5,r7,-1
   43890:	e005883a 	mov	r2,fp
   43894:	01000044 	movi	r4,1
   43898:	21efc83a 	sub	r23,r4,r7
   4389c:	01000b44 	movi	r4,45
   438a0:	21003fcc 	andi	r4,r4,255
   438a4:	2008923a 	slli	r4,r4,8
   438a8:	10803fcc 	andi	r2,r2,255
   438ac:	d9401715 	stw	r5,92(sp)
   438b0:	1104b03a 	or	r2,r2,r4
   438b4:	d880190d 	sth	r2,100(sp)
   438b8:	b8800290 	cmplti	r2,r23,10
   438bc:	1000c71e 	bne	r2,zero,43bdc <___vfprintf_internal_r+0x2180>
   438c0:	dd801cc4 	addi	r22,sp,115
   438c4:	9805883a 	mov	r2,r19
   438c8:	db400815 	stw	r13,32(sp)
   438cc:	b027883a 	mov	r19,r22
   438d0:	d8c01015 	stw	r3,64(sp)
   438d4:	a02d883a 	mov	r22,r20
   438d8:	dc001115 	stw	r16,68(sp)
   438dc:	9029883a 	mov	r20,r18
   438e0:	b825883a 	mov	r18,r23
   438e4:	102f883a 	mov	r23,r2
   438e8:	9009883a 	mov	r4,r18
   438ec:	01400284 	movi	r5,10
   438f0:	004c1c80 	call	4c1c8 <__modsi3>
   438f4:	10800c04 	addi	r2,r2,48
   438f8:	9009883a 	mov	r4,r18
   438fc:	01400284 	movi	r5,10
   43900:	98bfffc5 	stb	r2,-1(r19)
   43904:	004c1480 	call	4c148 <__divsi3>
   43908:	91401908 	cmpgei	r5,r18,100
   4390c:	9821883a 	mov	r16,r19
   43910:	1025883a 	mov	r18,r2
   43914:	9cffffc4 	addi	r19,r19,-1
   43918:	283ff31e 	bne	r5,zero,438e8 <___vfprintf_internal_r+0x1e8c>
   4391c:	b805883a 	mov	r2,r23
   43920:	902f883a 	mov	r23,r18
   43924:	8009883a 	mov	r4,r16
   43928:	a025883a 	mov	r18,r20
   4392c:	b029883a 	mov	r20,r22
   43930:	982d883a 	mov	r22,r19
   43934:	1027883a 	mov	r19,r2
   43938:	b8800c04 	addi	r2,r23,48
   4393c:	b0bfffc5 	stb	r2,-1(r22)
   43940:	217fff84 	addi	r5,r4,-2
   43944:	d8801cc4 	addi	r2,sp,115
   43948:	db400817 	ldw	r13,32(sp)
   4394c:	d8c01017 	ldw	r3,64(sp)
   43950:	dc001117 	ldw	r16,68(sp)
   43954:	28810e2e 	bgeu	r5,r2,43d90 <___vfprintf_internal_r+0x2334>
   43958:	d8801d44 	addi	r2,sp,117
   4395c:	112dc83a 	sub	r22,r2,r4
   43960:	b00d883a 	mov	r6,r22
   43964:	d9001984 	addi	r4,sp,102
   43968:	004755c0 	call	4755c <memcpy>
   4396c:	d8801984 	addi	r2,sp,102
   43970:	1585883a 	add	r2,r2,r22
   43974:	d9001904 	addi	r4,sp,100
   43978:	db400817 	ldw	r13,32(sp)
   4397c:	d8c01017 	ldw	r3,64(sp)
   43980:	1105c83a 	sub	r2,r2,r4
   43984:	d8801115 	stw	r2,68(sp)
   43988:	d9000917 	ldw	r4,36(sp)
   4398c:	d9401117 	ldw	r5,68(sp)
   43990:	20800088 	cmpgei	r2,r4,2
   43994:	214f883a 	add	r7,r4,r5
   43998:	10009726 	beq	r2,zero,43bf8 <___vfprintf_internal_r+0x219c>
   4399c:	d8800c17 	ldw	r2,48(sp)
   439a0:	388f883a 	add	r7,r7,r2
   439a4:	3819883a 	mov	r12,r7
   439a8:	3800010e 	bge	r7,zero,439b0 <___vfprintf_internal_r+0x1f54>
   439ac:	0019883a 	mov	r12,zero
   439b0:	d8000815 	stw	zero,32(sp)
   439b4:	003ec906 	br	434dc <___vfprintf_internal_r+0x1a80>
   439b8:	d8800f17 	ldw	r2,60(sp)
   439bc:	d9001643 	ldbu	r4,89(sp)
   439c0:	0011883a 	mov	r8,zero
   439c4:	d8800715 	stw	r2,28(sp)
   439c8:	0039b006 	br	4208c <___vfprintf_internal_r+0x630>
   439cc:	d8801b04 	addi	r2,sp,108
   439d0:	d8800315 	stw	r2,12(sp)
   439d4:	d9400a17 	ldw	r5,40(sp)
   439d8:	d8801804 	addi	r2,sp,96
   439dc:	d9000517 	ldw	r4,20(sp)
   439e0:	d8800215 	stw	r2,8(sp)
   439e4:	d8801704 	addi	r2,sp,92
   439e8:	da000015 	stw	r8,0(sp)
   439ec:	d8800115 	stw	r2,4(sp)
   439f0:	01c000c4 	movi	r7,3
   439f4:	b80d883a 	mov	r6,r23
   439f8:	d8c01215 	stw	r3,72(sp)
   439fc:	db400915 	stw	r13,36(sp)
   43a00:	da000815 	stw	r8,32(sp)
   43a04:	004422c0 	call	4422c <_dtoa_r>
   43a08:	102b883a 	mov	r21,r2
   43a0c:	10800007 	ldb	r2,0(r2)
   43a10:	da000817 	ldw	r8,32(sp)
   43a14:	db400917 	ldw	r13,36(sp)
   43a18:	10800c20 	cmpeqi	r2,r2,48
   43a1c:	d8c01217 	ldw	r3,72(sp)
   43a20:	10009c1e 	bne	r2,zero,43c94 <___vfprintf_internal_r+0x2238>
   43a24:	d8801717 	ldw	r2,92(sp)
   43a28:	d9000a17 	ldw	r4,40(sp)
   43a2c:	1219883a 	add	r12,r2,r8
   43a30:	000d883a 	mov	r6,zero
   43a34:	000f883a 	mov	r7,zero
   43a38:	b80b883a 	mov	r5,r23
   43a3c:	d8c01315 	stw	r3,76(sp)
   43a40:	db401215 	stw	r13,72(sp)
   43a44:	da000915 	stw	r8,36(sp)
   43a48:	db000815 	stw	r12,32(sp)
   43a4c:	004d4480 	call	4d448 <__eqdf2>
   43a50:	db000817 	ldw	r12,32(sp)
   43a54:	da000917 	ldw	r8,36(sp)
   43a58:	db401217 	ldw	r13,72(sp)
   43a5c:	d8c01317 	ldw	r3,76(sp)
   43a60:	10008a1e 	bne	r2,zero,43c8c <___vfprintf_internal_r+0x2230>
   43a64:	d8801717 	ldw	r2,92(sp)
   43a68:	db000915 	stw	r12,36(sp)
   43a6c:	d8800815 	stw	r2,32(sp)
   43a70:	003e9206 	br	434bc <___vfprintf_internal_r+0x1a60>
   43a74:	d9400417 	ldw	r5,16(sp)
   43a78:	d9000517 	ldw	r4,20(sp)
   43a7c:	d9801d04 	addi	r6,sp,116
   43a80:	db001015 	stw	r12,64(sp)
   43a84:	d8c00f15 	stw	r3,60(sp)
   43a88:	00492500 	call	49250 <__sprint_r>
   43a8c:	1038fe1e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43a90:	ddc01717 	ldw	r23,92(sp)
   43a94:	d9001f17 	ldw	r4,124(sp)
   43a98:	db001017 	ldw	r12,64(sp)
   43a9c:	d8c00f17 	ldw	r3,60(sp)
   43aa0:	8825883a 	mov	r18,r17
   43aa4:	003c8f06 	br	42ce4 <___vfprintf_internal_r+0x1288>
   43aa8:	b80b883a 	mov	r5,r23
   43aac:	a019883a 	mov	r12,r20
   43ab0:	802f883a 	mov	r23,r16
   43ab4:	b029883a 	mov	r20,r22
   43ab8:	9821883a 	mov	r16,r19
   43abc:	902d883a 	mov	r22,r18
   43ac0:	2827883a 	mov	r19,r5
   43ac4:	1825883a 	mov	r18,r3
   43ac8:	d8c00817 	ldw	r3,32(sp)
   43acc:	003c2706 	br	42b6c <___vfprintf_internal_r+0x1110>
   43ad0:	403e3a1e 	bne	r8,zero,433bc <___vfprintf_internal_r+0x1960>
   43ad4:	02000044 	movi	r8,1
   43ad8:	003e3806 	br	433bc <___vfprintf_internal_r+0x1960>
   43adc:	d9400417 	ldw	r5,16(sp)
   43ae0:	d9000517 	ldw	r4,20(sp)
   43ae4:	d9801d04 	addi	r6,sp,116
   43ae8:	db001015 	stw	r12,64(sp)
   43aec:	d8c00f15 	stw	r3,60(sp)
   43af0:	00492500 	call	49250 <__sprint_r>
   43af4:	1038e41e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43af8:	dd801f17 	ldw	r22,124(sp)
   43afc:	db001017 	ldw	r12,64(sp)
   43b00:	d8c00f17 	ldw	r3,60(sp)
   43b04:	8825883a 	mov	r18,r17
   43b08:	b83c640e 	bge	r23,zero,42c9c <___vfprintf_internal_r+0x1240>
   43b0c:	003d3306 	br	42fdc <___vfprintf_internal_r+0x1580>
   43b10:	02000184 	movi	r8,6
   43b14:	003e2906 	br	433bc <___vfprintf_internal_r+0x1960>
   43b18:	d9400417 	ldw	r5,16(sp)
   43b1c:	d9000517 	ldw	r4,20(sp)
   43b20:	d9801d04 	addi	r6,sp,116
   43b24:	db000f15 	stw	r12,60(sp)
   43b28:	d8c00815 	stw	r3,32(sp)
   43b2c:	00492500 	call	49250 <__sprint_r>
   43b30:	1038d51e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43b34:	ddc01717 	ldw	r23,92(sp)
   43b38:	d8800917 	ldw	r2,36(sp)
   43b3c:	d9001f17 	ldw	r4,124(sp)
   43b40:	db000f17 	ldw	r12,60(sp)
   43b44:	d8c00817 	ldw	r3,32(sp)
   43b48:	8825883a 	mov	r18,r17
   43b4c:	15efc83a 	sub	r23,r2,r23
   43b50:	003c7706 	br	42d30 <___vfprintf_internal_r+0x12d4>
   43b54:	41c0060e 	bge	r8,r7,43b70 <___vfprintf_internal_r+0x2114>
   43b58:	e73fff84 	addi	fp,fp,-2
   43b5c:	3dffffc4 	addi	r23,r7,-1
   43b60:	e005883a 	mov	r2,fp
   43b64:	b80b883a 	mov	r5,r23
   43b68:	01000ac4 	movi	r4,43
   43b6c:	003f4c06 	br	438a0 <___vfprintf_internal_r+0x1e44>
   43b70:	d9000917 	ldw	r4,36(sp)
   43b74:	39000916 	blt	r7,r4,43b9c <___vfprintf_internal_r+0x2140>
   43b78:	6b40004c 	andi	r13,r13,1
   43b7c:	68000f26 	beq	r13,zero,43bbc <___vfprintf_internal_r+0x2160>
   43b80:	d8800817 	ldw	r2,32(sp)
   43b84:	d9000c17 	ldw	r4,48(sp)
   43b88:	110f883a 	add	r7,r2,r4
   43b8c:	3819883a 	mov	r12,r7
   43b90:	38000c16 	blt	r7,zero,43bc4 <___vfprintf_internal_r+0x2168>
   43b94:	070019c4 	movi	fp,103
   43b98:	003e5006 	br	434dc <___vfprintf_internal_r+0x1a80>
   43b9c:	d8800917 	ldw	r2,36(sp)
   43ba0:	d9000c17 	ldw	r4,48(sp)
   43ba4:	110f883a 	add	r7,r2,r4
   43ba8:	d8800817 	ldw	r2,32(sp)
   43bac:	00800316 	blt	zero,r2,43bbc <___vfprintf_internal_r+0x2160>
   43bb0:	d8800817 	ldw	r2,32(sp)
   43bb4:	388fc83a 	sub	r7,r7,r2
   43bb8:	39c00044 	addi	r7,r7,1
   43bbc:	3819883a 	mov	r12,r7
   43bc0:	383ff40e 	bge	r7,zero,43b94 <___vfprintf_internal_r+0x2138>
   43bc4:	0019883a 	mov	r12,zero
   43bc8:	003ff206 	br	43b94 <___vfprintf_internal_r+0x2138>
   43bcc:	4019883a 	mov	r12,r8
   43bd0:	dd800715 	stw	r22,28(sp)
   43bd4:	400f883a 	mov	r7,r8
   43bd8:	00386506 	br	41d70 <___vfprintf_internal_r+0x314>
   43bdc:	b8800c04 	addi	r2,r23,48
   43be0:	01000c04 	movi	r4,48
   43be4:	d88019c5 	stb	r2,103(sp)
   43be8:	00800104 	movi	r2,4
   43bec:	d9001985 	stb	r4,102(sp)
   43bf0:	d8801115 	stw	r2,68(sp)
   43bf4:	003f6406 	br	43988 <___vfprintf_internal_r+0x1f2c>
   43bf8:	6880004c 	andi	r2,r13,1
   43bfc:	d8800815 	stw	r2,32(sp)
   43c00:	103f661e 	bne	r2,zero,4399c <___vfprintf_internal_r+0x1f40>
   43c04:	3819883a 	mov	r12,r7
   43c08:	383e340e 	bge	r7,zero,434dc <___vfprintf_internal_r+0x1a80>
   43c0c:	0019883a 	mov	r12,zero
   43c10:	003e3206 	br	434dc <___vfprintf_internal_r+0x1a80>
   43c14:	00bfffc4 	movi	r2,-1
   43c18:	d8800615 	stw	r2,24(sp)
   43c1c:	00389e06 	br	41e98 <___vfprintf_internal_r+0x43c>
   43c20:	9819883a 	mov	r12,r19
   43c24:	b027883a 	mov	r19,r22
   43c28:	802d883a 	mov	r22,r16
   43c2c:	9021883a 	mov	r16,r18
   43c30:	1825883a 	mov	r18,r3
   43c34:	d8c00817 	ldw	r3,32(sp)
   43c38:	10800044 	addi	r2,r2,1
   43c3c:	25c9883a 	add	r4,r4,r23
   43c40:	95800015 	stw	r22,0(r18)
   43c44:	95c00115 	stw	r23,4(r18)
   43c48:	d9001f15 	stw	r4,124(sp)
   43c4c:	d8801e15 	stw	r2,120(sp)
   43c50:	11400208 	cmpgei	r5,r2,8
   43c54:	283dbe26 	beq	r5,zero,43350 <___vfprintf_internal_r+0x18f4>
   43c58:	d9400417 	ldw	r5,16(sp)
   43c5c:	d9000517 	ldw	r4,20(sp)
   43c60:	d9801d04 	addi	r6,sp,116
   43c64:	db000f15 	stw	r12,60(sp)
   43c68:	d8c00815 	stw	r3,32(sp)
   43c6c:	00492500 	call	49250 <__sprint_r>
   43c70:	1038851e 	bne	r2,zero,41e88 <___vfprintf_internal_r+0x42c>
   43c74:	d9001f17 	ldw	r4,124(sp)
   43c78:	d8801e17 	ldw	r2,120(sp)
   43c7c:	db000f17 	ldw	r12,60(sp)
   43c80:	d8c00817 	ldw	r3,32(sp)
   43c84:	8825883a 	mov	r18,r17
   43c88:	003db206 	br	43354 <___vfprintf_internal_r+0x18f8>
   43c8c:	ab19883a 	add	r12,r21,r12
   43c90:	003dfa06 	br	4347c <___vfprintf_internal_r+0x1a20>
   43c94:	d9000a17 	ldw	r4,40(sp)
   43c98:	000d883a 	mov	r6,zero
   43c9c:	000f883a 	mov	r7,zero
   43ca0:	b80b883a 	mov	r5,r23
   43ca4:	da001215 	stw	r8,72(sp)
   43ca8:	d8c00915 	stw	r3,36(sp)
   43cac:	db400815 	stw	r13,32(sp)
   43cb0:	004d4480 	call	4d448 <__eqdf2>
   43cb4:	db400817 	ldw	r13,32(sp)
   43cb8:	d8c00917 	ldw	r3,36(sp)
   43cbc:	da001217 	ldw	r8,72(sp)
   43cc0:	103f5826 	beq	r2,zero,43a24 <___vfprintf_internal_r+0x1fc8>
   43cc4:	00800044 	movi	r2,1
   43cc8:	1205c83a 	sub	r2,r2,r8
   43ccc:	d8801715 	stw	r2,92(sp)
   43cd0:	003f5506 	br	43a28 <___vfprintf_internal_r+0x1fcc>
   43cd4:	d8800b17 	ldw	r2,44(sp)
   43cd8:	10002916 	blt	r2,zero,43d80 <___vfprintf_internal_r+0x2324>
   43cdc:	d9001643 	ldbu	r4,89(sp)
   43ce0:	e0801210 	cmplti	r2,fp,72
   43ce4:	1000231e 	bne	r2,zero,43d74 <___vfprintf_internal_r+0x2318>
   43ce8:	05400174 	movhi	r21,5
   43cec:	ad453304 	addi	r21,r21,5324
   43cf0:	00396806 	br	42294 <___vfprintf_internal_r+0x838>
   43cf4:	d9000a17 	ldw	r4,40(sp)
   43cf8:	000d883a 	mov	r6,zero
   43cfc:	000f883a 	mov	r7,zero
   43d00:	b80b883a 	mov	r5,r23
   43d04:	da001315 	stw	r8,76(sp)
   43d08:	d8c01215 	stw	r3,72(sp)
   43d0c:	db400815 	stw	r13,32(sp)
   43d10:	004d4480 	call	4d448 <__eqdf2>
   43d14:	db400817 	ldw	r13,32(sp)
   43d18:	d8c01217 	ldw	r3,72(sp)
   43d1c:	da001317 	ldw	r8,76(sp)
   43d20:	10002a1e 	bne	r2,zero,43dcc <___vfprintf_internal_r+0x2370>
   43d24:	b08011e0 	cmpeqi	r2,r22,71
   43d28:	d9c01717 	ldw	r7,92(sp)
   43d2c:	103ed31e 	bne	r2,zero,4387c <___vfprintf_internal_r+0x1e20>
   43d30:	397fffc4 	addi	r5,r7,-1
   43d34:	e005883a 	mov	r2,fp
   43d38:	283ed616 	blt	r5,zero,43894 <___vfprintf_internal_r+0x1e38>
   43d3c:	282f883a 	mov	r23,r5
   43d40:	01000ac4 	movi	r4,43
   43d44:	003ed606 	br	438a0 <___vfprintf_internal_r+0x1e44>
   43d48:	6545c83a 	sub	r2,r12,r21
   43d4c:	d9c01717 	ldw	r7,92(sp)
   43d50:	d8800915 	stw	r2,36(sp)
   43d54:	003ec906 	br	4387c <___vfprintf_internal_r+0x1e20>
   43d58:	d8800c17 	ldw	r2,48(sp)
   43d5c:	208f883a 	add	r7,r4,r2
   43d60:	3a0f883a 	add	r7,r7,r8
   43d64:	3819883a 	mov	r12,r7
   43d68:	383ddb0e 	bge	r7,zero,434d8 <___vfprintf_internal_r+0x1a7c>
   43d6c:	0019883a 	mov	r12,zero
   43d70:	003dd906 	br	434d8 <___vfprintf_internal_r+0x1a7c>
   43d74:	05400174 	movhi	r21,5
   43d78:	ad453204 	addi	r21,r21,5320
   43d7c:	00394506 	br	42294 <___vfprintf_internal_r+0x838>
   43d80:	00800b44 	movi	r2,45
   43d84:	d8801645 	stb	r2,89(sp)
   43d88:	01000b44 	movi	r4,45
   43d8c:	003fd406 	br	43ce0 <___vfprintf_internal_r+0x2284>
   43d90:	00800084 	movi	r2,2
   43d94:	d8801115 	stw	r2,68(sp)
   43d98:	003efb06 	br	43988 <___vfprintf_internal_r+0x1f2c>
   43d9c:	d8800717 	ldw	r2,28(sp)
   43da0:	12000017 	ldw	r8,0(r2)
   43da4:	10800104 	addi	r2,r2,4
   43da8:	4000010e 	bge	r8,zero,43db0 <___vfprintf_internal_r+0x2354>
   43dac:	023fffc4 	movi	r8,-1
   43db0:	a7000043 	ldbu	fp,1(r20)
   43db4:	d8800715 	stw	r2,28(sp)
   43db8:	1829883a 	mov	r20,r3
   43dbc:	e2c03fcc 	andi	r11,fp,255
   43dc0:	5ac0201c 	xori	r11,r11,128
   43dc4:	5affe004 	addi	r11,r11,-128
   43dc8:	00377406 	br	41b9c <___vfprintf_internal_r+0x140>
   43dcc:	d8800917 	ldw	r2,36(sp)
   43dd0:	a899883a 	add	r12,r21,r2
   43dd4:	003da906 	br	4347c <___vfprintf_internal_r+0x1a20>
   43dd8:	1000041e 	bne	r2,zero,43dec <___vfprintf_internal_r+0x2390>
   43ddc:	03000044 	movi	r12,1
   43de0:	07001984 	movi	fp,102
   43de4:	01c00044 	movi	r7,1
   43de8:	003dbc06 	br	434dc <___vfprintf_internal_r+0x1a80>
   43dec:	d8800c17 	ldw	r2,48(sp)
   43df0:	11c00044 	addi	r7,r2,1
   43df4:	3a0f883a 	add	r7,r7,r8
   43df8:	3819883a 	mov	r12,r7
   43dfc:	383db60e 	bge	r7,zero,434d8 <___vfprintf_internal_r+0x1a7c>
   43e00:	003fda06 	br	43d6c <___vfprintf_internal_r+0x2310>

00043e04 <__vfprintf_internal>:
   43e04:	00c00174 	movhi	r3,5
   43e08:	2005883a 	mov	r2,r4
   43e0c:	190d6c17 	ldw	r4,13744(r3)
   43e10:	300f883a 	mov	r7,r6
   43e14:	280d883a 	mov	r6,r5
   43e18:	100b883a 	mov	r5,r2
   43e1c:	0041a5c1 	jmpi	41a5c <___vfprintf_internal_r>

00043e20 <__sbprintf>:
   43e20:	28c0038b 	ldhu	r3,14(r5)
   43e24:	2880030b 	ldhu	r2,12(r5)
   43e28:	2ac01917 	ldw	r11,100(r5)
   43e2c:	1806943a 	slli	r3,r3,16
   43e30:	2a800717 	ldw	r10,28(r5)
   43e34:	2a400917 	ldw	r9,36(r5)
   43e38:	defee204 	addi	sp,sp,-1144
   43e3c:	10bfff4c 	andi	r2,r2,65533
   43e40:	10c4b03a 	or	r2,r2,r3
   43e44:	da001a04 	addi	r8,sp,104
   43e48:	00c10004 	movi	r3,1024
   43e4c:	dc011a15 	stw	r16,1128(sp)
   43e50:	2821883a 	mov	r16,r5
   43e54:	d80b883a 	mov	r5,sp
   43e58:	dc811c15 	stw	r18,1136(sp)
   43e5c:	dc411b15 	stw	r17,1132(sp)
   43e60:	dfc11d15 	stw	ra,1140(sp)
   43e64:	2025883a 	mov	r18,r4
   43e68:	dac01915 	stw	r11,100(sp)
   43e6c:	d8800315 	stw	r2,12(sp)
   43e70:	da800715 	stw	r10,28(sp)
   43e74:	da400915 	stw	r9,36(sp)
   43e78:	da000015 	stw	r8,0(sp)
   43e7c:	da000415 	stw	r8,16(sp)
   43e80:	d8c00215 	stw	r3,8(sp)
   43e84:	d8c00515 	stw	r3,20(sp)
   43e88:	d8000615 	stw	zero,24(sp)
   43e8c:	0041a5c0 	call	41a5c <___vfprintf_internal_r>
   43e90:	1023883a 	mov	r17,r2
   43e94:	10000d0e 	bge	r2,zero,43ecc <__sbprintf+0xac>
   43e98:	d880030b 	ldhu	r2,12(sp)
   43e9c:	1080100c 	andi	r2,r2,64
   43ea0:	10000326 	beq	r2,zero,43eb0 <__sbprintf+0x90>
   43ea4:	8080030b 	ldhu	r2,12(r16)
   43ea8:	10801014 	ori	r2,r2,64
   43eac:	8080030d 	sth	r2,12(r16)
   43eb0:	8805883a 	mov	r2,r17
   43eb4:	dfc11d17 	ldw	ra,1140(sp)
   43eb8:	dc811c17 	ldw	r18,1136(sp)
   43ebc:	dc411b17 	ldw	r17,1132(sp)
   43ec0:	dc011a17 	ldw	r16,1128(sp)
   43ec4:	dec11e04 	addi	sp,sp,1144
   43ec8:	f800283a 	ret
   43ecc:	d80b883a 	mov	r5,sp
   43ed0:	9009883a 	mov	r4,r18
   43ed4:	0045c1c0 	call	45c1c <_fflush_r>
   43ed8:	103fef26 	beq	r2,zero,43e98 <__sbprintf+0x78>
   43edc:	047fffc4 	movi	r17,-1
   43ee0:	003fed06 	br	43e98 <__sbprintf+0x78>

00043ee4 <__swsetup_r>:
   43ee4:	00800174 	movhi	r2,5
   43ee8:	108d6c17 	ldw	r2,13744(r2)
   43eec:	defffd04 	addi	sp,sp,-12
   43ef0:	dc400115 	stw	r17,4(sp)
   43ef4:	dc000015 	stw	r16,0(sp)
   43ef8:	dfc00215 	stw	ra,8(sp)
   43efc:	2023883a 	mov	r17,r4
   43f00:	2821883a 	mov	r16,r5
   43f04:	10000226 	beq	r2,zero,43f10 <__swsetup_r+0x2c>
   43f08:	10c00e17 	ldw	r3,56(r2)
   43f0c:	18001d26 	beq	r3,zero,43f84 <__swsetup_r+0xa0>
   43f10:	80c0030b 	ldhu	r3,12(r16)
   43f14:	1880020c 	andi	r2,r3,8
   43f18:	10001f26 	beq	r2,zero,43f98 <__swsetup_r+0xb4>
   43f1c:	80800417 	ldw	r2,16(r16)
   43f20:	10002626 	beq	r2,zero,43fbc <__swsetup_r+0xd8>
   43f24:	1900004c 	andi	r4,r3,1
   43f28:	20000b1e 	bne	r4,zero,43f58 <__swsetup_r+0x74>
   43f2c:	1900008c 	andi	r4,r3,2
   43f30:	20002b1e 	bne	r4,zero,43fe0 <__swsetup_r+0xfc>
   43f34:	81000517 	ldw	r4,20(r16)
   43f38:	81000215 	stw	r4,8(r16)
   43f3c:	10000b26 	beq	r2,zero,43f6c <__swsetup_r+0x88>
   43f40:	0005883a 	mov	r2,zero
   43f44:	dfc00217 	ldw	ra,8(sp)
   43f48:	dc400117 	ldw	r17,4(sp)
   43f4c:	dc000017 	ldw	r16,0(sp)
   43f50:	dec00304 	addi	sp,sp,12
   43f54:	f800283a 	ret
   43f58:	81000517 	ldw	r4,20(r16)
   43f5c:	80000215 	stw	zero,8(r16)
   43f60:	0109c83a 	sub	r4,zero,r4
   43f64:	81000615 	stw	r4,24(r16)
   43f68:	103ff51e 	bne	r2,zero,43f40 <__swsetup_r+0x5c>
   43f6c:	1900200c 	andi	r4,r3,128
   43f70:	203ff426 	beq	r4,zero,43f44 <__swsetup_r+0x60>
   43f74:	18c01014 	ori	r3,r3,64
   43f78:	80c0030d 	sth	r3,12(r16)
   43f7c:	00bfffc4 	movi	r2,-1
   43f80:	003ff006 	br	43f44 <__swsetup_r+0x60>
   43f84:	1009883a 	mov	r4,r2
   43f88:	00460340 	call	46034 <__sinit>
   43f8c:	80c0030b 	ldhu	r3,12(r16)
   43f90:	1880020c 	andi	r2,r3,8
   43f94:	103fe11e 	bne	r2,zero,43f1c <__swsetup_r+0x38>
   43f98:	1880040c 	andi	r2,r3,16
   43f9c:	10002026 	beq	r2,zero,44020 <__swsetup_r+0x13c>
   43fa0:	1880010c 	andi	r2,r3,4
   43fa4:	1000101e 	bne	r2,zero,43fe8 <__swsetup_r+0x104>
   43fa8:	80800417 	ldw	r2,16(r16)
   43fac:	19000214 	ori	r4,r3,8
   43fb0:	8100030d 	sth	r4,12(r16)
   43fb4:	2007883a 	mov	r3,r4
   43fb8:	103fda1e 	bne	r2,zero,43f24 <__swsetup_r+0x40>
   43fbc:	1900a00c 	andi	r4,r3,640
   43fc0:	21008020 	cmpeqi	r4,r4,512
   43fc4:	203fd71e 	bne	r4,zero,43f24 <__swsetup_r+0x40>
   43fc8:	800b883a 	mov	r5,r16
   43fcc:	8809883a 	mov	r4,r17
   43fd0:	0046aac0 	call	46aac <__smakebuf_r>
   43fd4:	80c0030b 	ldhu	r3,12(r16)
   43fd8:	80800417 	ldw	r2,16(r16)
   43fdc:	003fd106 	br	43f24 <__swsetup_r+0x40>
   43fe0:	0009883a 	mov	r4,zero
   43fe4:	003fd406 	br	43f38 <__swsetup_r+0x54>
   43fe8:	81400c17 	ldw	r5,48(r16)
   43fec:	28000626 	beq	r5,zero,44008 <__swsetup_r+0x124>
   43ff0:	80801004 	addi	r2,r16,64
   43ff4:	28800326 	beq	r5,r2,44004 <__swsetup_r+0x120>
   43ff8:	8809883a 	mov	r4,r17
   43ffc:	00461a00 	call	461a0 <_free_r>
   44000:	80c0030b 	ldhu	r3,12(r16)
   44004:	80000c15 	stw	zero,48(r16)
   44008:	80800417 	ldw	r2,16(r16)
   4400c:	013ff6c4 	movi	r4,-37
   44010:	20c6703a 	and	r3,r4,r3
   44014:	80000115 	stw	zero,4(r16)
   44018:	80800015 	stw	r2,0(r16)
   4401c:	003fe306 	br	43fac <__swsetup_r+0xc8>
   44020:	00800244 	movi	r2,9
   44024:	88800015 	stw	r2,0(r17)
   44028:	18c01014 	ori	r3,r3,64
   4402c:	003fd206 	br	43f78 <__swsetup_r+0x94>

00044030 <quorem>:
   44030:	defff504 	addi	sp,sp,-44
   44034:	dc800315 	stw	r18,12(sp)
   44038:	20800417 	ldw	r2,16(r4)
   4403c:	2c800417 	ldw	r18,16(r5)
   44040:	dfc00a15 	stw	ra,40(sp)
   44044:	df000915 	stw	fp,36(sp)
   44048:	ddc00815 	stw	r23,32(sp)
   4404c:	dd800715 	stw	r22,28(sp)
   44050:	dd400615 	stw	r21,24(sp)
   44054:	dd000515 	stw	r20,20(sp)
   44058:	dcc00415 	stw	r19,16(sp)
   4405c:	dc400215 	stw	r17,8(sp)
   44060:	dc000115 	stw	r16,4(sp)
   44064:	14806f16 	blt	r2,r18,44224 <quorem+0x1f4>
   44068:	94bfffc4 	addi	r18,r18,-1
   4406c:	902c90ba 	slli	r22,r18,2
   44070:	2c000504 	addi	r16,r5,20
   44074:	25000504 	addi	r20,r4,20
   44078:	85a7883a 	add	r19,r16,r22
   4407c:	9f000017 	ldw	fp,0(r19)
   44080:	a5ad883a 	add	r22,r20,r22
   44084:	202b883a 	mov	r21,r4
   44088:	b1000017 	ldw	r4,0(r22)
   4408c:	e7000044 	addi	fp,fp,1
   44090:	282f883a 	mov	r23,r5
   44094:	e00b883a 	mov	r5,fp
   44098:	d9000015 	stw	r4,0(sp)
   4409c:	004c23c0 	call	4c23c <__udivsi3>
   440a0:	d9000017 	ldw	r4,0(sp)
   440a4:	1023883a 	mov	r17,r2
   440a8:	27002a36 	bltu	r4,fp,44154 <quorem+0x124>
   440ac:	800f883a 	mov	r7,r16
   440b0:	a00d883a 	mov	r6,r20
   440b4:	0013883a 	mov	r9,zero
   440b8:	0009883a 	mov	r4,zero
   440bc:	38800017 	ldw	r2,0(r7)
   440c0:	32000017 	ldw	r8,0(r6)
   440c4:	31800104 	addi	r6,r6,4
   440c8:	117fffcc 	andi	r5,r2,65535
   440cc:	2c4b383a 	mul	r5,r5,r17
   440d0:	1004d43a 	srli	r2,r2,16
   440d4:	40ffffcc 	andi	r3,r8,65535
   440d8:	2a4b883a 	add	r5,r5,r9
   440dc:	2a7fffcc 	andi	r9,r5,65535
   440e0:	1a47c83a 	sub	r3,r3,r9
   440e4:	280ad43a 	srli	r5,r5,16
   440e8:	1445383a 	mul	r2,r2,r17
   440ec:	1907883a 	add	r3,r3,r4
   440f0:	1809d43a 	srai	r4,r3,16
   440f4:	1145883a 	add	r2,r2,r5
   440f8:	4010d43a 	srli	r8,r8,16
   440fc:	117fffcc 	andi	r5,r2,65535
   44100:	2149c83a 	sub	r4,r4,r5
   44104:	2209883a 	add	r4,r4,r8
   44108:	200a943a 	slli	r5,r4,16
   4410c:	18ffffcc 	andi	r3,r3,65535
   44110:	39c00104 	addi	r7,r7,4
   44114:	1946b03a 	or	r3,r3,r5
   44118:	30ffff15 	stw	r3,-4(r6)
   4411c:	1012d43a 	srli	r9,r2,16
   44120:	2009d43a 	srai	r4,r4,16
   44124:	99ffe52e 	bgeu	r19,r7,440bc <quorem+0x8c>
   44128:	b0800017 	ldw	r2,0(r22)
   4412c:	1000091e 	bne	r2,zero,44154 <quorem+0x124>
   44130:	b5bfff04 	addi	r22,r22,-4
   44134:	a5800336 	bltu	r20,r22,44144 <quorem+0x114>
   44138:	00000506 	br	44150 <quorem+0x120>
   4413c:	94bfffc4 	addi	r18,r18,-1
   44140:	a580032e 	bgeu	r20,r22,44150 <quorem+0x120>
   44144:	b0800017 	ldw	r2,0(r22)
   44148:	b5bfff04 	addi	r22,r22,-4
   4414c:	103ffb26 	beq	r2,zero,4413c <quorem+0x10c>
   44150:	ac800415 	stw	r18,16(r21)
   44154:	b80b883a 	mov	r5,r23
   44158:	a809883a 	mov	r4,r21
   4415c:	004829c0 	call	4829c <__mcmp>
   44160:	10002316 	blt	r2,zero,441f0 <quorem+0x1c0>
   44164:	a00d883a 	mov	r6,r20
   44168:	000b883a 	mov	r5,zero
   4416c:	30800017 	ldw	r2,0(r6)
   44170:	81000017 	ldw	r4,0(r16)
   44174:	31800104 	addi	r6,r6,4
   44178:	10ffffcc 	andi	r3,r2,65535
   4417c:	21ffffcc 	andi	r7,r4,65535
   44180:	19c7c83a 	sub	r3,r3,r7
   44184:	1947883a 	add	r3,r3,r5
   44188:	180bd43a 	srai	r5,r3,16
   4418c:	2008d43a 	srli	r4,r4,16
   44190:	1004d43a 	srli	r2,r2,16
   44194:	18ffffcc 	andi	r3,r3,65535
   44198:	290bc83a 	sub	r5,r5,r4
   4419c:	288b883a 	add	r5,r5,r2
   441a0:	2804943a 	slli	r2,r5,16
   441a4:	84000104 	addi	r16,r16,4
   441a8:	280bd43a 	srai	r5,r5,16
   441ac:	1886b03a 	or	r3,r3,r2
   441b0:	30ffff15 	stw	r3,-4(r6)
   441b4:	9c3fed2e 	bgeu	r19,r16,4416c <quorem+0x13c>
   441b8:	900490ba 	slli	r2,r18,2
   441bc:	a085883a 	add	r2,r20,r2
   441c0:	10c00017 	ldw	r3,0(r2)
   441c4:	1800091e 	bne	r3,zero,441ec <quorem+0x1bc>
   441c8:	10bfff04 	addi	r2,r2,-4
   441cc:	a0800336 	bltu	r20,r2,441dc <quorem+0x1ac>
   441d0:	00000506 	br	441e8 <quorem+0x1b8>
   441d4:	94bfffc4 	addi	r18,r18,-1
   441d8:	a080032e 	bgeu	r20,r2,441e8 <quorem+0x1b8>
   441dc:	10c00017 	ldw	r3,0(r2)
   441e0:	10bfff04 	addi	r2,r2,-4
   441e4:	183ffb26 	beq	r3,zero,441d4 <quorem+0x1a4>
   441e8:	ac800415 	stw	r18,16(r21)
   441ec:	8c400044 	addi	r17,r17,1
   441f0:	8805883a 	mov	r2,r17
   441f4:	dfc00a17 	ldw	ra,40(sp)
   441f8:	df000917 	ldw	fp,36(sp)
   441fc:	ddc00817 	ldw	r23,32(sp)
   44200:	dd800717 	ldw	r22,28(sp)
   44204:	dd400617 	ldw	r21,24(sp)
   44208:	dd000517 	ldw	r20,20(sp)
   4420c:	dcc00417 	ldw	r19,16(sp)
   44210:	dc800317 	ldw	r18,12(sp)
   44214:	dc400217 	ldw	r17,8(sp)
   44218:	dc000117 	ldw	r16,4(sp)
   4421c:	dec00b04 	addi	sp,sp,44
   44220:	f800283a 	ret
   44224:	0005883a 	mov	r2,zero
   44228:	003ff206 	br	441f4 <quorem+0x1c4>

0004422c <_dtoa_r>:
   4422c:	20801017 	ldw	r2,64(r4)
   44230:	deffe104 	addi	sp,sp,-124
   44234:	dd401a15 	stw	r21,104(sp)
   44238:	dc801715 	stw	r18,92(sp)
   4423c:	dc401615 	stw	r17,88(sp)
   44240:	dc001515 	stw	r16,84(sp)
   44244:	dfc01e15 	stw	ra,120(sp)
   44248:	df001d15 	stw	fp,116(sp)
   4424c:	ddc01c15 	stw	r23,112(sp)
   44250:	dd801b15 	stw	r22,108(sp)
   44254:	dd001915 	stw	r20,100(sp)
   44258:	dcc01815 	stw	r19,96(sp)
   4425c:	d9400215 	stw	r5,8(sp)
   44260:	d9c00115 	stw	r7,4(sp)
   44264:	dc402117 	ldw	r17,132(sp)
   44268:	2021883a 	mov	r16,r4
   4426c:	3025883a 	mov	r18,r6
   44270:	302b883a 	mov	r21,r6
   44274:	10000826 	beq	r2,zero,44298 <_dtoa_r+0x6c>
   44278:	21801117 	ldw	r6,68(r4)
   4427c:	00c00044 	movi	r3,1
   44280:	100b883a 	mov	r5,r2
   44284:	1986983a 	sll	r3,r3,r6
   44288:	11800115 	stw	r6,4(r2)
   4428c:	10c00215 	stw	r3,8(r2)
   44290:	00479200 	call	47920 <_Bfree>
   44294:	80001015 	stw	zero,64(r16)
   44298:	90019316 	blt	r18,zero,448e8 <_dtoa_r+0x6bc>
   4429c:	88000015 	stw	zero,0(r17)
   442a0:	909ffc2c 	andhi	r2,r18,32752
   442a4:	00dffc34 	movhi	r3,32752
   442a8:	10c19826 	beq	r2,r3,4490c <_dtoa_r+0x6e0>
   442ac:	d9000217 	ldw	r4,8(sp)
   442b0:	000d883a 	mov	r6,zero
   442b4:	000f883a 	mov	r7,zero
   442b8:	a80b883a 	mov	r5,r21
   442bc:	004d4480 	call	4d448 <__eqdf2>
   442c0:	1000181e 	bne	r2,zero,44324 <_dtoa_r+0xf8>
   442c4:	d8c02017 	ldw	r3,128(sp)
   442c8:	00800044 	movi	r2,1
   442cc:	18800015 	stw	r2,0(r3)
   442d0:	d8802217 	ldw	r2,136(sp)
   442d4:	10000426 	beq	r2,zero,442e8 <_dtoa_r+0xbc>
   442d8:	d8c02217 	ldw	r3,136(sp)
   442dc:	00800174 	movhi	r2,5
   442e0:	10854044 	addi	r2,r2,5377
   442e4:	18800015 	stw	r2,0(r3)
   442e8:	07000174 	movhi	fp,5
   442ec:	e7054004 	addi	fp,fp,5376
   442f0:	e005883a 	mov	r2,fp
   442f4:	dfc01e17 	ldw	ra,120(sp)
   442f8:	df001d17 	ldw	fp,116(sp)
   442fc:	ddc01c17 	ldw	r23,112(sp)
   44300:	dd801b17 	ldw	r22,108(sp)
   44304:	dd401a17 	ldw	r21,104(sp)
   44308:	dd001917 	ldw	r20,100(sp)
   4430c:	dcc01817 	ldw	r19,96(sp)
   44310:	dc801717 	ldw	r18,92(sp)
   44314:	dc401617 	ldw	r17,88(sp)
   44318:	dc001517 	ldw	r16,84(sp)
   4431c:	dec01f04 	addi	sp,sp,124
   44320:	f800283a 	ret
   44324:	dcc00217 	ldw	r19,8(sp)
   44328:	d8801304 	addi	r2,sp,76
   4432c:	9022d53a 	srli	r17,r18,20
   44330:	d8800015 	stw	r2,0(sp)
   44334:	d9c01404 	addi	r7,sp,80
   44338:	980b883a 	mov	r5,r19
   4433c:	a80d883a 	mov	r6,r21
   44340:	8009883a 	mov	r4,r16
   44344:	00486840 	call	48684 <__d2b>
   44348:	102f883a 	mov	r23,r2
   4434c:	8801811e 	bne	r17,zero,44954 <_dtoa_r+0x728>
   44350:	dd001317 	ldw	r20,76(sp)
   44354:	dc401417 	ldw	r17,80(sp)
   44358:	a463883a 	add	r17,r20,r17
   4435c:	88810c84 	addi	r2,r17,1074
   44360:	10c00850 	cmplti	r3,r2,33
   44364:	1803101e 	bne	r3,zero,44fa8 <_dtoa_r+0xd7c>
   44368:	00c01004 	movi	r3,64
   4436c:	1887c83a 	sub	r3,r3,r2
   44370:	90c8983a 	sll	r4,r18,r3
   44374:	d8c00217 	ldw	r3,8(sp)
   44378:	88810484 	addi	r2,r17,1042
   4437c:	1884d83a 	srl	r2,r3,r2
   44380:	2088b03a 	or	r4,r4,r2
   44384:	004e8d00 	call	4e8d0 <__floatunsidf>
   44388:	1009883a 	mov	r4,r2
   4438c:	00bf8434 	movhi	r2,65040
   44390:	188b883a 	add	r5,r3,r2
   44394:	00800044 	movi	r2,1
   44398:	8c7fffc4 	addi	r17,r17,-1
   4439c:	d8800915 	stw	r2,36(sp)
   443a0:	000d883a 	mov	r6,zero
   443a4:	01cffe34 	movhi	r7,16376
   443a8:	004dda80 	call	4dda8 <__subdf3>
   443ac:	0198dbf4 	movhi	r6,25455
   443b0:	01cff4f4 	movhi	r7,16339
   443b4:	3190d844 	addi	r6,r6,17249
   443b8:	39e1e9c4 	addi	r7,r7,-30809
   443bc:	1009883a 	mov	r4,r2
   443c0:	180b883a 	mov	r5,r3
   443c4:	004d6d00 	call	4d6d0 <__muldf3>
   443c8:	01a2d874 	movhi	r6,35681
   443cc:	01cff1f4 	movhi	r7,16327
   443d0:	31b22cc4 	addi	r6,r6,-14157
   443d4:	39e28a04 	addi	r7,r7,-30168
   443d8:	180b883a 	mov	r5,r3
   443dc:	1009883a 	mov	r4,r2
   443e0:	004c2fc0 	call	4c2fc <__adddf3>
   443e4:	8809883a 	mov	r4,r17
   443e8:	1027883a 	mov	r19,r2
   443ec:	1825883a 	mov	r18,r3
   443f0:	004e8180 	call	4e818 <__floatsidf>
   443f4:	019427f4 	movhi	r6,20639
   443f8:	01cff4f4 	movhi	r7,16339
   443fc:	319e7ec4 	addi	r6,r6,31227
   44400:	39d104c4 	addi	r7,r7,17427
   44404:	1009883a 	mov	r4,r2
   44408:	180b883a 	mov	r5,r3
   4440c:	004d6d00 	call	4d6d0 <__muldf3>
   44410:	100d883a 	mov	r6,r2
   44414:	180f883a 	mov	r7,r3
   44418:	9809883a 	mov	r4,r19
   4441c:	900b883a 	mov	r5,r18
   44420:	004c2fc0 	call	4c2fc <__adddf3>
   44424:	1009883a 	mov	r4,r2
   44428:	180b883a 	mov	r5,r3
   4442c:	1027883a 	mov	r19,r2
   44430:	1825883a 	mov	r18,r3
   44434:	004e7980 	call	4e798 <__fixdfsi>
   44438:	000d883a 	mov	r6,zero
   4443c:	000f883a 	mov	r7,zero
   44440:	9809883a 	mov	r4,r19
   44444:	900b883a 	mov	r5,r18
   44448:	102d883a 	mov	r22,r2
   4444c:	004d5d80 	call	4d5d8 <__ledf2>
   44450:	1002a616 	blt	r2,zero,44eec <_dtoa_r+0xcc0>
   44454:	a469c83a 	sub	r20,r20,r17
   44458:	a0ffffc4 	addi	r3,r20,-1
   4445c:	b08005e8 	cmpgeui	r2,r22,23
   44460:	d8c00415 	stw	r3,16(sp)
   44464:	1002981e 	bne	r2,zero,44ec8 <_dtoa_r+0xc9c>
   44468:	b00490fa 	slli	r2,r22,3
   4446c:	02c00174 	movhi	r11,5
   44470:	5ac58704 	addi	r11,r11,5660
   44474:	5885883a 	add	r2,r11,r2
   44478:	11800017 	ldw	r6,0(r2)
   4447c:	11c00117 	ldw	r7,4(r2)
   44480:	d9000217 	ldw	r4,8(sp)
   44484:	a80b883a 	mov	r5,r21
   44488:	004d5d80 	call	4d5d8 <__ledf2>
   4448c:	1001d60e 	bge	r2,zero,44be8 <_dtoa_r+0x9bc>
   44490:	d8000815 	stw	zero,32(sp)
   44494:	a0bfffc4 	addi	r2,r20,-1
   44498:	b5bfffc4 	addi	r22,r22,-1
   4449c:	10028e16 	blt	r2,zero,44ed8 <_dtoa_r+0xcac>
   444a0:	d8000515 	stw	zero,20(sp)
   444a4:	b001d30e 	bge	r22,zero,44bf4 <_dtoa_r+0x9c8>
   444a8:	d8800517 	ldw	r2,20(sp)
   444ac:	d8c00117 	ldw	r3,4(sp)
   444b0:	dd800615 	stw	r22,24(sp)
   444b4:	1585c83a 	sub	r2,r2,r22
   444b8:	d8800515 	stw	r2,20(sp)
   444bc:	0585c83a 	sub	r2,zero,r22
   444c0:	d8800315 	stw	r2,12(sp)
   444c4:	188002a8 	cmpgeui	r2,r3,10
   444c8:	002d883a 	mov	r22,zero
   444cc:	1001d11e 	bne	r2,zero,44c14 <_dtoa_r+0x9e8>
   444d0:	18800190 	cmplti	r2,r3,6
   444d4:	1002a31e 	bne	r2,zero,44f64 <_dtoa_r+0xd38>
   444d8:	18ffff04 	addi	r3,r3,-4
   444dc:	d8c00115 	stw	r3,4(sp)
   444e0:	188000e0 	cmpeqi	r2,r3,3
   444e4:	0023883a 	mov	r17,zero
   444e8:	1003b71e 	bne	r2,zero,453c8 <_dtoa_r+0x119c>
   444ec:	18800108 	cmpgei	r2,r3,4
   444f0:	1003a626 	beq	r2,zero,4538c <_dtoa_r+0x1160>
   444f4:	d8800117 	ldw	r2,4(sp)
   444f8:	10800120 	cmpeqi	r2,r2,4
   444fc:	1003611e 	bne	r2,zero,45284 <_dtoa_r+0x1058>
   44500:	00800144 	movi	r2,5
   44504:	d8800115 	stw	r2,4(sp)
   44508:	00800044 	movi	r2,1
   4450c:	d8800715 	stw	r2,28(sp)
   44510:	d8801f17 	ldw	r2,124(sp)
   44514:	d8c00617 	ldw	r3,24(sp)
   44518:	10c5883a 	add	r2,r2,r3
   4451c:	14800044 	addi	r18,r2,1
   44520:	d8800a15 	stw	r2,40(sp)
   44524:	900d883a 	mov	r6,r18
   44528:	0485320e 	bge	zero,r18,459f4 <_dtoa_r+0x17c8>
   4452c:	30800608 	cmpgei	r2,r6,24
   44530:	10053026 	beq	r2,zero,459f4 <_dtoa_r+0x17c8>
   44534:	00c00044 	movi	r3,1
   44538:	00800104 	movi	r2,4
   4453c:	1085883a 	add	r2,r2,r2
   44540:	11000504 	addi	r4,r2,20
   44544:	180b883a 	mov	r5,r3
   44548:	18c00044 	addi	r3,r3,1
   4454c:	313ffb2e 	bgeu	r6,r4,4453c <_dtoa_r+0x310>
   44550:	81401115 	stw	r5,68(r16)
   44554:	8009883a 	mov	r4,r16
   44558:	004787c0 	call	4787c <_Balloc>
   4455c:	1039883a 	mov	fp,r2
   44560:	10050d26 	beq	r2,zero,45998 <_dtoa_r+0x176c>
   44564:	80801015 	stw	r2,64(r16)
   44568:	908003e8 	cmpgeui	r2,r18,15
   4456c:	1001291e 	bne	r2,zero,44a14 <_dtoa_r+0x7e8>
   44570:	88012826 	beq	r17,zero,44a14 <_dtoa_r+0x7e8>
   44574:	d8c00617 	ldw	r3,24(sp)
   44578:	00c3b40e 	bge	zero,r3,4544c <_dtoa_r+0x1220>
   4457c:	188003cc 	andi	r2,r3,15
   44580:	100490fa 	slli	r2,r2,3
   44584:	1823d13a 	srai	r17,r3,4
   44588:	02c00174 	movhi	r11,5
   4458c:	5ac58704 	addi	r11,r11,5660
   44590:	5885883a 	add	r2,r11,r2
   44594:	88c0040c 	andi	r3,r17,16
   44598:	12400017 	ldw	r9,0(r2)
   4459c:	12000117 	ldw	r8,4(r2)
   445a0:	18037626 	beq	r3,zero,4537c <_dtoa_r+0x1150>
   445a4:	00800174 	movhi	r2,5
   445a8:	10857d04 	addi	r2,r2,5620
   445ac:	d9000217 	ldw	r4,8(sp)
   445b0:	11800817 	ldw	r6,32(r2)
   445b4:	11c00917 	ldw	r7,36(r2)
   445b8:	a80b883a 	mov	r5,r21
   445bc:	da000c15 	stw	r8,48(sp)
   445c0:	da400b15 	stw	r9,44(sp)
   445c4:	004cc000 	call	4cc00 <__divdf3>
   445c8:	da400b17 	ldw	r9,44(sp)
   445cc:	da000c17 	ldw	r8,48(sp)
   445d0:	8c4003cc 	andi	r17,r17,15
   445d4:	1009883a 	mov	r4,r2
   445d8:	180b883a 	mov	r5,r3
   445dc:	04c000c4 	movi	r19,3
   445e0:	88001c26 	beq	r17,zero,44654 <_dtoa_r+0x428>
   445e4:	05000174 	movhi	r20,5
   445e8:	a5057d04 	addi	r20,r20,5620
   445ec:	dc800b15 	stw	r18,44(sp)
   445f0:	dc000c15 	stw	r16,48(sp)
   445f4:	9825883a 	mov	r18,r19
   445f8:	a021883a 	mov	r16,r20
   445fc:	2827883a 	mov	r19,r5
   44600:	2029883a 	mov	r20,r4
   44604:	400b883a 	mov	r5,r8
   44608:	4809883a 	mov	r4,r9
   4460c:	8980004c 	andi	r6,r17,1
   44610:	30000626 	beq	r6,zero,4462c <_dtoa_r+0x400>
   44614:	81800017 	ldw	r6,0(r16)
   44618:	81c00117 	ldw	r7,4(r16)
   4461c:	94800044 	addi	r18,r18,1
   44620:	004d6d00 	call	4d6d0 <__muldf3>
   44624:	1009883a 	mov	r4,r2
   44628:	180b883a 	mov	r5,r3
   4462c:	8823d07a 	srai	r17,r17,1
   44630:	84000204 	addi	r16,r16,8
   44634:	883ff51e 	bne	r17,zero,4460c <_dtoa_r+0x3e0>
   44638:	2811883a 	mov	r8,r5
   4463c:	dc000c17 	ldw	r16,48(sp)
   44640:	980b883a 	mov	r5,r19
   44644:	9027883a 	mov	r19,r18
   44648:	dc800b17 	ldw	r18,44(sp)
   4464c:	2013883a 	mov	r9,r4
   44650:	a009883a 	mov	r4,r20
   44654:	480d883a 	mov	r6,r9
   44658:	400f883a 	mov	r7,r8
   4465c:	004cc000 	call	4cc00 <__divdf3>
   44660:	1023883a 	mov	r17,r2
   44664:	1829883a 	mov	r20,r3
   44668:	d8800817 	ldw	r2,32(sp)
   4466c:	10000626 	beq	r2,zero,44688 <_dtoa_r+0x45c>
   44670:	000d883a 	mov	r6,zero
   44674:	01cffc34 	movhi	r7,16368
   44678:	8809883a 	mov	r4,r17
   4467c:	a00b883a 	mov	r5,r20
   44680:	004d5d80 	call	4d5d8 <__ledf2>
   44684:	10045a16 	blt	r2,zero,457f0 <_dtoa_r+0x15c4>
   44688:	9809883a 	mov	r4,r19
   4468c:	004e8180 	call	4e818 <__floatsidf>
   44690:	880d883a 	mov	r6,r17
   44694:	a00f883a 	mov	r7,r20
   44698:	1009883a 	mov	r4,r2
   4469c:	180b883a 	mov	r5,r3
   446a0:	004d6d00 	call	4d6d0 <__muldf3>
   446a4:	000d883a 	mov	r6,zero
   446a8:	01d00734 	movhi	r7,16412
   446ac:	1009883a 	mov	r4,r2
   446b0:	180b883a 	mov	r5,r3
   446b4:	004c2fc0 	call	4c2fc <__adddf3>
   446b8:	d8800b15 	stw	r2,44(sp)
   446bc:	00bf3034 	movhi	r2,64704
   446c0:	18a7883a 	add	r19,r3,r2
   446c4:	9000c026 	beq	r18,zero,449c8 <_dtoa_r+0x79c>
   446c8:	d8800617 	ldw	r2,24(sp)
   446cc:	dc800c15 	stw	r18,48(sp)
   446d0:	d8801115 	stw	r2,68(sp)
   446d4:	d8800c17 	ldw	r2,48(sp)
   446d8:	02c00174 	movhi	r11,5
   446dc:	5ac58704 	addi	r11,r11,5660
   446e0:	10bfffc4 	addi	r2,r2,-1
   446e4:	100490fa 	slli	r2,r2,3
   446e8:	8809883a 	mov	r4,r17
   446ec:	a00b883a 	mov	r5,r20
   446f0:	5885883a 	add	r2,r11,r2
   446f4:	10c00017 	ldw	r3,0(r2)
   446f8:	10800117 	ldw	r2,4(r2)
   446fc:	dac00d15 	stw	r11,52(sp)
   44700:	d8c00f15 	stw	r3,60(sp)
   44704:	d8801015 	stw	r2,64(sp)
   44708:	004e7980 	call	4e798 <__fixdfsi>
   4470c:	11400c04 	addi	r5,r2,48
   44710:	1009883a 	mov	r4,r2
   44714:	d9400e15 	stw	r5,56(sp)
   44718:	004e8180 	call	4e818 <__floatsidf>
   4471c:	8809883a 	mov	r4,r17
   44720:	a00b883a 	mov	r5,r20
   44724:	100d883a 	mov	r6,r2
   44728:	180f883a 	mov	r7,r3
   4472c:	004dda80 	call	4dda8 <__subdf3>
   44730:	d9000717 	ldw	r4,28(sp)
   44734:	dac00d17 	ldw	r11,52(sp)
   44738:	e2000044 	addi	r8,fp,1
   4473c:	1029883a 	mov	r20,r2
   44740:	1823883a 	mov	r17,r3
   44744:	2003ce26 	beq	r4,zero,45680 <_dtoa_r+0x1454>
   44748:	d9800f17 	ldw	r6,60(sp)
   4474c:	d9c01017 	ldw	r7,64(sp)
   44750:	0009883a 	mov	r4,zero
   44754:	014ff834 	movhi	r5,16352
   44758:	da001215 	stw	r8,72(sp)
   4475c:	004cc000 	call	4cc00 <__divdf3>
   44760:	d9800b17 	ldw	r6,44(sp)
   44764:	980f883a 	mov	r7,r19
   44768:	1009883a 	mov	r4,r2
   4476c:	180b883a 	mov	r5,r3
   44770:	004dda80 	call	4dda8 <__subdf3>
   44774:	1009883a 	mov	r4,r2
   44778:	d8800e17 	ldw	r2,56(sp)
   4477c:	180b883a 	mov	r5,r3
   44780:	a00d883a 	mov	r6,r20
   44784:	e0800005 	stb	r2,0(fp)
   44788:	880f883a 	mov	r7,r17
   4478c:	d9000d15 	stw	r4,52(sp)
   44790:	d8c00b15 	stw	r3,44(sp)
   44794:	004d4dc0 	call	4d4dc <__gedf2>
   44798:	d9400b17 	ldw	r5,44(sp)
   4479c:	d9000d17 	ldw	r4,52(sp)
   447a0:	da001217 	ldw	r8,72(sp)
   447a4:	00840b16 	blt	zero,r2,457d4 <_dtoa_r+0x15a8>
   447a8:	0005883a 	mov	r2,zero
   447ac:	dc800d15 	stw	r18,52(sp)
   447b0:	dd800e15 	stw	r22,56(sp)
   447b4:	ddc00b15 	stw	r23,44(sp)
   447b8:	dd400f15 	stw	r21,60(sp)
   447bc:	ddc00c17 	ldw	r23,48(sp)
   447c0:	402d883a 	mov	r22,r8
   447c4:	dc000c15 	stw	r16,48(sp)
   447c8:	2025883a 	mov	r18,r4
   447cc:	2827883a 	mov	r19,r5
   447d0:	102b883a 	mov	r21,r2
   447d4:	00002606 	br	44870 <_dtoa_r+0x644>
   447d8:	ad400044 	addi	r21,r21,1
   447dc:	adc4460e 	bge	r21,r23,458f8 <_dtoa_r+0x16cc>
   447e0:	9009883a 	mov	r4,r18
   447e4:	980b883a 	mov	r5,r19
   447e8:	000d883a 	mov	r6,zero
   447ec:	01d00934 	movhi	r7,16420
   447f0:	004d6d00 	call	4d6d0 <__muldf3>
   447f4:	000d883a 	mov	r6,zero
   447f8:	01d00934 	movhi	r7,16420
   447fc:	a009883a 	mov	r4,r20
   44800:	880b883a 	mov	r5,r17
   44804:	1025883a 	mov	r18,r2
   44808:	1827883a 	mov	r19,r3
   4480c:	004d6d00 	call	4d6d0 <__muldf3>
   44810:	180b883a 	mov	r5,r3
   44814:	1009883a 	mov	r4,r2
   44818:	1823883a 	mov	r17,r3
   4481c:	1029883a 	mov	r20,r2
   44820:	004e7980 	call	4e798 <__fixdfsi>
   44824:	1009883a 	mov	r4,r2
   44828:	1021883a 	mov	r16,r2
   4482c:	004e8180 	call	4e818 <__floatsidf>
   44830:	a009883a 	mov	r4,r20
   44834:	880b883a 	mov	r5,r17
   44838:	100d883a 	mov	r6,r2
   4483c:	180f883a 	mov	r7,r3
   44840:	004dda80 	call	4dda8 <__subdf3>
   44844:	b5800044 	addi	r22,r22,1
   44848:	82000c04 	addi	r8,r16,48
   4484c:	b23fffc5 	stb	r8,-1(r22)
   44850:	900d883a 	mov	r6,r18
   44854:	980f883a 	mov	r7,r19
   44858:	1009883a 	mov	r4,r2
   4485c:	180b883a 	mov	r5,r3
   44860:	1029883a 	mov	r20,r2
   44864:	1823883a 	mov	r17,r3
   44868:	004d5d80 	call	4d5d8 <__ledf2>
   4486c:	10041e16 	blt	r2,zero,458e8 <_dtoa_r+0x16bc>
   44870:	a00d883a 	mov	r6,r20
   44874:	880f883a 	mov	r7,r17
   44878:	0009883a 	mov	r4,zero
   4487c:	014ffc34 	movhi	r5,16368
   44880:	004dda80 	call	4dda8 <__subdf3>
   44884:	900d883a 	mov	r6,r18
   44888:	980f883a 	mov	r7,r19
   4488c:	1009883a 	mov	r4,r2
   44890:	180b883a 	mov	r5,r3
   44894:	004d5d80 	call	4d5d8 <__ledf2>
   44898:	103fcf0e 	bge	r2,zero,447d8 <_dtoa_r+0x5ac>
   4489c:	d8801117 	ldw	r2,68(sp)
   448a0:	b027883a 	mov	r19,r22
   448a4:	ddc00b17 	ldw	r23,44(sp)
   448a8:	dc000c17 	ldw	r16,48(sp)
   448ac:	15800044 	addi	r22,r2,1
   448b0:	00000106 	br	448b8 <_dtoa_r+0x68c>
   448b4:	e4c3ed26 	beq	fp,r19,4586c <_dtoa_r+0x1640>
   448b8:	98ffffc3 	ldbu	r3,-1(r19)
   448bc:	9811883a 	mov	r8,r19
   448c0:	9cffffc4 	addi	r19,r19,-1
   448c4:	18803fcc 	andi	r2,r3,255
   448c8:	1080201c 	xori	r2,r2,128
   448cc:	10bfe004 	addi	r2,r2,-128
   448d0:	10800e60 	cmpeqi	r2,r2,57
   448d4:	103ff71e 	bne	r2,zero,448b4 <_dtoa_r+0x688>
   448d8:	18c00044 	addi	r3,r3,1
   448dc:	98c00005 	stb	r3,0(r19)
   448e0:	b02b883a 	mov	r21,r22
   448e4:	00015a06 	br	44e50 <_dtoa_r+0xc24>
   448e8:	00a00034 	movhi	r2,32768
   448ec:	10bfffc4 	addi	r2,r2,-1
   448f0:	90aa703a 	and	r21,r18,r2
   448f4:	a825883a 	mov	r18,r21
   448f8:	00800044 	movi	r2,1
   448fc:	88800015 	stw	r2,0(r17)
   44900:	00dffc34 	movhi	r3,32752
   44904:	909ffc2c 	andhi	r2,r18,32752
   44908:	10fe681e 	bne	r2,r3,442ac <_dtoa_r+0x80>
   4490c:	d9002017 	ldw	r4,128(sp)
   44910:	00c9c3c4 	movi	r3,9999
   44914:	00800434 	movhi	r2,16
   44918:	20c00015 	stw	r3,0(r4)
   4491c:	d8c00217 	ldw	r3,8(sp)
   44920:	10bfffc4 	addi	r2,r2,-1
   44924:	9084703a 	and	r2,r18,r2
   44928:	10c4b03a 	or	r2,r2,r3
   4492c:	1000121e 	bne	r2,zero,44978 <_dtoa_r+0x74c>
   44930:	d8802217 	ldw	r2,136(sp)
   44934:	07000174 	movhi	fp,5
   44938:	10041e26 	beq	r2,zero,459b4 <_dtoa_r+0x1788>
   4493c:	00800174 	movhi	r2,5
   44940:	e7054904 	addi	fp,fp,5412
   44944:	10854b04 	addi	r2,r2,5420
   44948:	d8c02217 	ldw	r3,136(sp)
   4494c:	18800015 	stw	r2,0(r3)
   44950:	003e6706 	br	442f0 <_dtoa_r+0xc4>
   44954:	01400434 	movhi	r5,16
   44958:	297fffc4 	addi	r5,r5,-1
   4495c:	a94a703a 	and	r5,r21,r5
   44960:	dd001317 	ldw	r20,76(sp)
   44964:	9809883a 	mov	r4,r19
   44968:	294ffc34 	orhi	r5,r5,16368
   4496c:	8c7f0044 	addi	r17,r17,-1023
   44970:	d8000915 	stw	zero,36(sp)
   44974:	003e8a06 	br	443a0 <_dtoa_r+0x174>
   44978:	d8802217 	ldw	r2,136(sp)
   4497c:	07000174 	movhi	fp,5
   44980:	10023c1e 	bne	r2,zero,45274 <_dtoa_r+0x1048>
   44984:	e7054c04 	addi	fp,fp,5424
   44988:	003e5906 	br	442f0 <_dtoa_r+0xc4>
   4498c:	9809883a 	mov	r4,r19
   44990:	004e8180 	call	4e818 <__floatsidf>
   44994:	880d883a 	mov	r6,r17
   44998:	a00f883a 	mov	r7,r20
   4499c:	1009883a 	mov	r4,r2
   449a0:	180b883a 	mov	r5,r3
   449a4:	004d6d00 	call	4d6d0 <__muldf3>
   449a8:	000d883a 	mov	r6,zero
   449ac:	01d00734 	movhi	r7,16412
   449b0:	1009883a 	mov	r4,r2
   449b4:	180b883a 	mov	r5,r3
   449b8:	004c2fc0 	call	4c2fc <__adddf3>
   449bc:	d8800b15 	stw	r2,44(sp)
   449c0:	00bf3034 	movhi	r2,64704
   449c4:	18a7883a 	add	r19,r3,r2
   449c8:	8809883a 	mov	r4,r17
   449cc:	a00b883a 	mov	r5,r20
   449d0:	000d883a 	mov	r6,zero
   449d4:	01d00534 	movhi	r7,16404
   449d8:	004dda80 	call	4dda8 <__subdf3>
   449dc:	d9800b17 	ldw	r6,44(sp)
   449e0:	980f883a 	mov	r7,r19
   449e4:	1009883a 	mov	r4,r2
   449e8:	180b883a 	mov	r5,r3
   449ec:	1029883a 	mov	r20,r2
   449f0:	1823883a 	mov	r17,r3
   449f4:	004d4dc0 	call	4d4dc <__gedf2>
   449f8:	0083a716 	blt	zero,r2,45898 <_dtoa_r+0x166c>
   449fc:	d9800b17 	ldw	r6,44(sp)
   44a00:	99e0003c 	xorhi	r7,r19,32768
   44a04:	a009883a 	mov	r4,r20
   44a08:	880b883a 	mov	r5,r17
   44a0c:	004d5d80 	call	4d5d8 <__ledf2>
   44a10:	10001d16 	blt	r2,zero,44a88 <_dtoa_r+0x85c>
   44a14:	d8801417 	ldw	r2,80(sp)
   44a18:	10008816 	blt	r2,zero,44c3c <_dtoa_r+0xa10>
   44a1c:	d8c00617 	ldw	r3,24(sp)
   44a20:	18c003d0 	cmplti	r3,r3,15
   44a24:	18008526 	beq	r3,zero,44c3c <_dtoa_r+0xa10>
   44a28:	02c00174 	movhi	r11,5
   44a2c:	5ac58704 	addi	r11,r11,5660
   44a30:	d8800617 	ldw	r2,24(sp)
   44a34:	100490fa 	slli	r2,r2,3
   44a38:	5885883a 	add	r2,r11,r2
   44a3c:	10c00017 	ldw	r3,0(r2)
   44a40:	10800117 	ldw	r2,4(r2)
   44a44:	d8c00115 	stw	r3,4(sp)
   44a48:	d8800315 	stw	r2,12(sp)
   44a4c:	d8801f17 	ldw	r2,124(sp)
   44a50:	1000130e 	bge	r2,zero,44aa0 <_dtoa_r+0x874>
   44a54:	04801216 	blt	zero,r18,44aa0 <_dtoa_r+0x874>
   44a58:	90000b1e 	bne	r18,zero,44a88 <_dtoa_r+0x85c>
   44a5c:	d9000117 	ldw	r4,4(sp)
   44a60:	d9400317 	ldw	r5,12(sp)
   44a64:	000d883a 	mov	r6,zero
   44a68:	01d00534 	movhi	r7,16404
   44a6c:	004d6d00 	call	4d6d0 <__muldf3>
   44a70:	d9000217 	ldw	r4,8(sp)
   44a74:	100d883a 	mov	r6,r2
   44a78:	180f883a 	mov	r7,r3
   44a7c:	a80b883a 	mov	r5,r21
   44a80:	004d5d80 	call	4d5d8 <__ledf2>
   44a84:	00838416 	blt	zero,r2,45898 <_dtoa_r+0x166c>
   44a88:	e011883a 	mov	r8,fp
   44a8c:	d8000315 	stw	zero,12(sp)
   44a90:	0023883a 	mov	r17,zero
   44a94:	d8801f17 	ldw	r2,124(sp)
   44a98:	00a4303a 	nor	r18,zero,r2
   44a9c:	0001da06 	br	45208 <_dtoa_r+0xfdc>
   44aa0:	dcc00117 	ldw	r19,4(sp)
   44aa4:	dd000317 	ldw	r20,12(sp)
   44aa8:	dd800217 	ldw	r22,8(sp)
   44aac:	980d883a 	mov	r6,r19
   44ab0:	a00f883a 	mov	r7,r20
   44ab4:	b009883a 	mov	r4,r22
   44ab8:	a80b883a 	mov	r5,r21
   44abc:	004cc000 	call	4cc00 <__divdf3>
   44ac0:	180b883a 	mov	r5,r3
   44ac4:	1009883a 	mov	r4,r2
   44ac8:	004e7980 	call	4e798 <__fixdfsi>
   44acc:	1009883a 	mov	r4,r2
   44ad0:	1023883a 	mov	r17,r2
   44ad4:	004e8180 	call	4e818 <__floatsidf>
   44ad8:	980d883a 	mov	r6,r19
   44adc:	a00f883a 	mov	r7,r20
   44ae0:	1009883a 	mov	r4,r2
   44ae4:	180b883a 	mov	r5,r3
   44ae8:	004d6d00 	call	4d6d0 <__muldf3>
   44aec:	100d883a 	mov	r6,r2
   44af0:	b009883a 	mov	r4,r22
   44af4:	a80b883a 	mov	r5,r21
   44af8:	180f883a 	mov	r7,r3
   44afc:	004dda80 	call	4dda8 <__subdf3>
   44b00:	89000c04 	addi	r4,r17,48
   44b04:	e1000005 	stb	r4,0(fp)
   44b08:	91800060 	cmpeqi	r6,r18,1
   44b0c:	1009883a 	mov	r4,r2
   44b10:	180b883a 	mov	r5,r3
   44b14:	e4c00044 	addi	r19,fp,1
   44b18:	3002891e 	bne	r6,zero,45540 <_dtoa_r+0x1314>
   44b1c:	ddc00215 	stw	r23,8(sp)
   44b20:	05800044 	movi	r22,1
   44b24:	ddc00117 	ldw	r23,4(sp)
   44b28:	dc000415 	stw	r16,16(sp)
   44b2c:	a023883a 	mov	r17,r20
   44b30:	00001c06 	br	44ba4 <_dtoa_r+0x978>
   44b34:	b80d883a 	mov	r6,r23
   44b38:	880f883a 	mov	r7,r17
   44b3c:	a809883a 	mov	r4,r21
   44b40:	a00b883a 	mov	r5,r20
   44b44:	004cc000 	call	4cc00 <__divdf3>
   44b48:	180b883a 	mov	r5,r3
   44b4c:	1009883a 	mov	r4,r2
   44b50:	004e7980 	call	4e798 <__fixdfsi>
   44b54:	1009883a 	mov	r4,r2
   44b58:	1021883a 	mov	r16,r2
   44b5c:	004e8180 	call	4e818 <__floatsidf>
   44b60:	b80d883a 	mov	r6,r23
   44b64:	880f883a 	mov	r7,r17
   44b68:	1009883a 	mov	r4,r2
   44b6c:	180b883a 	mov	r5,r3
   44b70:	004d6d00 	call	4d6d0 <__muldf3>
   44b74:	a809883a 	mov	r4,r21
   44b78:	a00b883a 	mov	r5,r20
   44b7c:	100d883a 	mov	r6,r2
   44b80:	180f883a 	mov	r7,r3
   44b84:	004dda80 	call	4dda8 <__subdf3>
   44b88:	81000c04 	addi	r4,r16,48
   44b8c:	99000005 	stb	r4,0(r19)
   44b90:	b5800044 	addi	r22,r22,1
   44b94:	9cc00044 	addi	r19,r19,1
   44b98:	1009883a 	mov	r4,r2
   44b9c:	180b883a 	mov	r5,r3
   44ba0:	b4826426 	beq	r22,r18,45534 <_dtoa_r+0x1308>
   44ba4:	000d883a 	mov	r6,zero
   44ba8:	01d00934 	movhi	r7,16420
   44bac:	004d6d00 	call	4d6d0 <__muldf3>
   44bb0:	000d883a 	mov	r6,zero
   44bb4:	000f883a 	mov	r7,zero
   44bb8:	1009883a 	mov	r4,r2
   44bbc:	180b883a 	mov	r5,r3
   44bc0:	102b883a 	mov	r21,r2
   44bc4:	1829883a 	mov	r20,r3
   44bc8:	004d4480 	call	4d448 <__eqdf2>
   44bcc:	103fd91e 	bne	r2,zero,44b34 <_dtoa_r+0x908>
   44bd0:	d8800617 	ldw	r2,24(sp)
   44bd4:	ddc00217 	ldw	r23,8(sp)
   44bd8:	dc000417 	ldw	r16,16(sp)
   44bdc:	15400044 	addi	r21,r2,1
   44be0:	9811883a 	mov	r8,r19
   44be4:	00009a06 	br	44e50 <_dtoa_r+0xc24>
   44be8:	0502120e 	bge	zero,r20,45434 <_dtoa_r+0x1208>
   44bec:	d8000815 	stw	zero,32(sp)
   44bf0:	d8000515 	stw	zero,20(sp)
   44bf4:	d8800417 	ldw	r2,16(sp)
   44bf8:	d8c00117 	ldw	r3,4(sp)
   44bfc:	dd800615 	stw	r22,24(sp)
   44c00:	1585883a 	add	r2,r2,r22
   44c04:	d8800415 	stw	r2,16(sp)
   44c08:	d8000315 	stw	zero,12(sp)
   44c0c:	188002a8 	cmpgeui	r2,r3,10
   44c10:	103e2f26 	beq	r2,zero,444d0 <_dtoa_r+0x2a4>
   44c14:	00800044 	movi	r2,1
   44c18:	04400044 	movi	r17,1
   44c1c:	d8000115 	stw	zero,4(sp)
   44c20:	d8800715 	stw	r2,28(sp)
   44c24:	04bfffc4 	movi	r18,-1
   44c28:	d8001f15 	stw	zero,124(sp)
   44c2c:	80001115 	stw	zero,68(r16)
   44c30:	dc800a15 	stw	r18,40(sp)
   44c34:	000b883a 	mov	r5,zero
   44c38:	003e4606 	br	44554 <_dtoa_r+0x328>
   44c3c:	d8c00717 	ldw	r3,28(sp)
   44c40:	1800b41e 	bne	r3,zero,44f14 <_dtoa_r+0xce8>
   44c44:	dd000317 	ldw	r20,12(sp)
   44c48:	dcc00517 	ldw	r19,20(sp)
   44c4c:	d8000715 	stw	zero,28(sp)
   44c50:	0023883a 	mov	r17,zero
   44c54:	98000b26 	beq	r19,zero,44c84 <_dtoa_r+0xa58>
   44c58:	d8c00417 	ldw	r3,16(sp)
   44c5c:	00c0090e 	bge	zero,r3,44c84 <_dtoa_r+0xa58>
   44c60:	9805883a 	mov	r2,r19
   44c64:	1cc1ab16 	blt	r3,r19,45314 <_dtoa_r+0x10e8>
   44c68:	d8c00517 	ldw	r3,20(sp)
   44c6c:	98a7c83a 	sub	r19,r19,r2
   44c70:	1887c83a 	sub	r3,r3,r2
   44c74:	d8c00515 	stw	r3,20(sp)
   44c78:	d8c00417 	ldw	r3,16(sp)
   44c7c:	1885c83a 	sub	r2,r3,r2
   44c80:	d8800415 	stw	r2,16(sp)
   44c84:	d8800317 	ldw	r2,12(sp)
   44c88:	10000826 	beq	r2,zero,44cac <_dtoa_r+0xa80>
   44c8c:	d8800717 	ldw	r2,28(sp)
   44c90:	10000126 	beq	r2,zero,44c98 <_dtoa_r+0xa6c>
   44c94:	a0025a1e 	bne	r20,zero,45600 <_dtoa_r+0x13d4>
   44c98:	d9800317 	ldw	r6,12(sp)
   44c9c:	b80b883a 	mov	r5,r23
   44ca0:	8009883a 	mov	r4,r16
   44ca4:	0047fd40 	call	47fd4 <__pow5mult>
   44ca8:	102f883a 	mov	r23,r2
   44cac:	01400044 	movi	r5,1
   44cb0:	8009883a 	mov	r4,r16
   44cb4:	0047cd00 	call	47cd0 <__i2b>
   44cb8:	d8800315 	stw	r2,12(sp)
   44cbc:	b0015a1e 	bne	r22,zero,45228 <_dtoa_r+0xffc>
   44cc0:	d8800117 	ldw	r2,4(sp)
   44cc4:	10800090 	cmplti	r2,r2,2
   44cc8:	1001751e 	bne	r2,zero,452a0 <_dtoa_r+0x1074>
   44ccc:	00800044 	movi	r2,1
   44cd0:	d9400417 	ldw	r5,16(sp)
   44cd4:	1145883a 	add	r2,r2,r5
   44cd8:	108007cc 	andi	r2,r2,31
   44cdc:	10009826 	beq	r2,zero,44f40 <_dtoa_r+0xd14>
   44ce0:	00c00804 	movi	r3,32
   44ce4:	1887c83a 	sub	r3,r3,r2
   44ce8:	19000150 	cmplti	r4,r3,5
   44cec:	20017e1e 	bne	r4,zero,452e8 <_dtoa_r+0x10bc>
   44cf0:	00c00704 	movi	r3,28
   44cf4:	1885c83a 	sub	r2,r3,r2
   44cf8:	d8c00517 	ldw	r3,20(sp)
   44cfc:	98a7883a 	add	r19,r19,r2
   44d00:	1887883a 	add	r3,r3,r2
   44d04:	2885883a 	add	r2,r5,r2
   44d08:	d8c00515 	stw	r3,20(sp)
   44d0c:	d8800415 	stw	r2,16(sp)
   44d10:	d8800517 	ldw	r2,20(sp)
   44d14:	0080050e 	bge	zero,r2,44d2c <_dtoa_r+0xb00>
   44d18:	b80b883a 	mov	r5,r23
   44d1c:	100d883a 	mov	r6,r2
   44d20:	8009883a 	mov	r4,r16
   44d24:	00481140 	call	48114 <__lshift>
   44d28:	102f883a 	mov	r23,r2
   44d2c:	d8800417 	ldw	r2,16(sp)
   44d30:	0080050e 	bge	zero,r2,44d48 <_dtoa_r+0xb1c>
   44d34:	d9400317 	ldw	r5,12(sp)
   44d38:	100d883a 	mov	r6,r2
   44d3c:	8009883a 	mov	r4,r16
   44d40:	00481140 	call	48114 <__lshift>
   44d44:	d8800315 	stw	r2,12(sp)
   44d48:	d8800817 	ldw	r2,32(sp)
   44d4c:	10004c1e 	bne	r2,zero,44e80 <_dtoa_r+0xc54>
   44d50:	04811a0e 	bge	zero,r18,451bc <_dtoa_r+0xf90>
   44d54:	d8800717 	ldw	r2,28(sp)
   44d58:	1000a11e 	bne	r2,zero,44fe0 <_dtoa_r+0xdb4>
   44d5c:	d8800617 	ldw	r2,24(sp)
   44d60:	15400044 	addi	r21,r2,1
   44d64:	dd800317 	ldw	r22,12(sp)
   44d68:	04c00044 	movi	r19,1
   44d6c:	00000706 	br	44d8c <_dtoa_r+0xb60>
   44d70:	b80b883a 	mov	r5,r23
   44d74:	000f883a 	mov	r7,zero
   44d78:	01800284 	movi	r6,10
   44d7c:	8009883a 	mov	r4,r16
   44d80:	00479440 	call	47944 <__multadd>
   44d84:	102f883a 	mov	r23,r2
   44d88:	9cc00044 	addi	r19,r19,1
   44d8c:	b00b883a 	mov	r5,r22
   44d90:	b809883a 	mov	r4,r23
   44d94:	00440300 	call	44030 <quorem>
   44d98:	15000c04 	addi	r20,r2,48
   44d9c:	e4c5883a 	add	r2,fp,r19
   44da0:	153fffc5 	stb	r20,-1(r2)
   44da4:	9cbff216 	blt	r19,r18,44d70 <_dtoa_r+0xb44>
   44da8:	04800116 	blt	zero,r18,44db0 <_dtoa_r+0xb84>
   44dac:	04800044 	movi	r18,1
   44db0:	e4a5883a 	add	r18,fp,r18
   44db4:	d8000215 	stw	zero,8(sp)
   44db8:	b80b883a 	mov	r5,r23
   44dbc:	8009883a 	mov	r4,r16
   44dc0:	01800044 	movi	r6,1
   44dc4:	00481140 	call	48114 <__lshift>
   44dc8:	d9400317 	ldw	r5,12(sp)
   44dcc:	1009883a 	mov	r4,r2
   44dd0:	102f883a 	mov	r23,r2
   44dd4:	004829c0 	call	4829c <__mcmp>
   44dd8:	00800216 	blt	zero,r2,44de4 <_dtoa_r+0xbb8>
   44ddc:	00017c06 	br	453d0 <_dtoa_r+0x11a4>
   44de0:	e4819026 	beq	fp,r18,45424 <_dtoa_r+0x11f8>
   44de4:	90ffffc3 	ldbu	r3,-1(r18)
   44de8:	9011883a 	mov	r8,r18
   44dec:	94bfffc4 	addi	r18,r18,-1
   44df0:	18803fcc 	andi	r2,r3,255
   44df4:	1080201c 	xori	r2,r2,128
   44df8:	10bfe004 	addi	r2,r2,-128
   44dfc:	10800e60 	cmpeqi	r2,r2,57
   44e00:	103ff71e 	bne	r2,zero,44de0 <_dtoa_r+0xbb4>
   44e04:	18c00044 	addi	r3,r3,1
   44e08:	90c00005 	stb	r3,0(r18)
   44e0c:	d9400317 	ldw	r5,12(sp)
   44e10:	8009883a 	mov	r4,r16
   44e14:	da000115 	stw	r8,4(sp)
   44e18:	00479200 	call	47920 <_Bfree>
   44e1c:	da000117 	ldw	r8,4(sp)
   44e20:	88000b26 	beq	r17,zero,44e50 <_dtoa_r+0xc24>
   44e24:	d9400217 	ldw	r5,8(sp)
   44e28:	28000426 	beq	r5,zero,44e3c <_dtoa_r+0xc10>
   44e2c:	2c400326 	beq	r5,r17,44e3c <_dtoa_r+0xc10>
   44e30:	8009883a 	mov	r4,r16
   44e34:	00479200 	call	47920 <_Bfree>
   44e38:	da000117 	ldw	r8,4(sp)
   44e3c:	880b883a 	mov	r5,r17
   44e40:	8009883a 	mov	r4,r16
   44e44:	da000115 	stw	r8,4(sp)
   44e48:	00479200 	call	47920 <_Bfree>
   44e4c:	da000117 	ldw	r8,4(sp)
   44e50:	b80b883a 	mov	r5,r23
   44e54:	8009883a 	mov	r4,r16
   44e58:	da000115 	stw	r8,4(sp)
   44e5c:	00479200 	call	47920 <_Bfree>
   44e60:	da000117 	ldw	r8,4(sp)
   44e64:	d8802017 	ldw	r2,128(sp)
   44e68:	40000005 	stb	zero,0(r8)
   44e6c:	15400015 	stw	r21,0(r2)
   44e70:	d8802217 	ldw	r2,136(sp)
   44e74:	103d1e26 	beq	r2,zero,442f0 <_dtoa_r+0xc4>
   44e78:	12000015 	stw	r8,0(r2)
   44e7c:	003d1c06 	br	442f0 <_dtoa_r+0xc4>
   44e80:	d9400317 	ldw	r5,12(sp)
   44e84:	b809883a 	mov	r4,r23
   44e88:	004829c0 	call	4829c <__mcmp>
   44e8c:	103fb00e 	bge	r2,zero,44d50 <_dtoa_r+0xb24>
   44e90:	b80b883a 	mov	r5,r23
   44e94:	000f883a 	mov	r7,zero
   44e98:	01800284 	movi	r6,10
   44e9c:	8009883a 	mov	r4,r16
   44ea0:	00479440 	call	47944 <__multadd>
   44ea4:	d8c00617 	ldw	r3,24(sp)
   44ea8:	102f883a 	mov	r23,r2
   44eac:	d8800717 	ldw	r2,28(sp)
   44eb0:	1d7fffc4 	addi	r21,r3,-1
   44eb4:	1000411e 	bne	r2,zero,44fbc <_dtoa_r+0xd90>
   44eb8:	dc800a17 	ldw	r18,40(sp)
   44ebc:	0482940e 	bge	zero,r18,45910 <_dtoa_r+0x16e4>
   44ec0:	dd400617 	ldw	r21,24(sp)
   44ec4:	003fa706 	br	44d64 <_dtoa_r+0xb38>
   44ec8:	00800044 	movi	r2,1
   44ecc:	d8800815 	stw	r2,32(sp)
   44ed0:	a0bfffc4 	addi	r2,r20,-1
   44ed4:	103d720e 	bge	r2,zero,444a0 <_dtoa_r+0x274>
   44ed8:	00800044 	movi	r2,1
   44edc:	1505c83a 	sub	r2,r2,r20
   44ee0:	d8800515 	stw	r2,20(sp)
   44ee4:	d8000415 	stw	zero,16(sp)
   44ee8:	003d6e06 	br	444a4 <_dtoa_r+0x278>
   44eec:	b009883a 	mov	r4,r22
   44ef0:	004e8180 	call	4e818 <__floatsidf>
   44ef4:	980d883a 	mov	r6,r19
   44ef8:	900f883a 	mov	r7,r18
   44efc:	1009883a 	mov	r4,r2
   44f00:	180b883a 	mov	r5,r3
   44f04:	004d4480 	call	4d448 <__eqdf2>
   44f08:	103d5226 	beq	r2,zero,44454 <_dtoa_r+0x228>
   44f0c:	b5bfffc4 	addi	r22,r22,-1
   44f10:	003d5006 	br	44454 <_dtoa_r+0x228>
   44f14:	d8c00117 	ldw	r3,4(sp)
   44f18:	18c00088 	cmpgei	r3,r3,2
   44f1c:	18013526 	beq	r3,zero,453f4 <_dtoa_r+0x11c8>
   44f20:	d8800317 	ldw	r2,12(sp)
   44f24:	953fffc4 	addi	r20,r18,-1
   44f28:	1500fc16 	blt	r2,r20,4531c <_dtoa_r+0x10f0>
   44f2c:	1529c83a 	sub	r20,r2,r20
   44f30:	d8800517 	ldw	r2,20(sp)
   44f34:	9002620e 	bge	r18,zero,458c0 <_dtoa_r+0x1694>
   44f38:	14a7c83a 	sub	r19,r2,r18
   44f3c:	00010306 	br	4534c <_dtoa_r+0x1120>
   44f40:	00800704 	movi	r2,28
   44f44:	d8c00517 	ldw	r3,20(sp)
   44f48:	98a7883a 	add	r19,r19,r2
   44f4c:	1887883a 	add	r3,r3,r2
   44f50:	d8c00515 	stw	r3,20(sp)
   44f54:	d8c00417 	ldw	r3,16(sp)
   44f58:	1885883a 	add	r2,r3,r2
   44f5c:	d8800415 	stw	r2,16(sp)
   44f60:	003f6b06 	br	44d10 <_dtoa_r+0xae4>
   44f64:	d8c00117 	ldw	r3,4(sp)
   44f68:	188000e0 	cmpeqi	r2,r3,3
   44f6c:	1001151e 	bne	r2,zero,453c4 <_dtoa_r+0x1198>
   44f70:	18800108 	cmpgei	r2,r3,4
   44f74:	10000226 	beq	r2,zero,44f80 <_dtoa_r+0xd54>
   44f78:	04400044 	movi	r17,1
   44f7c:	003d5d06 	br	444f4 <_dtoa_r+0x2c8>
   44f80:	188000a0 	cmpeqi	r2,r3,2
   44f84:	10028d26 	beq	r2,zero,459bc <_dtoa_r+0x1790>
   44f88:	04400044 	movi	r17,1
   44f8c:	d8000715 	stw	zero,28(sp)
   44f90:	d8801f17 	ldw	r2,124(sp)
   44f94:	0080be0e 	bge	zero,r2,45290 <_dtoa_r+0x1064>
   44f98:	d8800a15 	stw	r2,40(sp)
   44f9c:	1025883a 	mov	r18,r2
   44fa0:	100d883a 	mov	r6,r2
   44fa4:	003d6106 	br	4452c <_dtoa_r+0x300>
   44fa8:	01000804 	movi	r4,32
   44fac:	2089c83a 	sub	r4,r4,r2
   44fb0:	d8800217 	ldw	r2,8(sp)
   44fb4:	1108983a 	sll	r4,r2,r4
   44fb8:	003cf206 	br	44384 <_dtoa_r+0x158>
   44fbc:	880b883a 	mov	r5,r17
   44fc0:	000f883a 	mov	r7,zero
   44fc4:	01800284 	movi	r6,10
   44fc8:	8009883a 	mov	r4,r16
   44fcc:	00479440 	call	47944 <__multadd>
   44fd0:	dc800a17 	ldw	r18,40(sp)
   44fd4:	1023883a 	mov	r17,r2
   44fd8:	04825d0e 	bge	zero,r18,45950 <_dtoa_r+0x1724>
   44fdc:	dd400615 	stw	r21,24(sp)
   44fe0:	04c0c616 	blt	zero,r19,452fc <_dtoa_r+0x10d0>
   44fe4:	b0016e1e 	bne	r22,zero,455a0 <_dtoa_r+0x1374>
   44fe8:	8827883a 	mov	r19,r17
   44fec:	e0bfffc4 	addi	r2,fp,-1
   44ff0:	1485883a 	add	r2,r2,r18
   44ff4:	d8800515 	stw	r2,20(sp)
   44ff8:	d8800217 	ldw	r2,8(sp)
   44ffc:	e02d883a 	mov	r22,fp
   45000:	df000815 	stw	fp,32(sp)
   45004:	1080004c 	andi	r2,r2,1
   45008:	d8800715 	stw	r2,28(sp)
   4500c:	dc800317 	ldw	r18,12(sp)
   45010:	b809883a 	mov	r4,r23
   45014:	900b883a 	mov	r5,r18
   45018:	00440300 	call	44030 <quorem>
   4501c:	880b883a 	mov	r5,r17
   45020:	b809883a 	mov	r4,r23
   45024:	102b883a 	mov	r21,r2
   45028:	004829c0 	call	4829c <__mcmp>
   4502c:	900b883a 	mov	r5,r18
   45030:	980d883a 	mov	r6,r19
   45034:	8009883a 	mov	r4,r16
   45038:	1025883a 	mov	r18,r2
   4503c:	00482f40 	call	482f4 <__mdiff>
   45040:	100b883a 	mov	r5,r2
   45044:	10800317 	ldw	r2,12(r2)
   45048:	af000c04 	addi	fp,r21,48
   4504c:	1000261e 	bne	r2,zero,450e8 <_dtoa_r+0xebc>
   45050:	b809883a 	mov	r4,r23
   45054:	d9400415 	stw	r5,16(sp)
   45058:	004829c0 	call	4829c <__mcmp>
   4505c:	d9400417 	ldw	r5,16(sp)
   45060:	1029883a 	mov	r20,r2
   45064:	8009883a 	mov	r4,r16
   45068:	00479200 	call	47920 <_Bfree>
   4506c:	a000401e 	bne	r20,zero,45170 <_dtoa_r+0xf44>
   45070:	d8800117 	ldw	r2,4(sp)
   45074:	1000021e 	bne	r2,zero,45080 <_dtoa_r+0xe54>
   45078:	d8800717 	ldw	r2,28(sp)
   4507c:	1000cb26 	beq	r2,zero,453ac <_dtoa_r+0x1180>
   45080:	90020816 	blt	r18,zero,458a4 <_dtoa_r+0x1678>
   45084:	d8800517 	ldw	r2,20(sp)
   45088:	b7000005 	stb	fp,0(r22)
   4508c:	b4800044 	addi	r18,r22,1
   45090:	15815426 	beq	r2,r22,455e4 <_dtoa_r+0x13b8>
   45094:	b80b883a 	mov	r5,r23
   45098:	000f883a 	mov	r7,zero
   4509c:	01800284 	movi	r6,10
   450a0:	8009883a 	mov	r4,r16
   450a4:	00479440 	call	47944 <__multadd>
   450a8:	102f883a 	mov	r23,r2
   450ac:	880b883a 	mov	r5,r17
   450b0:	000f883a 	mov	r7,zero
   450b4:	01800284 	movi	r6,10
   450b8:	8009883a 	mov	r4,r16
   450bc:	8cc02826 	beq	r17,r19,45160 <_dtoa_r+0xf34>
   450c0:	00479440 	call	47944 <__multadd>
   450c4:	980b883a 	mov	r5,r19
   450c8:	000f883a 	mov	r7,zero
   450cc:	01800284 	movi	r6,10
   450d0:	8009883a 	mov	r4,r16
   450d4:	1023883a 	mov	r17,r2
   450d8:	00479440 	call	47944 <__multadd>
   450dc:	1027883a 	mov	r19,r2
   450e0:	902d883a 	mov	r22,r18
   450e4:	003fc906 	br	4500c <_dtoa_r+0xde0>
   450e8:	8009883a 	mov	r4,r16
   450ec:	e029883a 	mov	r20,fp
   450f0:	df000817 	ldw	fp,32(sp)
   450f4:	00479200 	call	47920 <_Bfree>
   450f8:	90000616 	blt	r18,zero,45114 <_dtoa_r+0xee8>
   450fc:	d8800217 	ldw	r2,8(sp)
   45100:	d8c00117 	ldw	r3,4(sp)
   45104:	1080004c 	andi	r2,r2,1
   45108:	1ca4b03a 	or	r18,r3,r18
   4510c:	1484b03a 	or	r2,r2,r18
   45110:	1000201e 	bne	r2,zero,45194 <_dtoa_r+0xf68>
   45114:	b80b883a 	mov	r5,r23
   45118:	8009883a 	mov	r4,r16
   4511c:	01800044 	movi	r6,1
   45120:	00481140 	call	48114 <__lshift>
   45124:	d9400317 	ldw	r5,12(sp)
   45128:	1009883a 	mov	r4,r2
   4512c:	102f883a 	mov	r23,r2
   45130:	004829c0 	call	4829c <__mcmp>
   45134:	0080990e 	bge	zero,r2,4539c <_dtoa_r+0x1170>
   45138:	a0c00e60 	cmpeqi	r3,r20,57
   4513c:	1801ce1e 	bne	r3,zero,45878 <_dtoa_r+0x164c>
   45140:	ad000c44 	addi	r20,r21,49
   45144:	d8800617 	ldw	r2,24(sp)
   45148:	dc400215 	stw	r17,8(sp)
   4514c:	b2000044 	addi	r8,r22,1
   45150:	b5000005 	stb	r20,0(r22)
   45154:	15400044 	addi	r21,r2,1
   45158:	9823883a 	mov	r17,r19
   4515c:	003f2b06 	br	44e0c <_dtoa_r+0xbe0>
   45160:	00479440 	call	47944 <__multadd>
   45164:	1023883a 	mov	r17,r2
   45168:	1027883a 	mov	r19,r2
   4516c:	003fdc06 	br	450e0 <_dtoa_r+0xeb4>
   45170:	90022316 	blt	r18,zero,45a00 <_dtoa_r+0x17d4>
   45174:	d8800117 	ldw	r2,4(sp)
   45178:	14a4b03a 	or	r18,r2,r18
   4517c:	d8800717 	ldw	r2,28(sp)
   45180:	14a4b03a 	or	r18,r2,r18
   45184:	90021e26 	beq	r18,zero,45a00 <_dtoa_r+0x17d4>
   45188:	053fbe0e 	bge	zero,r20,45084 <_dtoa_r+0xe58>
   4518c:	e029883a 	mov	r20,fp
   45190:	df000817 	ldw	fp,32(sp)
   45194:	a0800e60 	cmpeqi	r2,r20,57
   45198:	1001b71e 	bne	r2,zero,45878 <_dtoa_r+0x164c>
   4519c:	d8800617 	ldw	r2,24(sp)
   451a0:	a0c00044 	addi	r3,r20,1
   451a4:	dc400215 	stw	r17,8(sp)
   451a8:	b2000044 	addi	r8,r22,1
   451ac:	15400044 	addi	r21,r2,1
   451b0:	b0c00005 	stb	r3,0(r22)
   451b4:	9823883a 	mov	r17,r19
   451b8:	003f1406 	br	44e0c <_dtoa_r+0xbe0>
   451bc:	d8800117 	ldw	r2,4(sp)
   451c0:	108000d0 	cmplti	r2,r2,3
   451c4:	103ee31e 	bne	r2,zero,44d54 <_dtoa_r+0xb28>
   451c8:	9000d81e 	bne	r18,zero,4552c <_dtoa_r+0x1300>
   451cc:	d9400317 	ldw	r5,12(sp)
   451d0:	8009883a 	mov	r4,r16
   451d4:	000f883a 	mov	r7,zero
   451d8:	01800144 	movi	r6,5
   451dc:	00479440 	call	47944 <__multadd>
   451e0:	100b883a 	mov	r5,r2
   451e4:	b809883a 	mov	r4,r23
   451e8:	d8800315 	stw	r2,12(sp)
   451ec:	004829c0 	call	4829c <__mcmp>
   451f0:	0080ce0e 	bge	zero,r2,4552c <_dtoa_r+0x1300>
   451f4:	00800c44 	movi	r2,49
   451f8:	e0800005 	stb	r2,0(fp)
   451fc:	d8800617 	ldw	r2,24(sp)
   45200:	e2000044 	addi	r8,fp,1
   45204:	14800044 	addi	r18,r2,1
   45208:	d9400317 	ldw	r5,12(sp)
   4520c:	8009883a 	mov	r4,r16
   45210:	da000115 	stw	r8,4(sp)
   45214:	00479200 	call	47920 <_Bfree>
   45218:	da000117 	ldw	r8,4(sp)
   4521c:	95400044 	addi	r21,r18,1
   45220:	883f061e 	bne	r17,zero,44e3c <_dtoa_r+0xc10>
   45224:	003f0a06 	br	44e50 <_dtoa_r+0xc24>
   45228:	100b883a 	mov	r5,r2
   4522c:	b00d883a 	mov	r6,r22
   45230:	8009883a 	mov	r4,r16
   45234:	0047fd40 	call	47fd4 <__pow5mult>
   45238:	d8c00117 	ldw	r3,4(sp)
   4523c:	d8800315 	stw	r2,12(sp)
   45240:	18c00090 	cmplti	r3,r3,2
   45244:	1800461e 	bne	r3,zero,45360 <_dtoa_r+0x1134>
   45248:	002d883a 	mov	r22,zero
   4524c:	d8c00317 	ldw	r3,12(sp)
   45250:	18800417 	ldw	r2,16(r3)
   45254:	10800104 	addi	r2,r2,4
   45258:	100490ba 	slli	r2,r2,2
   4525c:	1885883a 	add	r2,r3,r2
   45260:	11000017 	ldw	r4,0(r2)
   45264:	0047bac0 	call	47bac <__hi0bits>
   45268:	00c00804 	movi	r3,32
   4526c:	1885c83a 	sub	r2,r3,r2
   45270:	003e9706 	br	44cd0 <_dtoa_r+0xaa4>
   45274:	00800174 	movhi	r2,5
   45278:	e7054c04 	addi	fp,fp,5424
   4527c:	10854cc4 	addi	r2,r2,5427
   45280:	003db106 	br	44948 <_dtoa_r+0x71c>
   45284:	00800044 	movi	r2,1
   45288:	d8800715 	stw	r2,28(sp)
   4528c:	003f4006 	br	44f90 <_dtoa_r+0xd64>
   45290:	00800044 	movi	r2,1
   45294:	04800044 	movi	r18,1
   45298:	d8801f15 	stw	r2,124(sp)
   4529c:	003e6306 	br	44c2c <_dtoa_r+0xa00>
   452a0:	d8800217 	ldw	r2,8(sp)
   452a4:	103e891e 	bne	r2,zero,44ccc <_dtoa_r+0xaa0>
   452a8:	00800434 	movhi	r2,16
   452ac:	10bfffc4 	addi	r2,r2,-1
   452b0:	a884703a 	and	r2,r21,r2
   452b4:	103e851e 	bne	r2,zero,44ccc <_dtoa_r+0xaa0>
   452b8:	a89ffc2c 	andhi	r2,r21,32752
   452bc:	10017c26 	beq	r2,zero,458b0 <_dtoa_r+0x1684>
   452c0:	d8800517 	ldw	r2,20(sp)
   452c4:	10800044 	addi	r2,r2,1
   452c8:	d8800515 	stw	r2,20(sp)
   452cc:	d8800417 	ldw	r2,16(sp)
   452d0:	10800044 	addi	r2,r2,1
   452d4:	d8800415 	stw	r2,16(sp)
   452d8:	00800044 	movi	r2,1
   452dc:	b001761e 	bne	r22,zero,458b8 <_dtoa_r+0x168c>
   452e0:	102d883a 	mov	r22,r2
   452e4:	003e7906 	br	44ccc <_dtoa_r+0xaa0>
   452e8:	18c00120 	cmpeqi	r3,r3,4
   452ec:	183e881e 	bne	r3,zero,44d10 <_dtoa_r+0xae4>
   452f0:	00c00f04 	movi	r3,60
   452f4:	1885c83a 	sub	r2,r3,r2
   452f8:	003f1206 	br	44f44 <_dtoa_r+0xd18>
   452fc:	880b883a 	mov	r5,r17
   45300:	980d883a 	mov	r6,r19
   45304:	8009883a 	mov	r4,r16
   45308:	00481140 	call	48114 <__lshift>
   4530c:	1023883a 	mov	r17,r2
   45310:	003f3406 	br	44fe4 <_dtoa_r+0xdb8>
   45314:	1805883a 	mov	r2,r3
   45318:	003e5306 	br	44c68 <_dtoa_r+0xa3c>
   4531c:	d8800317 	ldw	r2,12(sp)
   45320:	d8c00517 	ldw	r3,20(sp)
   45324:	dd000315 	stw	r20,12(sp)
   45328:	a085c83a 	sub	r2,r20,r2
   4532c:	b0ad883a 	add	r22,r22,r2
   45330:	d8800417 	ldw	r2,16(sp)
   45334:	1827883a 	mov	r19,r3
   45338:	0029883a 	mov	r20,zero
   4533c:	1485883a 	add	r2,r2,r18
   45340:	d8800415 	stw	r2,16(sp)
   45344:	1c85883a 	add	r2,r3,r18
   45348:	d8800515 	stw	r2,20(sp)
   4534c:	01400044 	movi	r5,1
   45350:	8009883a 	mov	r4,r16
   45354:	0047cd00 	call	47cd0 <__i2b>
   45358:	1023883a 	mov	r17,r2
   4535c:	003e3d06 	br	44c54 <_dtoa_r+0xa28>
   45360:	d8800217 	ldw	r2,8(sp)
   45364:	103fb81e 	bne	r2,zero,45248 <_dtoa_r+0x101c>
   45368:	00800434 	movhi	r2,16
   4536c:	10bfffc4 	addi	r2,r2,-1
   45370:	a884703a 	and	r2,r21,r2
   45374:	103fb41e 	bne	r2,zero,45248 <_dtoa_r+0x101c>
   45378:	003fcf06 	br	452b8 <_dtoa_r+0x108c>
   4537c:	d9000217 	ldw	r4,8(sp)
   45380:	a80b883a 	mov	r5,r21
   45384:	04c00084 	movi	r19,2
   45388:	003c9506 	br	445e0 <_dtoa_r+0x3b4>
   4538c:	00800084 	movi	r2,2
   45390:	d8800115 	stw	r2,4(sp)
   45394:	d8000715 	stw	zero,28(sp)
   45398:	003efd06 	br	44f90 <_dtoa_r+0xd64>
   4539c:	103f691e 	bne	r2,zero,45144 <_dtoa_r+0xf18>
   453a0:	a080004c 	andi	r2,r20,1
   453a4:	103f641e 	bne	r2,zero,45138 <_dtoa_r+0xf0c>
   453a8:	003f6606 	br	45144 <_dtoa_r+0xf18>
   453ac:	e029883a 	mov	r20,fp
   453b0:	a0800e60 	cmpeqi	r2,r20,57
   453b4:	df000817 	ldw	fp,32(sp)
   453b8:	10012f1e 	bne	r2,zero,45878 <_dtoa_r+0x164c>
   453bc:	04bf6016 	blt	zero,r18,45140 <_dtoa_r+0xf14>
   453c0:	003f6006 	br	45144 <_dtoa_r+0xf18>
   453c4:	04400044 	movi	r17,1
   453c8:	d8000715 	stw	zero,28(sp)
   453cc:	003c5006 	br	44510 <_dtoa_r+0x2e4>
   453d0:	1000021e 	bne	r2,zero,453dc <_dtoa_r+0x11b0>
   453d4:	a0c0004c 	andi	r3,r20,1
   453d8:	183e821e 	bne	r3,zero,44de4 <_dtoa_r+0xbb8>
   453dc:	90bfffc7 	ldb	r2,-1(r18)
   453e0:	9011883a 	mov	r8,r18
   453e4:	94bfffc4 	addi	r18,r18,-1
   453e8:	10800c20 	cmpeqi	r2,r2,48
   453ec:	103ffb1e 	bne	r2,zero,453dc <_dtoa_r+0x11b0>
   453f0:	003e8606 	br	44e0c <_dtoa_r+0xbe0>
   453f4:	d8c00917 	ldw	r3,36(sp)
   453f8:	18009526 	beq	r3,zero,45650 <_dtoa_r+0x1424>
   453fc:	d8c00517 	ldw	r3,20(sp)
   45400:	d9000417 	ldw	r4,16(sp)
   45404:	10810cc4 	addi	r2,r2,1075
   45408:	dd000317 	ldw	r20,12(sp)
   4540c:	2089883a 	add	r4,r4,r2
   45410:	1885883a 	add	r2,r3,r2
   45414:	1827883a 	mov	r19,r3
   45418:	d9000415 	stw	r4,16(sp)
   4541c:	d8800515 	stw	r2,20(sp)
   45420:	003fca06 	br	4534c <_dtoa_r+0x1120>
   45424:	00800c44 	movi	r2,49
   45428:	e0800005 	stb	r2,0(fp)
   4542c:	ad400044 	addi	r21,r21,1
   45430:	003e7606 	br	44e0c <_dtoa_r+0xbe0>
   45434:	00800044 	movi	r2,1
   45438:	1505c83a 	sub	r2,r2,r20
   4543c:	d8800515 	stw	r2,20(sp)
   45440:	d8000415 	stw	zero,16(sp)
   45444:	d8000815 	stw	zero,32(sp)
   45448:	003dea06 	br	44bf4 <_dtoa_r+0x9c8>
   4544c:	d8800617 	ldw	r2,24(sp)
   45450:	1000e326 	beq	r2,zero,457e0 <_dtoa_r+0x15b4>
   45454:	0091c83a 	sub	r8,zero,r2
   45458:	408003cc 	andi	r2,r8,15
   4545c:	100490fa 	slli	r2,r2,3
   45460:	02c00174 	movhi	r11,5
   45464:	5ac58704 	addi	r11,r11,5660
   45468:	5885883a 	add	r2,r11,r2
   4546c:	4011d13a 	srai	r8,r8,4
   45470:	11800017 	ldw	r6,0(r2)
   45474:	11c00117 	ldw	r7,4(r2)
   45478:	d9000217 	ldw	r4,8(sp)
   4547c:	a80b883a 	mov	r5,r21
   45480:	da000b15 	stw	r8,44(sp)
   45484:	004d6d00 	call	4d6d0 <__muldf3>
   45488:	da000b17 	ldw	r8,44(sp)
   4548c:	40013726 	beq	r8,zero,4596c <_dtoa_r+0x1740>
   45490:	02400174 	movhi	r9,5
   45494:	000b883a 	mov	r5,zero
   45498:	04c00084 	movi	r19,2
   4549c:	4a457d04 	addi	r9,r9,5620
   454a0:	dc800b15 	stw	r18,44(sp)
   454a4:	1009883a 	mov	r4,r2
   454a8:	9825883a 	mov	r18,r19
   454ac:	d8800c15 	stw	r2,48(sp)
   454b0:	8027883a 	mov	r19,r16
   454b4:	2805883a 	mov	r2,r5
   454b8:	1829883a 	mov	r20,r3
   454bc:	4021883a 	mov	r16,r8
   454c0:	4823883a 	mov	r17,r9
   454c4:	180b883a 	mov	r5,r3
   454c8:	8180004c 	andi	r6,r16,1
   454cc:	30000726 	beq	r6,zero,454ec <_dtoa_r+0x12c0>
   454d0:	89800017 	ldw	r6,0(r17)
   454d4:	89c00117 	ldw	r7,4(r17)
   454d8:	94800044 	addi	r18,r18,1
   454dc:	004d6d00 	call	4d6d0 <__muldf3>
   454e0:	1009883a 	mov	r4,r2
   454e4:	180b883a 	mov	r5,r3
   454e8:	00800044 	movi	r2,1
   454ec:	8021d07a 	srai	r16,r16,1
   454f0:	8c400204 	addi	r17,r17,8
   454f4:	803ff41e 	bne	r16,zero,454c8 <_dtoa_r+0x129c>
   454f8:	a007883a 	mov	r3,r20
   454fc:	2829883a 	mov	r20,r5
   45500:	100b883a 	mov	r5,r2
   45504:	29403fcc 	andi	r5,r5,255
   45508:	9821883a 	mov	r16,r19
   4550c:	d8800c17 	ldw	r2,48(sp)
   45510:	9027883a 	mov	r19,r18
   45514:	2023883a 	mov	r17,r4
   45518:	dc800b17 	ldw	r18,44(sp)
   4551c:	283c521e 	bne	r5,zero,44668 <_dtoa_r+0x43c>
   45520:	1023883a 	mov	r17,r2
   45524:	1829883a 	mov	r20,r3
   45528:	003c4f06 	br	44668 <_dtoa_r+0x43c>
   4552c:	e011883a 	mov	r8,fp
   45530:	003d5806 	br	44a94 <_dtoa_r+0x868>
   45534:	8023883a 	mov	r17,r16
   45538:	ddc00217 	ldw	r23,8(sp)
   4553c:	dc000417 	ldw	r16,16(sp)
   45540:	200d883a 	mov	r6,r4
   45544:	280f883a 	mov	r7,r5
   45548:	004c2fc0 	call	4c2fc <__adddf3>
   4554c:	1009883a 	mov	r4,r2
   45550:	d9800117 	ldw	r6,4(sp)
   45554:	d9c00317 	ldw	r7,12(sp)
   45558:	1029883a 	mov	r20,r2
   4555c:	d8800617 	ldw	r2,24(sp)
   45560:	180b883a 	mov	r5,r3
   45564:	1825883a 	mov	r18,r3
   45568:	15400044 	addi	r21,r2,1
   4556c:	004d4dc0 	call	4d4dc <__gedf2>
   45570:	a82d883a 	mov	r22,r21
   45574:	00bcd016 	blt	zero,r2,448b8 <_dtoa_r+0x68c>
   45578:	d9800117 	ldw	r6,4(sp)
   4557c:	d9c00317 	ldw	r7,12(sp)
   45580:	a009883a 	mov	r4,r20
   45584:	900b883a 	mov	r5,r18
   45588:	004d4480 	call	4d448 <__eqdf2>
   4558c:	1000021e 	bne	r2,zero,45598 <_dtoa_r+0x136c>
   45590:	8880004c 	andi	r2,r17,1
   45594:	103cc81e 	bne	r2,zero,448b8 <_dtoa_r+0x68c>
   45598:	9811883a 	mov	r8,r19
   4559c:	003e2c06 	br	44e50 <_dtoa_r+0xc24>
   455a0:	89400117 	ldw	r5,4(r17)
   455a4:	8009883a 	mov	r4,r16
   455a8:	004787c0 	call	4787c <_Balloc>
   455ac:	1027883a 	mov	r19,r2
   455b0:	1000f226 	beq	r2,zero,4597c <_dtoa_r+0x1750>
   455b4:	89800417 	ldw	r6,16(r17)
   455b8:	89400304 	addi	r5,r17,12
   455bc:	11000304 	addi	r4,r2,12
   455c0:	31800084 	addi	r6,r6,2
   455c4:	300c90ba 	slli	r6,r6,2
   455c8:	004755c0 	call	4755c <memcpy>
   455cc:	980b883a 	mov	r5,r19
   455d0:	01800044 	movi	r6,1
   455d4:	8009883a 	mov	r4,r16
   455d8:	00481140 	call	48114 <__lshift>
   455dc:	1027883a 	mov	r19,r2
   455e0:	003e8206 	br	44fec <_dtoa_r+0xdc0>
   455e4:	d8800617 	ldw	r2,24(sp)
   455e8:	e029883a 	mov	r20,fp
   455ec:	dc400215 	stw	r17,8(sp)
   455f0:	df000817 	ldw	fp,32(sp)
   455f4:	15400044 	addi	r21,r2,1
   455f8:	9823883a 	mov	r17,r19
   455fc:	003dee06 	br	44db8 <_dtoa_r+0xb8c>
   45600:	880b883a 	mov	r5,r17
   45604:	a00d883a 	mov	r6,r20
   45608:	8009883a 	mov	r4,r16
   4560c:	0047fd40 	call	47fd4 <__pow5mult>
   45610:	b80d883a 	mov	r6,r23
   45614:	100b883a 	mov	r5,r2
   45618:	8009883a 	mov	r4,r16
   4561c:	1023883a 	mov	r17,r2
   45620:	0047d800 	call	47d80 <__multiply>
   45624:	d8800915 	stw	r2,36(sp)
   45628:	d8800317 	ldw	r2,12(sp)
   4562c:	b80b883a 	mov	r5,r23
   45630:	8009883a 	mov	r4,r16
   45634:	1529c83a 	sub	r20,r2,r20
   45638:	dd000315 	stw	r20,12(sp)
   4563c:	00479200 	call	47920 <_Bfree>
   45640:	d8800917 	ldw	r2,36(sp)
   45644:	102f883a 	mov	r23,r2
   45648:	a03d9826 	beq	r20,zero,44cac <_dtoa_r+0xa80>
   4564c:	003d9206 	br	44c98 <_dtoa_r+0xa6c>
   45650:	d8c01317 	ldw	r3,76(sp)
   45654:	00800d84 	movi	r2,54
   45658:	d9000517 	ldw	r4,20(sp)
   4565c:	10c5c83a 	sub	r2,r2,r3
   45660:	d8c00417 	ldw	r3,16(sp)
   45664:	dd000317 	ldw	r20,12(sp)
   45668:	2027883a 	mov	r19,r4
   4566c:	1887883a 	add	r3,r3,r2
   45670:	2085883a 	add	r2,r4,r2
   45674:	d8c00415 	stw	r3,16(sp)
   45678:	d8800515 	stw	r2,20(sp)
   4567c:	003f3306 	br	4534c <_dtoa_r+0x1120>
   45680:	d9000b17 	ldw	r4,44(sp)
   45684:	d9800f17 	ldw	r6,60(sp)
   45688:	d9c01017 	ldw	r7,64(sp)
   4568c:	980b883a 	mov	r5,r19
   45690:	dac01215 	stw	r11,72(sp)
   45694:	da000d15 	stw	r8,52(sp)
   45698:	004d6d00 	call	4d6d0 <__muldf3>
   4569c:	d9000e17 	ldw	r4,56(sp)
   456a0:	d9400c17 	ldw	r5,48(sp)
   456a4:	d8800715 	stw	r2,28(sp)
   456a8:	e1000005 	stb	r4,0(fp)
   456ac:	d8c00915 	stw	r3,36(sp)
   456b0:	29000058 	cmpnei	r4,r5,1
   456b4:	da000d17 	ldw	r8,52(sp)
   456b8:	dac01217 	ldw	r11,72(sp)
   456bc:	e167883a 	add	r19,fp,r5
   456c0:	2000a126 	beq	r4,zero,45948 <_dtoa_r+0x171c>
   456c4:	dc000c15 	stw	r16,48(sp)
   456c8:	dc800b15 	stw	r18,44(sp)
   456cc:	4021883a 	mov	r16,r8
   456d0:	a009883a 	mov	r4,r20
   456d4:	880b883a 	mov	r5,r17
   456d8:	dac00d15 	stw	r11,52(sp)
   456dc:	000d883a 	mov	r6,zero
   456e0:	01d00934 	movhi	r7,16420
   456e4:	004d6d00 	call	4d6d0 <__muldf3>
   456e8:	180b883a 	mov	r5,r3
   456ec:	1009883a 	mov	r4,r2
   456f0:	1825883a 	mov	r18,r3
   456f4:	1029883a 	mov	r20,r2
   456f8:	004e7980 	call	4e798 <__fixdfsi>
   456fc:	1009883a 	mov	r4,r2
   45700:	1023883a 	mov	r17,r2
   45704:	004e8180 	call	4e818 <__floatsidf>
   45708:	a009883a 	mov	r4,r20
   4570c:	900b883a 	mov	r5,r18
   45710:	100d883a 	mov	r6,r2
   45714:	180f883a 	mov	r7,r3
   45718:	84000044 	addi	r16,r16,1
   4571c:	8c400c04 	addi	r17,r17,48
   45720:	004dda80 	call	4dda8 <__subdf3>
   45724:	847fffc5 	stb	r17,-1(r16)
   45728:	1009883a 	mov	r4,r2
   4572c:	180b883a 	mov	r5,r3
   45730:	9c3fea1e 	bne	r19,r16,456dc <_dtoa_r+0x14b0>
   45734:	dc800b17 	ldw	r18,44(sp)
   45738:	dc000c17 	ldw	r16,48(sp)
   4573c:	dac00d17 	ldw	r11,52(sp)
   45740:	1029883a 	mov	r20,r2
   45744:	1823883a 	mov	r17,r3
   45748:	d9000717 	ldw	r4,28(sp)
   4574c:	d9400917 	ldw	r5,36(sp)
   45750:	000d883a 	mov	r6,zero
   45754:	01cff834 	movhi	r7,16352
   45758:	dac00b15 	stw	r11,44(sp)
   4575c:	004c2fc0 	call	4c2fc <__adddf3>
   45760:	100d883a 	mov	r6,r2
   45764:	180f883a 	mov	r7,r3
   45768:	a009883a 	mov	r4,r20
   4576c:	880b883a 	mov	r5,r17
   45770:	004d4dc0 	call	4d4dc <__gedf2>
   45774:	00805916 	blt	zero,r2,458dc <_dtoa_r+0x16b0>
   45778:	d9800717 	ldw	r6,28(sp)
   4577c:	d9c00917 	ldw	r7,36(sp)
   45780:	0009883a 	mov	r4,zero
   45784:	014ff834 	movhi	r5,16352
   45788:	004dda80 	call	4dda8 <__subdf3>
   4578c:	100d883a 	mov	r6,r2
   45790:	180f883a 	mov	r7,r3
   45794:	a009883a 	mov	r4,r20
   45798:	880b883a 	mov	r5,r17
   4579c:	004d5d80 	call	4d5d8 <__ledf2>
   457a0:	dac00b17 	ldw	r11,44(sp)
   457a4:	10000616 	blt	r2,zero,457c0 <_dtoa_r+0x1594>
   457a8:	d8801417 	ldw	r2,80(sp)
   457ac:	103d2516 	blt	r2,zero,44c44 <_dtoa_r+0xa18>
   457b0:	d8800617 	ldw	r2,24(sp)
   457b4:	108003c8 	cmpgei	r2,r2,15
   457b8:	103d221e 	bne	r2,zero,44c44 <_dtoa_r+0xa18>
   457bc:	003c9c06 	br	44a30 <_dtoa_r+0x804>
   457c0:	98bfffc7 	ldb	r2,-1(r19)
   457c4:	9811883a 	mov	r8,r19
   457c8:	9cffffc4 	addi	r19,r19,-1
   457cc:	10800c20 	cmpeqi	r2,r2,48
   457d0:	103ffb1e 	bne	r2,zero,457c0 <_dtoa_r+0x1594>
   457d4:	d8801117 	ldw	r2,68(sp)
   457d8:	15400044 	addi	r21,r2,1
   457dc:	003d9c06 	br	44e50 <_dtoa_r+0xc24>
   457e0:	dc400217 	ldw	r17,8(sp)
   457e4:	a829883a 	mov	r20,r21
   457e8:	04c00084 	movi	r19,2
   457ec:	003b9e06 	br	44668 <_dtoa_r+0x43c>
   457f0:	903c6626 	beq	r18,zero,4498c <_dtoa_r+0x760>
   457f4:	d8800a17 	ldw	r2,40(sp)
   457f8:	00bc860e 	bge	zero,r2,44a14 <_dtoa_r+0x7e8>
   457fc:	a00b883a 	mov	r5,r20
   45800:	8809883a 	mov	r4,r17
   45804:	000d883a 	mov	r6,zero
   45808:	01d00934 	movhi	r7,16420
   4580c:	004d6d00 	call	4d6d0 <__muldf3>
   45810:	99000044 	addi	r4,r19,1
   45814:	1023883a 	mov	r17,r2
   45818:	1829883a 	mov	r20,r3
   4581c:	004e8180 	call	4e818 <__floatsidf>
   45820:	880d883a 	mov	r6,r17
   45824:	a00f883a 	mov	r7,r20
   45828:	1009883a 	mov	r4,r2
   4582c:	180b883a 	mov	r5,r3
   45830:	004d6d00 	call	4d6d0 <__muldf3>
   45834:	1009883a 	mov	r4,r2
   45838:	000d883a 	mov	r6,zero
   4583c:	01d00734 	movhi	r7,16412
   45840:	180b883a 	mov	r5,r3
   45844:	004c2fc0 	call	4c2fc <__adddf3>
   45848:	d9000617 	ldw	r4,24(sp)
   4584c:	d8800b15 	stw	r2,44(sp)
   45850:	00bf3034 	movhi	r2,64704
   45854:	18a7883a 	add	r19,r3,r2
   45858:	d8800a17 	ldw	r2,40(sp)
   4585c:	213fffc4 	addi	r4,r4,-1
   45860:	d9001115 	stw	r4,68(sp)
   45864:	d8800c15 	stw	r2,48(sp)
   45868:	003b9a06 	br	446d4 <_dtoa_r+0x4a8>
   4586c:	00c00c44 	movi	r3,49
   45870:	b5800044 	addi	r22,r22,1
   45874:	003c1906 	br	448dc <_dtoa_r+0x6b0>
   45878:	00800e44 	movi	r2,57
   4587c:	b0800005 	stb	r2,0(r22)
   45880:	d8800617 	ldw	r2,24(sp)
   45884:	dc400215 	stw	r17,8(sp)
   45888:	b4800044 	addi	r18,r22,1
   4588c:	15400044 	addi	r21,r2,1
   45890:	9823883a 	mov	r17,r19
   45894:	003d5306 	br	44de4 <_dtoa_r+0xbb8>
   45898:	d8000315 	stw	zero,12(sp)
   4589c:	0023883a 	mov	r17,zero
   458a0:	003e5406 	br	451f4 <_dtoa_r+0xfc8>
   458a4:	e029883a 	mov	r20,fp
   458a8:	df000817 	ldw	fp,32(sp)
   458ac:	003e2506 	br	45144 <_dtoa_r+0xf18>
   458b0:	0005883a 	mov	r2,zero
   458b4:	003e8906 	br	452dc <_dtoa_r+0x10b0>
   458b8:	102d883a 	mov	r22,r2
   458bc:	003e6306 	br	4524c <_dtoa_r+0x1020>
   458c0:	d8c00417 	ldw	r3,16(sp)
   458c4:	1027883a 	mov	r19,r2
   458c8:	1485883a 	add	r2,r2,r18
   458cc:	1c87883a 	add	r3,r3,r18
   458d0:	d8c00415 	stw	r3,16(sp)
   458d4:	d8800515 	stw	r2,20(sp)
   458d8:	003e9c06 	br	4534c <_dtoa_r+0x1120>
   458dc:	d8801117 	ldw	r2,68(sp)
   458e0:	15800044 	addi	r22,r2,1
   458e4:	003bf406 	br	448b8 <_dtoa_r+0x68c>
   458e8:	ddc00b17 	ldw	r23,44(sp)
   458ec:	dc000c17 	ldw	r16,48(sp)
   458f0:	b011883a 	mov	r8,r22
   458f4:	003fb706 	br	457d4 <_dtoa_r+0x15a8>
   458f8:	dc800d17 	ldw	r18,52(sp)
   458fc:	dd800e17 	ldw	r22,56(sp)
   45900:	ddc00b17 	ldw	r23,44(sp)
   45904:	dc000c17 	ldw	r16,48(sp)
   45908:	dd400f17 	ldw	r21,60(sp)
   4590c:	003c4106 	br	44a14 <_dtoa_r+0x7e8>
   45910:	d8800117 	ldw	r2,4(sp)
   45914:	108000c8 	cmpgei	r2,r2,3
   45918:	1000081e 	bne	r2,zero,4593c <_dtoa_r+0x1710>
   4591c:	d9400317 	ldw	r5,12(sp)
   45920:	b809883a 	mov	r4,r23
   45924:	00440300 	call	44030 <quorem>
   45928:	15000c04 	addi	r20,r2,48
   4592c:	dd400617 	ldw	r21,24(sp)
   45930:	dc800a17 	ldw	r18,40(sp)
   45934:	e5000005 	stb	r20,0(fp)
   45938:	003d1b06 	br	44da8 <_dtoa_r+0xb7c>
   4593c:	dc800a17 	ldw	r18,40(sp)
   45940:	dd400615 	stw	r21,24(sp)
   45944:	003e2006 	br	451c8 <_dtoa_r+0xf9c>
   45948:	4027883a 	mov	r19,r8
   4594c:	003f7e06 	br	45748 <_dtoa_r+0x151c>
   45950:	d8800117 	ldw	r2,4(sp)
   45954:	108000c8 	cmpgei	r2,r2,3
   45958:	103ff81e 	bne	r2,zero,4593c <_dtoa_r+0x1710>
   4595c:	dd400615 	stw	r21,24(sp)
   45960:	dc800a17 	ldw	r18,40(sp)
   45964:	04fd9f0e 	bge	zero,r19,44fe4 <_dtoa_r+0xdb8>
   45968:	003e6406 	br	452fc <_dtoa_r+0x10d0>
   4596c:	1023883a 	mov	r17,r2
   45970:	1829883a 	mov	r20,r3
   45974:	04c00084 	movi	r19,2
   45978:	003b3b06 	br	44668 <_dtoa_r+0x43c>
   4597c:	01c00174 	movhi	r7,5
   45980:	01000174 	movhi	r4,5
   45984:	39c54d04 	addi	r7,r7,5428
   45988:	000d883a 	mov	r6,zero
   4598c:	0140ba84 	movi	r5,746
   45990:	21055204 	addi	r4,r4,5448
   45994:	004a6740 	call	4a674 <__assert_func>
   45998:	01c00174 	movhi	r7,5
   4599c:	01000174 	movhi	r4,5
   459a0:	39c54d04 	addi	r7,r7,5428
   459a4:	000d883a 	mov	r6,zero
   459a8:	01406a84 	movi	r5,426
   459ac:	21055204 	addi	r4,r4,5448
   459b0:	004a6740 	call	4a674 <__assert_func>
   459b4:	e7054904 	addi	fp,fp,5412
   459b8:	003a4d06 	br	442f0 <_dtoa_r+0xc4>
   459bc:	80001115 	stw	zero,68(r16)
   459c0:	000b883a 	mov	r5,zero
   459c4:	8009883a 	mov	r4,r16
   459c8:	004787c0 	call	4787c <_Balloc>
   459cc:	1039883a 	mov	fp,r2
   459d0:	103ff126 	beq	r2,zero,45998 <_dtoa_r+0x176c>
   459d4:	80801015 	stw	r2,64(r16)
   459d8:	00bfffc4 	movi	r2,-1
   459dc:	d8800a15 	stw	r2,40(sp)
   459e0:	00800044 	movi	r2,1
   459e4:	04bfffc4 	movi	r18,-1
   459e8:	d8800715 	stw	r2,28(sp)
   459ec:	d8001f15 	stw	zero,124(sp)
   459f0:	003c0806 	br	44a14 <_dtoa_r+0x7e8>
   459f4:	80001115 	stw	zero,68(r16)
   459f8:	000b883a 	mov	r5,zero
   459fc:	003ad506 	br	44554 <_dtoa_r+0x328>
   45a00:	a005883a 	mov	r2,r20
   45a04:	e029883a 	mov	r20,fp
   45a08:	df000817 	ldw	fp,32(sp)
   45a0c:	00bdcd0e 	bge	zero,r2,45144 <_dtoa_r+0xf18>
   45a10:	003dc006 	br	45114 <_dtoa_r+0xee8>

00045a14 <__sflush_r>:
   45a14:	2880030b 	ldhu	r2,12(r5)
   45a18:	defffb04 	addi	sp,sp,-20
   45a1c:	dcc00315 	stw	r19,12(sp)
   45a20:	dc000015 	stw	r16,0(sp)
   45a24:	dfc00415 	stw	ra,16(sp)
   45a28:	dc800215 	stw	r18,8(sp)
   45a2c:	dc400115 	stw	r17,4(sp)
   45a30:	10c0020c 	andi	r3,r2,8
   45a34:	2821883a 	mov	r16,r5
   45a38:	2027883a 	mov	r19,r4
   45a3c:	18003c1e 	bne	r3,zero,45b30 <__sflush_r+0x11c>
   45a40:	29000117 	ldw	r4,4(r5)
   45a44:	10c20014 	ori	r3,r2,2048
   45a48:	28c0030d 	sth	r3,12(r5)
   45a4c:	0100580e 	bge	zero,r4,45bb0 <__sflush_r+0x19c>
   45a50:	82000a17 	ldw	r8,40(r16)
   45a54:	40003426 	beq	r8,zero,45b28 <__sflush_r+0x114>
   45a58:	9c400017 	ldw	r17,0(r19)
   45a5c:	1084000c 	andi	r2,r2,4096
   45a60:	98000015 	stw	zero,0(r19)
   45a64:	81400717 	ldw	r5,28(r16)
   45a68:	1000561e 	bne	r2,zero,45bc4 <__sflush_r+0x1b0>
   45a6c:	000d883a 	mov	r6,zero
   45a70:	01c00044 	movi	r7,1
   45a74:	9809883a 	mov	r4,r19
   45a78:	403ee83a 	callr	r8
   45a7c:	100d883a 	mov	r6,r2
   45a80:	10bfffd8 	cmpnei	r2,r2,-1
   45a84:	10005b26 	beq	r2,zero,45bf4 <__sflush_r+0x1e0>
   45a88:	80c0030b 	ldhu	r3,12(r16)
   45a8c:	82000a17 	ldw	r8,40(r16)
   45a90:	18c0010c 	andi	r3,r3,4
   45a94:	18000626 	beq	r3,zero,45ab0 <__sflush_r+0x9c>
   45a98:	80c00117 	ldw	r3,4(r16)
   45a9c:	80800c17 	ldw	r2,48(r16)
   45aa0:	30cdc83a 	sub	r6,r6,r3
   45aa4:	10000226 	beq	r2,zero,45ab0 <__sflush_r+0x9c>
   45aa8:	80800f17 	ldw	r2,60(r16)
   45aac:	308dc83a 	sub	r6,r6,r2
   45ab0:	81400717 	ldw	r5,28(r16)
   45ab4:	000f883a 	mov	r7,zero
   45ab8:	9809883a 	mov	r4,r19
   45abc:	403ee83a 	callr	r8
   45ac0:	10ffffd8 	cmpnei	r3,r2,-1
   45ac4:	1800411e 	bne	r3,zero,45bcc <__sflush_r+0x1b8>
   45ac8:	99400017 	ldw	r5,0(r19)
   45acc:	28c007b0 	cmpltui	r3,r5,30
   45ad0:	18002c26 	beq	r3,zero,45b84 <__sflush_r+0x170>
   45ad4:	00f7f034 	movhi	r3,57280
   45ad8:	18ffff84 	addi	r3,r3,-2
   45adc:	1949d83a 	sra	r4,r3,r5
   45ae0:	80c0030b 	ldhu	r3,12(r16)
   45ae4:	2100004c 	andi	r4,r4,1
   45ae8:	2000271e 	bne	r4,zero,45b88 <__sflush_r+0x174>
   45aec:	81000417 	ldw	r4,16(r16)
   45af0:	19bdffcc 	andi	r6,r3,63487
   45af4:	8180030d 	sth	r6,12(r16)
   45af8:	80000115 	stw	zero,4(r16)
   45afc:	81000015 	stw	r4,0(r16)
   45b00:	18c4000c 	andi	r3,r3,4096
   45b04:	1800431e 	bne	r3,zero,45c14 <__sflush_r+0x200>
   45b08:	81400c17 	ldw	r5,48(r16)
   45b0c:	9c400015 	stw	r17,0(r19)
   45b10:	28000526 	beq	r5,zero,45b28 <__sflush_r+0x114>
   45b14:	80801004 	addi	r2,r16,64
   45b18:	28800226 	beq	r5,r2,45b24 <__sflush_r+0x110>
   45b1c:	9809883a 	mov	r4,r19
   45b20:	00461a00 	call	461a0 <_free_r>
   45b24:	80000c15 	stw	zero,48(r16)
   45b28:	0005883a 	mov	r2,zero
   45b2c:	00001906 	br	45b94 <__sflush_r+0x180>
   45b30:	2c800417 	ldw	r18,16(r5)
   45b34:	903ffc26 	beq	r18,zero,45b28 <__sflush_r+0x114>
   45b38:	2c400017 	ldw	r17,0(r5)
   45b3c:	108000cc 	andi	r2,r2,3
   45b40:	2c800015 	stw	r18,0(r5)
   45b44:	8ca3c83a 	sub	r17,r17,r18
   45b48:	10001c1e 	bne	r2,zero,45bbc <__sflush_r+0x1a8>
   45b4c:	28800517 	ldw	r2,20(r5)
   45b50:	80800215 	stw	r2,8(r16)
   45b54:	04400316 	blt	zero,r17,45b64 <__sflush_r+0x150>
   45b58:	003ff306 	br	45b28 <__sflush_r+0x114>
   45b5c:	90a5883a 	add	r18,r18,r2
   45b60:	047ff10e 	bge	zero,r17,45b28 <__sflush_r+0x114>
   45b64:	80800917 	ldw	r2,36(r16)
   45b68:	81400717 	ldw	r5,28(r16)
   45b6c:	880f883a 	mov	r7,r17
   45b70:	900d883a 	mov	r6,r18
   45b74:	9809883a 	mov	r4,r19
   45b78:	103ee83a 	callr	r2
   45b7c:	88a3c83a 	sub	r17,r17,r2
   45b80:	00bff616 	blt	zero,r2,45b5c <__sflush_r+0x148>
   45b84:	80c0030b 	ldhu	r3,12(r16)
   45b88:	18c01014 	ori	r3,r3,64
   45b8c:	80c0030d 	sth	r3,12(r16)
   45b90:	00bfffc4 	movi	r2,-1
   45b94:	dfc00417 	ldw	ra,16(sp)
   45b98:	dcc00317 	ldw	r19,12(sp)
   45b9c:	dc800217 	ldw	r18,8(sp)
   45ba0:	dc400117 	ldw	r17,4(sp)
   45ba4:	dc000017 	ldw	r16,0(sp)
   45ba8:	dec00504 	addi	sp,sp,20
   45bac:	f800283a 	ret
   45bb0:	29000f17 	ldw	r4,60(r5)
   45bb4:	013fa616 	blt	zero,r4,45a50 <__sflush_r+0x3c>
   45bb8:	003fdb06 	br	45b28 <__sflush_r+0x114>
   45bbc:	0005883a 	mov	r2,zero
   45bc0:	003fe306 	br	45b50 <__sflush_r+0x13c>
   45bc4:	81801417 	ldw	r6,80(r16)
   45bc8:	003fb106 	br	45a90 <__sflush_r+0x7c>
   45bcc:	80c0030b 	ldhu	r3,12(r16)
   45bd0:	81000417 	ldw	r4,16(r16)
   45bd4:	80000115 	stw	zero,4(r16)
   45bd8:	197dffcc 	andi	r5,r3,63487
   45bdc:	8140030d 	sth	r5,12(r16)
   45be0:	81000015 	stw	r4,0(r16)
   45be4:	18c4000c 	andi	r3,r3,4096
   45be8:	183fc726 	beq	r3,zero,45b08 <__sflush_r+0xf4>
   45bec:	80801415 	stw	r2,80(r16)
   45bf0:	003fc506 	br	45b08 <__sflush_r+0xf4>
   45bf4:	98800017 	ldw	r2,0(r19)
   45bf8:	103fa326 	beq	r2,zero,45a88 <__sflush_r+0x74>
   45bfc:	10c00760 	cmpeqi	r3,r2,29
   45c00:	1800021e 	bne	r3,zero,45c0c <__sflush_r+0x1f8>
   45c04:	10800598 	cmpnei	r2,r2,22
   45c08:	103fde1e 	bne	r2,zero,45b84 <__sflush_r+0x170>
   45c0c:	9c400015 	stw	r17,0(r19)
   45c10:	003fc506 	br	45b28 <__sflush_r+0x114>
   45c14:	283fbc1e 	bne	r5,zero,45b08 <__sflush_r+0xf4>
   45c18:	003ff406 	br	45bec <__sflush_r+0x1d8>

00045c1c <_fflush_r>:
   45c1c:	defffd04 	addi	sp,sp,-12
   45c20:	dc000115 	stw	r16,4(sp)
   45c24:	dfc00215 	stw	ra,8(sp)
   45c28:	2021883a 	mov	r16,r4
   45c2c:	20000226 	beq	r4,zero,45c38 <_fflush_r+0x1c>
   45c30:	20800e17 	ldw	r2,56(r4)
   45c34:	10000726 	beq	r2,zero,45c54 <_fflush_r+0x38>
   45c38:	2880030f 	ldh	r2,12(r5)
   45c3c:	10000a1e 	bne	r2,zero,45c68 <_fflush_r+0x4c>
   45c40:	0005883a 	mov	r2,zero
   45c44:	dfc00217 	ldw	ra,8(sp)
   45c48:	dc000117 	ldw	r16,4(sp)
   45c4c:	dec00304 	addi	sp,sp,12
   45c50:	f800283a 	ret
   45c54:	d9400015 	stw	r5,0(sp)
   45c58:	00460340 	call	46034 <__sinit>
   45c5c:	d9400017 	ldw	r5,0(sp)
   45c60:	2880030f 	ldh	r2,12(r5)
   45c64:	103ff626 	beq	r2,zero,45c40 <_fflush_r+0x24>
   45c68:	8009883a 	mov	r4,r16
   45c6c:	dfc00217 	ldw	ra,8(sp)
   45c70:	dc000117 	ldw	r16,4(sp)
   45c74:	dec00304 	addi	sp,sp,12
   45c78:	0045a141 	jmpi	45a14 <__sflush_r>

00045c7c <fflush>:
   45c7c:	20001726 	beq	r4,zero,45cdc <fflush+0x60>
   45c80:	00800174 	movhi	r2,5
   45c84:	200b883a 	mov	r5,r4
   45c88:	110d6c17 	ldw	r4,13744(r2)
   45c8c:	20000226 	beq	r4,zero,45c98 <fflush+0x1c>
   45c90:	20800e17 	ldw	r2,56(r4)
   45c94:	10000526 	beq	r2,zero,45cac <fflush+0x30>
   45c98:	2880030f 	ldh	r2,12(r5)
   45c9c:	1000021e 	bne	r2,zero,45ca8 <fflush+0x2c>
   45ca0:	0005883a 	mov	r2,zero
   45ca4:	f800283a 	ret
   45ca8:	0045a141 	jmpi	45a14 <__sflush_r>
   45cac:	defffd04 	addi	sp,sp,-12
   45cb0:	d9400115 	stw	r5,4(sp)
   45cb4:	d9000015 	stw	r4,0(sp)
   45cb8:	dfc00215 	stw	ra,8(sp)
   45cbc:	00460340 	call	46034 <__sinit>
   45cc0:	d9400117 	ldw	r5,4(sp)
   45cc4:	d9000017 	ldw	r4,0(sp)
   45cc8:	2880030f 	ldh	r2,12(r5)
   45ccc:	10000826 	beq	r2,zero,45cf0 <fflush+0x74>
   45cd0:	dfc00217 	ldw	ra,8(sp)
   45cd4:	dec00304 	addi	sp,sp,12
   45cd8:	0045a141 	jmpi	45a14 <__sflush_r>
   45cdc:	00800174 	movhi	r2,5
   45ce0:	110d6b17 	ldw	r4,13740(r2)
   45ce4:	01400134 	movhi	r5,4
   45ce8:	29570704 	addi	r5,r5,23580
   45cec:	00469e41 	jmpi	469e4 <_fwalk_reent>
   45cf0:	0005883a 	mov	r2,zero
   45cf4:	dfc00217 	ldw	ra,8(sp)
   45cf8:	dec00304 	addi	sp,sp,12
   45cfc:	f800283a 	ret

00045d00 <__fp_lock>:
   45d00:	0005883a 	mov	r2,zero
   45d04:	f800283a 	ret

00045d08 <_cleanup_r>:
   45d08:	01400174 	movhi	r5,5
   45d0c:	296a0f04 	addi	r5,r5,-22468
   45d10:	00469e41 	jmpi	469e4 <_fwalk_reent>

00045d14 <__fp_unlock>:
   45d14:	0005883a 	mov	r2,zero
   45d18:	f800283a 	ret

00045d1c <__sinit.part.0>:
   45d1c:	00c00134 	movhi	r3,4
   45d20:	20800117 	ldw	r2,4(r4)
   45d24:	18d74204 	addi	r3,r3,23816
   45d28:	20c00f15 	stw	r3,60(r4)
   45d2c:	2140bb04 	addi	r5,r4,748
   45d30:	00c000c4 	movi	r3,3
   45d34:	20c0b915 	stw	r3,740(r4)
   45d38:	2140ba15 	stw	r5,744(r4)
   45d3c:	2000b815 	stw	zero,736(r4)
   45d40:	10001705 	stb	zero,92(r2)
   45d44:	10001745 	stb	zero,93(r2)
   45d48:	10001785 	stb	zero,94(r2)
   45d4c:	100017c5 	stb	zero,95(r2)
   45d50:	10001805 	stb	zero,96(r2)
   45d54:	10001845 	stb	zero,97(r2)
   45d58:	10001885 	stb	zero,98(r2)
   45d5c:	100018c5 	stb	zero,99(r2)
   45d60:	00c00104 	movi	r3,4
   45d64:	10c00315 	stw	r3,12(r2)
   45d68:	02000174 	movhi	r8,5
   45d6c:	20c00217 	ldw	r3,8(r4)
   45d70:	01c00174 	movhi	r7,5
   45d74:	01800174 	movhi	r6,5
   45d78:	01400174 	movhi	r5,5
   45d7c:	42240704 	addi	r8,r8,-28644
   45d80:	39e41e04 	addi	r7,r7,-28552
   45d84:	31a43e04 	addi	r6,r6,-28424
   45d88:	29645504 	addi	r5,r5,-28332
   45d8c:	02400074 	movhi	r9,1
   45d90:	10000015 	stw	zero,0(r2)
   45d94:	10000115 	stw	zero,4(r2)
   45d98:	10000215 	stw	zero,8(r2)
   45d9c:	10001915 	stw	zero,100(r2)
   45da0:	10000415 	stw	zero,16(r2)
   45da4:	10000515 	stw	zero,20(r2)
   45da8:	10000615 	stw	zero,24(r2)
   45dac:	10800715 	stw	r2,28(r2)
   45db0:	12000815 	stw	r8,32(r2)
   45db4:	11c00915 	stw	r7,36(r2)
   45db8:	11800a15 	stw	r6,40(r2)
   45dbc:	11400b15 	stw	r5,44(r2)
   45dc0:	4a400284 	addi	r9,r9,10
   45dc4:	1a400315 	stw	r9,12(r3)
   45dc8:	18000015 	stw	zero,0(r3)
   45dcc:	18000115 	stw	zero,4(r3)
   45dd0:	18000215 	stw	zero,8(r3)
   45dd4:	18001915 	stw	zero,100(r3)
   45dd8:	18000415 	stw	zero,16(r3)
   45ddc:	18001705 	stb	zero,92(r3)
   45de0:	18001745 	stb	zero,93(r3)
   45de4:	18001785 	stb	zero,94(r3)
   45de8:	180017c5 	stb	zero,95(r3)
   45dec:	18001805 	stb	zero,96(r3)
   45df0:	18001845 	stb	zero,97(r3)
   45df4:	18001885 	stb	zero,98(r3)
   45df8:	180018c5 	stb	zero,99(r3)
   45dfc:	20800317 	ldw	r2,12(r4)
   45e00:	024000b4 	movhi	r9,2
   45e04:	18000515 	stw	zero,20(r3)
   45e08:	18000615 	stw	zero,24(r3)
   45e0c:	18c00715 	stw	r3,28(r3)
   45e10:	1a000815 	stw	r8,32(r3)
   45e14:	19c00915 	stw	r7,36(r3)
   45e18:	19800a15 	stw	r6,40(r3)
   45e1c:	19400b15 	stw	r5,44(r3)
   45e20:	4a400484 	addi	r9,r9,18
   45e24:	10000015 	stw	zero,0(r2)
   45e28:	10000115 	stw	zero,4(r2)
   45e2c:	10000215 	stw	zero,8(r2)
   45e30:	10001915 	stw	zero,100(r2)
   45e34:	12400315 	stw	r9,12(r2)
   45e38:	10000415 	stw	zero,16(r2)
   45e3c:	10000515 	stw	zero,20(r2)
   45e40:	10000615 	stw	zero,24(r2)
   45e44:	10001705 	stb	zero,92(r2)
   45e48:	10001745 	stb	zero,93(r2)
   45e4c:	10001785 	stb	zero,94(r2)
   45e50:	100017c5 	stb	zero,95(r2)
   45e54:	10001805 	stb	zero,96(r2)
   45e58:	10001845 	stb	zero,97(r2)
   45e5c:	10001885 	stb	zero,98(r2)
   45e60:	100018c5 	stb	zero,99(r2)
   45e64:	10800715 	stw	r2,28(r2)
   45e68:	12000815 	stw	r8,32(r2)
   45e6c:	11c00915 	stw	r7,36(r2)
   45e70:	11800a15 	stw	r6,40(r2)
   45e74:	11400b15 	stw	r5,44(r2)
   45e78:	00800044 	movi	r2,1
   45e7c:	20800e15 	stw	r2,56(r4)
   45e80:	f800283a 	ret

00045e84 <__sfmoreglue>:
   45e84:	defffc04 	addi	sp,sp,-16
   45e88:	dc400115 	stw	r17,4(sp)
   45e8c:	2c7fffc4 	addi	r17,r5,-1
   45e90:	8c401a24 	muli	r17,r17,104
   45e94:	dc800215 	stw	r18,8(sp)
   45e98:	2825883a 	mov	r18,r5
   45e9c:	89401d04 	addi	r5,r17,116
   45ea0:	dc000015 	stw	r16,0(sp)
   45ea4:	dfc00315 	stw	ra,12(sp)
   45ea8:	0046cd80 	call	46cd8 <_malloc_r>
   45eac:	1021883a 	mov	r16,r2
   45eb0:	10000726 	beq	r2,zero,45ed0 <__sfmoreglue+0x4c>
   45eb4:	11000304 	addi	r4,r2,12
   45eb8:	10000015 	stw	zero,0(r2)
   45ebc:	14800115 	stw	r18,4(r2)
   45ec0:	11000215 	stw	r4,8(r2)
   45ec4:	89801a04 	addi	r6,r17,104
   45ec8:	000b883a 	mov	r5,zero
   45ecc:	00477840 	call	47784 <memset>
   45ed0:	8005883a 	mov	r2,r16
   45ed4:	dfc00317 	ldw	ra,12(sp)
   45ed8:	dc800217 	ldw	r18,8(sp)
   45edc:	dc400117 	ldw	r17,4(sp)
   45ee0:	dc000017 	ldw	r16,0(sp)
   45ee4:	dec00404 	addi	sp,sp,16
   45ee8:	f800283a 	ret

00045eec <__sfp>:
   45eec:	defffc04 	addi	sp,sp,-16
   45ef0:	00800174 	movhi	r2,5
   45ef4:	dc400115 	stw	r17,4(sp)
   45ef8:	144d6b17 	ldw	r17,13740(r2)
   45efc:	dc800215 	stw	r18,8(sp)
   45f00:	dfc00315 	stw	ra,12(sp)
   45f04:	88800e17 	ldw	r2,56(r17)
   45f08:	dc000015 	stw	r16,0(sp)
   45f0c:	2025883a 	mov	r18,r4
   45f10:	10002d26 	beq	r2,zero,45fc8 <__sfp+0xdc>
   45f14:	8c40b804 	addi	r17,r17,736
   45f18:	88800117 	ldw	r2,4(r17)
   45f1c:	8c000217 	ldw	r16,8(r17)
   45f20:	10bfffc4 	addi	r2,r2,-1
   45f24:	1000030e 	bge	r2,zero,45f34 <__sfp+0x48>
   45f28:	00002306 	br	45fb8 <__sfp+0xcc>
   45f2c:	84001a04 	addi	r16,r16,104
   45f30:	28002126 	beq	r5,zero,45fb8 <__sfp+0xcc>
   45f34:	80c0030f 	ldh	r3,12(r16)
   45f38:	10bfffc4 	addi	r2,r2,-1
   45f3c:	117fffd8 	cmpnei	r5,r2,-1
   45f40:	183ffa1e 	bne	r3,zero,45f2c <__sfp+0x40>
   45f44:	00bffff4 	movhi	r2,65535
   45f48:	10800044 	addi	r2,r2,1
   45f4c:	80800315 	stw	r2,12(r16)
   45f50:	80001915 	stw	zero,100(r16)
   45f54:	80000015 	stw	zero,0(r16)
   45f58:	80000215 	stw	zero,8(r16)
   45f5c:	80000115 	stw	zero,4(r16)
   45f60:	80000415 	stw	zero,16(r16)
   45f64:	80000515 	stw	zero,20(r16)
   45f68:	80000615 	stw	zero,24(r16)
   45f6c:	80001705 	stb	zero,92(r16)
   45f70:	80001745 	stb	zero,93(r16)
   45f74:	80001785 	stb	zero,94(r16)
   45f78:	800017c5 	stb	zero,95(r16)
   45f7c:	80001805 	stb	zero,96(r16)
   45f80:	80001845 	stb	zero,97(r16)
   45f84:	80001885 	stb	zero,98(r16)
   45f88:	800018c5 	stb	zero,99(r16)
   45f8c:	80000c15 	stw	zero,48(r16)
   45f90:	80000d15 	stw	zero,52(r16)
   45f94:	80001115 	stw	zero,68(r16)
   45f98:	80001215 	stw	zero,72(r16)
   45f9c:	8005883a 	mov	r2,r16
   45fa0:	dfc00317 	ldw	ra,12(sp)
   45fa4:	dc800217 	ldw	r18,8(sp)
   45fa8:	dc400117 	ldw	r17,4(sp)
   45fac:	dc000017 	ldw	r16,0(sp)
   45fb0:	dec00404 	addi	sp,sp,16
   45fb4:	f800283a 	ret
   45fb8:	8c000017 	ldw	r16,0(r17)
   45fbc:	80000526 	beq	r16,zero,45fd4 <__sfp+0xe8>
   45fc0:	8023883a 	mov	r17,r16
   45fc4:	003fd406 	br	45f18 <__sfp+0x2c>
   45fc8:	8809883a 	mov	r4,r17
   45fcc:	0045d1c0 	call	45d1c <__sinit.part.0>
   45fd0:	003fd006 	br	45f14 <__sfp+0x28>
   45fd4:	01406b04 	movi	r5,428
   45fd8:	9009883a 	mov	r4,r18
   45fdc:	0046cd80 	call	46cd8 <_malloc_r>
   45fe0:	1021883a 	mov	r16,r2
   45fe4:	10000a26 	beq	r2,zero,46010 <__sfp+0x124>
   45fe8:	10000015 	stw	zero,0(r2)
   45fec:	11000304 	addi	r4,r2,12
   45ff0:	00800104 	movi	r2,4
   45ff4:	80800115 	stw	r2,4(r16)
   45ff8:	81000215 	stw	r4,8(r16)
   45ffc:	01806804 	movi	r6,416
   46000:	000b883a 	mov	r5,zero
   46004:	00477840 	call	47784 <memset>
   46008:	8c000015 	stw	r16,0(r17)
   4600c:	003fec06 	br	45fc0 <__sfp+0xd4>
   46010:	88000015 	stw	zero,0(r17)
   46014:	00800304 	movi	r2,12
   46018:	90800015 	stw	r2,0(r18)
   4601c:	003fdf06 	br	45f9c <__sfp+0xb0>

00046020 <_cleanup>:
   46020:	00800174 	movhi	r2,5
   46024:	110d6b17 	ldw	r4,13740(r2)
   46028:	01400174 	movhi	r5,5
   4602c:	296a0f04 	addi	r5,r5,-22468
   46030:	00469e41 	jmpi	469e4 <_fwalk_reent>

00046034 <__sinit>:
   46034:	20800e17 	ldw	r2,56(r4)
   46038:	10000126 	beq	r2,zero,46040 <__sinit+0xc>
   4603c:	f800283a 	ret
   46040:	0045d1c1 	jmpi	45d1c <__sinit.part.0>

00046044 <__sfp_lock_acquire>:
   46044:	f800283a 	ret

00046048 <__sfp_lock_release>:
   46048:	f800283a 	ret

0004604c <__sinit_lock_acquire>:
   4604c:	f800283a 	ret

00046050 <__sinit_lock_release>:
   46050:	f800283a 	ret

00046054 <__fp_lock_all>:
   46054:	00800174 	movhi	r2,5
   46058:	110d6c17 	ldw	r4,13744(r2)
   4605c:	01400134 	movhi	r5,4
   46060:	29574004 	addi	r5,r5,23808
   46064:	004694c1 	jmpi	4694c <_fwalk>

00046068 <__fp_unlock_all>:
   46068:	00800174 	movhi	r2,5
   4606c:	110d6c17 	ldw	r4,13744(r2)
   46070:	01400134 	movhi	r5,4
   46074:	29574504 	addi	r5,r5,23828
   46078:	004694c1 	jmpi	4694c <_fwalk>

0004607c <_malloc_trim_r>:
   4607c:	defffa04 	addi	sp,sp,-24
   46080:	dcc00315 	stw	r19,12(sp)
   46084:	04c00174 	movhi	r19,5
   46088:	dd000415 	stw	r20,16(sp)
   4608c:	dc800215 	stw	r18,8(sp)
   46090:	dc400115 	stw	r17,4(sp)
   46094:	dc000015 	stw	r16,0(sp)
   46098:	2829883a 	mov	r20,r5
   4609c:	dfc00515 	stw	ra,20(sp)
   460a0:	9cc78c04 	addi	r19,r19,7728
   460a4:	2025883a 	mov	r18,r4
   460a8:	004f2fc0 	call	4f2fc <__malloc_lock>
   460ac:	98800217 	ldw	r2,8(r19)
   460b0:	14400117 	ldw	r17,4(r2)
   460b4:	00bfff04 	movi	r2,-4
   460b8:	88a2703a 	and	r17,r17,r2
   460bc:	8c03fbc4 	addi	r16,r17,4079
   460c0:	8521c83a 	sub	r16,r16,r20
   460c4:	8020d33a 	srli	r16,r16,12
   460c8:	843fffc4 	addi	r16,r16,-1
   460cc:	8020933a 	slli	r16,r16,12
   460d0:	80840008 	cmpgei	r2,r16,4096
   460d4:	10000626 	beq	r2,zero,460f0 <_malloc_trim_r+0x74>
   460d8:	000b883a 	mov	r5,zero
   460dc:	9009883a 	mov	r4,r18
   460e0:	0048fc40 	call	48fc4 <_sbrk_r>
   460e4:	98c00217 	ldw	r3,8(r19)
   460e8:	1c47883a 	add	r3,r3,r17
   460ec:	10c00b26 	beq	r2,r3,4611c <_malloc_trim_r+0xa0>
   460f0:	9009883a 	mov	r4,r18
   460f4:	004f3200 	call	4f320 <__malloc_unlock>
   460f8:	0005883a 	mov	r2,zero
   460fc:	dfc00517 	ldw	ra,20(sp)
   46100:	dd000417 	ldw	r20,16(sp)
   46104:	dcc00317 	ldw	r19,12(sp)
   46108:	dc800217 	ldw	r18,8(sp)
   4610c:	dc400117 	ldw	r17,4(sp)
   46110:	dc000017 	ldw	r16,0(sp)
   46114:	dec00604 	addi	sp,sp,24
   46118:	f800283a 	ret
   4611c:	040bc83a 	sub	r5,zero,r16
   46120:	9009883a 	mov	r4,r18
   46124:	0048fc40 	call	48fc4 <_sbrk_r>
   46128:	10bfffd8 	cmpnei	r2,r2,-1
   4612c:	10000d26 	beq	r2,zero,46164 <_malloc_trim_r+0xe8>
   46130:	00800174 	movhi	r2,5
   46134:	10948217 	ldw	r2,21000(r2)
   46138:	98c00217 	ldw	r3,8(r19)
   4613c:	8c23c83a 	sub	r17,r17,r16
   46140:	8c400054 	ori	r17,r17,1
   46144:	1405c83a 	sub	r2,r2,r16
   46148:	1c400115 	stw	r17,4(r3)
   4614c:	9009883a 	mov	r4,r18
   46150:	00c00174 	movhi	r3,5
   46154:	18948215 	stw	r2,21000(r3)
   46158:	004f3200 	call	4f320 <__malloc_unlock>
   4615c:	00800044 	movi	r2,1
   46160:	003fe606 	br	460fc <_malloc_trim_r+0x80>
   46164:	000b883a 	mov	r5,zero
   46168:	9009883a 	mov	r4,r18
   4616c:	0048fc40 	call	48fc4 <_sbrk_r>
   46170:	99000217 	ldw	r4,8(r19)
   46174:	1107c83a 	sub	r3,r2,r4
   46178:	19400410 	cmplti	r5,r3,16
   4617c:	283fdc1e 	bne	r5,zero,460f0 <_malloc_trim_r+0x74>
   46180:	01400174 	movhi	r5,5
   46184:	294d6d17 	ldw	r5,13748(r5)
   46188:	18c00054 	ori	r3,r3,1
   4618c:	20c00115 	stw	r3,4(r4)
   46190:	1145c83a 	sub	r2,r2,r5
   46194:	01400174 	movhi	r5,5
   46198:	28948215 	stw	r2,21000(r5)
   4619c:	003fd406 	br	460f0 <_malloc_trim_r+0x74>

000461a0 <_free_r>:
   461a0:	28005f26 	beq	r5,zero,46320 <_free_r+0x180>
   461a4:	defffd04 	addi	sp,sp,-12
   461a8:	dc400115 	stw	r17,4(sp)
   461ac:	dc000015 	stw	r16,0(sp)
   461b0:	2023883a 	mov	r17,r4
   461b4:	2821883a 	mov	r16,r5
   461b8:	dfc00215 	stw	ra,8(sp)
   461bc:	004f2fc0 	call	4f2fc <__malloc_lock>
   461c0:	81ffff17 	ldw	r7,-4(r16)
   461c4:	00bfff84 	movi	r2,-2
   461c8:	80fffe04 	addi	r3,r16,-8
   461cc:	3884703a 	and	r2,r7,r2
   461d0:	01800174 	movhi	r6,5
   461d4:	1889883a 	add	r4,r3,r2
   461d8:	31878c04 	addi	r6,r6,7728
   461dc:	21400117 	ldw	r5,4(r4)
   461e0:	32000217 	ldw	r8,8(r6)
   461e4:	027fff04 	movi	r9,-4
   461e8:	2a4a703a 	and	r5,r5,r9
   461ec:	41006526 	beq	r8,r4,46384 <_free_r+0x1e4>
   461f0:	21400115 	stw	r5,4(r4)
   461f4:	39c0004c 	andi	r7,r7,1
   461f8:	2151883a 	add	r8,r4,r5
   461fc:	3800281e 	bne	r7,zero,462a0 <_free_r+0x100>
   46200:	82bffe17 	ldw	r10,-8(r16)
   46204:	42000117 	ldw	r8,4(r8)
   46208:	01c00174 	movhi	r7,5
   4620c:	1a87c83a 	sub	r3,r3,r10
   46210:	1a400217 	ldw	r9,8(r3)
   46214:	39c78e04 	addi	r7,r7,7736
   46218:	1285883a 	add	r2,r2,r10
   4621c:	4200004c 	andi	r8,r8,1
   46220:	49c04d26 	beq	r9,r7,46358 <_free_r+0x1b8>
   46224:	1a800317 	ldw	r10,12(r3)
   46228:	4a800315 	stw	r10,12(r9)
   4622c:	52400215 	stw	r9,8(r10)
   46230:	40006926 	beq	r8,zero,463d8 <_free_r+0x238>
   46234:	11400054 	ori	r5,r2,1
   46238:	19400115 	stw	r5,4(r3)
   4623c:	20800015 	stw	r2,0(r4)
   46240:	11008028 	cmpgeui	r4,r2,512
   46244:	20001e1e 	bne	r4,zero,462c0 <_free_r+0x120>
   46248:	1008d0fa 	srli	r4,r2,3
   4624c:	100ad17a 	srli	r5,r2,5
   46250:	31c00117 	ldw	r7,4(r6)
   46254:	20800044 	addi	r2,r4,1
   46258:	100490fa 	slli	r2,r2,3
   4625c:	01000044 	movi	r4,1
   46260:	2148983a 	sll	r4,r4,r5
   46264:	3085883a 	add	r2,r6,r2
   46268:	11400017 	ldw	r5,0(r2)
   4626c:	21c8b03a 	or	r4,r4,r7
   46270:	11fffe04 	addi	r7,r2,-8
   46274:	19c00315 	stw	r7,12(r3)
   46278:	19400215 	stw	r5,8(r3)
   4627c:	31000115 	stw	r4,4(r6)
   46280:	10c00015 	stw	r3,0(r2)
   46284:	28c00315 	stw	r3,12(r5)
   46288:	8809883a 	mov	r4,r17
   4628c:	dfc00217 	ldw	ra,8(sp)
   46290:	dc400117 	ldw	r17,4(sp)
   46294:	dc000017 	ldw	r16,0(sp)
   46298:	dec00304 	addi	sp,sp,12
   4629c:	004f3201 	jmpi	4f320 <__malloc_unlock>
   462a0:	41c00117 	ldw	r7,4(r8)
   462a4:	39c0004c 	andi	r7,r7,1
   462a8:	38001e26 	beq	r7,zero,46324 <_free_r+0x184>
   462ac:	11400054 	ori	r5,r2,1
   462b0:	817fff15 	stw	r5,-4(r16)
   462b4:	20800015 	stw	r2,0(r4)
   462b8:	11008028 	cmpgeui	r4,r2,512
   462bc:	203fe226 	beq	r4,zero,46248 <_free_r+0xa8>
   462c0:	1008d27a 	srli	r4,r2,9
   462c4:	21400168 	cmpgeui	r5,r4,5
   462c8:	2800451e 	bne	r5,zero,463e0 <_free_r+0x240>
   462cc:	1008d1ba 	srli	r4,r2,6
   462d0:	21c00e44 	addi	r7,r4,57
   462d4:	380e90fa 	slli	r7,r7,3
   462d8:	21000e04 	addi	r4,r4,56
   462dc:	31cf883a 	add	r7,r6,r7
   462e0:	39400017 	ldw	r5,0(r7)
   462e4:	39fffe04 	addi	r7,r7,-8
   462e8:	39405326 	beq	r7,r5,46438 <_free_r+0x298>
   462ec:	01bfff04 	movi	r6,-4
   462f0:	00000206 	br	462fc <_free_r+0x15c>
   462f4:	29400217 	ldw	r5,8(r5)
   462f8:	39400326 	beq	r7,r5,46308 <_free_r+0x168>
   462fc:	29000117 	ldw	r4,4(r5)
   46300:	2188703a 	and	r4,r4,r6
   46304:	113ffb36 	bltu	r2,r4,462f4 <_free_r+0x154>
   46308:	29c00317 	ldw	r7,12(r5)
   4630c:	19c00315 	stw	r7,12(r3)
   46310:	19400215 	stw	r5,8(r3)
   46314:	38c00215 	stw	r3,8(r7)
   46318:	28c00315 	stw	r3,12(r5)
   4631c:	003fda06 	br	46288 <_free_r+0xe8>
   46320:	f800283a 	ret
   46324:	01c00174 	movhi	r7,5
   46328:	1145883a 	add	r2,r2,r5
   4632c:	39c78e04 	addi	r7,r7,7736
   46330:	21400217 	ldw	r5,8(r4)
   46334:	29c03726 	beq	r5,r7,46414 <_free_r+0x274>
   46338:	22000317 	ldw	r8,12(r4)
   4633c:	11c00054 	ori	r7,r2,1
   46340:	1889883a 	add	r4,r3,r2
   46344:	2a000315 	stw	r8,12(r5)
   46348:	41400215 	stw	r5,8(r8)
   4634c:	19c00115 	stw	r7,4(r3)
   46350:	20800015 	stw	r2,0(r4)
   46354:	003fba06 	br	46240 <_free_r+0xa0>
   46358:	40004f1e 	bne	r8,zero,46498 <_free_r+0x2f8>
   4635c:	21800217 	ldw	r6,8(r4)
   46360:	21000317 	ldw	r4,12(r4)
   46364:	288b883a 	add	r5,r5,r2
   46368:	28800054 	ori	r2,r5,1
   4636c:	31000315 	stw	r4,12(r6)
   46370:	21800215 	stw	r6,8(r4)
   46374:	18800115 	stw	r2,4(r3)
   46378:	1947883a 	add	r3,r3,r5
   4637c:	19400015 	stw	r5,0(r3)
   46380:	003fc106 	br	46288 <_free_r+0xe8>
   46384:	39c0004c 	andi	r7,r7,1
   46388:	114b883a 	add	r5,r2,r5
   4638c:	3800071e 	bne	r7,zero,463ac <_free_r+0x20c>
   46390:	81fffe17 	ldw	r7,-8(r16)
   46394:	19c7c83a 	sub	r3,r3,r7
   46398:	18800317 	ldw	r2,12(r3)
   4639c:	19000217 	ldw	r4,8(r3)
   463a0:	29cb883a 	add	r5,r5,r7
   463a4:	20800315 	stw	r2,12(r4)
   463a8:	11000215 	stw	r4,8(r2)
   463ac:	00800174 	movhi	r2,5
   463b0:	29000054 	ori	r4,r5,1
   463b4:	108d6e17 	ldw	r2,13752(r2)
   463b8:	19000115 	stw	r4,4(r3)
   463bc:	30c00215 	stw	r3,8(r6)
   463c0:	28bfb136 	bltu	r5,r2,46288 <_free_r+0xe8>
   463c4:	00800174 	movhi	r2,5
   463c8:	11547717 	ldw	r5,20956(r2)
   463cc:	8809883a 	mov	r4,r17
   463d0:	004607c0 	call	4607c <_malloc_trim_r>
   463d4:	003fac06 	br	46288 <_free_r+0xe8>
   463d8:	1145883a 	add	r2,r2,r5
   463dc:	003fd406 	br	46330 <_free_r+0x190>
   463e0:	21400568 	cmpgeui	r5,r4,21
   463e4:	28000726 	beq	r5,zero,46404 <_free_r+0x264>
   463e8:	21401568 	cmpgeui	r5,r4,85
   463ec:	2800191e 	bne	r5,zero,46454 <_free_r+0x2b4>
   463f0:	1008d33a 	srli	r4,r2,12
   463f4:	21c01bc4 	addi	r7,r4,111
   463f8:	380e90fa 	slli	r7,r7,3
   463fc:	21001b84 	addi	r4,r4,110
   46400:	003fb606 	br	462dc <_free_r+0x13c>
   46404:	21c01704 	addi	r7,r4,92
   46408:	380e90fa 	slli	r7,r7,3
   4640c:	210016c4 	addi	r4,r4,91
   46410:	003fb206 	br	462dc <_free_r+0x13c>
   46414:	30c00515 	stw	r3,20(r6)
   46418:	30c00415 	stw	r3,16(r6)
   4641c:	11000054 	ori	r4,r2,1
   46420:	19c00315 	stw	r7,12(r3)
   46424:	19c00215 	stw	r7,8(r3)
   46428:	19000115 	stw	r4,4(r3)
   4642c:	1887883a 	add	r3,r3,r2
   46430:	18800015 	stw	r2,0(r3)
   46434:	003f9406 	br	46288 <_free_r+0xe8>
   46438:	2009d0ba 	srai	r4,r4,2
   4643c:	00800044 	movi	r2,1
   46440:	32000117 	ldw	r8,4(r6)
   46444:	1104983a 	sll	r2,r2,r4
   46448:	1204b03a 	or	r2,r2,r8
   4644c:	30800115 	stw	r2,4(r6)
   46450:	003fae06 	br	4630c <_free_r+0x16c>
   46454:	21405568 	cmpgeui	r5,r4,341
   46458:	2800051e 	bne	r5,zero,46470 <_free_r+0x2d0>
   4645c:	1008d3fa 	srli	r4,r2,15
   46460:	21c01e04 	addi	r7,r4,120
   46464:	380e90fa 	slli	r7,r7,3
   46468:	21001dc4 	addi	r4,r4,119
   4646c:	003f9b06 	br	462dc <_free_r+0x13c>
   46470:	21015568 	cmpgeui	r4,r4,1365
   46474:	2000051e 	bne	r4,zero,4648c <_free_r+0x2ec>
   46478:	1008d4ba 	srli	r4,r2,18
   4647c:	21c01f44 	addi	r7,r4,125
   46480:	380e90fa 	slli	r7,r7,3
   46484:	21001f04 	addi	r4,r4,124
   46488:	003f9406 	br	462dc <_free_r+0x13c>
   4648c:	01c0fe04 	movi	r7,1016
   46490:	01001f84 	movi	r4,126
   46494:	003f9106 	br	462dc <_free_r+0x13c>
   46498:	11400054 	ori	r5,r2,1
   4649c:	19400115 	stw	r5,4(r3)
   464a0:	20800015 	stw	r2,0(r4)
   464a4:	003f7806 	br	46288 <_free_r+0xe8>

000464a8 <__sfvwrite_r>:
   464a8:	30800217 	ldw	r2,8(r6)
   464ac:	1000c326 	beq	r2,zero,467bc <__sfvwrite_r+0x314>
   464b0:	2a80030b 	ldhu	r10,12(r5)
   464b4:	defff504 	addi	sp,sp,-44
   464b8:	df000915 	stw	fp,36(sp)
   464bc:	dcc00415 	stw	r19,16(sp)
   464c0:	dc000115 	stw	r16,4(sp)
   464c4:	dfc00a15 	stw	ra,40(sp)
   464c8:	ddc00815 	stw	r23,32(sp)
   464cc:	dd800715 	stw	r22,28(sp)
   464d0:	dd400615 	stw	r21,24(sp)
   464d4:	dd000515 	stw	r20,20(sp)
   464d8:	dc800315 	stw	r18,12(sp)
   464dc:	dc400215 	stw	r17,8(sp)
   464e0:	5080020c 	andi	r2,r10,8
   464e4:	3039883a 	mov	fp,r6
   464e8:	2027883a 	mov	r19,r4
   464ec:	2821883a 	mov	r16,r5
   464f0:	10002226 	beq	r2,zero,4657c <__sfvwrite_r+0xd4>
   464f4:	28800417 	ldw	r2,16(r5)
   464f8:	10002026 	beq	r2,zero,4657c <__sfvwrite_r+0xd4>
   464fc:	5080008c 	andi	r2,r10,2
   46500:	e4400017 	ldw	r17,0(fp)
   46504:	10002526 	beq	r2,zero,4659c <__sfvwrite_r+0xf4>
   46508:	80800917 	ldw	r2,36(r16)
   4650c:	81400717 	ldw	r5,28(r16)
   46510:	05600034 	movhi	r21,32768
   46514:	0029883a 	mov	r20,zero
   46518:	0025883a 	mov	r18,zero
   4651c:	ad7f0004 	addi	r21,r21,-1024
   46520:	a00d883a 	mov	r6,r20
   46524:	9809883a 	mov	r4,r19
   46528:	90001026 	beq	r18,zero,4656c <__sfvwrite_r+0xc4>
   4652c:	900f883a 	mov	r7,r18
   46530:	ac80012e 	bgeu	r21,r18,46538 <__sfvwrite_r+0x90>
   46534:	a80f883a 	mov	r7,r21
   46538:	103ee83a 	callr	r2
   4653c:	00809a0e 	bge	zero,r2,467a8 <__sfvwrite_r+0x300>
   46540:	e0c00217 	ldw	r3,8(fp)
   46544:	a0a9883a 	add	r20,r20,r2
   46548:	90a5c83a 	sub	r18,r18,r2
   4654c:	1885c83a 	sub	r2,r3,r2
   46550:	e0800215 	stw	r2,8(fp)
   46554:	10008326 	beq	r2,zero,46764 <__sfvwrite_r+0x2bc>
   46558:	80800917 	ldw	r2,36(r16)
   4655c:	81400717 	ldw	r5,28(r16)
   46560:	a00d883a 	mov	r6,r20
   46564:	9809883a 	mov	r4,r19
   46568:	903ff01e 	bne	r18,zero,4652c <__sfvwrite_r+0x84>
   4656c:	8d000017 	ldw	r20,0(r17)
   46570:	8c800117 	ldw	r18,4(r17)
   46574:	8c400204 	addi	r17,r17,8
   46578:	003fe906 	br	46520 <__sfvwrite_r+0x78>
   4657c:	800b883a 	mov	r5,r16
   46580:	9809883a 	mov	r4,r19
   46584:	0043ee40 	call	43ee4 <__swsetup_r>
   46588:	10008a1e 	bne	r2,zero,467b4 <__sfvwrite_r+0x30c>
   4658c:	8280030b 	ldhu	r10,12(r16)
   46590:	e4400017 	ldw	r17,0(fp)
   46594:	5080008c 	andi	r2,r10,2
   46598:	103fdb1e 	bne	r2,zero,46508 <__sfvwrite_r+0x60>
   4659c:	5080004c 	andi	r2,r10,1
   465a0:	10004e1e 	bne	r2,zero,466dc <__sfvwrite_r+0x234>
   465a4:	00a00034 	movhi	r2,32768
   465a8:	81c00017 	ldw	r7,0(r16)
   465ac:	80c00217 	ldw	r3,8(r16)
   465b0:	10bfffc4 	addi	r2,r2,-1
   465b4:	002d883a 	mov	r22,zero
   465b8:	0025883a 	mov	r18,zero
   465bc:	d8800015 	stw	r2,0(sp)
   465c0:	3809883a 	mov	r4,r7
   465c4:	1829883a 	mov	r20,r3
   465c8:	90004026 	beq	r18,zero,466cc <__sfvwrite_r+0x224>
   465cc:	5080800c 	andi	r2,r10,512
   465d0:	10009426 	beq	r2,zero,46824 <__sfvwrite_r+0x37c>
   465d4:	182b883a 	mov	r21,r3
   465d8:	90c0b936 	bltu	r18,r3,468c0 <__sfvwrite_r+0x418>
   465dc:	5081200c 	andi	r2,r10,1152
   465e0:	10002426 	beq	r2,zero,46674 <__sfvwrite_r+0x1cc>
   465e4:	80800517 	ldw	r2,20(r16)
   465e8:	81000417 	ldw	r4,16(r16)
   465ec:	108000e4 	muli	r2,r2,3
   465f0:	392fc83a 	sub	r23,r7,r4
   465f4:	b8c00044 	addi	r3,r23,1
   465f8:	1012d7fa 	srli	r9,r2,31
   465fc:	1c87883a 	add	r3,r3,r18
   46600:	4893883a 	add	r9,r9,r2
   46604:	4829d07a 	srai	r20,r9,1
   46608:	a00b883a 	mov	r5,r20
   4660c:	a0c0022e 	bgeu	r20,r3,46618 <__sfvwrite_r+0x170>
   46610:	1829883a 	mov	r20,r3
   46614:	180b883a 	mov	r5,r3
   46618:	5281000c 	andi	r10,r10,1024
   4661c:	5000b926 	beq	r10,zero,46904 <__sfvwrite_r+0x45c>
   46620:	9809883a 	mov	r4,r19
   46624:	0046cd80 	call	46cd8 <_malloc_r>
   46628:	1000c426 	beq	r2,zero,4693c <__sfvwrite_r+0x494>
   4662c:	81400417 	ldw	r5,16(r16)
   46630:	1009883a 	mov	r4,r2
   46634:	b80d883a 	mov	r6,r23
   46638:	004755c0 	call	4755c <memcpy>
   4663c:	1007883a 	mov	r3,r2
   46640:	8080030b 	ldhu	r2,12(r16)
   46644:	013edfc4 	movi	r4,-1153
   46648:	1104703a 	and	r2,r2,r4
   4664c:	10802014 	ori	r2,r2,128
   46650:	8080030d 	sth	r2,12(r16)
   46654:	a5cfc83a 	sub	r7,r20,r23
   46658:	1dc9883a 	add	r4,r3,r23
   4665c:	85000515 	stw	r20,20(r16)
   46660:	80c00415 	stw	r3,16(r16)
   46664:	81000015 	stw	r4,0(r16)
   46668:	9029883a 	mov	r20,r18
   4666c:	81c00215 	stw	r7,8(r16)
   46670:	902b883a 	mov	r21,r18
   46674:	a80d883a 	mov	r6,r21
   46678:	b00b883a 	mov	r5,r22
   4667c:	004765c0 	call	4765c <memmove>
   46680:	80c00217 	ldw	r3,8(r16)
   46684:	81c00017 	ldw	r7,0(r16)
   46688:	902f883a 	mov	r23,r18
   4668c:	1d07c83a 	sub	r3,r3,r20
   46690:	3d4d883a 	add	r6,r7,r21
   46694:	80c00215 	stw	r3,8(r16)
   46698:	81800015 	stw	r6,0(r16)
   4669c:	0025883a 	mov	r18,zero
   466a0:	e0800217 	ldw	r2,8(fp)
   466a4:	b5ed883a 	add	r22,r22,r23
   466a8:	15c5c83a 	sub	r2,r2,r23
   466ac:	e0800215 	stw	r2,8(fp)
   466b0:	10002c26 	beq	r2,zero,46764 <__sfvwrite_r+0x2bc>
   466b4:	81c00017 	ldw	r7,0(r16)
   466b8:	80c00217 	ldw	r3,8(r16)
   466bc:	8280030b 	ldhu	r10,12(r16)
   466c0:	3809883a 	mov	r4,r7
   466c4:	1829883a 	mov	r20,r3
   466c8:	903fc01e 	bne	r18,zero,465cc <__sfvwrite_r+0x124>
   466cc:	8d800017 	ldw	r22,0(r17)
   466d0:	8c800117 	ldw	r18,4(r17)
   466d4:	8c400204 	addi	r17,r17,8
   466d8:	003fb906 	br	465c0 <__sfvwrite_r+0x118>
   466dc:	002f883a 	mov	r23,zero
   466e0:	0005883a 	mov	r2,zero
   466e4:	002b883a 	mov	r21,zero
   466e8:	0029883a 	mov	r20,zero
   466ec:	a0003526 	beq	r20,zero,467c4 <__sfvwrite_r+0x31c>
   466f0:	10003926 	beq	r2,zero,467d8 <__sfvwrite_r+0x330>
   466f4:	b805883a 	mov	r2,r23
   466f8:	a02d883a 	mov	r22,r20
   466fc:	1500012e 	bgeu	r2,r20,46704 <__sfvwrite_r+0x25c>
   46700:	102d883a 	mov	r22,r2
   46704:	81000017 	ldw	r4,0(r16)
   46708:	80800417 	ldw	r2,16(r16)
   4670c:	84800217 	ldw	r18,8(r16)
   46710:	81c00517 	ldw	r7,20(r16)
   46714:	1100022e 	bgeu	r2,r4,46720 <__sfvwrite_r+0x278>
   46718:	91e5883a 	add	r18,r18,r7
   4671c:	95803616 	blt	r18,r22,467f8 <__sfvwrite_r+0x350>
   46720:	b1c06a16 	blt	r22,r7,468cc <__sfvwrite_r+0x424>
   46724:	80800917 	ldw	r2,36(r16)
   46728:	81400717 	ldw	r5,28(r16)
   4672c:	a80d883a 	mov	r6,r21
   46730:	9809883a 	mov	r4,r19
   46734:	103ee83a 	callr	r2
   46738:	1025883a 	mov	r18,r2
   4673c:	00801a0e 	bge	zero,r2,467a8 <__sfvwrite_r+0x300>
   46740:	bcafc83a 	sub	r23,r23,r18
   46744:	b8001426 	beq	r23,zero,46798 <__sfvwrite_r+0x2f0>
   46748:	00800044 	movi	r2,1
   4674c:	e0c00217 	ldw	r3,8(fp)
   46750:	acab883a 	add	r21,r21,r18
   46754:	a4a9c83a 	sub	r20,r20,r18
   46758:	1c87c83a 	sub	r3,r3,r18
   4675c:	e0c00215 	stw	r3,8(fp)
   46760:	183fe21e 	bne	r3,zero,466ec <__sfvwrite_r+0x244>
   46764:	0005883a 	mov	r2,zero
   46768:	dfc00a17 	ldw	ra,40(sp)
   4676c:	df000917 	ldw	fp,36(sp)
   46770:	ddc00817 	ldw	r23,32(sp)
   46774:	dd800717 	ldw	r22,28(sp)
   46778:	dd400617 	ldw	r21,24(sp)
   4677c:	dd000517 	ldw	r20,20(sp)
   46780:	dcc00417 	ldw	r19,16(sp)
   46784:	dc800317 	ldw	r18,12(sp)
   46788:	dc400217 	ldw	r17,8(sp)
   4678c:	dc000117 	ldw	r16,4(sp)
   46790:	dec00b04 	addi	sp,sp,44
   46794:	f800283a 	ret
   46798:	800b883a 	mov	r5,r16
   4679c:	9809883a 	mov	r4,r19
   467a0:	0045c1c0 	call	45c1c <_fflush_r>
   467a4:	103fe926 	beq	r2,zero,4674c <__sfvwrite_r+0x2a4>
   467a8:	8080030b 	ldhu	r2,12(r16)
   467ac:	10801014 	ori	r2,r2,64
   467b0:	8080030d 	sth	r2,12(r16)
   467b4:	00bfffc4 	movi	r2,-1
   467b8:	003feb06 	br	46768 <__sfvwrite_r+0x2c0>
   467bc:	0005883a 	mov	r2,zero
   467c0:	f800283a 	ret
   467c4:	8d000117 	ldw	r20,4(r17)
   467c8:	8805883a 	mov	r2,r17
   467cc:	8c400204 	addi	r17,r17,8
   467d0:	a03ffc26 	beq	r20,zero,467c4 <__sfvwrite_r+0x31c>
   467d4:	15400017 	ldw	r21,0(r2)
   467d8:	a00d883a 	mov	r6,r20
   467dc:	01400284 	movi	r5,10
   467e0:	a809883a 	mov	r4,r21
   467e4:	004748c0 	call	4748c <memchr>
   467e8:	10004326 	beq	r2,zero,468f8 <__sfvwrite_r+0x450>
   467ec:	10800044 	addi	r2,r2,1
   467f0:	156fc83a 	sub	r23,r2,r21
   467f4:	003fbf06 	br	466f4 <__sfvwrite_r+0x24c>
   467f8:	a80b883a 	mov	r5,r21
   467fc:	900d883a 	mov	r6,r18
   46800:	004765c0 	call	4765c <memmove>
   46804:	80800017 	ldw	r2,0(r16)
   46808:	800b883a 	mov	r5,r16
   4680c:	9809883a 	mov	r4,r19
   46810:	1485883a 	add	r2,r2,r18
   46814:	80800015 	stw	r2,0(r16)
   46818:	0045c1c0 	call	45c1c <_fflush_r>
   4681c:	103fc826 	beq	r2,zero,46740 <__sfvwrite_r+0x298>
   46820:	003fe106 	br	467a8 <__sfvwrite_r+0x300>
   46824:	80800417 	ldw	r2,16(r16)
   46828:	11c01236 	bltu	r2,r7,46874 <__sfvwrite_r+0x3cc>
   4682c:	81400517 	ldw	r5,20(r16)
   46830:	91401036 	bltu	r18,r5,46874 <__sfvwrite_r+0x3cc>
   46834:	00a00034 	movhi	r2,32768
   46838:	902f883a 	mov	r23,r18
   4683c:	90800136 	bltu	r18,r2,46844 <__sfvwrite_r+0x39c>
   46840:	ddc00017 	ldw	r23,0(sp)
   46844:	b809883a 	mov	r4,r23
   46848:	004c1c80 	call	4c1c8 <__modsi3>
   4684c:	80c00917 	ldw	r3,36(r16)
   46850:	81400717 	ldw	r5,28(r16)
   46854:	b88fc83a 	sub	r7,r23,r2
   46858:	b00d883a 	mov	r6,r22
   4685c:	9809883a 	mov	r4,r19
   46860:	183ee83a 	callr	r3
   46864:	102f883a 	mov	r23,r2
   46868:	00bfcf0e 	bge	zero,r2,467a8 <__sfvwrite_r+0x300>
   4686c:	95e5c83a 	sub	r18,r18,r23
   46870:	003f8b06 	br	466a0 <__sfvwrite_r+0x1f8>
   46874:	182f883a 	mov	r23,r3
   46878:	90c0012e 	bgeu	r18,r3,46880 <__sfvwrite_r+0x3d8>
   4687c:	902f883a 	mov	r23,r18
   46880:	3809883a 	mov	r4,r7
   46884:	b80d883a 	mov	r6,r23
   46888:	b00b883a 	mov	r5,r22
   4688c:	004765c0 	call	4765c <memmove>
   46890:	80c00217 	ldw	r3,8(r16)
   46894:	81c00017 	ldw	r7,0(r16)
   46898:	1dc7c83a 	sub	r3,r3,r23
   4689c:	3dcf883a 	add	r7,r7,r23
   468a0:	80c00215 	stw	r3,8(r16)
   468a4:	81c00015 	stw	r7,0(r16)
   468a8:	183ff01e 	bne	r3,zero,4686c <__sfvwrite_r+0x3c4>
   468ac:	800b883a 	mov	r5,r16
   468b0:	9809883a 	mov	r4,r19
   468b4:	0045c1c0 	call	45c1c <_fflush_r>
   468b8:	103fec26 	beq	r2,zero,4686c <__sfvwrite_r+0x3c4>
   468bc:	003fba06 	br	467a8 <__sfvwrite_r+0x300>
   468c0:	9029883a 	mov	r20,r18
   468c4:	902b883a 	mov	r21,r18
   468c8:	003f6a06 	br	46674 <__sfvwrite_r+0x1cc>
   468cc:	b00d883a 	mov	r6,r22
   468d0:	a80b883a 	mov	r5,r21
   468d4:	004765c0 	call	4765c <memmove>
   468d8:	80c00217 	ldw	r3,8(r16)
   468dc:	80800017 	ldw	r2,0(r16)
   468e0:	b025883a 	mov	r18,r22
   468e4:	1d87c83a 	sub	r3,r3,r22
   468e8:	1585883a 	add	r2,r2,r22
   468ec:	80c00215 	stw	r3,8(r16)
   468f0:	80800015 	stw	r2,0(r16)
   468f4:	003f9206 	br	46740 <__sfvwrite_r+0x298>
   468f8:	a0800044 	addi	r2,r20,1
   468fc:	102f883a 	mov	r23,r2
   46900:	003f7d06 	br	466f8 <__sfvwrite_r+0x250>
   46904:	280d883a 	mov	r6,r5
   46908:	200b883a 	mov	r5,r4
   4690c:	9809883a 	mov	r4,r19
   46910:	00489d00 	call	489d0 <_realloc_r>
   46914:	1007883a 	mov	r3,r2
   46918:	103f4e1e 	bne	r2,zero,46654 <__sfvwrite_r+0x1ac>
   4691c:	81400417 	ldw	r5,16(r16)
   46920:	9809883a 	mov	r4,r19
   46924:	00461a00 	call	461a0 <_free_r>
   46928:	8080030b 	ldhu	r2,12(r16)
   4692c:	00c00304 	movi	r3,12
   46930:	98c00015 	stw	r3,0(r19)
   46934:	10bfdfcc 	andi	r2,r2,65407
   46938:	003f9c06 	br	467ac <__sfvwrite_r+0x304>
   4693c:	00c00304 	movi	r3,12
   46940:	8080030b 	ldhu	r2,12(r16)
   46944:	98c00015 	stw	r3,0(r19)
   46948:	003f9806 	br	467ac <__sfvwrite_r+0x304>

0004694c <_fwalk>:
   4694c:	defffa04 	addi	sp,sp,-24
   46950:	dd000415 	stw	r20,16(sp)
   46954:	dcc00315 	stw	r19,12(sp)
   46958:	dc800215 	stw	r18,8(sp)
   4695c:	dfc00515 	stw	ra,20(sp)
   46960:	dc400115 	stw	r17,4(sp)
   46964:	dc000015 	stw	r16,0(sp)
   46968:	2827883a 	mov	r19,r5
   4696c:	2480b804 	addi	r18,r4,736
   46970:	0029883a 	mov	r20,zero
   46974:	94400117 	ldw	r17,4(r18)
   46978:	94000217 	ldw	r16,8(r18)
   4697c:	8c7fffc4 	addi	r17,r17,-1
   46980:	88000d16 	blt	r17,zero,469b8 <_fwalk+0x6c>
   46984:	8080030b 	ldhu	r2,12(r16)
   46988:	8c7fffc4 	addi	r17,r17,-1
   4698c:	108000b0 	cmpltui	r2,r2,2
   46990:	1000061e 	bne	r2,zero,469ac <_fwalk+0x60>
   46994:	8080038f 	ldh	r2,14(r16)
   46998:	8009883a 	mov	r4,r16
   4699c:	10bfffe0 	cmpeqi	r2,r2,-1
   469a0:	1000021e 	bne	r2,zero,469ac <_fwalk+0x60>
   469a4:	983ee83a 	callr	r19
   469a8:	a0a8b03a 	or	r20,r20,r2
   469ac:	88bfffd8 	cmpnei	r2,r17,-1
   469b0:	84001a04 	addi	r16,r16,104
   469b4:	103ff31e 	bne	r2,zero,46984 <_fwalk+0x38>
   469b8:	94800017 	ldw	r18,0(r18)
   469bc:	903fed1e 	bne	r18,zero,46974 <_fwalk+0x28>
   469c0:	a005883a 	mov	r2,r20
   469c4:	dfc00517 	ldw	ra,20(sp)
   469c8:	dd000417 	ldw	r20,16(sp)
   469cc:	dcc00317 	ldw	r19,12(sp)
   469d0:	dc800217 	ldw	r18,8(sp)
   469d4:	dc400117 	ldw	r17,4(sp)
   469d8:	dc000017 	ldw	r16,0(sp)
   469dc:	dec00604 	addi	sp,sp,24
   469e0:	f800283a 	ret

000469e4 <_fwalk_reent>:
   469e4:	defff904 	addi	sp,sp,-28
   469e8:	dd400515 	stw	r21,20(sp)
   469ec:	dd000415 	stw	r20,16(sp)
   469f0:	dcc00315 	stw	r19,12(sp)
   469f4:	dc800215 	stw	r18,8(sp)
   469f8:	dfc00615 	stw	ra,24(sp)
   469fc:	dc400115 	stw	r17,4(sp)
   46a00:	dc000015 	stw	r16,0(sp)
   46a04:	2025883a 	mov	r18,r4
   46a08:	2829883a 	mov	r20,r5
   46a0c:	24c0b804 	addi	r19,r4,736
   46a10:	002b883a 	mov	r21,zero
   46a14:	9c400117 	ldw	r17,4(r19)
   46a18:	9c000217 	ldw	r16,8(r19)
   46a1c:	8c7fffc4 	addi	r17,r17,-1
   46a20:	88000e16 	blt	r17,zero,46a5c <_fwalk_reent+0x78>
   46a24:	8080030b 	ldhu	r2,12(r16)
   46a28:	8c7fffc4 	addi	r17,r17,-1
   46a2c:	108000b0 	cmpltui	r2,r2,2
   46a30:	1000071e 	bne	r2,zero,46a50 <_fwalk_reent+0x6c>
   46a34:	8080038f 	ldh	r2,14(r16)
   46a38:	800b883a 	mov	r5,r16
   46a3c:	9009883a 	mov	r4,r18
   46a40:	10bfffe0 	cmpeqi	r2,r2,-1
   46a44:	1000021e 	bne	r2,zero,46a50 <_fwalk_reent+0x6c>
   46a48:	a03ee83a 	callr	r20
   46a4c:	a8aab03a 	or	r21,r21,r2
   46a50:	88bfffd8 	cmpnei	r2,r17,-1
   46a54:	84001a04 	addi	r16,r16,104
   46a58:	103ff21e 	bne	r2,zero,46a24 <_fwalk_reent+0x40>
   46a5c:	9cc00017 	ldw	r19,0(r19)
   46a60:	983fec1e 	bne	r19,zero,46a14 <_fwalk_reent+0x30>
   46a64:	a805883a 	mov	r2,r21
   46a68:	dfc00617 	ldw	ra,24(sp)
   46a6c:	dd400517 	ldw	r21,20(sp)
   46a70:	dd000417 	ldw	r20,16(sp)
   46a74:	dcc00317 	ldw	r19,12(sp)
   46a78:	dc800217 	ldw	r18,8(sp)
   46a7c:	dc400117 	ldw	r17,4(sp)
   46a80:	dc000017 	ldw	r16,0(sp)
   46a84:	dec00704 	addi	sp,sp,28
   46a88:	f800283a 	ret

00046a8c <__localeconv_l>:
   46a8c:	20803c04 	addi	r2,r4,240
   46a90:	f800283a 	ret

00046a94 <_localeconv_r>:
   46a94:	00800174 	movhi	r2,5
   46a98:	1088ca04 	addi	r2,r2,9000
   46a9c:	f800283a 	ret

00046aa0 <localeconv>:
   46aa0:	00800174 	movhi	r2,5
   46aa4:	1088ca04 	addi	r2,r2,9000
   46aa8:	f800283a 	ret

00046aac <__smakebuf_r>:
   46aac:	2880030b 	ldhu	r2,12(r5)
   46ab0:	deffe804 	addi	sp,sp,-96
   46ab4:	dc001215 	stw	r16,72(sp)
   46ab8:	dfc01715 	stw	ra,92(sp)
   46abc:	dd001615 	stw	r20,88(sp)
   46ac0:	dcc01515 	stw	r19,84(sp)
   46ac4:	dc801415 	stw	r18,80(sp)
   46ac8:	dc401315 	stw	r17,76(sp)
   46acc:	10c0008c 	andi	r3,r2,2
   46ad0:	2821883a 	mov	r16,r5
   46ad4:	18000d26 	beq	r3,zero,46b0c <__smakebuf_r+0x60>
   46ad8:	288010c4 	addi	r2,r5,67
   46adc:	28800015 	stw	r2,0(r5)
   46ae0:	28800415 	stw	r2,16(r5)
   46ae4:	00800044 	movi	r2,1
   46ae8:	28800515 	stw	r2,20(r5)
   46aec:	dfc01717 	ldw	ra,92(sp)
   46af0:	dd001617 	ldw	r20,88(sp)
   46af4:	dcc01517 	ldw	r19,84(sp)
   46af8:	dc801417 	ldw	r18,80(sp)
   46afc:	dc401317 	ldw	r17,76(sp)
   46b00:	dc001217 	ldw	r16,72(sp)
   46b04:	dec01804 	addi	sp,sp,96
   46b08:	f800283a 	ret
   46b0c:	2940038f 	ldh	r5,14(r5)
   46b10:	2023883a 	mov	r17,r4
   46b14:	28002816 	blt	r5,zero,46bb8 <__smakebuf_r+0x10c>
   46b18:	d80d883a 	mov	r6,sp
   46b1c:	004ab9c0 	call	4ab9c <_fstat_r>
   46b20:	10002416 	blt	r2,zero,46bb4 <__smakebuf_r+0x108>
   46b24:	d8800117 	ldw	r2,4(sp)
   46b28:	10bc000c 	andi	r2,r2,61440
   46b2c:	10880018 	cmpnei	r2,r2,8192
   46b30:	1000421e 	bne	r2,zero,46c3c <__smakebuf_r+0x190>
   46b34:	8140038f 	ldh	r5,14(r16)
   46b38:	8809883a 	mov	r4,r17
   46b3c:	004abfc0 	call	4abfc <_isatty_r>
   46b40:	10000826 	beq	r2,zero,46b64 <__smakebuf_r+0xb8>
   46b44:	8080030b 	ldhu	r2,12(r16)
   46b48:	80c010c4 	addi	r3,r16,67
   46b4c:	80c00015 	stw	r3,0(r16)
   46b50:	10800054 	ori	r2,r2,1
   46b54:	8080030d 	sth	r2,12(r16)
   46b58:	00800044 	movi	r2,1
   46b5c:	80c00415 	stw	r3,16(r16)
   46b60:	80800515 	stw	r2,20(r16)
   46b64:	04c00044 	movi	r19,1
   46b68:	05010004 	movi	r20,1024
   46b6c:	04820004 	movi	r18,2048
   46b70:	a00b883a 	mov	r5,r20
   46b74:	8809883a 	mov	r4,r17
   46b78:	0046cd80 	call	46cd8 <_malloc_r>
   46b7c:	10001726 	beq	r2,zero,46bdc <__smakebuf_r+0x130>
   46b80:	80c0030b 	ldhu	r3,12(r16)
   46b84:	01000134 	movhi	r4,4
   46b88:	21174204 	addi	r4,r4,23816
   46b8c:	89000f15 	stw	r4,60(r17)
   46b90:	18c02014 	ori	r3,r3,128
   46b94:	80c0030d 	sth	r3,12(r16)
   46b98:	80800015 	stw	r2,0(r16)
   46b9c:	80800415 	stw	r2,16(r16)
   46ba0:	85000515 	stw	r20,20(r16)
   46ba4:	98001d1e 	bne	r19,zero,46c1c <__smakebuf_r+0x170>
   46ba8:	90e4b03a 	or	r18,r18,r3
   46bac:	8480030d 	sth	r18,12(r16)
   46bb0:	003fce06 	br	46aec <__smakebuf_r+0x40>
   46bb4:	8080030b 	ldhu	r2,12(r16)
   46bb8:	1080200c 	andi	r2,r2,128
   46bbc:	0027883a 	mov	r19,zero
   46bc0:	10001326 	beq	r2,zero,46c10 <__smakebuf_r+0x164>
   46bc4:	05001004 	movi	r20,64
   46bc8:	a00b883a 	mov	r5,r20
   46bcc:	8809883a 	mov	r4,r17
   46bd0:	0025883a 	mov	r18,zero
   46bd4:	0046cd80 	call	46cd8 <_malloc_r>
   46bd8:	103fe91e 	bne	r2,zero,46b80 <__smakebuf_r+0xd4>
   46bdc:	8080030b 	ldhu	r2,12(r16)
   46be0:	10c0800c 	andi	r3,r2,512
   46be4:	183fc11e 	bne	r3,zero,46aec <__smakebuf_r+0x40>
   46be8:	00ffff04 	movi	r3,-4
   46bec:	10c4703a 	and	r2,r2,r3
   46bf0:	10800094 	ori	r2,r2,2
   46bf4:	80c010c4 	addi	r3,r16,67
   46bf8:	8080030d 	sth	r2,12(r16)
   46bfc:	00800044 	movi	r2,1
   46c00:	80c00015 	stw	r3,0(r16)
   46c04:	80c00415 	stw	r3,16(r16)
   46c08:	80800515 	stw	r2,20(r16)
   46c0c:	003fb706 	br	46aec <__smakebuf_r+0x40>
   46c10:	05010004 	movi	r20,1024
   46c14:	0025883a 	mov	r18,zero
   46c18:	003fd506 	br	46b70 <__smakebuf_r+0xc4>
   46c1c:	8140038f 	ldh	r5,14(r16)
   46c20:	8809883a 	mov	r4,r17
   46c24:	004abfc0 	call	4abfc <_isatty_r>
   46c28:	80c0030b 	ldhu	r3,12(r16)
   46c2c:	103fde26 	beq	r2,zero,46ba8 <__smakebuf_r+0xfc>
   46c30:	18ffff0c 	andi	r3,r3,65532
   46c34:	18c00054 	ori	r3,r3,1
   46c38:	003fdb06 	br	46ba8 <__smakebuf_r+0xfc>
   46c3c:	0027883a 	mov	r19,zero
   46c40:	05010004 	movi	r20,1024
   46c44:	04820004 	movi	r18,2048
   46c48:	003fc906 	br	46b70 <__smakebuf_r+0xc4>

00046c4c <__swhatbuf_r>:
   46c4c:	deffea04 	addi	sp,sp,-88
   46c50:	dc001215 	stw	r16,72(sp)
   46c54:	2821883a 	mov	r16,r5
   46c58:	2940038f 	ldh	r5,14(r5)
   46c5c:	dc801415 	stw	r18,80(sp)
   46c60:	dc401315 	stw	r17,76(sp)
   46c64:	dfc01515 	stw	ra,84(sp)
   46c68:	3023883a 	mov	r17,r6
   46c6c:	3825883a 	mov	r18,r7
   46c70:	28001016 	blt	r5,zero,46cb4 <__swhatbuf_r+0x68>
   46c74:	d80d883a 	mov	r6,sp
   46c78:	004ab9c0 	call	4ab9c <_fstat_r>
   46c7c:	10000d16 	blt	r2,zero,46cb4 <__swhatbuf_r+0x68>
   46c80:	d8c00117 	ldw	r3,4(sp)
   46c84:	01010004 	movi	r4,1024
   46c88:	00820004 	movi	r2,2048
   46c8c:	18fc000c 	andi	r3,r3,61440
   46c90:	18c80020 	cmpeqi	r3,r3,8192
   46c94:	90c00015 	stw	r3,0(r18)
   46c98:	89000015 	stw	r4,0(r17)
   46c9c:	dfc01517 	ldw	ra,84(sp)
   46ca0:	dc801417 	ldw	r18,80(sp)
   46ca4:	dc401317 	ldw	r17,76(sp)
   46ca8:	dc001217 	ldw	r16,72(sp)
   46cac:	dec01604 	addi	sp,sp,88
   46cb0:	f800283a 	ret
   46cb4:	8080030b 	ldhu	r2,12(r16)
   46cb8:	0007883a 	mov	r3,zero
   46cbc:	1080200c 	andi	r2,r2,128
   46cc0:	10000326 	beq	r2,zero,46cd0 <__swhatbuf_r+0x84>
   46cc4:	01001004 	movi	r4,64
   46cc8:	0005883a 	mov	r2,zero
   46ccc:	003ff106 	br	46c94 <__swhatbuf_r+0x48>
   46cd0:	01010004 	movi	r4,1024
   46cd4:	003fef06 	br	46c94 <__swhatbuf_r+0x48>

00046cd8 <_malloc_r>:
   46cd8:	defff604 	addi	sp,sp,-40
   46cdc:	dc400115 	stw	r17,4(sp)
   46ce0:	2c4002c4 	addi	r17,r5,11
   46ce4:	dc800215 	stw	r18,8(sp)
   46ce8:	dfc00915 	stw	ra,36(sp)
   46cec:	df000815 	stw	fp,32(sp)
   46cf0:	ddc00715 	stw	r23,28(sp)
   46cf4:	dd800615 	stw	r22,24(sp)
   46cf8:	dd400515 	stw	r21,20(sp)
   46cfc:	dd000415 	stw	r20,16(sp)
   46d00:	dcc00315 	stw	r19,12(sp)
   46d04:	dc000015 	stw	r16,0(sp)
   46d08:	888005e8 	cmpgeui	r2,r17,23
   46d0c:	2025883a 	mov	r18,r4
   46d10:	1000261e 	bne	r2,zero,46dac <_malloc_r+0xd4>
   46d14:	29400468 	cmpgeui	r5,r5,17
   46d18:	28008d1e 	bne	r5,zero,46f50 <_malloc_r+0x278>
   46d1c:	004f2fc0 	call	4f2fc <__malloc_lock>
   46d20:	04400404 	movi	r17,16
   46d24:	00800604 	movi	r2,24
   46d28:	01c00084 	movi	r7,2
   46d2c:	04c00174 	movhi	r19,5
   46d30:	9cc78c04 	addi	r19,r19,7728
   46d34:	9885883a 	add	r2,r19,r2
   46d38:	14000117 	ldw	r16,4(r2)
   46d3c:	10fffe04 	addi	r3,r2,-8
   46d40:	80c0cb26 	beq	r16,r3,47070 <_malloc_r+0x398>
   46d44:	80800117 	ldw	r2,4(r16)
   46d48:	81000317 	ldw	r4,12(r16)
   46d4c:	00ffff04 	movi	r3,-4
   46d50:	10c4703a 	and	r2,r2,r3
   46d54:	81400217 	ldw	r5,8(r16)
   46d58:	8085883a 	add	r2,r16,r2
   46d5c:	10c00117 	ldw	r3,4(r2)
   46d60:	29000315 	stw	r4,12(r5)
   46d64:	21400215 	stw	r5,8(r4)
   46d68:	18c00054 	ori	r3,r3,1
   46d6c:	10c00115 	stw	r3,4(r2)
   46d70:	9009883a 	mov	r4,r18
   46d74:	004f3200 	call	4f320 <__malloc_unlock>
   46d78:	80800204 	addi	r2,r16,8
   46d7c:	dfc00917 	ldw	ra,36(sp)
   46d80:	df000817 	ldw	fp,32(sp)
   46d84:	ddc00717 	ldw	r23,28(sp)
   46d88:	dd800617 	ldw	r22,24(sp)
   46d8c:	dd400517 	ldw	r21,20(sp)
   46d90:	dd000417 	ldw	r20,16(sp)
   46d94:	dcc00317 	ldw	r19,12(sp)
   46d98:	dc800217 	ldw	r18,8(sp)
   46d9c:	dc400117 	ldw	r17,4(sp)
   46da0:	dc000017 	ldw	r16,0(sp)
   46da4:	dec00a04 	addi	sp,sp,40
   46da8:	f800283a 	ret
   46dac:	00bffe04 	movi	r2,-8
   46db0:	88a2703a 	and	r17,r17,r2
   46db4:	88006616 	blt	r17,zero,46f50 <_malloc_r+0x278>
   46db8:	89406536 	bltu	r17,r5,46f50 <_malloc_r+0x278>
   46dbc:	004f2fc0 	call	4f2fc <__malloc_lock>
   46dc0:	88807e28 	cmpgeui	r2,r17,504
   46dc4:	1000ef26 	beq	r2,zero,47184 <_malloc_r+0x4ac>
   46dc8:	8804d27a 	srli	r2,r17,9
   46dcc:	10006426 	beq	r2,zero,46f60 <_malloc_r+0x288>
   46dd0:	10c00168 	cmpgeui	r3,r2,5
   46dd4:	1800c31e 	bne	r3,zero,470e4 <_malloc_r+0x40c>
   46dd8:	8804d1ba 	srli	r2,r17,6
   46ddc:	11c00e44 	addi	r7,r2,57
   46de0:	380890fa 	slli	r4,r7,3
   46de4:	12000e04 	addi	r8,r2,56
   46de8:	04c00174 	movhi	r19,5
   46dec:	9cc78c04 	addi	r19,r19,7728
   46df0:	9909883a 	add	r4,r19,r4
   46df4:	24000117 	ldw	r16,4(r4)
   46df8:	213ffe04 	addi	r4,r4,-8
   46dfc:	24000b26 	beq	r4,r16,46e2c <_malloc_r+0x154>
   46e00:	01bfff04 	movi	r6,-4
   46e04:	00000306 	br	46e14 <_malloc_r+0x13c>
   46e08:	1800970e 	bge	r3,zero,47068 <_malloc_r+0x390>
   46e0c:	84000317 	ldw	r16,12(r16)
   46e10:	24000626 	beq	r4,r16,46e2c <_malloc_r+0x154>
   46e14:	80800117 	ldw	r2,4(r16)
   46e18:	1184703a 	and	r2,r2,r6
   46e1c:	1447c83a 	sub	r3,r2,r17
   46e20:	19400408 	cmpgei	r5,r3,16
   46e24:	283ff826 	beq	r5,zero,46e08 <_malloc_r+0x130>
   46e28:	400f883a 	mov	r7,r8
   46e2c:	9c000417 	ldw	r16,16(r19)
   46e30:	02400174 	movhi	r9,5
   46e34:	4a478e04 	addi	r9,r9,7736
   46e38:	82407f26 	beq	r16,r9,47038 <_malloc_r+0x360>
   46e3c:	80800117 	ldw	r2,4(r16)
   46e40:	00ffff04 	movi	r3,-4
   46e44:	10c4703a 	and	r2,r2,r3
   46e48:	1447c83a 	sub	r3,r2,r17
   46e4c:	19000410 	cmplti	r4,r3,16
   46e50:	2000cf26 	beq	r4,zero,47190 <_malloc_r+0x4b8>
   46e54:	9a400515 	stw	r9,20(r19)
   46e58:	9a400415 	stw	r9,16(r19)
   46e5c:	1800c10e 	bge	r3,zero,47164 <_malloc_r+0x48c>
   46e60:	10c08028 	cmpgeui	r3,r2,512
   46e64:	99400117 	ldw	r5,4(r19)
   46e68:	1800851e 	bne	r3,zero,47080 <_malloc_r+0x3a8>
   46e6c:	1006d0fa 	srli	r3,r2,3
   46e70:	1008d17a 	srli	r4,r2,5
   46e74:	18800044 	addi	r2,r3,1
   46e78:	100490fa 	slli	r2,r2,3
   46e7c:	00c00044 	movi	r3,1
   46e80:	1906983a 	sll	r3,r3,r4
   46e84:	9885883a 	add	r2,r19,r2
   46e88:	11000017 	ldw	r4,0(r2)
   46e8c:	28cab03a 	or	r5,r5,r3
   46e90:	10fffe04 	addi	r3,r2,-8
   46e94:	80c00315 	stw	r3,12(r16)
   46e98:	81000215 	stw	r4,8(r16)
   46e9c:	99400115 	stw	r5,4(r19)
   46ea0:	14000015 	stw	r16,0(r2)
   46ea4:	24000315 	stw	r16,12(r4)
   46ea8:	3805d0ba 	srai	r2,r7,2
   46eac:	01000044 	movi	r4,1
   46eb0:	2088983a 	sll	r4,r4,r2
   46eb4:	29002e36 	bltu	r5,r4,46f70 <_malloc_r+0x298>
   46eb8:	2144703a 	and	r2,r4,r5
   46ebc:	10000a1e 	bne	r2,zero,46ee8 <_malloc_r+0x210>
   46ec0:	2109883a 	add	r4,r4,r4
   46ec4:	00bfff04 	movi	r2,-4
   46ec8:	3884703a 	and	r2,r7,r2
   46ecc:	2146703a 	and	r3,r4,r5
   46ed0:	11c00104 	addi	r7,r2,4
   46ed4:	1800041e 	bne	r3,zero,46ee8 <_malloc_r+0x210>
   46ed8:	2109883a 	add	r4,r4,r4
   46edc:	2144703a 	and	r2,r4,r5
   46ee0:	39c00104 	addi	r7,r7,4
   46ee4:	103ffc26 	beq	r2,zero,46ed8 <_malloc_r+0x200>
   46ee8:	02bfff04 	movi	r10,-4
   46eec:	381690fa 	slli	r11,r7,3
   46ef0:	3819883a 	mov	r12,r7
   46ef4:	9ad7883a 	add	r11,r19,r11
   46ef8:	5811883a 	mov	r8,r11
   46efc:	40800317 	ldw	r2,12(r8)
   46f00:	40808126 	beq	r8,r2,47108 <_malloc_r+0x430>
   46f04:	10c00117 	ldw	r3,4(r2)
   46f08:	1021883a 	mov	r16,r2
   46f0c:	10800317 	ldw	r2,12(r2)
   46f10:	1a86703a 	and	r3,r3,r10
   46f14:	1c4bc83a 	sub	r5,r3,r17
   46f18:	29800410 	cmplti	r6,r5,16
   46f1c:	30007f26 	beq	r6,zero,4711c <_malloc_r+0x444>
   46f20:	283ff716 	blt	r5,zero,46f00 <_malloc_r+0x228>
   46f24:	80c7883a 	add	r3,r16,r3
   46f28:	19400117 	ldw	r5,4(r3)
   46f2c:	81800217 	ldw	r6,8(r16)
   46f30:	9009883a 	mov	r4,r18
   46f34:	29400054 	ori	r5,r5,1
   46f38:	19400115 	stw	r5,4(r3)
   46f3c:	30800315 	stw	r2,12(r6)
   46f40:	11800215 	stw	r6,8(r2)
   46f44:	004f3200 	call	4f320 <__malloc_unlock>
   46f48:	80800204 	addi	r2,r16,8
   46f4c:	003f8b06 	br	46d7c <_malloc_r+0xa4>
   46f50:	00800304 	movi	r2,12
   46f54:	90800015 	stw	r2,0(r18)
   46f58:	0005883a 	mov	r2,zero
   46f5c:	003f8706 	br	46d7c <_malloc_r+0xa4>
   46f60:	01008004 	movi	r4,512
   46f64:	01c01004 	movi	r7,64
   46f68:	02000fc4 	movi	r8,63
   46f6c:	003f9e06 	br	46de8 <_malloc_r+0x110>
   46f70:	9c000217 	ldw	r16,8(r19)
   46f74:	00bfff04 	movi	r2,-4
   46f78:	80c00117 	ldw	r3,4(r16)
   46f7c:	18aa703a 	and	r21,r3,r2
   46f80:	ac400336 	bltu	r21,r17,46f90 <_malloc_r+0x2b8>
   46f84:	ac47c83a 	sub	r3,r21,r17
   46f88:	18800408 	cmpgei	r2,r3,16
   46f8c:	10002c1e 	bne	r2,zero,47040 <_malloc_r+0x368>
   46f90:	00800174 	movhi	r2,5
   46f94:	108d6d17 	ldw	r2,13748(r2)
   46f98:	00c00174 	movhi	r3,5
   46f9c:	1d147717 	ldw	r20,20956(r3)
   46fa0:	10bfffd8 	cmpnei	r2,r2,-1
   46fa4:	856f883a 	add	r23,r16,r21
   46fa8:	8d29883a 	add	r20,r17,r20
   46fac:	1000e726 	beq	r2,zero,4734c <_malloc_r+0x674>
   46fb0:	a50403c4 	addi	r20,r20,4111
   46fb4:	00bc0004 	movi	r2,-4096
   46fb8:	a0a8703a 	and	r20,r20,r2
   46fbc:	a00b883a 	mov	r5,r20
   46fc0:	9009883a 	mov	r4,r18
   46fc4:	0048fc40 	call	48fc4 <_sbrk_r>
   46fc8:	102d883a 	mov	r22,r2
   46fcc:	10bfffd8 	cmpnei	r2,r2,-1
   46fd0:	10008426 	beq	r2,zero,471e4 <_malloc_r+0x50c>
   46fd4:	b5c08236 	bltu	r22,r23,471e0 <_malloc_r+0x508>
   46fd8:	00800174 	movhi	r2,5
   46fdc:	11148217 	ldw	r4,21000(r2)
   46fe0:	a109883a 	add	r4,r20,r4
   46fe4:	11148215 	stw	r4,21000(r2)
   46fe8:	2007883a 	mov	r3,r4
   46fec:	bd80a51e 	bne	r23,r22,47284 <_malloc_r+0x5ac>
   46ff0:	b083ffcc 	andi	r2,r22,4095
   46ff4:	1000a31e 	bne	r2,zero,47284 <_malloc_r+0x5ac>
   46ff8:	9d800217 	ldw	r22,8(r19)
   46ffc:	ad07883a 	add	r3,r21,r20
   47000:	18c00054 	ori	r3,r3,1
   47004:	b0c00115 	stw	r3,4(r22)
   47008:	00800174 	movhi	r2,5
   4700c:	10947617 	ldw	r2,20952(r2)
   47010:	1100022e 	bgeu	r2,r4,4701c <_malloc_r+0x344>
   47014:	00800174 	movhi	r2,5
   47018:	11147615 	stw	r4,20952(r2)
   4701c:	00800174 	movhi	r2,5
   47020:	10947517 	ldw	r2,20948(r2)
   47024:	1100022e 	bgeu	r2,r4,47030 <_malloc_r+0x358>
   47028:	00800174 	movhi	r2,5
   4702c:	11147515 	stw	r4,20948(r2)
   47030:	b021883a 	mov	r16,r22
   47034:	00006d06 	br	471ec <_malloc_r+0x514>
   47038:	99400117 	ldw	r5,4(r19)
   4703c:	003f9a06 	br	46ea8 <_malloc_r+0x1d0>
   47040:	88800054 	ori	r2,r17,1
   47044:	80800115 	stw	r2,4(r16)
   47048:	8463883a 	add	r17,r16,r17
   4704c:	9c400215 	stw	r17,8(r19)
   47050:	18c00054 	ori	r3,r3,1
   47054:	88c00115 	stw	r3,4(r17)
   47058:	9009883a 	mov	r4,r18
   4705c:	004f3200 	call	4f320 <__malloc_unlock>
   47060:	80800204 	addi	r2,r16,8
   47064:	003f4506 	br	46d7c <_malloc_r+0xa4>
   47068:	81000317 	ldw	r4,12(r16)
   4706c:	003f3906 	br	46d54 <_malloc_r+0x7c>
   47070:	14000317 	ldw	r16,12(r2)
   47074:	143f331e 	bne	r2,r16,46d44 <_malloc_r+0x6c>
   47078:	39c00084 	addi	r7,r7,2
   4707c:	003f6b06 	br	46e2c <_malloc_r+0x154>
   47080:	1006d27a 	srli	r3,r2,9
   47084:	19000168 	cmpgeui	r4,r3,5
   47088:	20005026 	beq	r4,zero,471cc <_malloc_r+0x4f4>
   4708c:	19000568 	cmpgeui	r4,r3,21
   47090:	2000c01e 	bne	r4,zero,47394 <_malloc_r+0x6bc>
   47094:	19801704 	addi	r6,r3,92
   47098:	300c90fa 	slli	r6,r6,3
   4709c:	190016c4 	addi	r4,r3,91
   470a0:	998d883a 	add	r6,r19,r6
   470a4:	30c00017 	ldw	r3,0(r6)
   470a8:	31bffe04 	addi	r6,r6,-8
   470ac:	30c0a926 	beq	r6,r3,47354 <_malloc_r+0x67c>
   470b0:	023fff04 	movi	r8,-4
   470b4:	00000206 	br	470c0 <_malloc_r+0x3e8>
   470b8:	18c00217 	ldw	r3,8(r3)
   470bc:	30c00326 	beq	r6,r3,470cc <_malloc_r+0x3f4>
   470c0:	19000117 	ldw	r4,4(r3)
   470c4:	2208703a 	and	r4,r4,r8
   470c8:	113ffb36 	bltu	r2,r4,470b8 <_malloc_r+0x3e0>
   470cc:	19800317 	ldw	r6,12(r3)
   470d0:	81800315 	stw	r6,12(r16)
   470d4:	80c00215 	stw	r3,8(r16)
   470d8:	34000215 	stw	r16,8(r6)
   470dc:	1c000315 	stw	r16,12(r3)
   470e0:	003f7106 	br	46ea8 <_malloc_r+0x1d0>
   470e4:	10c00568 	cmpgeui	r3,r2,21
   470e8:	18004926 	beq	r3,zero,47210 <_malloc_r+0x538>
   470ec:	10c01568 	cmpgeui	r3,r2,85
   470f0:	1800af1e 	bne	r3,zero,473b0 <_malloc_r+0x6d8>
   470f4:	8804d33a 	srli	r2,r17,12
   470f8:	11c01bc4 	addi	r7,r2,111
   470fc:	380890fa 	slli	r4,r7,3
   47100:	12001b84 	addi	r8,r2,110
   47104:	003f3806 	br	46de8 <_malloc_r+0x110>
   47108:	63000044 	addi	r12,r12,1
   4710c:	608000cc 	andi	r2,r12,3
   47110:	42000204 	addi	r8,r8,8
   47114:	103f791e 	bne	r2,zero,46efc <_malloc_r+0x224>
   47118:	00004406 	br	4722c <_malloc_r+0x554>
   4711c:	81000217 	ldw	r4,8(r16)
   47120:	89800054 	ori	r6,r17,1
   47124:	81800115 	stw	r6,4(r16)
   47128:	20800315 	stw	r2,12(r4)
   4712c:	11000215 	stw	r4,8(r2)
   47130:	8463883a 	add	r17,r16,r17
   47134:	9c400515 	stw	r17,20(r19)
   47138:	9c400415 	stw	r17,16(r19)
   4713c:	28800054 	ori	r2,r5,1
   47140:	88800115 	stw	r2,4(r17)
   47144:	8a400315 	stw	r9,12(r17)
   47148:	8a400215 	stw	r9,8(r17)
   4714c:	80c7883a 	add	r3,r16,r3
   47150:	19400015 	stw	r5,0(r3)
   47154:	9009883a 	mov	r4,r18
   47158:	004f3200 	call	4f320 <__malloc_unlock>
   4715c:	80800204 	addi	r2,r16,8
   47160:	003f0606 	br	46d7c <_malloc_r+0xa4>
   47164:	8085883a 	add	r2,r16,r2
   47168:	10c00117 	ldw	r3,4(r2)
   4716c:	9009883a 	mov	r4,r18
   47170:	18c00054 	ori	r3,r3,1
   47174:	10c00115 	stw	r3,4(r2)
   47178:	004f3200 	call	4f320 <__malloc_unlock>
   4717c:	80800204 	addi	r2,r16,8
   47180:	003efe06 	br	46d7c <_malloc_r+0xa4>
   47184:	880ed0fa 	srli	r7,r17,3
   47188:	88800204 	addi	r2,r17,8
   4718c:	003ee706 	br	46d2c <_malloc_r+0x54>
   47190:	89000054 	ori	r4,r17,1
   47194:	81000115 	stw	r4,4(r16)
   47198:	8463883a 	add	r17,r16,r17
   4719c:	9c400515 	stw	r17,20(r19)
   471a0:	9c400415 	stw	r17,16(r19)
   471a4:	19000054 	ori	r4,r3,1
   471a8:	89000115 	stw	r4,4(r17)
   471ac:	8085883a 	add	r2,r16,r2
   471b0:	8a400315 	stw	r9,12(r17)
   471b4:	8a400215 	stw	r9,8(r17)
   471b8:	10c00015 	stw	r3,0(r2)
   471bc:	9009883a 	mov	r4,r18
   471c0:	004f3200 	call	4f320 <__malloc_unlock>
   471c4:	80800204 	addi	r2,r16,8
   471c8:	003eec06 	br	46d7c <_malloc_r+0xa4>
   471cc:	1006d1ba 	srli	r3,r2,6
   471d0:	19800e44 	addi	r6,r3,57
   471d4:	300c90fa 	slli	r6,r6,3
   471d8:	19000e04 	addi	r4,r3,56
   471dc:	003fb006 	br	470a0 <_malloc_r+0x3c8>
   471e0:	84c02426 	beq	r16,r19,47274 <_malloc_r+0x59c>
   471e4:	9c000217 	ldw	r16,8(r19)
   471e8:	80c00117 	ldw	r3,4(r16)
   471ec:	00bfff04 	movi	r2,-4
   471f0:	1884703a 	and	r2,r3,r2
   471f4:	1447c83a 	sub	r3,r2,r17
   471f8:	14400236 	bltu	r2,r17,47204 <_malloc_r+0x52c>
   471fc:	18800408 	cmpgei	r2,r3,16
   47200:	103f8f1e 	bne	r2,zero,47040 <_malloc_r+0x368>
   47204:	9009883a 	mov	r4,r18
   47208:	004f3200 	call	4f320 <__malloc_unlock>
   4720c:	003f5206 	br	46f58 <_malloc_r+0x280>
   47210:	11c01704 	addi	r7,r2,92
   47214:	380890fa 	slli	r4,r7,3
   47218:	120016c4 	addi	r8,r2,91
   4721c:	003ef206 	br	46de8 <_malloc_r+0x110>
   47220:	58800217 	ldw	r2,8(r11)
   47224:	39ffffc4 	addi	r7,r7,-1
   47228:	12c0961e 	bne	r2,r11,47484 <_malloc_r+0x7ac>
   4722c:	388000cc 	andi	r2,r7,3
   47230:	5afffe04 	addi	r11,r11,-8
   47234:	103ffa1e 	bne	r2,zero,47220 <_malloc_r+0x548>
   47238:	98c00117 	ldw	r3,4(r19)
   4723c:	0104303a 	nor	r2,zero,r4
   47240:	10c4703a 	and	r2,r2,r3
   47244:	98800115 	stw	r2,4(r19)
   47248:	2109883a 	add	r4,r4,r4
   4724c:	113f4836 	bltu	r2,r4,46f70 <_malloc_r+0x298>
   47250:	203f4726 	beq	r4,zero,46f70 <_malloc_r+0x298>
   47254:	2086703a 	and	r3,r4,r2
   47258:	1800041e 	bne	r3,zero,4726c <_malloc_r+0x594>
   4725c:	2109883a 	add	r4,r4,r4
   47260:	2086703a 	and	r3,r4,r2
   47264:	63000104 	addi	r12,r12,4
   47268:	183ffc26 	beq	r3,zero,4725c <_malloc_r+0x584>
   4726c:	600f883a 	mov	r7,r12
   47270:	003f1e06 	br	46eec <_malloc_r+0x214>
   47274:	00800174 	movhi	r2,5
   47278:	10d48217 	ldw	r3,21000(r2)
   4727c:	a0c7883a 	add	r3,r20,r3
   47280:	10d48215 	stw	r3,21000(r2)
   47284:	00800174 	movhi	r2,5
   47288:	108d6d17 	ldw	r2,13748(r2)
   4728c:	10bfffd8 	cmpnei	r2,r2,-1
   47290:	10004e26 	beq	r2,zero,473cc <_malloc_r+0x6f4>
   47294:	b5c5c83a 	sub	r2,r22,r23
   47298:	10c5883a 	add	r2,r2,r3
   4729c:	00c00174 	movhi	r3,5
   472a0:	18948215 	stw	r2,21000(r3)
   472a4:	b70001cc 	andi	fp,r22,7
   472a8:	e0003026 	beq	fp,zero,4736c <_malloc_r+0x694>
   472ac:	b72dc83a 	sub	r22,r22,fp
   472b0:	b5800204 	addi	r22,r22,8
   472b4:	01040204 	movi	r4,4104
   472b8:	2709c83a 	sub	r4,r4,fp
   472bc:	b529883a 	add	r20,r22,r20
   472c0:	2509c83a 	sub	r4,r4,r20
   472c4:	25c3ffcc 	andi	r23,r4,4095
   472c8:	b80b883a 	mov	r5,r23
   472cc:	9009883a 	mov	r4,r18
   472d0:	0048fc40 	call	48fc4 <_sbrk_r>
   472d4:	10ffffe0 	cmpeqi	r3,r2,-1
   472d8:	1800501e 	bne	r3,zero,4741c <_malloc_r+0x744>
   472dc:	1585c83a 	sub	r2,r2,r22
   472e0:	15e9883a 	add	r20,r2,r23
   472e4:	00800174 	movhi	r2,5
   472e8:	10948217 	ldw	r2,21000(r2)
   472ec:	9d800215 	stw	r22,8(r19)
   472f0:	a0c00054 	ori	r3,r20,1
   472f4:	b889883a 	add	r4,r23,r2
   472f8:	00800174 	movhi	r2,5
   472fc:	11148215 	stw	r4,21000(r2)
   47300:	b0c00115 	stw	r3,4(r22)
   47304:	84ff4026 	beq	r16,r19,47008 <_malloc_r+0x330>
   47308:	a8800428 	cmpgeui	r2,r21,16
   4730c:	10003226 	beq	r2,zero,473d8 <_malloc_r+0x700>
   47310:	80800117 	ldw	r2,4(r16)
   47314:	017ffe04 	movi	r5,-8
   47318:	a8fffd04 	addi	r3,r21,-12
   4731c:	1946703a 	and	r3,r3,r5
   47320:	1080004c 	andi	r2,r2,1
   47324:	10c4b03a 	or	r2,r2,r3
   47328:	80800115 	stw	r2,4(r16)
   4732c:	01400144 	movi	r5,5
   47330:	80c5883a 	add	r2,r16,r3
   47334:	11400115 	stw	r5,4(r2)
   47338:	11400215 	stw	r5,8(r2)
   4733c:	18c00428 	cmpgeui	r3,r3,16
   47340:	18003b1e 	bne	r3,zero,47430 <_malloc_r+0x758>
   47344:	b0c00117 	ldw	r3,4(r22)
   47348:	003f2f06 	br	47008 <_malloc_r+0x330>
   4734c:	a5000404 	addi	r20,r20,16
   47350:	003f1a06 	br	46fbc <_malloc_r+0x2e4>
   47354:	2009d0ba 	srai	r4,r4,2
   47358:	00800044 	movi	r2,1
   4735c:	1104983a 	sll	r2,r2,r4
   47360:	288ab03a 	or	r5,r5,r2
   47364:	99400115 	stw	r5,4(r19)
   47368:	003f5906 	br	470d0 <_malloc_r+0x3f8>
   4736c:	b509883a 	add	r4,r22,r20
   47370:	0109c83a 	sub	r4,zero,r4
   47374:	25c3ffcc 	andi	r23,r4,4095
   47378:	b80b883a 	mov	r5,r23
   4737c:	9009883a 	mov	r4,r18
   47380:	0048fc40 	call	48fc4 <_sbrk_r>
   47384:	10ffffe0 	cmpeqi	r3,r2,-1
   47388:	183fd426 	beq	r3,zero,472dc <_malloc_r+0x604>
   4738c:	002f883a 	mov	r23,zero
   47390:	003fd406 	br	472e4 <_malloc_r+0x60c>
   47394:	19001568 	cmpgeui	r4,r3,85
   47398:	2000121e 	bne	r4,zero,473e4 <_malloc_r+0x70c>
   4739c:	1006d33a 	srli	r3,r2,12
   473a0:	19801bc4 	addi	r6,r3,111
   473a4:	300c90fa 	slli	r6,r6,3
   473a8:	19001b84 	addi	r4,r3,110
   473ac:	003f3c06 	br	470a0 <_malloc_r+0x3c8>
   473b0:	10c05568 	cmpgeui	r3,r2,341
   473b4:	1800121e 	bne	r3,zero,47400 <_malloc_r+0x728>
   473b8:	8804d3fa 	srli	r2,r17,15
   473bc:	11c01e04 	addi	r7,r2,120
   473c0:	380890fa 	slli	r4,r7,3
   473c4:	12001dc4 	addi	r8,r2,119
   473c8:	003e8706 	br	46de8 <_malloc_r+0x110>
   473cc:	00800174 	movhi	r2,5
   473d0:	158d6d15 	stw	r22,13748(r2)
   473d4:	003fb306 	br	472a4 <_malloc_r+0x5cc>
   473d8:	00800044 	movi	r2,1
   473dc:	b0800115 	stw	r2,4(r22)
   473e0:	003f8806 	br	47204 <_malloc_r+0x52c>
   473e4:	19005568 	cmpgeui	r4,r3,341
   473e8:	2000181e 	bne	r4,zero,4744c <_malloc_r+0x774>
   473ec:	1006d3fa 	srli	r3,r2,15
   473f0:	19801e04 	addi	r6,r3,120
   473f4:	300c90fa 	slli	r6,r6,3
   473f8:	19001dc4 	addi	r4,r3,119
   473fc:	003f2806 	br	470a0 <_malloc_r+0x3c8>
   47400:	10815568 	cmpgeui	r2,r2,1365
   47404:	1000181e 	bne	r2,zero,47468 <_malloc_r+0x790>
   47408:	8804d4ba 	srli	r2,r17,18
   4740c:	11c01f44 	addi	r7,r2,125
   47410:	380890fa 	slli	r4,r7,3
   47414:	12001f04 	addi	r8,r2,124
   47418:	003e7306 	br	46de8 <_malloc_r+0x110>
   4741c:	e73ffe04 	addi	fp,fp,-8
   47420:	a729883a 	add	r20,r20,fp
   47424:	a5a9c83a 	sub	r20,r20,r22
   47428:	002f883a 	mov	r23,zero
   4742c:	003fad06 	br	472e4 <_malloc_r+0x60c>
   47430:	9009883a 	mov	r4,r18
   47434:	81400204 	addi	r5,r16,8
   47438:	00461a00 	call	461a0 <_free_r>
   4743c:	00800174 	movhi	r2,5
   47440:	9d800217 	ldw	r22,8(r19)
   47444:	11148217 	ldw	r4,21000(r2)
   47448:	003fbe06 	br	47344 <_malloc_r+0x66c>
   4744c:	18c15568 	cmpgeui	r3,r3,1365
   47450:	1800091e 	bne	r3,zero,47478 <_malloc_r+0x7a0>
   47454:	1006d4ba 	srli	r3,r2,18
   47458:	19801f44 	addi	r6,r3,125
   4745c:	300c90fa 	slli	r6,r6,3
   47460:	19001f04 	addi	r4,r3,124
   47464:	003f0e06 	br	470a0 <_malloc_r+0x3c8>
   47468:	0100fe04 	movi	r4,1016
   4746c:	01c01fc4 	movi	r7,127
   47470:	02001f84 	movi	r8,126
   47474:	003e5c06 	br	46de8 <_malloc_r+0x110>
   47478:	0180fe04 	movi	r6,1016
   4747c:	01001f84 	movi	r4,126
   47480:	003f0706 	br	470a0 <_malloc_r+0x3c8>
   47484:	98800117 	ldw	r2,4(r19)
   47488:	003f6f06 	br	47248 <_malloc_r+0x570>

0004748c <memchr>:
   4748c:	208000cc 	andi	r2,r4,3
   47490:	280f883a 	mov	r7,r5
   47494:	10000e26 	beq	r2,zero,474d0 <memchr+0x44>
   47498:	30bfffc4 	addi	r2,r6,-1
   4749c:	30001726 	beq	r6,zero,474fc <memchr+0x70>
   474a0:	29803fcc 	andi	r6,r5,255
   474a4:	00000606 	br	474c0 <memchr+0x34>
   474a8:	21000044 	addi	r4,r4,1
   474ac:	20c000cc 	andi	r3,r4,3
   474b0:	18000826 	beq	r3,zero,474d4 <memchr+0x48>
   474b4:	10bfffc4 	addi	r2,r2,-1
   474b8:	10ffffe0 	cmpeqi	r3,r2,-1
   474bc:	18000f1e 	bne	r3,zero,474fc <memchr+0x70>
   474c0:	20c00003 	ldbu	r3,0(r4)
   474c4:	19bff81e 	bne	r3,r6,474a8 <memchr+0x1c>
   474c8:	2005883a 	mov	r2,r4
   474cc:	f800283a 	ret
   474d0:	3005883a 	mov	r2,r6
   474d4:	10c00130 	cmpltui	r3,r2,4
   474d8:	18000a26 	beq	r3,zero,47504 <memchr+0x78>
   474dc:	10001e26 	beq	r2,zero,47558 <memchr+0xcc>
   474e0:	2087883a 	add	r3,r4,r2
   474e4:	39803fcc 	andi	r6,r7,255
   474e8:	2005883a 	mov	r2,r4
   474ec:	11000003 	ldbu	r4,0(r2)
   474f0:	21bff626 	beq	r4,r6,474cc <memchr+0x40>
   474f4:	10800044 	addi	r2,r2,1
   474f8:	18bffc1e 	bne	r3,r2,474ec <memchr+0x60>
   474fc:	0005883a 	mov	r2,zero
   47500:	f800283a 	ret
   47504:	00c04074 	movhi	r3,257
   47508:	29403fcc 	andi	r5,r5,255
   4750c:	18c04044 	addi	r3,r3,257
   47510:	027fbff4 	movhi	r9,65279
   47514:	02202074 	movhi	r8,32897
   47518:	28cd383a 	mul	r6,r5,r3
   4751c:	4a7fbfc4 	addi	r9,r9,-257
   47520:	42202004 	addi	r8,r8,-32640
   47524:	00000406 	br	47538 <memchr+0xac>
   47528:	10bfff04 	addi	r2,r2,-4
   4752c:	10c00128 	cmpgeui	r3,r2,4
   47530:	21000104 	addi	r4,r4,4
   47534:	183fe926 	beq	r3,zero,474dc <memchr+0x50>
   47538:	20c00017 	ldw	r3,0(r4)
   4753c:	30c6f03a 	xor	r3,r6,r3
   47540:	1a4b883a 	add	r5,r3,r9
   47544:	00c6303a 	nor	r3,zero,r3
   47548:	28c6703a 	and	r3,r5,r3
   4754c:	1a06703a 	and	r3,r3,r8
   47550:	183ff526 	beq	r3,zero,47528 <memchr+0x9c>
   47554:	003fe106 	br	474dc <memchr+0x50>
   47558:	f800283a 	ret

0004755c <memcpy>:
   4755c:	30c00428 	cmpgeui	r3,r6,16
   47560:	2005883a 	mov	r2,r4
   47564:	18000b1e 	bne	r3,zero,47594 <memcpy+0x38>
   47568:	2007883a 	mov	r3,r4
   4756c:	31ffffc4 	addi	r7,r6,-1
   47570:	30003426 	beq	r6,zero,47644 <memcpy+0xe8>
   47574:	39c00044 	addi	r7,r7,1
   47578:	19cf883a 	add	r7,r3,r7
   4757c:	29800003 	ldbu	r6,0(r5)
   47580:	18c00044 	addi	r3,r3,1
   47584:	29400044 	addi	r5,r5,1
   47588:	19bfffc5 	stb	r6,-1(r3)
   4758c:	38fffb1e 	bne	r7,r3,4757c <memcpy+0x20>
   47590:	f800283a 	ret
   47594:	2146b03a 	or	r3,r4,r5
   47598:	18c000cc 	andi	r3,r3,3
   4759c:	18002a1e 	bne	r3,zero,47648 <memcpy+0xec>
   475a0:	333ffc04 	addi	r12,r6,-16
   475a4:	6018d13a 	srli	r12,r12,4
   475a8:	2811883a 	mov	r8,r5
   475ac:	200f883a 	mov	r7,r4
   475b0:	63000044 	addi	r12,r12,1
   475b4:	6018913a 	slli	r12,r12,4
   475b8:	2307883a 	add	r3,r4,r12
   475bc:	42c00017 	ldw	r11,0(r8)
   475c0:	42800117 	ldw	r10,4(r8)
   475c4:	42400217 	ldw	r9,8(r8)
   475c8:	41000317 	ldw	r4,12(r8)
   475cc:	39c00404 	addi	r7,r7,16
   475d0:	3afffc15 	stw	r11,-16(r7)
   475d4:	3abffd15 	stw	r10,-12(r7)
   475d8:	3a7ffe15 	stw	r9,-8(r7)
   475dc:	393fff15 	stw	r4,-4(r7)
   475e0:	42000404 	addi	r8,r8,16
   475e4:	38fff51e 	bne	r7,r3,475bc <memcpy+0x60>
   475e8:	3100030c 	andi	r4,r6,12
   475ec:	2b0b883a 	add	r5,r5,r12
   475f0:	324003cc 	andi	r9,r6,15
   475f4:	20001726 	beq	r4,zero,47654 <memcpy+0xf8>
   475f8:	2811883a 	mov	r8,r5
   475fc:	1809883a 	mov	r4,r3
   47600:	1a57883a 	add	r11,r3,r9
   47604:	42800017 	ldw	r10,0(r8)
   47608:	21000104 	addi	r4,r4,4
   4760c:	590fc83a 	sub	r7,r11,r4
   47610:	39c00128 	cmpgeui	r7,r7,4
   47614:	22bfff15 	stw	r10,-4(r4)
   47618:	42000104 	addi	r8,r8,4
   4761c:	383ff91e 	bne	r7,zero,47604 <memcpy+0xa8>
   47620:	493fff04 	addi	r4,r9,-4
   47624:	2008d0ba 	srli	r4,r4,2
   47628:	318000cc 	andi	r6,r6,3
   4762c:	31ffffc4 	addi	r7,r6,-1
   47630:	21000044 	addi	r4,r4,1
   47634:	200890ba 	slli	r4,r4,2
   47638:	1907883a 	add	r3,r3,r4
   4763c:	290b883a 	add	r5,r5,r4
   47640:	303fcc1e 	bne	r6,zero,47574 <memcpy+0x18>
   47644:	f800283a 	ret
   47648:	31ffffc4 	addi	r7,r6,-1
   4764c:	2007883a 	mov	r3,r4
   47650:	003fc806 	br	47574 <memcpy+0x18>
   47654:	480d883a 	mov	r6,r9
   47658:	003fc406 	br	4756c <memcpy+0x10>

0004765c <memmove>:
   4765c:	2005883a 	mov	r2,r4
   47660:	29000a2e 	bgeu	r5,r4,4768c <memmove+0x30>
   47664:	298f883a 	add	r7,r5,r6
   47668:	21c0082e 	bgeu	r4,r7,4768c <memmove+0x30>
   4766c:	2187883a 	add	r3,r4,r6
   47670:	30001226 	beq	r6,zero,476bc <memmove+0x60>
   47674:	397fffc3 	ldbu	r5,-1(r7)
   47678:	18ffffc4 	addi	r3,r3,-1
   4767c:	39ffffc4 	addi	r7,r7,-1
   47680:	19400005 	stb	r5,0(r3)
   47684:	10fffb1e 	bne	r2,r3,47674 <memmove+0x18>
   47688:	f800283a 	ret
   4768c:	30c00428 	cmpgeui	r3,r6,16
   47690:	18000b1e 	bne	r3,zero,476c0 <memmove+0x64>
   47694:	1007883a 	mov	r3,r2
   47698:	31ffffc4 	addi	r7,r6,-1
   4769c:	30003626 	beq	r6,zero,47778 <memmove+0x11c>
   476a0:	39c00044 	addi	r7,r7,1
   476a4:	19cf883a 	add	r7,r3,r7
   476a8:	29800003 	ldbu	r6,0(r5)
   476ac:	18c00044 	addi	r3,r3,1
   476b0:	29400044 	addi	r5,r5,1
   476b4:	19bfffc5 	stb	r6,-1(r3)
   476b8:	19fffb1e 	bne	r3,r7,476a8 <memmove+0x4c>
   476bc:	f800283a 	ret
   476c0:	1146b03a 	or	r3,r2,r5
   476c4:	18c000cc 	andi	r3,r3,3
   476c8:	1800281e 	bne	r3,zero,4776c <memmove+0x110>
   476cc:	313ffc04 	addi	r4,r6,-16
   476d0:	2008d13a 	srli	r4,r4,4
   476d4:	2811883a 	mov	r8,r5
   476d8:	100f883a 	mov	r7,r2
   476dc:	21000044 	addi	r4,r4,1
   476e0:	2008913a 	slli	r4,r4,4
   476e4:	1107883a 	add	r3,r2,r4
   476e8:	42400017 	ldw	r9,0(r8)
   476ec:	42000404 	addi	r8,r8,16
   476f0:	39c00404 	addi	r7,r7,16
   476f4:	3a7ffc15 	stw	r9,-16(r7)
   476f8:	427ffd17 	ldw	r9,-12(r8)
   476fc:	3a7ffd15 	stw	r9,-12(r7)
   47700:	427ffe17 	ldw	r9,-8(r8)
   47704:	3a7ffe15 	stw	r9,-8(r7)
   47708:	427fff17 	ldw	r9,-4(r8)
   4770c:	3a7fff15 	stw	r9,-4(r7)
   47710:	38fff51e 	bne	r7,r3,476e8 <memmove+0x8c>
   47714:	31c0030c 	andi	r7,r6,12
   47718:	290b883a 	add	r5,r5,r4
   4771c:	324003cc 	andi	r9,r6,15
   47720:	38001626 	beq	r7,zero,4777c <memmove+0x120>
   47724:	2809883a 	mov	r4,r5
   47728:	180f883a 	mov	r7,r3
   4772c:	1a57883a 	add	r11,r3,r9
   47730:	22800017 	ldw	r10,0(r4)
   47734:	39c00104 	addi	r7,r7,4
   47738:	59d1c83a 	sub	r8,r11,r7
   4773c:	42000128 	cmpgeui	r8,r8,4
   47740:	3abfff15 	stw	r10,-4(r7)
   47744:	21000104 	addi	r4,r4,4
   47748:	403ff91e 	bne	r8,zero,47730 <memmove+0xd4>
   4774c:	493fff04 	addi	r4,r9,-4
   47750:	2008d0ba 	srli	r4,r4,2
   47754:	318000cc 	andi	r6,r6,3
   47758:	21000044 	addi	r4,r4,1
   4775c:	200890ba 	slli	r4,r4,2
   47760:	1907883a 	add	r3,r3,r4
   47764:	290b883a 	add	r5,r5,r4
   47768:	003fcb06 	br	47698 <memmove+0x3c>
   4776c:	31ffffc4 	addi	r7,r6,-1
   47770:	1007883a 	mov	r3,r2
   47774:	003fca06 	br	476a0 <memmove+0x44>
   47778:	f800283a 	ret
   4777c:	480d883a 	mov	r6,r9
   47780:	003fc506 	br	47698 <memmove+0x3c>

00047784 <memset>:
   47784:	20c000cc 	andi	r3,r4,3
   47788:	2005883a 	mov	r2,r4
   4778c:	18003626 	beq	r3,zero,47868 <memset+0xe4>
   47790:	31ffffc4 	addi	r7,r6,-1
   47794:	30003226 	beq	r6,zero,47860 <memset+0xdc>
   47798:	2811883a 	mov	r8,r5
   4779c:	2007883a 	mov	r3,r4
   477a0:	00000306 	br	477b0 <memset+0x2c>
   477a4:	39ffffc4 	addi	r7,r7,-1
   477a8:	39bfffe0 	cmpeqi	r6,r7,-1
   477ac:	30002c1e 	bne	r6,zero,47860 <memset+0xdc>
   477b0:	18c00044 	addi	r3,r3,1
   477b4:	198000cc 	andi	r6,r3,3
   477b8:	1a3fffc5 	stb	r8,-1(r3)
   477bc:	303ff91e 	bne	r6,zero,477a4 <memset+0x20>
   477c0:	39000128 	cmpgeui	r4,r7,4
   477c4:	20002126 	beq	r4,zero,4784c <memset+0xc8>
   477c8:	02004074 	movhi	r8,257
   477cc:	29803fcc 	andi	r6,r5,255
   477d0:	42004044 	addi	r8,r8,257
   477d4:	39000430 	cmpltui	r4,r7,16
   477d8:	320d383a 	mul	r6,r6,r8
   477dc:	2000251e 	bne	r4,zero,47874 <memset+0xf0>
   477e0:	393ffc04 	addi	r4,r7,-16
   477e4:	2008d13a 	srli	r4,r4,4
   477e8:	21000044 	addi	r4,r4,1
   477ec:	2008913a 	slli	r4,r4,4
   477f0:	1909883a 	add	r4,r3,r4
   477f4:	19800015 	stw	r6,0(r3)
   477f8:	19800115 	stw	r6,4(r3)
   477fc:	19800215 	stw	r6,8(r3)
   47800:	19800315 	stw	r6,12(r3)
   47804:	18c00404 	addi	r3,r3,16
   47808:	193ffa1e 	bne	r3,r4,477f4 <memset+0x70>
   4780c:	3a00030c 	andi	r8,r7,12
   47810:	39c003cc 	andi	r7,r7,15
   47814:	40000d26 	beq	r8,zero,4784c <memset+0xc8>
   47818:	2007883a 	mov	r3,r4
   4781c:	21d3883a 	add	r9,r4,r7
   47820:	18c00104 	addi	r3,r3,4
   47824:	48d1c83a 	sub	r8,r9,r3
   47828:	42000128 	cmpgeui	r8,r8,4
   4782c:	19bfff15 	stw	r6,-4(r3)
   47830:	403ffb1e 	bne	r8,zero,47820 <memset+0x9c>
   47834:	38ffff04 	addi	r3,r7,-4
   47838:	1806d0ba 	srli	r3,r3,2
   4783c:	39c000cc 	andi	r7,r7,3
   47840:	18c00044 	addi	r3,r3,1
   47844:	180690ba 	slli	r3,r3,2
   47848:	20c7883a 	add	r3,r4,r3
   4784c:	38000526 	beq	r7,zero,47864 <memset+0xe0>
   47850:	19cf883a 	add	r7,r3,r7
   47854:	18c00044 	addi	r3,r3,1
   47858:	197fffc5 	stb	r5,-1(r3)
   4785c:	38fffd1e 	bne	r7,r3,47854 <memset+0xd0>
   47860:	f800283a 	ret
   47864:	f800283a 	ret
   47868:	2007883a 	mov	r3,r4
   4786c:	300f883a 	mov	r7,r6
   47870:	003fd306 	br	477c0 <memset+0x3c>
   47874:	1809883a 	mov	r4,r3
   47878:	003fe706 	br	47818 <memset+0x94>

0004787c <_Balloc>:
   4787c:	20801317 	ldw	r2,76(r4)
   47880:	defffc04 	addi	sp,sp,-16
   47884:	dc400115 	stw	r17,4(sp)
   47888:	dc000015 	stw	r16,0(sp)
   4788c:	dfc00315 	stw	ra,12(sp)
   47890:	dc800215 	stw	r18,8(sp)
   47894:	2021883a 	mov	r16,r4
   47898:	2823883a 	mov	r17,r5
   4789c:	10000e26 	beq	r2,zero,478d8 <_Balloc+0x5c>
   478a0:	880690ba 	slli	r3,r17,2
   478a4:	10c7883a 	add	r3,r2,r3
   478a8:	18800017 	ldw	r2,0(r3)
   478ac:	10001126 	beq	r2,zero,478f4 <_Balloc+0x78>
   478b0:	11000017 	ldw	r4,0(r2)
   478b4:	19000015 	stw	r4,0(r3)
   478b8:	10000415 	stw	zero,16(r2)
   478bc:	10000315 	stw	zero,12(r2)
   478c0:	dfc00317 	ldw	ra,12(sp)
   478c4:	dc800217 	ldw	r18,8(sp)
   478c8:	dc400117 	ldw	r17,4(sp)
   478cc:	dc000017 	ldw	r16,0(sp)
   478d0:	dec00404 	addi	sp,sp,16
   478d4:	f800283a 	ret
   478d8:	01800844 	movi	r6,33
   478dc:	01400104 	movi	r5,4
   478e0:	004a6ec0 	call	4a6ec <_calloc_r>
   478e4:	80801315 	stw	r2,76(r16)
   478e8:	103fed1e 	bne	r2,zero,478a0 <_Balloc+0x24>
   478ec:	0005883a 	mov	r2,zero
   478f0:	003ff306 	br	478c0 <_Balloc+0x44>
   478f4:	04800044 	movi	r18,1
   478f8:	9464983a 	sll	r18,r18,r17
   478fc:	01400044 	movi	r5,1
   47900:	8009883a 	mov	r4,r16
   47904:	91800144 	addi	r6,r18,5
   47908:	300c90ba 	slli	r6,r6,2
   4790c:	004a6ec0 	call	4a6ec <_calloc_r>
   47910:	103ff626 	beq	r2,zero,478ec <_Balloc+0x70>
   47914:	14400115 	stw	r17,4(r2)
   47918:	14800215 	stw	r18,8(r2)
   4791c:	003fe606 	br	478b8 <_Balloc+0x3c>

00047920 <_Bfree>:
   47920:	28000726 	beq	r5,zero,47940 <_Bfree+0x20>
   47924:	28c00117 	ldw	r3,4(r5)
   47928:	20801317 	ldw	r2,76(r4)
   4792c:	180690ba 	slli	r3,r3,2
   47930:	10c5883a 	add	r2,r2,r3
   47934:	10c00017 	ldw	r3,0(r2)
   47938:	28c00015 	stw	r3,0(r5)
   4793c:	11400015 	stw	r5,0(r2)
   47940:	f800283a 	ret

00047944 <__multadd>:
   47944:	defffa04 	addi	sp,sp,-24
   47948:	dc400115 	stw	r17,4(sp)
   4794c:	2c400417 	ldw	r17,16(r5)
   47950:	dcc00315 	stw	r19,12(sp)
   47954:	dc800215 	stw	r18,8(sp)
   47958:	dc000015 	stw	r16,0(sp)
   4795c:	dfc00515 	stw	ra,20(sp)
   47960:	dd000415 	stw	r20,16(sp)
   47964:	2825883a 	mov	r18,r5
   47968:	2027883a 	mov	r19,r4
   4796c:	3821883a 	mov	r16,r7
   47970:	2a400504 	addi	r9,r5,20
   47974:	0015883a 	mov	r10,zero
   47978:	48c00017 	ldw	r3,0(r9)
   4797c:	4a400104 	addi	r9,r9,4
   47980:	52800044 	addi	r10,r10,1
   47984:	1a3fffcc 	andi	r8,r3,65535
   47988:	4191383a 	mul	r8,r8,r6
   4798c:	180ed43a 	srli	r7,r3,16
   47990:	4407883a 	add	r3,r8,r16
   47994:	1810d43a 	srli	r8,r3,16
   47998:	398f383a 	mul	r7,r7,r6
   4799c:	18ffffcc 	andi	r3,r3,65535
   479a0:	3a0f883a 	add	r7,r7,r8
   479a4:	3810943a 	slli	r8,r7,16
   479a8:	3820d43a 	srli	r16,r7,16
   479ac:	40c7883a 	add	r3,r8,r3
   479b0:	48ffff15 	stw	r3,-4(r9)
   479b4:	547ff016 	blt	r10,r17,47978 <__multadd+0x34>
   479b8:	80000826 	beq	r16,zero,479dc <__multadd+0x98>
   479bc:	90800217 	ldw	r2,8(r18)
   479c0:	88800f0e 	bge	r17,r2,47a00 <__multadd+0xbc>
   479c4:	88800144 	addi	r2,r17,5
   479c8:	100490ba 	slli	r2,r2,2
   479cc:	8c400044 	addi	r17,r17,1
   479d0:	9085883a 	add	r2,r18,r2
   479d4:	14000015 	stw	r16,0(r2)
   479d8:	94400415 	stw	r17,16(r18)
   479dc:	9005883a 	mov	r2,r18
   479e0:	dfc00517 	ldw	ra,20(sp)
   479e4:	dd000417 	ldw	r20,16(sp)
   479e8:	dcc00317 	ldw	r19,12(sp)
   479ec:	dc800217 	ldw	r18,8(sp)
   479f0:	dc400117 	ldw	r17,4(sp)
   479f4:	dc000017 	ldw	r16,0(sp)
   479f8:	dec00604 	addi	sp,sp,24
   479fc:	f800283a 	ret
   47a00:	91400117 	ldw	r5,4(r18)
   47a04:	9809883a 	mov	r4,r19
   47a08:	29400044 	addi	r5,r5,1
   47a0c:	004787c0 	call	4787c <_Balloc>
   47a10:	1029883a 	mov	r20,r2
   47a14:	10001026 	beq	r2,zero,47a58 <__multadd+0x114>
   47a18:	91800417 	ldw	r6,16(r18)
   47a1c:	91400304 	addi	r5,r18,12
   47a20:	11000304 	addi	r4,r2,12
   47a24:	31800084 	addi	r6,r6,2
   47a28:	300c90ba 	slli	r6,r6,2
   47a2c:	004755c0 	call	4755c <memcpy>
   47a30:	90000726 	beq	r18,zero,47a50 <__multadd+0x10c>
   47a34:	90c00117 	ldw	r3,4(r18)
   47a38:	98801317 	ldw	r2,76(r19)
   47a3c:	180690ba 	slli	r3,r3,2
   47a40:	10c5883a 	add	r2,r2,r3
   47a44:	10c00017 	ldw	r3,0(r2)
   47a48:	90c00015 	stw	r3,0(r18)
   47a4c:	14800015 	stw	r18,0(r2)
   47a50:	a025883a 	mov	r18,r20
   47a54:	003fdb06 	br	479c4 <__multadd+0x80>
   47a58:	01c00174 	movhi	r7,5
   47a5c:	01000174 	movhi	r4,5
   47a60:	39c54d04 	addi	r7,r7,5428
   47a64:	000d883a 	mov	r6,zero
   47a68:	01402d44 	movi	r5,181
   47a6c:	21056104 	addi	r4,r4,5508
   47a70:	004a6740 	call	4a674 <__assert_func>

00047a74 <__s2b>:
   47a74:	defff904 	addi	sp,sp,-28
   47a78:	dc800215 	stw	r18,8(sp)
   47a7c:	dc000015 	stw	r16,0(sp)
   47a80:	2025883a 	mov	r18,r4
   47a84:	2821883a 	mov	r16,r5
   47a88:	39000204 	addi	r4,r7,8
   47a8c:	01400244 	movi	r5,9
   47a90:	dcc00315 	stw	r19,12(sp)
   47a94:	dc400115 	stw	r17,4(sp)
   47a98:	dfc00615 	stw	ra,24(sp)
   47a9c:	3823883a 	mov	r17,r7
   47aa0:	dd400515 	stw	r21,20(sp)
   47aa4:	dd000415 	stw	r20,16(sp)
   47aa8:	3027883a 	mov	r19,r6
   47aac:	004c1480 	call	4c148 <__divsi3>
   47ab0:	88c00290 	cmplti	r3,r17,10
   47ab4:	1800341e 	bne	r3,zero,47b88 <__s2b+0x114>
   47ab8:	00c00044 	movi	r3,1
   47abc:	000b883a 	mov	r5,zero
   47ac0:	18c7883a 	add	r3,r3,r3
   47ac4:	29400044 	addi	r5,r5,1
   47ac8:	18bffd16 	blt	r3,r2,47ac0 <__s2b+0x4c>
   47acc:	9009883a 	mov	r4,r18
   47ad0:	004787c0 	call	4787c <_Balloc>
   47ad4:	100b883a 	mov	r5,r2
   47ad8:	10002d26 	beq	r2,zero,47b90 <__s2b+0x11c>
   47adc:	d8800717 	ldw	r2,28(sp)
   47ae0:	28800515 	stw	r2,20(r5)
   47ae4:	00800044 	movi	r2,1
   47ae8:	28800415 	stw	r2,16(r5)
   47aec:	98800290 	cmplti	r2,r19,10
   47af0:	1000221e 	bne	r2,zero,47b7c <__s2b+0x108>
   47af4:	85400244 	addi	r21,r16,9
   47af8:	a829883a 	mov	r20,r21
   47afc:	84e1883a 	add	r16,r16,r19
   47b00:	a1c00007 	ldb	r7,0(r20)
   47b04:	01800284 	movi	r6,10
   47b08:	9009883a 	mov	r4,r18
   47b0c:	39fff404 	addi	r7,r7,-48
   47b10:	00479440 	call	47944 <__multadd>
   47b14:	a5000044 	addi	r20,r20,1
   47b18:	100b883a 	mov	r5,r2
   47b1c:	a43ff81e 	bne	r20,r16,47b00 <__s2b+0x8c>
   47b20:	9c3ffe04 	addi	r16,r19,-8
   47b24:	ac21883a 	add	r16,r21,r16
   47b28:	9c400a0e 	bge	r19,r17,47b54 <__s2b+0xe0>
   47b2c:	8ce3c83a 	sub	r17,r17,r19
   47b30:	8463883a 	add	r17,r16,r17
   47b34:	81c00007 	ldb	r7,0(r16)
   47b38:	01800284 	movi	r6,10
   47b3c:	9009883a 	mov	r4,r18
   47b40:	39fff404 	addi	r7,r7,-48
   47b44:	00479440 	call	47944 <__multadd>
   47b48:	84000044 	addi	r16,r16,1
   47b4c:	100b883a 	mov	r5,r2
   47b50:	8c3ff81e 	bne	r17,r16,47b34 <__s2b+0xc0>
   47b54:	2805883a 	mov	r2,r5
   47b58:	dfc00617 	ldw	ra,24(sp)
   47b5c:	dd400517 	ldw	r21,20(sp)
   47b60:	dd000417 	ldw	r20,16(sp)
   47b64:	dcc00317 	ldw	r19,12(sp)
   47b68:	dc800217 	ldw	r18,8(sp)
   47b6c:	dc400117 	ldw	r17,4(sp)
   47b70:	dc000017 	ldw	r16,0(sp)
   47b74:	dec00704 	addi	sp,sp,28
   47b78:	f800283a 	ret
   47b7c:	84000284 	addi	r16,r16,10
   47b80:	04c00244 	movi	r19,9
   47b84:	003fe806 	br	47b28 <__s2b+0xb4>
   47b88:	000b883a 	mov	r5,zero
   47b8c:	003fcf06 	br	47acc <__s2b+0x58>
   47b90:	01c00174 	movhi	r7,5
   47b94:	01000174 	movhi	r4,5
   47b98:	39c54d04 	addi	r7,r7,5428
   47b9c:	000d883a 	mov	r6,zero
   47ba0:	01403384 	movi	r5,206
   47ba4:	21056104 	addi	r4,r4,5508
   47ba8:	004a6740 	call	4a674 <__assert_func>

00047bac <__hi0bits>:
   47bac:	00bfffd4 	movui	r2,65535
   47bb0:	11001536 	bltu	r2,r4,47c08 <__hi0bits+0x5c>
   47bb4:	2008943a 	slli	r4,r4,16
   47bb8:	00800404 	movi	r2,16
   47bbc:	00c04034 	movhi	r3,256
   47bc0:	20c0022e 	bgeu	r4,r3,47bcc <__hi0bits+0x20>
   47bc4:	2008923a 	slli	r4,r4,8
   47bc8:	10800204 	addi	r2,r2,8
   47bcc:	00c40034 	movhi	r3,4096
   47bd0:	20c0022e 	bgeu	r4,r3,47bdc <__hi0bits+0x30>
   47bd4:	2008913a 	slli	r4,r4,4
   47bd8:	10800104 	addi	r2,r2,4
   47bdc:	00d00034 	movhi	r3,16384
   47be0:	20c00336 	bltu	r4,r3,47bf0 <__hi0bits+0x44>
   47be4:	20000716 	blt	r4,zero,47c04 <__hi0bits+0x58>
   47be8:	10800044 	addi	r2,r2,1
   47bec:	f800283a 	ret
   47bf0:	200890ba 	slli	r4,r4,2
   47bf4:	20000616 	blt	r4,zero,47c10 <__hi0bits+0x64>
   47bf8:	2110002c 	andhi	r4,r4,16384
   47bfc:	2000061e 	bne	r4,zero,47c18 <__hi0bits+0x6c>
   47c00:	00800804 	movi	r2,32
   47c04:	f800283a 	ret
   47c08:	0005883a 	mov	r2,zero
   47c0c:	003feb06 	br	47bbc <__hi0bits+0x10>
   47c10:	10800084 	addi	r2,r2,2
   47c14:	f800283a 	ret
   47c18:	108000c4 	addi	r2,r2,3
   47c1c:	f800283a 	ret

00047c20 <__lo0bits>:
   47c20:	20c00017 	ldw	r3,0(r4)
   47c24:	188001cc 	andi	r2,r3,7
   47c28:	10000826 	beq	r2,zero,47c4c <__lo0bits+0x2c>
   47c2c:	1880004c 	andi	r2,r3,1
   47c30:	10001f1e 	bne	r2,zero,47cb0 <__lo0bits+0x90>
   47c34:	1880008c 	andi	r2,r3,2
   47c38:	10002126 	beq	r2,zero,47cc0 <__lo0bits+0xa0>
   47c3c:	1806d07a 	srli	r3,r3,1
   47c40:	00800044 	movi	r2,1
   47c44:	20c00015 	stw	r3,0(r4)
   47c48:	f800283a 	ret
   47c4c:	18bfffcc 	andi	r2,r3,65535
   47c50:	10001426 	beq	r2,zero,47ca4 <__lo0bits+0x84>
   47c54:	0005883a 	mov	r2,zero
   47c58:	19403fcc 	andi	r5,r3,255
   47c5c:	2800021e 	bne	r5,zero,47c68 <__lo0bits+0x48>
   47c60:	1806d23a 	srli	r3,r3,8
   47c64:	10800204 	addi	r2,r2,8
   47c68:	194003cc 	andi	r5,r3,15
   47c6c:	2800021e 	bne	r5,zero,47c78 <__lo0bits+0x58>
   47c70:	1806d13a 	srli	r3,r3,4
   47c74:	10800104 	addi	r2,r2,4
   47c78:	194000cc 	andi	r5,r3,3
   47c7c:	2800021e 	bne	r5,zero,47c88 <__lo0bits+0x68>
   47c80:	1806d0ba 	srli	r3,r3,2
   47c84:	10800084 	addi	r2,r2,2
   47c88:	1940004c 	andi	r5,r3,1
   47c8c:	2800031e 	bne	r5,zero,47c9c <__lo0bits+0x7c>
   47c90:	1806d07a 	srli	r3,r3,1
   47c94:	10800044 	addi	r2,r2,1
   47c98:	18000726 	beq	r3,zero,47cb8 <__lo0bits+0x98>
   47c9c:	20c00015 	stw	r3,0(r4)
   47ca0:	f800283a 	ret
   47ca4:	1806d43a 	srli	r3,r3,16
   47ca8:	00800404 	movi	r2,16
   47cac:	003fea06 	br	47c58 <__lo0bits+0x38>
   47cb0:	0005883a 	mov	r2,zero
   47cb4:	f800283a 	ret
   47cb8:	00800804 	movi	r2,32
   47cbc:	f800283a 	ret
   47cc0:	1806d0ba 	srli	r3,r3,2
   47cc4:	00800084 	movi	r2,2
   47cc8:	20c00015 	stw	r3,0(r4)
   47ccc:	f800283a 	ret

00047cd0 <__i2b>:
   47cd0:	20c01317 	ldw	r3,76(r4)
   47cd4:	defffd04 	addi	sp,sp,-12
   47cd8:	dc400115 	stw	r17,4(sp)
   47cdc:	dc000015 	stw	r16,0(sp)
   47ce0:	dfc00215 	stw	ra,8(sp)
   47ce4:	2021883a 	mov	r16,r4
   47ce8:	2823883a 	mov	r17,r5
   47cec:	18000d26 	beq	r3,zero,47d24 <__i2b+0x54>
   47cf0:	18800117 	ldw	r2,4(r3)
   47cf4:	10001826 	beq	r2,zero,47d58 <__i2b+0x88>
   47cf8:	11000017 	ldw	r4,0(r2)
   47cfc:	19000115 	stw	r4,4(r3)
   47d00:	00c00044 	movi	r3,1
   47d04:	10000315 	stw	zero,12(r2)
   47d08:	14400515 	stw	r17,20(r2)
   47d0c:	10c00415 	stw	r3,16(r2)
   47d10:	dfc00217 	ldw	ra,8(sp)
   47d14:	dc400117 	ldw	r17,4(sp)
   47d18:	dc000017 	ldw	r16,0(sp)
   47d1c:	dec00304 	addi	sp,sp,12
   47d20:	f800283a 	ret
   47d24:	01800844 	movi	r6,33
   47d28:	01400104 	movi	r5,4
   47d2c:	004a6ec0 	call	4a6ec <_calloc_r>
   47d30:	80801315 	stw	r2,76(r16)
   47d34:	1007883a 	mov	r3,r2
   47d38:	103fed1e 	bne	r2,zero,47cf0 <__i2b+0x20>
   47d3c:	01c00174 	movhi	r7,5
   47d40:	01000174 	movhi	r4,5
   47d44:	39c54d04 	addi	r7,r7,5428
   47d48:	000d883a 	mov	r6,zero
   47d4c:	01405004 	movi	r5,320
   47d50:	21056104 	addi	r4,r4,5508
   47d54:	004a6740 	call	4a674 <__assert_func>
   47d58:	01800704 	movi	r6,28
   47d5c:	01400044 	movi	r5,1
   47d60:	8009883a 	mov	r4,r16
   47d64:	004a6ec0 	call	4a6ec <_calloc_r>
   47d68:	103ff426 	beq	r2,zero,47d3c <__i2b+0x6c>
   47d6c:	00c00044 	movi	r3,1
   47d70:	10c00115 	stw	r3,4(r2)
   47d74:	00c00084 	movi	r3,2
   47d78:	10c00215 	stw	r3,8(r2)
   47d7c:	003fe006 	br	47d00 <__i2b+0x30>

00047d80 <__multiply>:
   47d80:	defff804 	addi	sp,sp,-32
   47d84:	dd400515 	stw	r21,20(sp)
   47d88:	dd000415 	stw	r20,16(sp)
   47d8c:	35400417 	ldw	r21,16(r6)
   47d90:	2d000417 	ldw	r20,16(r5)
   47d94:	dd800615 	stw	r22,24(sp)
   47d98:	dcc00315 	stw	r19,12(sp)
   47d9c:	dfc00715 	stw	ra,28(sp)
   47da0:	dc800215 	stw	r18,8(sp)
   47da4:	dc400115 	stw	r17,4(sp)
   47da8:	dc000015 	stw	r16,0(sp)
   47dac:	282d883a 	mov	r22,r5
   47db0:	3027883a 	mov	r19,r6
   47db4:	a5400516 	blt	r20,r21,47dcc <__multiply+0x4c>
   47db8:	a807883a 	mov	r3,r21
   47dbc:	2827883a 	mov	r19,r5
   47dc0:	a02b883a 	mov	r21,r20
   47dc4:	302d883a 	mov	r22,r6
   47dc8:	1829883a 	mov	r20,r3
   47dcc:	98800217 	ldw	r2,8(r19)
   47dd0:	ad23883a 	add	r17,r21,r20
   47dd4:	99400117 	ldw	r5,4(r19)
   47dd8:	1440010e 	bge	r2,r17,47de0 <__multiply+0x60>
   47ddc:	29400044 	addi	r5,r5,1
   47de0:	004787c0 	call	4787c <_Balloc>
   47de4:	1025883a 	mov	r18,r2
   47de8:	10007326 	beq	r2,zero,47fb8 <__multiply+0x238>
   47dec:	882090ba 	slli	r16,r17,2
   47df0:	11000504 	addi	r4,r2,20
   47df4:	2421883a 	add	r16,r4,r16
   47df8:	2400082e 	bgeu	r4,r16,47e1c <__multiply+0x9c>
   47dfc:	808dc83a 	sub	r6,r16,r2
   47e00:	31bffac4 	addi	r6,r6,-21
   47e04:	300cd0ba 	srli	r6,r6,2
   47e08:	000b883a 	mov	r5,zero
   47e0c:	31800044 	addi	r6,r6,1
   47e10:	300c90ba 	slli	r6,r6,2
   47e14:	00477840 	call	47784 <memset>
   47e18:	1009883a 	mov	r4,r2
   47e1c:	a01090ba 	slli	r8,r20,2
   47e20:	a80e90ba 	slli	r7,r21,2
   47e24:	b1400504 	addi	r5,r22,20
   47e28:	9a400504 	addi	r9,r19,20
   47e2c:	2a11883a 	add	r8,r5,r8
   47e30:	49cf883a 	add	r7,r9,r7
   47e34:	2a004b2e 	bgeu	r5,r8,47f64 <__multiply+0x1e4>
   47e38:	98800544 	addi	r2,r19,21
   47e3c:	38805c36 	bltu	r7,r2,47fb0 <__multiply+0x230>
   47e40:	3cc5c83a 	sub	r2,r7,r19
   47e44:	10bffac4 	addi	r2,r2,-21
   47e48:	1004d0ba 	srli	r2,r2,2
   47e4c:	10800044 	addi	r2,r2,1
   47e50:	100490ba 	slli	r2,r2,2
   47e54:	00000506 	br	47e6c <__multiply+0xec>
   47e58:	5816d43a 	srli	r11,r11,16
   47e5c:	5800231e 	bne	r11,zero,47eec <__multiply+0x16c>
   47e60:	29400104 	addi	r5,r5,4
   47e64:	21000104 	addi	r4,r4,4
   47e68:	2a003e2e 	bgeu	r5,r8,47f64 <__multiply+0x1e4>
   47e6c:	2ac00017 	ldw	r11,0(r5)
   47e70:	5b7fffcc 	andi	r13,r11,65535
   47e74:	683ff826 	beq	r13,zero,47e58 <__multiply+0xd8>
   47e78:	2019883a 	mov	r12,r4
   47e7c:	4817883a 	mov	r11,r9
   47e80:	001d883a 	mov	r14,zero
   47e84:	58c00017 	ldw	r3,0(r11)
   47e88:	62800017 	ldw	r10,0(r12)
   47e8c:	63000104 	addi	r12,r12,4
   47e90:	19bfffcc 	andi	r6,r3,65535
   47e94:	334d383a 	mul	r6,r6,r13
   47e98:	1806d43a 	srli	r3,r3,16
   47e9c:	53ffffcc 	andi	r15,r10,65535
   47ea0:	33cd883a 	add	r6,r6,r15
   47ea4:	5014d43a 	srli	r10,r10,16
   47ea8:	338d883a 	add	r6,r6,r14
   47eac:	1b47383a 	mul	r3,r3,r13
   47eb0:	301cd43a 	srli	r14,r6,16
   47eb4:	31bfffcc 	andi	r6,r6,65535
   47eb8:	1a87883a 	add	r3,r3,r10
   47ebc:	1b87883a 	add	r3,r3,r14
   47ec0:	1814943a 	slli	r10,r3,16
   47ec4:	181cd43a 	srli	r14,r3,16
   47ec8:	5ac00104 	addi	r11,r11,4
   47ecc:	5186b03a 	or	r3,r10,r6
   47ed0:	60ffff15 	stw	r3,-4(r12)
   47ed4:	59ffeb36 	bltu	r11,r7,47e84 <__multiply+0x104>
   47ed8:	2087883a 	add	r3,r4,r2
   47edc:	1b800015 	stw	r14,0(r3)
   47ee0:	2ac00017 	ldw	r11,0(r5)
   47ee4:	5816d43a 	srli	r11,r11,16
   47ee8:	583fdd26 	beq	r11,zero,47e60 <__multiply+0xe0>
   47eec:	20c00017 	ldw	r3,0(r4)
   47ef0:	2019883a 	mov	r12,r4
   47ef4:	4815883a 	mov	r10,r9
   47ef8:	181b883a 	mov	r13,r3
   47efc:	001d883a 	mov	r14,zero
   47f00:	5180000b 	ldhu	r6,0(r10)
   47f04:	681ed43a 	srli	r15,r13,16
   47f08:	18ffffcc 	andi	r3,r3,65535
   47f0c:	32cd383a 	mul	r6,r6,r11
   47f10:	52800104 	addi	r10,r10,4
   47f14:	63400117 	ldw	r13,4(r12)
   47f18:	338d883a 	add	r6,r6,r14
   47f1c:	33cd883a 	add	r6,r6,r15
   47f20:	301c943a 	slli	r14,r6,16
   47f24:	300cd43a 	srli	r6,r6,16
   47f28:	6bffffcc 	andi	r15,r13,65535
   47f2c:	70c6b03a 	or	r3,r14,r3
   47f30:	60c00015 	stw	r3,0(r12)
   47f34:	50ffff8b 	ldhu	r3,-2(r10)
   47f38:	63000104 	addi	r12,r12,4
   47f3c:	1ac7383a 	mul	r3,r3,r11
   47f40:	1bc7883a 	add	r3,r3,r15
   47f44:	1987883a 	add	r3,r3,r6
   47f48:	181cd43a 	srli	r14,r3,16
   47f4c:	51ffec36 	bltu	r10,r7,47f00 <__multiply+0x180>
   47f50:	208d883a 	add	r6,r4,r2
   47f54:	30c00015 	stw	r3,0(r6)
   47f58:	29400104 	addi	r5,r5,4
   47f5c:	21000104 	addi	r4,r4,4
   47f60:	2a3fc236 	bltu	r5,r8,47e6c <__multiply+0xec>
   47f64:	04400316 	blt	zero,r17,47f74 <__multiply+0x1f4>
   47f68:	00000506 	br	47f80 <__multiply+0x200>
   47f6c:	8c7fffc4 	addi	r17,r17,-1
   47f70:	88000326 	beq	r17,zero,47f80 <__multiply+0x200>
   47f74:	80bfff17 	ldw	r2,-4(r16)
   47f78:	843fff04 	addi	r16,r16,-4
   47f7c:	103ffb26 	beq	r2,zero,47f6c <__multiply+0x1ec>
   47f80:	9005883a 	mov	r2,r18
   47f84:	94400415 	stw	r17,16(r18)
   47f88:	dfc00717 	ldw	ra,28(sp)
   47f8c:	dd800617 	ldw	r22,24(sp)
   47f90:	dd400517 	ldw	r21,20(sp)
   47f94:	dd000417 	ldw	r20,16(sp)
   47f98:	dcc00317 	ldw	r19,12(sp)
   47f9c:	dc800217 	ldw	r18,8(sp)
   47fa0:	dc400117 	ldw	r17,4(sp)
   47fa4:	dc000017 	ldw	r16,0(sp)
   47fa8:	dec00804 	addi	sp,sp,32
   47fac:	f800283a 	ret
   47fb0:	00800104 	movi	r2,4
   47fb4:	003fad06 	br	47e6c <__multiply+0xec>
   47fb8:	01c00174 	movhi	r7,5
   47fbc:	01000174 	movhi	r4,5
   47fc0:	39c54d04 	addi	r7,r7,5428
   47fc4:	000d883a 	mov	r6,zero
   47fc8:	01405744 	movi	r5,349
   47fcc:	21056104 	addi	r4,r4,5508
   47fd0:	004a6740 	call	4a674 <__assert_func>

00047fd4 <__pow5mult>:
   47fd4:	defffb04 	addi	sp,sp,-20
   47fd8:	dcc00315 	stw	r19,12(sp)
   47fdc:	dc000015 	stw	r16,0(sp)
   47fe0:	dfc00415 	stw	ra,16(sp)
   47fe4:	dc800215 	stw	r18,8(sp)
   47fe8:	dc400115 	stw	r17,4(sp)
   47fec:	308000cc 	andi	r2,r6,3
   47ff0:	3021883a 	mov	r16,r6
   47ff4:	2027883a 	mov	r19,r4
   47ff8:	10002b1e 	bne	r2,zero,480a8 <__pow5mult+0xd4>
   47ffc:	2825883a 	mov	r18,r5
   48000:	8021d0ba 	srai	r16,r16,2
   48004:	80001926 	beq	r16,zero,4806c <__pow5mult+0x98>
   48008:	9c401217 	ldw	r17,72(r19)
   4800c:	8800061e 	bne	r17,zero,48028 <__pow5mult+0x54>
   48010:	00002d06 	br	480c8 <__pow5mult+0xf4>
   48014:	8021d07a 	srai	r16,r16,1
   48018:	80001426 	beq	r16,zero,4806c <__pow5mult+0x98>
   4801c:	88800017 	ldw	r2,0(r17)
   48020:	10001a26 	beq	r2,zero,4808c <__pow5mult+0xb8>
   48024:	1023883a 	mov	r17,r2
   48028:	8080004c 	andi	r2,r16,1
   4802c:	103ff926 	beq	r2,zero,48014 <__pow5mult+0x40>
   48030:	880d883a 	mov	r6,r17
   48034:	900b883a 	mov	r5,r18
   48038:	9809883a 	mov	r4,r19
   4803c:	0047d800 	call	47d80 <__multiply>
   48040:	90000726 	beq	r18,zero,48060 <__pow5mult+0x8c>
   48044:	91000117 	ldw	r4,4(r18)
   48048:	98c01317 	ldw	r3,76(r19)
   4804c:	200890ba 	slli	r4,r4,2
   48050:	1907883a 	add	r3,r3,r4
   48054:	19000017 	ldw	r4,0(r3)
   48058:	91000015 	stw	r4,0(r18)
   4805c:	1c800015 	stw	r18,0(r3)
   48060:	8021d07a 	srai	r16,r16,1
   48064:	1025883a 	mov	r18,r2
   48068:	803fec1e 	bne	r16,zero,4801c <__pow5mult+0x48>
   4806c:	9005883a 	mov	r2,r18
   48070:	dfc00417 	ldw	ra,16(sp)
   48074:	dcc00317 	ldw	r19,12(sp)
   48078:	dc800217 	ldw	r18,8(sp)
   4807c:	dc400117 	ldw	r17,4(sp)
   48080:	dc000017 	ldw	r16,0(sp)
   48084:	dec00504 	addi	sp,sp,20
   48088:	f800283a 	ret
   4808c:	880d883a 	mov	r6,r17
   48090:	880b883a 	mov	r5,r17
   48094:	9809883a 	mov	r4,r19
   48098:	0047d800 	call	47d80 <__multiply>
   4809c:	88800015 	stw	r2,0(r17)
   480a0:	10000015 	stw	zero,0(r2)
   480a4:	003fdf06 	br	48024 <__pow5mult+0x50>
   480a8:	100490ba 	slli	r2,r2,2
   480ac:	00c00174 	movhi	r3,5
   480b0:	000f883a 	mov	r7,zero
   480b4:	10c7883a 	add	r3,r2,r3
   480b8:	19856f17 	ldw	r6,5564(r3)
   480bc:	00479440 	call	47944 <__multadd>
   480c0:	1025883a 	mov	r18,r2
   480c4:	003fce06 	br	48000 <__pow5mult+0x2c>
   480c8:	01400044 	movi	r5,1
   480cc:	9809883a 	mov	r4,r19
   480d0:	004787c0 	call	4787c <_Balloc>
   480d4:	1023883a 	mov	r17,r2
   480d8:	10000726 	beq	r2,zero,480f8 <__pow5mult+0x124>
   480dc:	00809c44 	movi	r2,625
   480e0:	88800515 	stw	r2,20(r17)
   480e4:	00800044 	movi	r2,1
   480e8:	88800415 	stw	r2,16(r17)
   480ec:	9c401215 	stw	r17,72(r19)
   480f0:	88000015 	stw	zero,0(r17)
   480f4:	003fcc06 	br	48028 <__pow5mult+0x54>
   480f8:	01c00174 	movhi	r7,5
   480fc:	01000174 	movhi	r4,5
   48100:	39c54d04 	addi	r7,r7,5428
   48104:	000d883a 	mov	r6,zero
   48108:	01405004 	movi	r5,320
   4810c:	21056104 	addi	r4,r4,5508
   48110:	004a6740 	call	4a674 <__assert_func>

00048114 <__lshift>:
   48114:	defff804 	addi	sp,sp,-32
   48118:	dd800615 	stw	r22,24(sp)
   4811c:	dc400115 	stw	r17,4(sp)
   48120:	302dd17a 	srai	r22,r6,5
   48124:	2c400417 	ldw	r17,16(r5)
   48128:	28800217 	ldw	r2,8(r5)
   4812c:	dd000415 	stw	r20,16(sp)
   48130:	b463883a 	add	r17,r22,r17
   48134:	dcc00315 	stw	r19,12(sp)
   48138:	dc800215 	stw	r18,8(sp)
   4813c:	dc000015 	stw	r16,0(sp)
   48140:	dfc00715 	stw	ra,28(sp)
   48144:	dd400515 	stw	r21,20(sp)
   48148:	8d000044 	addi	r20,r17,1
   4814c:	2827883a 	mov	r19,r5
   48150:	3025883a 	mov	r18,r6
   48154:	29400117 	ldw	r5,4(r5)
   48158:	2021883a 	mov	r16,r4
   4815c:	1500030e 	bge	r2,r20,4816c <__lshift+0x58>
   48160:	1085883a 	add	r2,r2,r2
   48164:	29400044 	addi	r5,r5,1
   48168:	153ffd16 	blt	r2,r20,48160 <__lshift+0x4c>
   4816c:	8009883a 	mov	r4,r16
   48170:	004787c0 	call	4787c <_Balloc>
   48174:	102b883a 	mov	r21,r2
   48178:	10004126 	beq	r2,zero,48280 <__lshift+0x16c>
   4817c:	11000504 	addi	r4,r2,20
   48180:	0580050e 	bge	zero,r22,48198 <__lshift+0x84>
   48184:	b02c90ba 	slli	r22,r22,2
   48188:	000b883a 	mov	r5,zero
   4818c:	b00d883a 	mov	r6,r22
   48190:	00477840 	call	47784 <memset>
   48194:	1589883a 	add	r4,r2,r22
   48198:	9a400417 	ldw	r9,16(r19)
   4819c:	98c00504 	addi	r3,r19,20
   481a0:	948007cc 	andi	r18,r18,31
   481a4:	481290ba 	slli	r9,r9,2
   481a8:	1a53883a 	add	r9,r3,r9
   481ac:	90002c26 	beq	r18,zero,48260 <__lshift+0x14c>
   481b0:	01400804 	movi	r5,32
   481b4:	2c8bc83a 	sub	r5,r5,r18
   481b8:	2005883a 	mov	r2,r4
   481bc:	0011883a 	mov	r8,zero
   481c0:	19c00017 	ldw	r7,0(r3)
   481c4:	10800104 	addi	r2,r2,4
   481c8:	18c00104 	addi	r3,r3,4
   481cc:	3c8e983a 	sll	r7,r7,r18
   481d0:	3a0eb03a 	or	r7,r7,r8
   481d4:	11ffff15 	stw	r7,-4(r2)
   481d8:	1a3fff17 	ldw	r8,-4(r3)
   481dc:	4150d83a 	srl	r8,r8,r5
   481e0:	1a7ff736 	bltu	r3,r9,481c0 <__lshift+0xac>
   481e4:	98800544 	addi	r2,r19,21
   481e8:	48802336 	bltu	r9,r2,48278 <__lshift+0x164>
   481ec:	4cc7c83a 	sub	r3,r9,r19
   481f0:	18fffac4 	addi	r3,r3,-21
   481f4:	1806d0ba 	srli	r3,r3,2
   481f8:	18c00044 	addi	r3,r3,1
   481fc:	180690ba 	slli	r3,r3,2
   48200:	20c9883a 	add	r4,r4,r3
   48204:	22000015 	stw	r8,0(r4)
   48208:	4000011e 	bne	r8,zero,48210 <__lshift+0xfc>
   4820c:	8829883a 	mov	r20,r17
   48210:	ad000415 	stw	r20,16(r21)
   48214:	98000726 	beq	r19,zero,48234 <__lshift+0x120>
   48218:	98c00117 	ldw	r3,4(r19)
   4821c:	80801317 	ldw	r2,76(r16)
   48220:	180690ba 	slli	r3,r3,2
   48224:	10c5883a 	add	r2,r2,r3
   48228:	10c00017 	ldw	r3,0(r2)
   4822c:	98c00015 	stw	r3,0(r19)
   48230:	14c00015 	stw	r19,0(r2)
   48234:	a805883a 	mov	r2,r21
   48238:	dfc00717 	ldw	ra,28(sp)
   4823c:	dd800617 	ldw	r22,24(sp)
   48240:	dd400517 	ldw	r21,20(sp)
   48244:	dd000417 	ldw	r20,16(sp)
   48248:	dcc00317 	ldw	r19,12(sp)
   4824c:	dc800217 	ldw	r18,8(sp)
   48250:	dc400117 	ldw	r17,4(sp)
   48254:	dc000017 	ldw	r16,0(sp)
   48258:	dec00804 	addi	sp,sp,32
   4825c:	f800283a 	ret
   48260:	18800017 	ldw	r2,0(r3)
   48264:	18c00104 	addi	r3,r3,4
   48268:	21000104 	addi	r4,r4,4
   4826c:	20bfff15 	stw	r2,-4(r4)
   48270:	1a7ffb36 	bltu	r3,r9,48260 <__lshift+0x14c>
   48274:	003fe506 	br	4820c <__lshift+0xf8>
   48278:	00c00104 	movi	r3,4
   4827c:	003fe006 	br	48200 <__lshift+0xec>
   48280:	01c00174 	movhi	r7,5
   48284:	01000174 	movhi	r4,5
   48288:	39c54d04 	addi	r7,r7,5428
   4828c:	000d883a 	mov	r6,zero
   48290:	01407644 	movi	r5,473
   48294:	21056104 	addi	r4,r4,5508
   48298:	004a6740 	call	4a674 <__assert_func>

0004829c <__mcmp>:
   4829c:	21800417 	ldw	r6,16(r4)
   482a0:	28c00417 	ldw	r3,16(r5)
   482a4:	30c5c83a 	sub	r2,r6,r3
   482a8:	30c0101e 	bne	r6,r3,482ec <__mcmp+0x50>
   482ac:	180690ba 	slli	r3,r3,2
   482b0:	21000504 	addi	r4,r4,20
   482b4:	29400504 	addi	r5,r5,20
   482b8:	20cd883a 	add	r6,r4,r3
   482bc:	28c7883a 	add	r3,r5,r3
   482c0:	00000106 	br	482c8 <__mcmp+0x2c>
   482c4:	21800a2e 	bgeu	r4,r6,482f0 <__mcmp+0x54>
   482c8:	31ffff17 	ldw	r7,-4(r6)
   482cc:	197fff17 	ldw	r5,-4(r3)
   482d0:	31bfff04 	addi	r6,r6,-4
   482d4:	18ffff04 	addi	r3,r3,-4
   482d8:	397ffa26 	beq	r7,r5,482c4 <__mcmp+0x28>
   482dc:	3940022e 	bgeu	r7,r5,482e8 <__mcmp+0x4c>
   482e0:	00bfffc4 	movi	r2,-1
   482e4:	f800283a 	ret
   482e8:	00800044 	movi	r2,1
   482ec:	f800283a 	ret
   482f0:	f800283a 	ret

000482f4 <__mdiff>:
   482f4:	28c00417 	ldw	r3,16(r5)
   482f8:	30800417 	ldw	r2,16(r6)
   482fc:	defffc04 	addi	sp,sp,-16
   48300:	dc800215 	stw	r18,8(sp)
   48304:	dc400115 	stw	r17,4(sp)
   48308:	dc000015 	stw	r16,0(sp)
   4830c:	dfc00315 	stw	ra,12(sp)
   48310:	2823883a 	mov	r17,r5
   48314:	3021883a 	mov	r16,r6
   48318:	18a5c83a 	sub	r18,r3,r2
   4831c:	1880121e 	bne	r3,r2,48368 <__mdiff+0x74>
   48320:	100c90ba 	slli	r6,r2,2
   48324:	29400504 	addi	r5,r5,20
   48328:	80c00504 	addi	r3,r16,20
   4832c:	2985883a 	add	r2,r5,r6
   48330:	1987883a 	add	r3,r3,r6
   48334:	00000106 	br	4833c <__mdiff+0x48>
   48338:	28805f2e 	bgeu	r5,r2,484b8 <__mdiff+0x1c4>
   4833c:	11ffff17 	ldw	r7,-4(r2)
   48340:	19bfff17 	ldw	r6,-4(r3)
   48344:	10bfff04 	addi	r2,r2,-4
   48348:	18ffff04 	addi	r3,r3,-4
   4834c:	39bffa26 	beq	r7,r6,48338 <__mdiff+0x44>
   48350:	3980072e 	bgeu	r7,r6,48370 <__mdiff+0x7c>
   48354:	8805883a 	mov	r2,r17
   48358:	04800044 	movi	r18,1
   4835c:	8023883a 	mov	r17,r16
   48360:	1021883a 	mov	r16,r2
   48364:	00000206 	br	48370 <__mdiff+0x7c>
   48368:	903ffa16 	blt	r18,zero,48354 <__mdiff+0x60>
   4836c:	0025883a 	mov	r18,zero
   48370:	89400117 	ldw	r5,4(r17)
   48374:	004787c0 	call	4787c <_Balloc>
   48378:	10006326 	beq	r2,zero,48508 <__mdiff+0x214>
   4837c:	8a400417 	ldw	r9,16(r17)
   48380:	83800417 	ldw	r14,16(r16)
   48384:	89400504 	addi	r5,r17,20
   48388:	481490ba 	slli	r10,r9,2
   4838c:	701c90ba 	slli	r14,r14,2
   48390:	81800504 	addi	r6,r16,20
   48394:	13400504 	addi	r13,r2,20
   48398:	14800315 	stw	r18,12(r2)
   4839c:	2a95883a 	add	r10,r5,r10
   483a0:	339d883a 	add	r14,r6,r14
   483a4:	6819883a 	mov	r12,r13
   483a8:	2817883a 	mov	r11,r5
   483ac:	000f883a 	mov	r7,zero
   483b0:	59000017 	ldw	r4,0(r11)
   483b4:	32000017 	ldw	r8,0(r6)
   483b8:	63000104 	addi	r12,r12,4
   483bc:	20ffffcc 	andi	r3,r4,65535
   483c0:	43ffffcc 	andi	r15,r8,65535
   483c4:	1bc7c83a 	sub	r3,r3,r15
   483c8:	4010d43a 	srli	r8,r8,16
   483cc:	19c7883a 	add	r3,r3,r7
   483d0:	2008d43a 	srli	r4,r4,16
   483d4:	180fd43a 	srai	r7,r3,16
   483d8:	18ffffcc 	andi	r3,r3,65535
   483dc:	2209c83a 	sub	r4,r4,r8
   483e0:	21c9883a 	add	r4,r4,r7
   483e4:	2010943a 	slli	r8,r4,16
   483e8:	31800104 	addi	r6,r6,4
   483ec:	200fd43a 	srai	r7,r4,16
   483f0:	1a06b03a 	or	r3,r3,r8
   483f4:	60ffff15 	stw	r3,-4(r12)
   483f8:	5ac00104 	addi	r11,r11,4
   483fc:	33bfec36 	bltu	r6,r14,483b0 <__mdiff+0xbc>
   48400:	7409c83a 	sub	r4,r14,r16
   48404:	213ffac4 	addi	r4,r4,-21
   48408:	84000544 	addi	r16,r16,21
   4840c:	200cd0ba 	srli	r6,r4,2
   48410:	74002736 	bltu	r14,r16,484b0 <__mdiff+0x1bc>
   48414:	31000044 	addi	r4,r6,1
   48418:	200890ba 	slli	r4,r4,2
   4841c:	290b883a 	add	r5,r5,r4
   48420:	6911883a 	add	r8,r13,r4
   48424:	2a802b2e 	bgeu	r5,r10,484d4 <__mdiff+0x1e0>
   48428:	4017883a 	mov	r11,r8
   4842c:	280d883a 	mov	r6,r5
   48430:	30c00017 	ldw	r3,0(r6)
   48434:	5ac00104 	addi	r11,r11,4
   48438:	31800104 	addi	r6,r6,4
   4843c:	193fffcc 	andi	r4,r3,65535
   48440:	21c9883a 	add	r4,r4,r7
   48444:	1818d43a 	srli	r12,r3,16
   48448:	2009d43a 	srai	r4,r4,16
   4844c:	19c7883a 	add	r3,r3,r7
   48450:	18ffffcc 	andi	r3,r3,65535
   48454:	2309883a 	add	r4,r4,r12
   48458:	2018943a 	slli	r12,r4,16
   4845c:	200fd43a 	srai	r7,r4,16
   48460:	1b06b03a 	or	r3,r3,r12
   48464:	58ffff15 	stw	r3,-4(r11)
   48468:	32bff136 	bltu	r6,r10,48430 <__mdiff+0x13c>
   4846c:	513fffc4 	addi	r4,r10,-1
   48470:	2149c83a 	sub	r4,r4,r5
   48474:	2008d0ba 	srli	r4,r4,2
   48478:	200890ba 	slli	r4,r4,2
   4847c:	4109883a 	add	r4,r8,r4
   48480:	1800041e 	bne	r3,zero,48494 <__mdiff+0x1a0>
   48484:	20ffff17 	ldw	r3,-4(r4)
   48488:	4a7fffc4 	addi	r9,r9,-1
   4848c:	213fff04 	addi	r4,r4,-4
   48490:	183ffc26 	beq	r3,zero,48484 <__mdiff+0x190>
   48494:	12400415 	stw	r9,16(r2)
   48498:	dfc00317 	ldw	ra,12(sp)
   4849c:	dc800217 	ldw	r18,8(sp)
   484a0:	dc400117 	ldw	r17,4(sp)
   484a4:	dc000017 	ldw	r16,0(sp)
   484a8:	dec00404 	addi	sp,sp,16
   484ac:	f800283a 	ret
   484b0:	01000104 	movi	r4,4
   484b4:	003fd906 	br	4841c <__mdiff+0x128>
   484b8:	000b883a 	mov	r5,zero
   484bc:	004787c0 	call	4787c <_Balloc>
   484c0:	10000a26 	beq	r2,zero,484ec <__mdiff+0x1f8>
   484c4:	00c00044 	movi	r3,1
   484c8:	10c00415 	stw	r3,16(r2)
   484cc:	10000515 	stw	zero,20(r2)
   484d0:	003ff106 	br	48498 <__mdiff+0x1a4>
   484d4:	74000336 	bltu	r14,r16,484e4 <__mdiff+0x1f0>
   484d8:	300890ba 	slli	r4,r6,2
   484dc:	6909883a 	add	r4,r13,r4
   484e0:	003fe706 	br	48480 <__mdiff+0x18c>
   484e4:	0009883a 	mov	r4,zero
   484e8:	003ffc06 	br	484dc <__mdiff+0x1e8>
   484ec:	01c00174 	movhi	r7,5
   484f0:	01000174 	movhi	r4,5
   484f4:	39c54d04 	addi	r7,r7,5428
   484f8:	000d883a 	mov	r6,zero
   484fc:	01408c84 	movi	r5,562
   48500:	21056104 	addi	r4,r4,5508
   48504:	004a6740 	call	4a674 <__assert_func>
   48508:	01c00174 	movhi	r7,5
   4850c:	01000174 	movhi	r4,5
   48510:	39c54d04 	addi	r7,r7,5428
   48514:	000d883a 	mov	r6,zero
   48518:	01409004 	movi	r5,576
   4851c:	21056104 	addi	r4,r4,5508
   48520:	004a6740 	call	4a674 <__assert_func>

00048524 <__ulp>:
   48524:	28dffc2c 	andhi	r3,r5,32752
   48528:	00bf3034 	movhi	r2,64704
   4852c:	1887883a 	add	r3,r3,r2
   48530:	00c0020e 	bge	zero,r3,4853c <__ulp+0x18>
   48534:	0005883a 	mov	r2,zero
   48538:	f800283a 	ret
   4853c:	00c7c83a 	sub	r3,zero,r3
   48540:	1807d53a 	srai	r3,r3,20
   48544:	18800508 	cmpgei	r2,r3,20
   48548:	1000041e 	bne	r2,zero,4855c <__ulp+0x38>
   4854c:	00800234 	movhi	r2,8
   48550:	10c7d83a 	sra	r3,r2,r3
   48554:	0005883a 	mov	r2,zero
   48558:	f800283a 	ret
   4855c:	18fffb04 	addi	r3,r3,-20
   48560:	188007c8 	cmpgei	r2,r3,31
   48564:	10000326 	beq	r2,zero,48574 <__ulp+0x50>
   48568:	00800044 	movi	r2,1
   4856c:	0007883a 	mov	r3,zero
   48570:	f800283a 	ret
   48574:	00a00034 	movhi	r2,32768
   48578:	10c4d83a 	srl	r2,r2,r3
   4857c:	0007883a 	mov	r3,zero
   48580:	f800283a 	ret

00048584 <__b2d>:
   48584:	defffa04 	addi	sp,sp,-24
   48588:	dc400115 	stw	r17,4(sp)
   4858c:	24400417 	ldw	r17,16(r4)
   48590:	dc000015 	stw	r16,0(sp)
   48594:	24000504 	addi	r16,r4,20
   48598:	882290ba 	slli	r17,r17,2
   4859c:	dc800215 	stw	r18,8(sp)
   485a0:	dd000415 	stw	r20,16(sp)
   485a4:	8463883a 	add	r17,r16,r17
   485a8:	8cbfff17 	ldw	r18,-4(r17)
   485ac:	dcc00315 	stw	r19,12(sp)
   485b0:	dfc00515 	stw	ra,20(sp)
   485b4:	9009883a 	mov	r4,r18
   485b8:	2827883a 	mov	r19,r5
   485bc:	0047bac0 	call	47bac <__hi0bits>
   485c0:	00c00804 	movi	r3,32
   485c4:	1889c83a 	sub	r4,r3,r2
   485c8:	99000015 	stw	r4,0(r19)
   485cc:	110002c8 	cmpgei	r4,r2,11
   485d0:	8d3fff04 	addi	r20,r17,-4
   485d4:	20001b26 	beq	r4,zero,48644 <__b2d+0xc0>
   485d8:	117ffd44 	addi	r5,r2,-11
   485dc:	85000e2e 	bgeu	r16,r20,48618 <__b2d+0x94>
   485e0:	88bffe17 	ldw	r2,-8(r17)
   485e4:	28000e26 	beq	r5,zero,48620 <__b2d+0x9c>
   485e8:	1949c83a 	sub	r4,r3,r5
   485ec:	1106d83a 	srl	r3,r2,r4
   485f0:	9164983a 	sll	r18,r18,r5
   485f4:	89bffe04 	addi	r6,r17,-8
   485f8:	1144983a 	sll	r2,r2,r5
   485fc:	90c6b03a 	or	r3,r18,r3
   48600:	18cffc34 	orhi	r3,r3,16368
   48604:	8180072e 	bgeu	r16,r6,48624 <__b2d+0xa0>
   48608:	897ffd17 	ldw	r5,-12(r17)
   4860c:	2908d83a 	srl	r4,r5,r4
   48610:	1104b03a 	or	r2,r2,r4
   48614:	00000306 	br	48624 <__b2d+0xa0>
   48618:	108002d8 	cmpnei	r2,r2,11
   4861c:	1000161e 	bne	r2,zero,48678 <__b2d+0xf4>
   48620:	90cffc34 	orhi	r3,r18,16368
   48624:	dfc00517 	ldw	ra,20(sp)
   48628:	dd000417 	ldw	r20,16(sp)
   4862c:	dcc00317 	ldw	r19,12(sp)
   48630:	dc800217 	ldw	r18,8(sp)
   48634:	dc400117 	ldw	r17,4(sp)
   48638:	dc000017 	ldw	r16,0(sp)
   4863c:	dec00604 	addi	sp,sp,24
   48640:	f800283a 	ret
   48644:	014002c4 	movi	r5,11
   48648:	288bc83a 	sub	r5,r5,r2
   4864c:	9146d83a 	srl	r3,r18,r5
   48650:	18cffc34 	orhi	r3,r3,16368
   48654:	85000536 	bltu	r16,r20,4866c <__b2d+0xe8>
   48658:	0009883a 	mov	r4,zero
   4865c:	10800544 	addi	r2,r2,21
   48660:	90a4983a 	sll	r18,r18,r2
   48664:	9104b03a 	or	r2,r18,r4
   48668:	003fee06 	br	48624 <__b2d+0xa0>
   4866c:	893ffe17 	ldw	r4,-8(r17)
   48670:	2148d83a 	srl	r4,r4,r5
   48674:	003ff906 	br	4865c <__b2d+0xd8>
   48678:	9164983a 	sll	r18,r18,r5
   4867c:	0005883a 	mov	r2,zero
   48680:	003fe706 	br	48620 <__b2d+0x9c>

00048684 <__d2b>:
   48684:	defff804 	addi	sp,sp,-32
   48688:	dd000615 	stw	r20,24(sp)
   4868c:	2829883a 	mov	r20,r5
   48690:	01400044 	movi	r5,1
   48694:	dcc00515 	stw	r19,20(sp)
   48698:	dc000215 	stw	r16,8(sp)
   4869c:	dfc00715 	stw	ra,28(sp)
   486a0:	dc800415 	stw	r18,16(sp)
   486a4:	dc400315 	stw	r17,12(sp)
   486a8:	3021883a 	mov	r16,r6
   486ac:	3827883a 	mov	r19,r7
   486b0:	004787c0 	call	4787c <_Balloc>
   486b4:	10004226 	beq	r2,zero,487c0 <__d2b+0x13c>
   486b8:	8024d53a 	srli	r18,r16,20
   486bc:	1023883a 	mov	r17,r2
   486c0:	00800434 	movhi	r2,16
   486c4:	10bfffc4 	addi	r2,r2,-1
   486c8:	9481ffcc 	andi	r18,r18,2047
   486cc:	80a0703a 	and	r16,r16,r2
   486d0:	90000126 	beq	r18,zero,486d8 <__d2b+0x54>
   486d4:	84000434 	orhi	r16,r16,16
   486d8:	dc000115 	stw	r16,4(sp)
   486dc:	a0001b26 	beq	r20,zero,4874c <__d2b+0xc8>
   486e0:	d809883a 	mov	r4,sp
   486e4:	dd000015 	stw	r20,0(sp)
   486e8:	0047c200 	call	47c20 <__lo0bits>
   486ec:	d8c00117 	ldw	r3,4(sp)
   486f0:	10003026 	beq	r2,zero,487b4 <__d2b+0x130>
   486f4:	01000804 	movi	r4,32
   486f8:	2089c83a 	sub	r4,r4,r2
   486fc:	1908983a 	sll	r4,r3,r4
   48700:	d9400017 	ldw	r5,0(sp)
   48704:	1886d83a 	srl	r3,r3,r2
   48708:	2148b03a 	or	r4,r4,r5
   4870c:	89000515 	stw	r4,20(r17)
   48710:	d8c00115 	stw	r3,4(sp)
   48714:	88c00615 	stw	r3,24(r17)
   48718:	18002426 	beq	r3,zero,487ac <__d2b+0x128>
   4871c:	04000084 	movi	r16,2
   48720:	8c000415 	stw	r16,16(r17)
   48724:	9000111e 	bne	r18,zero,4876c <__d2b+0xe8>
   48728:	800690ba 	slli	r3,r16,2
   4872c:	10bef384 	addi	r2,r2,-1074
   48730:	98800015 	stw	r2,0(r19)
   48734:	88c5883a 	add	r2,r17,r3
   48738:	11000417 	ldw	r4,16(r2)
   4873c:	8020917a 	slli	r16,r16,5
   48740:	0047bac0 	call	47bac <__hi0bits>
   48744:	8085c83a 	sub	r2,r16,r2
   48748:	00000d06 	br	48780 <__d2b+0xfc>
   4874c:	d9000104 	addi	r4,sp,4
   48750:	0047c200 	call	47c20 <__lo0bits>
   48754:	d8c00117 	ldw	r3,4(sp)
   48758:	10800804 	addi	r2,r2,32
   4875c:	04000044 	movi	r16,1
   48760:	88c00515 	stw	r3,20(r17)
   48764:	8c000415 	stw	r16,16(r17)
   48768:	903fef26 	beq	r18,zero,48728 <__d2b+0xa4>
   4876c:	94bef344 	addi	r18,r18,-1075
   48770:	90a5883a 	add	r18,r18,r2
   48774:	04000d44 	movi	r16,53
   48778:	9c800015 	stw	r18,0(r19)
   4877c:	8085c83a 	sub	r2,r16,r2
   48780:	d8c00817 	ldw	r3,32(sp)
   48784:	18800015 	stw	r2,0(r3)
   48788:	8805883a 	mov	r2,r17
   4878c:	dfc00717 	ldw	ra,28(sp)
   48790:	dd000617 	ldw	r20,24(sp)
   48794:	dcc00517 	ldw	r19,20(sp)
   48798:	dc800417 	ldw	r18,16(sp)
   4879c:	dc400317 	ldw	r17,12(sp)
   487a0:	dc000217 	ldw	r16,8(sp)
   487a4:	dec00804 	addi	sp,sp,32
   487a8:	f800283a 	ret
   487ac:	04000044 	movi	r16,1
   487b0:	003fec06 	br	48764 <__d2b+0xe0>
   487b4:	d9000017 	ldw	r4,0(sp)
   487b8:	89000515 	stw	r4,20(r17)
   487bc:	003fd506 	br	48714 <__d2b+0x90>
   487c0:	01c00174 	movhi	r7,5
   487c4:	01000174 	movhi	r4,5
   487c8:	39c54d04 	addi	r7,r7,5428
   487cc:	000d883a 	mov	r6,zero
   487d0:	0140c284 	movi	r5,778
   487d4:	21056104 	addi	r4,r4,5508
   487d8:	004a6740 	call	4a674 <__assert_func>

000487dc <__ratio>:
   487dc:	defff904 	addi	sp,sp,-28
   487e0:	dc400315 	stw	r17,12(sp)
   487e4:	2823883a 	mov	r17,r5
   487e8:	d80b883a 	mov	r5,sp
   487ec:	dfc00615 	stw	ra,24(sp)
   487f0:	dcc00515 	stw	r19,20(sp)
   487f4:	dc800415 	stw	r18,16(sp)
   487f8:	2027883a 	mov	r19,r4
   487fc:	dc000215 	stw	r16,8(sp)
   48800:	00485840 	call	48584 <__b2d>
   48804:	d9400104 	addi	r5,sp,4
   48808:	8809883a 	mov	r4,r17
   4880c:	1025883a 	mov	r18,r2
   48810:	1821883a 	mov	r16,r3
   48814:	00485840 	call	48584 <__b2d>
   48818:	89000417 	ldw	r4,16(r17)
   4881c:	9a000417 	ldw	r8,16(r19)
   48820:	d9400117 	ldw	r5,4(sp)
   48824:	100d883a 	mov	r6,r2
   48828:	4111c83a 	sub	r8,r8,r4
   4882c:	d9000017 	ldw	r4,0(sp)
   48830:	4010917a 	slli	r8,r8,5
   48834:	180f883a 	mov	r7,r3
   48838:	2149c83a 	sub	r4,r4,r5
   4883c:	4111883a 	add	r8,r8,r4
   48840:	02000c0e 	bge	zero,r8,48874 <__ratio+0x98>
   48844:	4010953a 	slli	r8,r8,20
   48848:	4421883a 	add	r16,r8,r16
   4884c:	9009883a 	mov	r4,r18
   48850:	800b883a 	mov	r5,r16
   48854:	004cc000 	call	4cc00 <__divdf3>
   48858:	dfc00617 	ldw	ra,24(sp)
   4885c:	dcc00517 	ldw	r19,20(sp)
   48860:	dc800417 	ldw	r18,16(sp)
   48864:	dc400317 	ldw	r17,12(sp)
   48868:	dc000217 	ldw	r16,8(sp)
   4886c:	dec00704 	addi	sp,sp,28
   48870:	f800283a 	ret
   48874:	00bffc34 	movhi	r2,65520
   48878:	4091383a 	mul	r8,r8,r2
   4887c:	40cf883a 	add	r7,r8,r3
   48880:	003ff206 	br	4884c <__ratio+0x70>

00048884 <_mprec_log10>:
   48884:	defffe04 	addi	sp,sp,-8
   48888:	dc000015 	stw	r16,0(sp)
   4888c:	dfc00115 	stw	ra,4(sp)
   48890:	20800608 	cmpgei	r2,r4,24
   48894:	2021883a 	mov	r16,r4
   48898:	10000f26 	beq	r2,zero,488d8 <_mprec_log10+0x54>
   4889c:	0009883a 	mov	r4,zero
   488a0:	014ffc34 	movhi	r5,16368
   488a4:	000d883a 	mov	r6,zero
   488a8:	01d00934 	movhi	r7,16420
   488ac:	004d6d00 	call	4d6d0 <__muldf3>
   488b0:	843fffc4 	addi	r16,r16,-1
   488b4:	1009883a 	mov	r4,r2
   488b8:	180b883a 	mov	r5,r3
   488bc:	803ff91e 	bne	r16,zero,488a4 <_mprec_log10+0x20>
   488c0:	2005883a 	mov	r2,r4
   488c4:	2807883a 	mov	r3,r5
   488c8:	dfc00117 	ldw	ra,4(sp)
   488cc:	dc000017 	ldw	r16,0(sp)
   488d0:	dec00204 	addi	sp,sp,8
   488d4:	f800283a 	ret
   488d8:	202090fa 	slli	r16,r4,3
   488dc:	00800174 	movhi	r2,5
   488e0:	10858704 	addi	r2,r2,5660
   488e4:	1405883a 	add	r2,r2,r16
   488e8:	11000017 	ldw	r4,0(r2)
   488ec:	11400117 	ldw	r5,4(r2)
   488f0:	003ff306 	br	488c0 <_mprec_log10+0x3c>

000488f4 <__copybits>:
   488f4:	297fffc4 	addi	r5,r5,-1
   488f8:	280fd17a 	srai	r7,r5,5
   488fc:	31400417 	ldw	r5,16(r6)
   48900:	30800504 	addi	r2,r6,20
   48904:	39c00044 	addi	r7,r7,1
   48908:	280a90ba 	slli	r5,r5,2
   4890c:	380e90ba 	slli	r7,r7,2
   48910:	114b883a 	add	r5,r2,r5
   48914:	21cf883a 	add	r7,r4,r7
   48918:	11400c2e 	bgeu	r2,r5,4894c <__copybits+0x58>
   4891c:	2007883a 	mov	r3,r4
   48920:	12000017 	ldw	r8,0(r2)
   48924:	10800104 	addi	r2,r2,4
   48928:	18c00104 	addi	r3,r3,4
   4892c:	1a3fff15 	stw	r8,-4(r3)
   48930:	117ffb36 	bltu	r2,r5,48920 <__copybits+0x2c>
   48934:	2985c83a 	sub	r2,r5,r6
   48938:	10bffac4 	addi	r2,r2,-21
   4893c:	1004d0ba 	srli	r2,r2,2
   48940:	10800044 	addi	r2,r2,1
   48944:	100490ba 	slli	r2,r2,2
   48948:	2089883a 	add	r4,r4,r2
   4894c:	21c0072e 	bgeu	r4,r7,4896c <__copybits+0x78>
   48950:	39bfffc4 	addi	r6,r7,-1
   48954:	310dc83a 	sub	r6,r6,r4
   48958:	300cd0ba 	srli	r6,r6,2
   4895c:	000b883a 	mov	r5,zero
   48960:	31800044 	addi	r6,r6,1
   48964:	300c90ba 	slli	r6,r6,2
   48968:	00477841 	jmpi	47784 <memset>
   4896c:	f800283a 	ret

00048970 <__any_on>:
   48970:	20c00417 	ldw	r3,16(r4)
   48974:	280dd17a 	srai	r6,r5,5
   48978:	21000504 	addi	r4,r4,20
   4897c:	1980080e 	bge	r3,r6,489a0 <__any_on+0x30>
   48980:	180690ba 	slli	r3,r3,2
   48984:	20c5883a 	add	r2,r4,r3
   48988:	20800f2e 	bgeu	r4,r2,489c8 <__any_on+0x58>
   4898c:	10ffff17 	ldw	r3,-4(r2)
   48990:	10bfff04 	addi	r2,r2,-4
   48994:	183ffc26 	beq	r3,zero,48988 <__any_on+0x18>
   48998:	00800044 	movi	r2,1
   4899c:	f800283a 	ret
   489a0:	300490ba 	slli	r2,r6,2
   489a4:	2085883a 	add	r2,r4,r2
   489a8:	30fff70e 	bge	r6,r3,48988 <__any_on+0x18>
   489ac:	294007cc 	andi	r5,r5,31
   489b0:	283ff526 	beq	r5,zero,48988 <__any_on+0x18>
   489b4:	11800017 	ldw	r6,0(r2)
   489b8:	3146d83a 	srl	r3,r6,r5
   489bc:	1946983a 	sll	r3,r3,r5
   489c0:	30fff51e 	bne	r6,r3,48998 <__any_on+0x28>
   489c4:	003ff006 	br	48988 <__any_on+0x18>
   489c8:	0005883a 	mov	r2,zero
   489cc:	f800283a 	ret

000489d0 <_realloc_r>:
   489d0:	defff504 	addi	sp,sp,-44
   489d4:	dd000515 	stw	r20,20(sp)
   489d8:	dfc00a15 	stw	ra,40(sp)
   489dc:	df000915 	stw	fp,36(sp)
   489e0:	ddc00815 	stw	r23,32(sp)
   489e4:	dd800715 	stw	r22,28(sp)
   489e8:	dd400615 	stw	r21,24(sp)
   489ec:	dcc00415 	stw	r19,16(sp)
   489f0:	dc800315 	stw	r18,12(sp)
   489f4:	dc400215 	stw	r17,8(sp)
   489f8:	dc000115 	stw	r16,4(sp)
   489fc:	3029883a 	mov	r20,r6
   48a00:	28008a26 	beq	r5,zero,48c2c <_realloc_r+0x25c>
   48a04:	2821883a 	mov	r16,r5
   48a08:	202b883a 	mov	r21,r4
   48a0c:	004f2fc0 	call	4f2fc <__malloc_lock>
   48a10:	84ffff17 	ldw	r19,-4(r16)
   48a14:	a44002c4 	addi	r17,r20,11
   48a18:	04bfff04 	movi	r18,-4
   48a1c:	888005f0 	cmpltui	r2,r17,23
   48a20:	85bffe04 	addi	r22,r16,-8
   48a24:	9ca4703a 	and	r18,r19,r18
   48a28:	10005a1e 	bne	r2,zero,48b94 <_realloc_r+0x1c4>
   48a2c:	00bffe04 	movi	r2,-8
   48a30:	88a2703a 	and	r17,r17,r2
   48a34:	88005916 	blt	r17,zero,48b9c <_realloc_r+0x1cc>
   48a38:	8d005836 	bltu	r17,r20,48b9c <_realloc_r+0x1cc>
   48a3c:	94403b0e 	bge	r18,r17,48b2c <_realloc_r+0x15c>
   48a40:	05c00174 	movhi	r23,5
   48a44:	bdc78c04 	addi	r23,r23,7728
   48a48:	b9400217 	ldw	r5,8(r23)
   48a4c:	b489883a 	add	r4,r22,r18
   48a50:	20800117 	ldw	r2,4(r4)
   48a54:	29008e26 	beq	r5,r4,48c90 <_realloc_r+0x2c0>
   48a58:	00ffff84 	movi	r3,-2
   48a5c:	10c6703a 	and	r3,r2,r3
   48a60:	20c7883a 	add	r3,r4,r3
   48a64:	18c00117 	ldw	r3,4(r3)
   48a68:	18c0004c 	andi	r3,r3,1
   48a6c:	18004f1e 	bne	r3,zero,48bac <_realloc_r+0x1dc>
   48a70:	00ffff04 	movi	r3,-4
   48a74:	10c4703a 	and	r2,r2,r3
   48a78:	9087883a 	add	r3,r18,r2
   48a7c:	1c40c30e 	bge	r3,r17,48d8c <_realloc_r+0x3bc>
   48a80:	9cc0004c 	andi	r19,r19,1
   48a84:	98004b1e 	bne	r19,zero,48bb4 <_realloc_r+0x1e4>
   48a88:	873ffe17 	ldw	fp,-8(r16)
   48a8c:	00ffff04 	movi	r3,-4
   48a90:	b739c83a 	sub	fp,r22,fp
   48a94:	e4c00117 	ldw	r19,4(fp)
   48a98:	98c6703a 	and	r3,r19,r3
   48a9c:	20000426 	beq	r4,zero,48ab0 <_realloc_r+0xe0>
   48aa0:	90cf883a 	add	r7,r18,r3
   48aa4:	388f883a 	add	r7,r7,r2
   48aa8:	2900c226 	beq	r5,r4,48db4 <_realloc_r+0x3e4>
   48aac:	3c409e0e 	bge	r7,r17,48d28 <_realloc_r+0x358>
   48ab0:	e0004026 	beq	fp,zero,48bb4 <_realloc_r+0x1e4>
   48ab4:	90ef883a 	add	r23,r18,r3
   48ab8:	bc403e16 	blt	r23,r17,48bb4 <_realloc_r+0x1e4>
   48abc:	e0800317 	ldw	r2,12(fp)
   48ac0:	e0c00217 	ldw	r3,8(fp)
   48ac4:	91bfff04 	addi	r6,r18,-4
   48ac8:	31400968 	cmpgeui	r5,r6,37
   48acc:	18800315 	stw	r2,12(r3)
   48ad0:	10c00215 	stw	r3,8(r2)
   48ad4:	e1000204 	addi	r4,fp,8
   48ad8:	2800e71e 	bne	r5,zero,48e78 <_realloc_r+0x4a8>
   48adc:	30800530 	cmpltui	r2,r6,20
   48ae0:	1000e31e 	bne	r2,zero,48e70 <_realloc_r+0x4a0>
   48ae4:	80c00017 	ldw	r3,0(r16)
   48ae8:	30800728 	cmpgeui	r2,r6,28
   48aec:	e0c00215 	stw	r3,8(fp)
   48af0:	80c00117 	ldw	r3,4(r16)
   48af4:	e0c00315 	stw	r3,12(fp)
   48af8:	1000fa1e 	bne	r2,zero,48ee4 <_realloc_r+0x514>
   48afc:	84000204 	addi	r16,r16,8
   48b00:	e0800404 	addi	r2,fp,16
   48b04:	80c00017 	ldw	r3,0(r16)
   48b08:	b825883a 	mov	r18,r23
   48b0c:	10c00015 	stw	r3,0(r2)
   48b10:	80c00117 	ldw	r3,4(r16)
   48b14:	e02d883a 	mov	r22,fp
   48b18:	10c00115 	stw	r3,4(r2)
   48b1c:	80c00217 	ldw	r3,8(r16)
   48b20:	2021883a 	mov	r16,r4
   48b24:	10c00215 	stw	r3,8(r2)
   48b28:	e4c00117 	ldw	r19,4(fp)
   48b2c:	9447c83a 	sub	r3,r18,r17
   48b30:	19000430 	cmpltui	r4,r3,16
   48b34:	9cc0004c 	andi	r19,r19,1
   48b38:	b485883a 	add	r2,r22,r18
   48b3c:	20004826 	beq	r4,zero,48c60 <_realloc_r+0x290>
   48b40:	94e6b03a 	or	r19,r18,r19
   48b44:	b4c00115 	stw	r19,4(r22)
   48b48:	10c00117 	ldw	r3,4(r2)
   48b4c:	18c00054 	ori	r3,r3,1
   48b50:	10c00115 	stw	r3,4(r2)
   48b54:	a809883a 	mov	r4,r21
   48b58:	004f3200 	call	4f320 <__malloc_unlock>
   48b5c:	8029883a 	mov	r20,r16
   48b60:	a005883a 	mov	r2,r20
   48b64:	dfc00a17 	ldw	ra,40(sp)
   48b68:	df000917 	ldw	fp,36(sp)
   48b6c:	ddc00817 	ldw	r23,32(sp)
   48b70:	dd800717 	ldw	r22,28(sp)
   48b74:	dd400617 	ldw	r21,24(sp)
   48b78:	dd000517 	ldw	r20,20(sp)
   48b7c:	dcc00417 	ldw	r19,16(sp)
   48b80:	dc800317 	ldw	r18,12(sp)
   48b84:	dc400217 	ldw	r17,8(sp)
   48b88:	dc000117 	ldw	r16,4(sp)
   48b8c:	dec00b04 	addi	sp,sp,44
   48b90:	f800283a 	ret
   48b94:	04400404 	movi	r17,16
   48b98:	8d3fa82e 	bgeu	r17,r20,48a3c <_realloc_r+0x6c>
   48b9c:	00800304 	movi	r2,12
   48ba0:	a8800015 	stw	r2,0(r21)
   48ba4:	0029883a 	mov	r20,zero
   48ba8:	003fed06 	br	48b60 <_realloc_r+0x190>
   48bac:	9cc0004c 	andi	r19,r19,1
   48bb0:	98004e26 	beq	r19,zero,48cec <_realloc_r+0x31c>
   48bb4:	a00b883a 	mov	r5,r20
   48bb8:	a809883a 	mov	r4,r21
   48bbc:	0046cd80 	call	46cd8 <_malloc_r>
   48bc0:	1029883a 	mov	r20,r2
   48bc4:	1000bd26 	beq	r2,zero,48ebc <_realloc_r+0x4ec>
   48bc8:	84ffff17 	ldw	r19,-4(r16)
   48bcc:	10fffe04 	addi	r3,r2,-8
   48bd0:	00bfff84 	movi	r2,-2
   48bd4:	9884703a 	and	r2,r19,r2
   48bd8:	b085883a 	add	r2,r22,r2
   48bdc:	10c03e26 	beq	r2,r3,48cd8 <_realloc_r+0x308>
   48be0:	91bfff04 	addi	r6,r18,-4
   48be4:	30800968 	cmpgeui	r2,r6,37
   48be8:	10006e1e 	bne	r2,zero,48da4 <_realloc_r+0x3d4>
   48bec:	30800530 	cmpltui	r2,r6,20
   48bf0:	10004426 	beq	r2,zero,48d04 <_realloc_r+0x334>
   48bf4:	a005883a 	mov	r2,r20
   48bf8:	8007883a 	mov	r3,r16
   48bfc:	19000017 	ldw	r4,0(r3)
   48c00:	11000015 	stw	r4,0(r2)
   48c04:	19000117 	ldw	r4,4(r3)
   48c08:	11000115 	stw	r4,4(r2)
   48c0c:	18c00217 	ldw	r3,8(r3)
   48c10:	10c00215 	stw	r3,8(r2)
   48c14:	a809883a 	mov	r4,r21
   48c18:	800b883a 	mov	r5,r16
   48c1c:	00461a00 	call	461a0 <_free_r>
   48c20:	a809883a 	mov	r4,r21
   48c24:	004f3200 	call	4f320 <__malloc_unlock>
   48c28:	003fcd06 	br	48b60 <_realloc_r+0x190>
   48c2c:	300b883a 	mov	r5,r6
   48c30:	dfc00a17 	ldw	ra,40(sp)
   48c34:	df000917 	ldw	fp,36(sp)
   48c38:	ddc00817 	ldw	r23,32(sp)
   48c3c:	dd800717 	ldw	r22,28(sp)
   48c40:	dd400617 	ldw	r21,24(sp)
   48c44:	dd000517 	ldw	r20,20(sp)
   48c48:	dcc00417 	ldw	r19,16(sp)
   48c4c:	dc800317 	ldw	r18,12(sp)
   48c50:	dc400217 	ldw	r17,8(sp)
   48c54:	dc000117 	ldw	r16,4(sp)
   48c58:	dec00b04 	addi	sp,sp,44
   48c5c:	0046cd81 	jmpi	46cd8 <_malloc_r>
   48c60:	8ce6b03a 	or	r19,r17,r19
   48c64:	b4c00115 	stw	r19,4(r22)
   48c68:	b44b883a 	add	r5,r22,r17
   48c6c:	18c00054 	ori	r3,r3,1
   48c70:	28c00115 	stw	r3,4(r5)
   48c74:	10c00117 	ldw	r3,4(r2)
   48c78:	29400204 	addi	r5,r5,8
   48c7c:	a809883a 	mov	r4,r21
   48c80:	18c00054 	ori	r3,r3,1
   48c84:	10c00115 	stw	r3,4(r2)
   48c88:	00461a00 	call	461a0 <_free_r>
   48c8c:	003fb106 	br	48b54 <_realloc_r+0x184>
   48c90:	00ffff04 	movi	r3,-4
   48c94:	10c4703a 	and	r2,r2,r3
   48c98:	1487883a 	add	r3,r2,r18
   48c9c:	89800404 	addi	r6,r17,16
   48ca0:	19bf7716 	blt	r3,r6,48a80 <_realloc_r+0xb0>
   48ca4:	b46d883a 	add	r22,r22,r17
   48ca8:	1c45c83a 	sub	r2,r3,r17
   48cac:	bd800215 	stw	r22,8(r23)
   48cb0:	10800054 	ori	r2,r2,1
   48cb4:	b0800115 	stw	r2,4(r22)
   48cb8:	80bfff17 	ldw	r2,-4(r16)
   48cbc:	a809883a 	mov	r4,r21
   48cc0:	8029883a 	mov	r20,r16
   48cc4:	1080004c 	andi	r2,r2,1
   48cc8:	1444b03a 	or	r2,r2,r17
   48ccc:	80bfff15 	stw	r2,-4(r16)
   48cd0:	004f3200 	call	4f320 <__malloc_unlock>
   48cd4:	003fa206 	br	48b60 <_realloc_r+0x190>
   48cd8:	a0bfff17 	ldw	r2,-4(r20)
   48cdc:	00ffff04 	movi	r3,-4
   48ce0:	10c4703a 	and	r2,r2,r3
   48ce4:	90a5883a 	add	r18,r18,r2
   48ce8:	003f9006 	br	48b2c <_realloc_r+0x15c>
   48cec:	873ffe17 	ldw	fp,-8(r16)
   48cf0:	00bfff04 	movi	r2,-4
   48cf4:	b739c83a 	sub	fp,r22,fp
   48cf8:	e0c00117 	ldw	r3,4(fp)
   48cfc:	1886703a 	and	r3,r3,r2
   48d00:	003f6b06 	br	48ab0 <_realloc_r+0xe0>
   48d04:	80c00017 	ldw	r3,0(r16)
   48d08:	30800728 	cmpgeui	r2,r6,28
   48d0c:	a0c00015 	stw	r3,0(r20)
   48d10:	80c00117 	ldw	r3,4(r16)
   48d14:	a0c00115 	stw	r3,4(r20)
   48d18:	10004c1e 	bne	r2,zero,48e4c <_realloc_r+0x47c>
   48d1c:	80c00204 	addi	r3,r16,8
   48d20:	a0800204 	addi	r2,r20,8
   48d24:	003fb506 	br	48bfc <_realloc_r+0x22c>
   48d28:	20800317 	ldw	r2,12(r4)
   48d2c:	20c00217 	ldw	r3,8(r4)
   48d30:	91bfff04 	addi	r6,r18,-4
   48d34:	31400968 	cmpgeui	r5,r6,37
   48d38:	18800315 	stw	r2,12(r3)
   48d3c:	10c00215 	stw	r3,8(r2)
   48d40:	e0c00217 	ldw	r3,8(fp)
   48d44:	e0800317 	ldw	r2,12(fp)
   48d48:	e1000204 	addi	r4,fp,8
   48d4c:	18800315 	stw	r2,12(r3)
   48d50:	10c00215 	stw	r3,8(r2)
   48d54:	2800511e 	bne	r5,zero,48e9c <_realloc_r+0x4cc>
   48d58:	30800530 	cmpltui	r2,r6,20
   48d5c:	10004d1e 	bne	r2,zero,48e94 <_realloc_r+0x4c4>
   48d60:	80c00017 	ldw	r3,0(r16)
   48d64:	30800728 	cmpgeui	r2,r6,28
   48d68:	e0c00215 	stw	r3,8(fp)
   48d6c:	80c00117 	ldw	r3,4(r16)
   48d70:	e0c00315 	stw	r3,12(fp)
   48d74:	1000641e 	bne	r2,zero,48f08 <_realloc_r+0x538>
   48d78:	84000204 	addi	r16,r16,8
   48d7c:	e0800404 	addi	r2,fp,16
   48d80:	80c00017 	ldw	r3,0(r16)
   48d84:	3825883a 	mov	r18,r7
   48d88:	003f6006 	br	48b0c <_realloc_r+0x13c>
   48d8c:	20800317 	ldw	r2,12(r4)
   48d90:	21000217 	ldw	r4,8(r4)
   48d94:	1825883a 	mov	r18,r3
   48d98:	20800315 	stw	r2,12(r4)
   48d9c:	11000215 	stw	r4,8(r2)
   48da0:	003f6206 	br	48b2c <_realloc_r+0x15c>
   48da4:	800b883a 	mov	r5,r16
   48da8:	a009883a 	mov	r4,r20
   48dac:	004765c0 	call	4765c <memmove>
   48db0:	003f9806 	br	48c14 <_realloc_r+0x244>
   48db4:	88800404 	addi	r2,r17,16
   48db8:	38bf3d16 	blt	r7,r2,48ab0 <_realloc_r+0xe0>
   48dbc:	e0800317 	ldw	r2,12(fp)
   48dc0:	e0c00217 	ldw	r3,8(fp)
   48dc4:	91bfff04 	addi	r6,r18,-4
   48dc8:	31000968 	cmpgeui	r4,r6,37
   48dcc:	18800315 	stw	r2,12(r3)
   48dd0:	10c00215 	stw	r3,8(r2)
   48dd4:	e5000204 	addi	r20,fp,8
   48dd8:	2000561e 	bne	r4,zero,48f34 <_realloc_r+0x564>
   48ddc:	30800530 	cmpltui	r2,r6,20
   48de0:	1000521e 	bne	r2,zero,48f2c <_realloc_r+0x55c>
   48de4:	80c00017 	ldw	r3,0(r16)
   48de8:	30800728 	cmpgeui	r2,r6,28
   48dec:	e0c00215 	stw	r3,8(fp)
   48df0:	80c00117 	ldw	r3,4(r16)
   48df4:	e0c00315 	stw	r3,12(fp)
   48df8:	1000541e 	bne	r2,zero,48f4c <_realloc_r+0x57c>
   48dfc:	84000204 	addi	r16,r16,8
   48e00:	e0800404 	addi	r2,fp,16
   48e04:	80c00017 	ldw	r3,0(r16)
   48e08:	10c00015 	stw	r3,0(r2)
   48e0c:	80c00117 	ldw	r3,4(r16)
   48e10:	10c00115 	stw	r3,4(r2)
   48e14:	80c00217 	ldw	r3,8(r16)
   48e18:	10c00215 	stw	r3,8(r2)
   48e1c:	e447883a 	add	r3,fp,r17
   48e20:	3c45c83a 	sub	r2,r7,r17
   48e24:	b8c00215 	stw	r3,8(r23)
   48e28:	10800054 	ori	r2,r2,1
   48e2c:	18800115 	stw	r2,4(r3)
   48e30:	e0800117 	ldw	r2,4(fp)
   48e34:	a809883a 	mov	r4,r21
   48e38:	1080004c 	andi	r2,r2,1
   48e3c:	1444b03a 	or	r2,r2,r17
   48e40:	e0800115 	stw	r2,4(fp)
   48e44:	004f3200 	call	4f320 <__malloc_unlock>
   48e48:	003f4506 	br	48b60 <_realloc_r+0x190>
   48e4c:	80800217 	ldw	r2,8(r16)
   48e50:	31800920 	cmpeqi	r6,r6,36
   48e54:	a0800215 	stw	r2,8(r20)
   48e58:	80800317 	ldw	r2,12(r16)
   48e5c:	a0800315 	stw	r2,12(r20)
   48e60:	3000191e 	bne	r6,zero,48ec8 <_realloc_r+0x4f8>
   48e64:	80c00404 	addi	r3,r16,16
   48e68:	a0800404 	addi	r2,r20,16
   48e6c:	003f6306 	br	48bfc <_realloc_r+0x22c>
   48e70:	2005883a 	mov	r2,r4
   48e74:	003f2306 	br	48b04 <_realloc_r+0x134>
   48e78:	800b883a 	mov	r5,r16
   48e7c:	004765c0 	call	4765c <memmove>
   48e80:	1021883a 	mov	r16,r2
   48e84:	e4c00117 	ldw	r19,4(fp)
   48e88:	b825883a 	mov	r18,r23
   48e8c:	e02d883a 	mov	r22,fp
   48e90:	003f2606 	br	48b2c <_realloc_r+0x15c>
   48e94:	2005883a 	mov	r2,r4
   48e98:	003fb906 	br	48d80 <_realloc_r+0x3b0>
   48e9c:	800b883a 	mov	r5,r16
   48ea0:	d9c00015 	stw	r7,0(sp)
   48ea4:	004765c0 	call	4765c <memmove>
   48ea8:	d9c00017 	ldw	r7,0(sp)
   48eac:	1021883a 	mov	r16,r2
   48eb0:	e02d883a 	mov	r22,fp
   48eb4:	3825883a 	mov	r18,r7
   48eb8:	003f1c06 	br	48b2c <_realloc_r+0x15c>
   48ebc:	a809883a 	mov	r4,r21
   48ec0:	004f3200 	call	4f320 <__malloc_unlock>
   48ec4:	003f3706 	br	48ba4 <_realloc_r+0x1d4>
   48ec8:	81000417 	ldw	r4,16(r16)
   48ecc:	80c00604 	addi	r3,r16,24
   48ed0:	a0800604 	addi	r2,r20,24
   48ed4:	a1000415 	stw	r4,16(r20)
   48ed8:	81000517 	ldw	r4,20(r16)
   48edc:	a1000515 	stw	r4,20(r20)
   48ee0:	003f4606 	br	48bfc <_realloc_r+0x22c>
   48ee4:	80800217 	ldw	r2,8(r16)
   48ee8:	31800920 	cmpeqi	r6,r6,36
   48eec:	e0800415 	stw	r2,16(fp)
   48ef0:	80800317 	ldw	r2,12(r16)
   48ef4:	e0800515 	stw	r2,20(fp)
   48ef8:	30001d1e 	bne	r6,zero,48f70 <_realloc_r+0x5a0>
   48efc:	84000404 	addi	r16,r16,16
   48f00:	e0800604 	addi	r2,fp,24
   48f04:	003eff06 	br	48b04 <_realloc_r+0x134>
   48f08:	80800217 	ldw	r2,8(r16)
   48f0c:	31800920 	cmpeqi	r6,r6,36
   48f10:	e0800415 	stw	r2,16(fp)
   48f14:	80800317 	ldw	r2,12(r16)
   48f18:	e0800515 	stw	r2,20(fp)
   48f1c:	30001b1e 	bne	r6,zero,48f8c <_realloc_r+0x5bc>
   48f20:	84000404 	addi	r16,r16,16
   48f24:	e0800604 	addi	r2,fp,24
   48f28:	003f9506 	br	48d80 <_realloc_r+0x3b0>
   48f2c:	a005883a 	mov	r2,r20
   48f30:	003fb406 	br	48e04 <_realloc_r+0x434>
   48f34:	800b883a 	mov	r5,r16
   48f38:	a009883a 	mov	r4,r20
   48f3c:	d9c00015 	stw	r7,0(sp)
   48f40:	004765c0 	call	4765c <memmove>
   48f44:	d9c00017 	ldw	r7,0(sp)
   48f48:	003fb406 	br	48e1c <_realloc_r+0x44c>
   48f4c:	80800217 	ldw	r2,8(r16)
   48f50:	31800920 	cmpeqi	r6,r6,36
   48f54:	e0800415 	stw	r2,16(fp)
   48f58:	80800317 	ldw	r2,12(r16)
   48f5c:	e0800515 	stw	r2,20(fp)
   48f60:	3000111e 	bne	r6,zero,48fa8 <_realloc_r+0x5d8>
   48f64:	84000404 	addi	r16,r16,16
   48f68:	e0800604 	addi	r2,fp,24
   48f6c:	003fa506 	br	48e04 <_realloc_r+0x434>
   48f70:	80c00417 	ldw	r3,16(r16)
   48f74:	84000604 	addi	r16,r16,24
   48f78:	e0800804 	addi	r2,fp,32
   48f7c:	e0c00615 	stw	r3,24(fp)
   48f80:	80ffff17 	ldw	r3,-4(r16)
   48f84:	e0c00715 	stw	r3,28(fp)
   48f88:	003ede06 	br	48b04 <_realloc_r+0x134>
   48f8c:	80c00417 	ldw	r3,16(r16)
   48f90:	84000604 	addi	r16,r16,24
   48f94:	e0800804 	addi	r2,fp,32
   48f98:	e0c00615 	stw	r3,24(fp)
   48f9c:	80ffff17 	ldw	r3,-4(r16)
   48fa0:	e0c00715 	stw	r3,28(fp)
   48fa4:	003f7606 	br	48d80 <_realloc_r+0x3b0>
   48fa8:	80c00417 	ldw	r3,16(r16)
   48fac:	84000604 	addi	r16,r16,24
   48fb0:	e0800804 	addi	r2,fp,32
   48fb4:	e0c00615 	stw	r3,24(fp)
   48fb8:	80ffff17 	ldw	r3,-4(r16)
   48fbc:	e0c00715 	stw	r3,28(fp)
   48fc0:	003f9006 	br	48e04 <_realloc_r+0x434>

00048fc4 <_sbrk_r>:
   48fc4:	defffe04 	addi	sp,sp,-8
   48fc8:	dc000015 	stw	r16,0(sp)
   48fcc:	00800174 	movhi	r2,5
   48fd0:	2021883a 	mov	r16,r4
   48fd4:	2809883a 	mov	r4,r5
   48fd8:	dfc00115 	stw	ra,4(sp)
   48fdc:	10147815 	stw	zero,20960(r2)
   48fe0:	004f4d40 	call	4f4d4 <sbrk>
   48fe4:	10ffffd8 	cmpnei	r3,r2,-1
   48fe8:	18000426 	beq	r3,zero,48ffc <_sbrk_r+0x38>
   48fec:	dfc00117 	ldw	ra,4(sp)
   48ff0:	dc000017 	ldw	r16,0(sp)
   48ff4:	dec00204 	addi	sp,sp,8
   48ff8:	f800283a 	ret
   48ffc:	00c00174 	movhi	r3,5
   49000:	18d47817 	ldw	r3,20960(r3)
   49004:	183ff926 	beq	r3,zero,48fec <_sbrk_r+0x28>
   49008:	80c00015 	stw	r3,0(r16)
   4900c:	dfc00117 	ldw	ra,4(sp)
   49010:	dc000017 	ldw	r16,0(sp)
   49014:	dec00204 	addi	sp,sp,8
   49018:	f800283a 	ret

0004901c <__sread>:
   4901c:	defffe04 	addi	sp,sp,-8
   49020:	dc000015 	stw	r16,0(sp)
   49024:	2821883a 	mov	r16,r5
   49028:	2940038f 	ldh	r5,14(r5)
   4902c:	dfc00115 	stw	ra,4(sp)
   49030:	004adfc0 	call	4adfc <_read_r>
   49034:	10000716 	blt	r2,zero,49054 <__sread+0x38>
   49038:	80c01417 	ldw	r3,80(r16)
   4903c:	1887883a 	add	r3,r3,r2
   49040:	80c01415 	stw	r3,80(r16)
   49044:	dfc00117 	ldw	ra,4(sp)
   49048:	dc000017 	ldw	r16,0(sp)
   4904c:	dec00204 	addi	sp,sp,8
   49050:	f800283a 	ret
   49054:	80c0030b 	ldhu	r3,12(r16)
   49058:	18fbffcc 	andi	r3,r3,61439
   4905c:	80c0030d 	sth	r3,12(r16)
   49060:	dfc00117 	ldw	ra,4(sp)
   49064:	dc000017 	ldw	r16,0(sp)
   49068:	dec00204 	addi	sp,sp,8
   4906c:	f800283a 	ret

00049070 <__seofread>:
   49070:	0005883a 	mov	r2,zero
   49074:	f800283a 	ret

00049078 <__swrite>:
   49078:	2880030b 	ldhu	r2,12(r5)
   4907c:	defffb04 	addi	sp,sp,-20
   49080:	dcc00315 	stw	r19,12(sp)
   49084:	dc800215 	stw	r18,8(sp)
   49088:	dc400115 	stw	r17,4(sp)
   4908c:	dc000015 	stw	r16,0(sp)
   49090:	dfc00415 	stw	ra,16(sp)
   49094:	10c0400c 	andi	r3,r2,256
   49098:	2821883a 	mov	r16,r5
   4909c:	2023883a 	mov	r17,r4
   490a0:	3025883a 	mov	r18,r6
   490a4:	3827883a 	mov	r19,r7
   490a8:	18000d1e 	bne	r3,zero,490e0 <__swrite+0x68>
   490ac:	8140038f 	ldh	r5,14(r16)
   490b0:	10bbffcc 	andi	r2,r2,61439
   490b4:	980f883a 	mov	r7,r19
   490b8:	900d883a 	mov	r6,r18
   490bc:	8809883a 	mov	r4,r17
   490c0:	8080030d 	sth	r2,12(r16)
   490c4:	dfc00417 	ldw	ra,16(sp)
   490c8:	dcc00317 	ldw	r19,12(sp)
   490cc:	dc800217 	ldw	r18,8(sp)
   490d0:	dc400117 	ldw	r17,4(sp)
   490d4:	dc000017 	ldw	r16,0(sp)
   490d8:	dec00504 	addi	sp,sp,20
   490dc:	004a5b81 	jmpi	4a5b8 <_write_r>
   490e0:	2940038f 	ldh	r5,14(r5)
   490e4:	01c00084 	movi	r7,2
   490e8:	000d883a 	mov	r6,zero
   490ec:	004ad480 	call	4ad48 <_lseek_r>
   490f0:	8080030b 	ldhu	r2,12(r16)
   490f4:	003fed06 	br	490ac <__swrite+0x34>

000490f8 <__sseek>:
   490f8:	defffe04 	addi	sp,sp,-8
   490fc:	dc000015 	stw	r16,0(sp)
   49100:	2821883a 	mov	r16,r5
   49104:	2940038f 	ldh	r5,14(r5)
   49108:	dfc00115 	stw	ra,4(sp)
   4910c:	004ad480 	call	4ad48 <_lseek_r>
   49110:	10ffffd8 	cmpnei	r3,r2,-1
   49114:	18000826 	beq	r3,zero,49138 <__sseek+0x40>
   49118:	80c0030b 	ldhu	r3,12(r16)
   4911c:	80801415 	stw	r2,80(r16)
   49120:	18c40014 	ori	r3,r3,4096
   49124:	80c0030d 	sth	r3,12(r16)
   49128:	dfc00117 	ldw	ra,4(sp)
   4912c:	dc000017 	ldw	r16,0(sp)
   49130:	dec00204 	addi	sp,sp,8
   49134:	f800283a 	ret
   49138:	80c0030b 	ldhu	r3,12(r16)
   4913c:	18fbffcc 	andi	r3,r3,61439
   49140:	80c0030d 	sth	r3,12(r16)
   49144:	dfc00117 	ldw	ra,4(sp)
   49148:	dc000017 	ldw	r16,0(sp)
   4914c:	dec00204 	addi	sp,sp,8
   49150:	f800283a 	ret

00049154 <__sclose>:
   49154:	2940038f 	ldh	r5,14(r5)
   49158:	004a61c1 	jmpi	4a61c <_close_r>

0004915c <__sprint_r.part.0>:
   4915c:	28801917 	ldw	r2,100(r5)
   49160:	defff604 	addi	sp,sp,-40
   49164:	dcc00315 	stw	r19,12(sp)
   49168:	dfc00915 	stw	ra,36(sp)
   4916c:	df000815 	stw	fp,32(sp)
   49170:	ddc00715 	stw	r23,28(sp)
   49174:	dd800615 	stw	r22,24(sp)
   49178:	dd400515 	stw	r21,20(sp)
   4917c:	dd000415 	stw	r20,16(sp)
   49180:	dc800215 	stw	r18,8(sp)
   49184:	dc400115 	stw	r17,4(sp)
   49188:	dc000015 	stw	r16,0(sp)
   4918c:	1088000c 	andi	r2,r2,8192
   49190:	3027883a 	mov	r19,r6
   49194:	10002c26 	beq	r2,zero,49248 <__sprint_r.part.0+0xec>
   49198:	30800217 	ldw	r2,8(r6)
   4919c:	35000017 	ldw	r20,0(r6)
   491a0:	2821883a 	mov	r16,r5
   491a4:	2023883a 	mov	r17,r4
   491a8:	05bfff04 	movi	r22,-4
   491ac:	10002426 	beq	r2,zero,49240 <__sprint_r.part.0+0xe4>
   491b0:	a5400117 	ldw	r21,4(r20)
   491b4:	a5c00017 	ldw	r23,0(r20)
   491b8:	a824d0ba 	srli	r18,r21,2
   491bc:	90001b26 	beq	r18,zero,4922c <__sprint_r.part.0+0xd0>
   491c0:	0039883a 	mov	fp,zero
   491c4:	00000206 	br	491d0 <__sprint_r.part.0+0x74>
   491c8:	bdc00104 	addi	r23,r23,4
   491cc:	97001626 	beq	r18,fp,49228 <__sprint_r.part.0+0xcc>
   491d0:	b9400017 	ldw	r5,0(r23)
   491d4:	800d883a 	mov	r6,r16
   491d8:	8809883a 	mov	r4,r17
   491dc:	004ab000 	call	4ab00 <_fputwc_r>
   491e0:	10bfffe0 	cmpeqi	r2,r2,-1
   491e4:	e7000044 	addi	fp,fp,1
   491e8:	103ff726 	beq	r2,zero,491c8 <__sprint_r.part.0+0x6c>
   491ec:	00bfffc4 	movi	r2,-1
   491f0:	98000215 	stw	zero,8(r19)
   491f4:	98000115 	stw	zero,4(r19)
   491f8:	dfc00917 	ldw	ra,36(sp)
   491fc:	df000817 	ldw	fp,32(sp)
   49200:	ddc00717 	ldw	r23,28(sp)
   49204:	dd800617 	ldw	r22,24(sp)
   49208:	dd400517 	ldw	r21,20(sp)
   4920c:	dd000417 	ldw	r20,16(sp)
   49210:	dcc00317 	ldw	r19,12(sp)
   49214:	dc800217 	ldw	r18,8(sp)
   49218:	dc400117 	ldw	r17,4(sp)
   4921c:	dc000017 	ldw	r16,0(sp)
   49220:	dec00a04 	addi	sp,sp,40
   49224:	f800283a 	ret
   49228:	98800217 	ldw	r2,8(r19)
   4922c:	adaa703a 	and	r21,r21,r22
   49230:	1545c83a 	sub	r2,r2,r21
   49234:	98800215 	stw	r2,8(r19)
   49238:	a5000204 	addi	r20,r20,8
   4923c:	103fdc1e 	bne	r2,zero,491b0 <__sprint_r.part.0+0x54>
   49240:	0005883a 	mov	r2,zero
   49244:	003fea06 	br	491f0 <__sprint_r.part.0+0x94>
   49248:	00464a80 	call	464a8 <__sfvwrite_r>
   4924c:	003fe806 	br	491f0 <__sprint_r.part.0+0x94>

00049250 <__sprint_r>:
   49250:	30c00217 	ldw	r3,8(r6)
   49254:	18000126 	beq	r3,zero,4925c <__sprint_r+0xc>
   49258:	004915c1 	jmpi	4915c <__sprint_r.part.0>
   4925c:	30000115 	stw	zero,4(r6)
   49260:	0005883a 	mov	r2,zero
   49264:	f800283a 	ret

00049268 <___vfiprintf_internal_r>:
   49268:	deffcf04 	addi	sp,sp,-196
   4926c:	dd002b15 	stw	r20,172(sp)
   49270:	dc802915 	stw	r18,164(sp)
   49274:	dfc03015 	stw	ra,192(sp)
   49278:	df002f15 	stw	fp,188(sp)
   4927c:	ddc02e15 	stw	r23,184(sp)
   49280:	dd802d15 	stw	r22,180(sp)
   49284:	dd402c15 	stw	r21,176(sp)
   49288:	dcc02a15 	stw	r19,168(sp)
   4928c:	dc402815 	stw	r17,160(sp)
   49290:	dc002715 	stw	r16,156(sp)
   49294:	d9000015 	stw	r4,0(sp)
   49298:	d9c00315 	stw	r7,12(sp)
   4929c:	2825883a 	mov	r18,r5
   492a0:	3029883a 	mov	r20,r6
   492a4:	20000226 	beq	r4,zero,492b0 <___vfiprintf_internal_r+0x48>
   492a8:	20800e17 	ldw	r2,56(r4)
   492ac:	1001b526 	beq	r2,zero,49984 <___vfiprintf_internal_r+0x71c>
   492b0:	9080030b 	ldhu	r2,12(r18)
   492b4:	10c8000c 	andi	r3,r2,8192
   492b8:	1800071e 	bne	r3,zero,492d8 <___vfiprintf_internal_r+0x70>
   492bc:	90c01917 	ldw	r3,100(r18)
   492c0:	11080014 	ori	r4,r2,8192
   492c4:	00b7ffc4 	movi	r2,-8193
   492c8:	1886703a 	and	r3,r3,r2
   492cc:	9100030d 	sth	r4,12(r18)
   492d0:	2005883a 	mov	r2,r4
   492d4:	90c01915 	stw	r3,100(r18)
   492d8:	10c0020c 	andi	r3,r2,8
   492dc:	1800fd26 	beq	r3,zero,496d4 <___vfiprintf_internal_r+0x46c>
   492e0:	90c00417 	ldw	r3,16(r18)
   492e4:	1800fb26 	beq	r3,zero,496d4 <___vfiprintf_internal_r+0x46c>
   492e8:	1080068c 	andi	r2,r2,26
   492ec:	10800298 	cmpnei	r2,r2,10
   492f0:	10010026 	beq	r2,zero,496f4 <___vfiprintf_internal_r+0x48c>
   492f4:	dcc01704 	addi	r19,sp,92
   492f8:	05c00174 	movhi	r23,5
   492fc:	dcc00a15 	stw	r19,40(sp)
   49300:	d8000c15 	stw	zero,48(sp)
   49304:	d8000b15 	stw	zero,44(sp)
   49308:	9811883a 	mov	r8,r19
   4930c:	d8000515 	stw	zero,20(sp)
   49310:	d8000115 	stw	zero,4(sp)
   49314:	bdc5b904 	addi	r23,r23,5860
   49318:	a0800007 	ldb	r2,0(r20)
   4931c:	1000db26 	beq	r2,zero,4968c <___vfiprintf_internal_r+0x424>
   49320:	a021883a 	mov	r16,r20
   49324:	00000306 	br	49334 <___vfiprintf_internal_r+0xcc>
   49328:	80800047 	ldb	r2,1(r16)
   4932c:	84000044 	addi	r16,r16,1
   49330:	10011826 	beq	r2,zero,49794 <___vfiprintf_internal_r+0x52c>
   49334:	10800958 	cmpnei	r2,r2,37
   49338:	103ffb1e 	bne	r2,zero,49328 <___vfiprintf_internal_r+0xc0>
   4933c:	8523c83a 	sub	r17,r16,r20
   49340:	8501161e 	bne	r16,r20,4979c <___vfiprintf_internal_r+0x534>
   49344:	80800003 	ldbu	r2,0(r16)
   49348:	10803fcc 	andi	r2,r2,255
   4934c:	1080201c 	xori	r2,r2,128
   49350:	10bfe004 	addi	r2,r2,-128
   49354:	1000cd26 	beq	r2,zero,4968c <___vfiprintf_internal_r+0x424>
   49358:	80800047 	ldb	r2,1(r16)
   4935c:	85000044 	addi	r20,r16,1
   49360:	d8000945 	stb	zero,37(sp)
   49364:	027fffc4 	movi	r9,-1
   49368:	0023883a 	mov	r17,zero
   4936c:	0021883a 	mov	r16,zero
   49370:	a5000044 	addi	r20,r20,1
   49374:	10fff804 	addi	r3,r2,-32
   49378:	19001668 	cmpgeui	r4,r3,89
   4937c:	20006a1e 	bne	r4,zero,49528 <___vfiprintf_internal_r+0x2c0>
   49380:	180690ba 	slli	r3,r3,2
   49384:	01000174 	movhi	r4,5
   49388:	1909883a 	add	r4,r3,r4
   4938c:	20e4e517 	ldw	r3,-27756(r4)
   49390:	1800683a 	jmp	r3
   49394:	00049a28 	cmpgeui	zero,zero,4712
   49398:	00049528 	cmpgeui	zero,zero,4692
   4939c:	00049528 	cmpgeui	zero,zero,4692
   493a0:	00049a1c 	xori	zero,zero,4712
   493a4:	00049528 	cmpgeui	zero,zero,4692
   493a8:	00049528 	cmpgeui	zero,zero,4692
   493ac:	00049528 	cmpgeui	zero,zero,4692
   493b0:	00049528 	cmpgeui	zero,zero,4692
   493b4:	00049528 	cmpgeui	zero,zero,4692
   493b8:	00049528 	cmpgeui	zero,zero,4692
   493bc:	00049998 	cmpnei	zero,zero,4710
   493c0:	00049a0c 	andi	zero,zero,4712
   493c4:	00049528 	cmpgeui	zero,zero,4692
   493c8:	000499b0 	cmpltui	zero,zero,4710
   493cc:	000499bc 	xorhi	zero,zero,4710
   493d0:	00049528 	cmpgeui	zero,zero,4692
   493d4:	00049a00 	call	49a0 <__reset-0x3b660>
   493d8:	000494f8 	rdprs	zero,zero,4691
   493dc:	000494f8 	rdprs	zero,zero,4691
   493e0:	000494f8 	rdprs	zero,zero,4691
   493e4:	000494f8 	rdprs	zero,zero,4691
   493e8:	000494f8 	rdprs	zero,zero,4691
   493ec:	000494f8 	rdprs	zero,zero,4691
   493f0:	000494f8 	rdprs	zero,zero,4691
   493f4:	000494f8 	rdprs	zero,zero,4691
   493f8:	000494f8 	rdprs	zero,zero,4691
   493fc:	00049528 	cmpgeui	zero,zero,4692
   49400:	00049528 	cmpgeui	zero,zero,4692
   49404:	00049528 	cmpgeui	zero,zero,4692
   49408:	00049528 	cmpgeui	zero,zero,4692
   4940c:	00049528 	cmpgeui	zero,zero,4692
   49410:	00049528 	cmpgeui	zero,zero,4692
   49414:	00049528 	cmpgeui	zero,zero,4692
   49418:	00049528 	cmpgeui	zero,zero,4692
   4941c:	00049528 	cmpgeui	zero,zero,4692
   49420:	00049528 	cmpgeui	zero,zero,4692
   49424:	0004973c 	xorhi	zero,zero,4700
   49428:	00049528 	cmpgeui	zero,zero,4692
   4942c:	00049528 	cmpgeui	zero,zero,4692
   49430:	00049528 	cmpgeui	zero,zero,4692
   49434:	00049528 	cmpgeui	zero,zero,4692
   49438:	00049528 	cmpgeui	zero,zero,4692
   4943c:	00049528 	cmpgeui	zero,zero,4692
   49440:	00049528 	cmpgeui	zero,zero,4692
   49444:	00049528 	cmpgeui	zero,zero,4692
   49448:	00049528 	cmpgeui	zero,zero,4692
   4944c:	00049528 	cmpgeui	zero,zero,4692
   49450:	00049b44 	movi	zero,4717
   49454:	00049528 	cmpgeui	zero,zero,4692
   49458:	00049528 	cmpgeui	zero,zero,4692
   4945c:	00049528 	cmpgeui	zero,zero,4692
   49460:	00049528 	cmpgeui	zero,zero,4692
   49464:	00049528 	cmpgeui	zero,zero,4692
   49468:	00049ae0 	cmpeqi	zero,zero,4715
   4946c:	00049528 	cmpgeui	zero,zero,4692
   49470:	00049528 	cmpgeui	zero,zero,4692
   49474:	0004a2b8 	rdprs	zero,zero,4746
   49478:	00049528 	cmpgeui	zero,zero,4692
   4947c:	00049528 	cmpgeui	zero,zero,4692
   49480:	00049528 	cmpgeui	zero,zero,4692
   49484:	00049528 	cmpgeui	zero,zero,4692
   49488:	00049528 	cmpgeui	zero,zero,4692
   4948c:	00049528 	cmpgeui	zero,zero,4692
   49490:	00049528 	cmpgeui	zero,zero,4692
   49494:	00049528 	cmpgeui	zero,zero,4692
   49498:	00049528 	cmpgeui	zero,zero,4692
   4949c:	00049528 	cmpgeui	zero,zero,4692
   494a0:	00049ab8 	rdprs	zero,zero,4714
   494a4:	00049740 	call	4974 <__reset-0x3b68c>
   494a8:	00049528 	cmpgeui	zero,zero,4692
   494ac:	00049528 	cmpgeui	zero,zero,4692
   494b0:	00049528 	cmpgeui	zero,zero,4692
   494b4:	00049aac 	andhi	zero,zero,4714
   494b8:	00049740 	call	4974 <__reset-0x3b68c>
   494bc:	00049528 	cmpgeui	zero,zero,4692
   494c0:	00049528 	cmpgeui	zero,zero,4692
   494c4:	00049a98 	cmpnei	zero,zero,4714
   494c8:	00049528 	cmpgeui	zero,zero,4692
   494cc:	00049a68 	cmpgeui	zero,zero,4713
   494d0:	0004a314 	movui	zero,4748
   494d4:	00049c58 	cmpnei	zero,zero,4721
   494d8:	00049c4c 	andi	zero,zero,4721
   494dc:	00049528 	cmpgeui	zero,zero,4692
   494e0:	00049bf4 	movhi	zero,4719
   494e4:	00049528 	cmpgeui	zero,zero,4692
   494e8:	0004a2b0 	cmpltui	zero,zero,4746
   494ec:	00049528 	cmpgeui	zero,zero,4692
   494f0:	00049528 	cmpgeui	zero,zero,4692
   494f4:	0004a340 	call	4a34 <__reset-0x3b5cc>
   494f8:	0023883a 	mov	r17,zero
   494fc:	10fff404 	addi	r3,r2,-48
   49500:	a0800007 	ldb	r2,0(r20)
   49504:	8c4002a4 	muli	r17,r17,10
   49508:	a5000044 	addi	r20,r20,1
   4950c:	1c63883a 	add	r17,r3,r17
   49510:	10fff404 	addi	r3,r2,-48
   49514:	190002b0 	cmpltui	r4,r3,10
   49518:	203ff91e 	bne	r4,zero,49500 <___vfiprintf_internal_r+0x298>
   4951c:	10fff804 	addi	r3,r2,-32
   49520:	19001668 	cmpgeui	r4,r3,89
   49524:	203f9626 	beq	r4,zero,49380 <___vfiprintf_internal_r+0x118>
   49528:	10005826 	beq	r2,zero,4968c <___vfiprintf_internal_r+0x424>
   4952c:	d8800d05 	stb	r2,52(sp)
   49530:	d8000945 	stb	zero,37(sp)
   49534:	05800044 	movi	r22,1
   49538:	05400044 	movi	r21,1
   4953c:	df000d04 	addi	fp,sp,52
   49540:	0013883a 	mov	r9,zero
   49544:	8340008c 	andi	r13,r16,2
   49548:	68000126 	beq	r13,zero,49550 <___vfiprintf_internal_r+0x2e8>
   4954c:	b5800084 	addi	r22,r22,2
   49550:	d9000b17 	ldw	r4,44(sp)
   49554:	8300210c 	andi	r12,r16,132
   49558:	d8800c17 	ldw	r2,48(sp)
   4955c:	21800044 	addi	r6,r4,1
   49560:	300b883a 	mov	r5,r6
   49564:	6000021e 	bne	r12,zero,49570 <___vfiprintf_internal_r+0x308>
   49568:	8d87c83a 	sub	r3,r17,r22
   4956c:	00c28f16 	blt	zero,r3,49fac <___vfiprintf_internal_r+0xd44>
   49570:	d8c00947 	ldb	r3,37(sp)
   49574:	18000c26 	beq	r3,zero,495a8 <___vfiprintf_internal_r+0x340>
   49578:	d8c00944 	addi	r3,sp,37
   4957c:	10800044 	addi	r2,r2,1
   49580:	40c00015 	stw	r3,0(r8)
   49584:	00c00044 	movi	r3,1
   49588:	40c00115 	stw	r3,4(r8)
   4958c:	d8800c15 	stw	r2,48(sp)
   49590:	d9400b15 	stw	r5,44(sp)
   49594:	28c00208 	cmpgei	r3,r5,8
   49598:	1802681e 	bne	r3,zero,49f3c <___vfiprintf_internal_r+0xcd4>
   4959c:	2809883a 	mov	r4,r5
   495a0:	42000204 	addi	r8,r8,8
   495a4:	29400044 	addi	r5,r5,1
   495a8:	68001726 	beq	r13,zero,49608 <___vfiprintf_internal_r+0x3a0>
   495ac:	d8c00984 	addi	r3,sp,38
   495b0:	10800084 	addi	r2,r2,2
   495b4:	40c00015 	stw	r3,0(r8)
   495b8:	00c00084 	movi	r3,2
   495bc:	40c00115 	stw	r3,4(r8)
   495c0:	d8800c15 	stw	r2,48(sp)
   495c4:	d9400b15 	stw	r5,44(sp)
   495c8:	28c00208 	cmpgei	r3,r5,8
   495cc:	18027326 	beq	r3,zero,49f9c <___vfiprintf_internal_r+0xd34>
   495d0:	1002f626 	beq	r2,zero,4a1ac <___vfiprintf_internal_r+0xf44>
   495d4:	d9000017 	ldw	r4,0(sp)
   495d8:	d9800a04 	addi	r6,sp,40
   495dc:	900b883a 	mov	r5,r18
   495e0:	da400415 	stw	r9,16(sp)
   495e4:	db000215 	stw	r12,8(sp)
   495e8:	004915c0 	call	4915c <__sprint_r.part.0>
   495ec:	1000291e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   495f0:	d9000b17 	ldw	r4,44(sp)
   495f4:	d8800c17 	ldw	r2,48(sp)
   495f8:	da400417 	ldw	r9,16(sp)
   495fc:	db000217 	ldw	r12,8(sp)
   49600:	9811883a 	mov	r8,r19
   49604:	21400044 	addi	r5,r4,1
   49608:	63002018 	cmpnei	r12,r12,128
   4960c:	6001cf26 	beq	r12,zero,49d4c <___vfiprintf_internal_r+0xae4>
   49610:	4d53c83a 	sub	r9,r9,r21
   49614:	02420d16 	blt	zero,r9,49e4c <___vfiprintf_internal_r+0xbe4>
   49618:	a885883a 	add	r2,r21,r2
   4961c:	d9400b15 	stw	r5,44(sp)
   49620:	47000015 	stw	fp,0(r8)
   49624:	45400115 	stw	r21,4(r8)
   49628:	d8800c15 	stw	r2,48(sp)
   4962c:	29400208 	cmpgei	r5,r5,8
   49630:	2801c026 	beq	r5,zero,49d34 <___vfiprintf_internal_r+0xacc>
   49634:	10007126 	beq	r2,zero,497fc <___vfiprintf_internal_r+0x594>
   49638:	d9000017 	ldw	r4,0(sp)
   4963c:	d9800a04 	addi	r6,sp,40
   49640:	900b883a 	mov	r5,r18
   49644:	004915c0 	call	4915c <__sprint_r.part.0>
   49648:	1000121e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   4964c:	d8800c17 	ldw	r2,48(sp)
   49650:	9811883a 	mov	r8,r19
   49654:	8400010c 	andi	r16,r16,4
   49658:	80000226 	beq	r16,zero,49664 <___vfiprintf_internal_r+0x3fc>
   4965c:	8da1c83a 	sub	r16,r17,r22
   49660:	04006c16 	blt	zero,r16,49814 <___vfiprintf_internal_r+0x5ac>
   49664:	8d80010e 	bge	r17,r22,4966c <___vfiprintf_internal_r+0x404>
   49668:	b023883a 	mov	r17,r22
   4966c:	d8c00117 	ldw	r3,4(sp)
   49670:	1c47883a 	add	r3,r3,r17
   49674:	d8c00115 	stw	r3,4(sp)
   49678:	1002261e 	bne	r2,zero,49f14 <___vfiprintf_internal_r+0xcac>
   4967c:	a0800007 	ldb	r2,0(r20)
   49680:	d8000b15 	stw	zero,44(sp)
   49684:	9811883a 	mov	r8,r19
   49688:	103f251e 	bne	r2,zero,49320 <___vfiprintf_internal_r+0xb8>
   4968c:	d8800c17 	ldw	r2,48(sp)
   49690:	1003631e 	bne	r2,zero,4a420 <___vfiprintf_internal_r+0x11b8>
   49694:	9080030b 	ldhu	r2,12(r18)
   49698:	1080100c 	andi	r2,r2,64
   4969c:	1003741e 	bne	r2,zero,4a470 <___vfiprintf_internal_r+0x1208>
   496a0:	d8800117 	ldw	r2,4(sp)
   496a4:	dfc03017 	ldw	ra,192(sp)
   496a8:	df002f17 	ldw	fp,188(sp)
   496ac:	ddc02e17 	ldw	r23,184(sp)
   496b0:	dd802d17 	ldw	r22,180(sp)
   496b4:	dd402c17 	ldw	r21,176(sp)
   496b8:	dd002b17 	ldw	r20,172(sp)
   496bc:	dcc02a17 	ldw	r19,168(sp)
   496c0:	dc802917 	ldw	r18,164(sp)
   496c4:	dc402817 	ldw	r17,160(sp)
   496c8:	dc002717 	ldw	r16,156(sp)
   496cc:	dec03104 	addi	sp,sp,196
   496d0:	f800283a 	ret
   496d4:	d9000017 	ldw	r4,0(sp)
   496d8:	900b883a 	mov	r5,r18
   496dc:	0043ee40 	call	43ee4 <__swsetup_r>
   496e0:	1003631e 	bne	r2,zero,4a470 <___vfiprintf_internal_r+0x1208>
   496e4:	9080030b 	ldhu	r2,12(r18)
   496e8:	1080068c 	andi	r2,r2,26
   496ec:	10800298 	cmpnei	r2,r2,10
   496f0:	103f001e 	bne	r2,zero,492f4 <___vfiprintf_internal_r+0x8c>
   496f4:	9080038f 	ldh	r2,14(r18)
   496f8:	103efe16 	blt	r2,zero,492f4 <___vfiprintf_internal_r+0x8c>
   496fc:	d9c00317 	ldw	r7,12(sp)
   49700:	d9000017 	ldw	r4,0(sp)
   49704:	a00d883a 	mov	r6,r20
   49708:	900b883a 	mov	r5,r18
   4970c:	dfc03017 	ldw	ra,192(sp)
   49710:	df002f17 	ldw	fp,188(sp)
   49714:	ddc02e17 	ldw	r23,184(sp)
   49718:	dd802d17 	ldw	r22,180(sp)
   4971c:	dd402c17 	ldw	r21,176(sp)
   49720:	dd002b17 	ldw	r20,172(sp)
   49724:	dcc02a17 	ldw	r19,168(sp)
   49728:	dc802917 	ldw	r18,164(sp)
   4972c:	dc402817 	ldw	r17,160(sp)
   49730:	dc002717 	ldw	r16,156(sp)
   49734:	dec03104 	addi	sp,sp,196
   49738:	004a4f41 	jmpi	4a4f4 <__sbprintf>
   4973c:	84000414 	ori	r16,r16,16
   49740:	8080080c 	andi	r2,r16,32
   49744:	10006626 	beq	r2,zero,498e0 <___vfiprintf_internal_r+0x678>
   49748:	d8c00317 	ldw	r3,12(sp)
   4974c:	18800117 	ldw	r2,4(r3)
   49750:	1d800017 	ldw	r22,0(r3)
   49754:	18c00204 	addi	r3,r3,8
   49758:	d8c00315 	stw	r3,12(sp)
   4975c:	102b883a 	mov	r21,r2
   49760:	10006d16 	blt	r2,zero,49918 <___vfiprintf_internal_r+0x6b0>
   49764:	48bfffd8 	cmpnei	r2,r9,-1
   49768:	db000943 	ldbu	r12,37(sp)
   4976c:	10007526 	beq	r2,zero,49944 <___vfiprintf_internal_r+0x6dc>
   49770:	00ffdfc4 	movi	r3,-129
   49774:	b544b03a 	or	r2,r22,r21
   49778:	80e0703a 	and	r16,r16,r3
   4977c:	1000711e 	bne	r2,zero,49944 <___vfiprintf_internal_r+0x6dc>
   49780:	48033e1e 	bne	r9,zero,4a47c <___vfiprintf_internal_r+0x1214>
   49784:	002d883a 	mov	r22,zero
   49788:	002b883a 	mov	r21,zero
   4978c:	9839883a 	mov	fp,r19
   49790:	00007606 	br	4996c <___vfiprintf_internal_r+0x704>
   49794:	8523c83a 	sub	r17,r16,r20
   49798:	853fbc26 	beq	r16,r20,4968c <___vfiprintf_internal_r+0x424>
   4979c:	d8c00c17 	ldw	r3,48(sp)
   497a0:	d8800b17 	ldw	r2,44(sp)
   497a4:	45000015 	stw	r20,0(r8)
   497a8:	88c7883a 	add	r3,r17,r3
   497ac:	10800044 	addi	r2,r2,1
   497b0:	d8800b15 	stw	r2,44(sp)
   497b4:	44400115 	stw	r17,4(r8)
   497b8:	d8c00c15 	stw	r3,48(sp)
   497bc:	10800208 	cmpgei	r2,r2,8
   497c0:	1000061e 	bne	r2,zero,497dc <___vfiprintf_internal_r+0x574>
   497c4:	42000204 	addi	r8,r8,8
   497c8:	d8c00117 	ldw	r3,4(sp)
   497cc:	80800003 	ldbu	r2,0(r16)
   497d0:	1c47883a 	add	r3,r3,r17
   497d4:	d8c00115 	stw	r3,4(sp)
   497d8:	003edb06 	br	49348 <___vfiprintf_internal_r+0xe0>
   497dc:	18025226 	beq	r3,zero,4a128 <___vfiprintf_internal_r+0xec0>
   497e0:	d9000017 	ldw	r4,0(sp)
   497e4:	d9800a04 	addi	r6,sp,40
   497e8:	900b883a 	mov	r5,r18
   497ec:	004915c0 	call	4915c <__sprint_r.part.0>
   497f0:	103fa81e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   497f4:	9811883a 	mov	r8,r19
   497f8:	003ff306 	br	497c8 <___vfiprintf_internal_r+0x560>
   497fc:	d8000b15 	stw	zero,44(sp)
   49800:	8400010c 	andi	r16,r16,4
   49804:	80022426 	beq	r16,zero,4a098 <___vfiprintf_internal_r+0xe30>
   49808:	8da1c83a 	sub	r16,r17,r22
   4980c:	0402220e 	bge	zero,r16,4a098 <___vfiprintf_internal_r+0xe30>
   49810:	9811883a 	mov	r8,r19
   49814:	80c00450 	cmplti	r3,r16,17
   49818:	d9000b17 	ldw	r4,44(sp)
   4981c:	01c00174 	movhi	r7,5
   49820:	18030b1e 	bne	r3,zero,4a450 <___vfiprintf_internal_r+0x11e8>
   49824:	39c5bd04 	addi	r7,r7,5876
   49828:	05400404 	movi	r21,16
   4982c:	00000606 	br	49848 <___vfiprintf_internal_r+0x5e0>
   49830:	21400084 	addi	r5,r4,2
   49834:	42000204 	addi	r8,r8,8
   49838:	1809883a 	mov	r4,r3
   4983c:	843ffc04 	addi	r16,r16,-16
   49840:	80c00448 	cmpgei	r3,r16,17
   49844:	18001726 	beq	r3,zero,498a4 <___vfiprintf_internal_r+0x63c>
   49848:	20c00044 	addi	r3,r4,1
   4984c:	10800404 	addi	r2,r2,16
   49850:	41c00015 	stw	r7,0(r8)
   49854:	45400115 	stw	r21,4(r8)
   49858:	d8800c15 	stw	r2,48(sp)
   4985c:	d8c00b15 	stw	r3,44(sp)
   49860:	19400208 	cmpgei	r5,r3,8
   49864:	283ff226 	beq	r5,zero,49830 <___vfiprintf_internal_r+0x5c8>
   49868:	d9000017 	ldw	r4,0(sp)
   4986c:	d9800a04 	addi	r6,sp,40
   49870:	900b883a 	mov	r5,r18
   49874:	10013126 	beq	r2,zero,49d3c <___vfiprintf_internal_r+0xad4>
   49878:	d9c00215 	stw	r7,8(sp)
   4987c:	004915c0 	call	4915c <__sprint_r.part.0>
   49880:	103f841e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   49884:	d9000b17 	ldw	r4,44(sp)
   49888:	843ffc04 	addi	r16,r16,-16
   4988c:	80c00448 	cmpgei	r3,r16,17
   49890:	d8800c17 	ldw	r2,48(sp)
   49894:	d9c00217 	ldw	r7,8(sp)
   49898:	9811883a 	mov	r8,r19
   4989c:	21400044 	addi	r5,r4,1
   498a0:	183fe91e 	bne	r3,zero,49848 <___vfiprintf_internal_r+0x5e0>
   498a4:	1405883a 	add	r2,r2,r16
   498a8:	d9400b15 	stw	r5,44(sp)
   498ac:	41c00015 	stw	r7,0(r8)
   498b0:	44000115 	stw	r16,4(r8)
   498b4:	d8800c15 	stw	r2,48(sp)
   498b8:	29400210 	cmplti	r5,r5,8
   498bc:	283f691e 	bne	r5,zero,49664 <___vfiprintf_internal_r+0x3fc>
   498c0:	1001f526 	beq	r2,zero,4a098 <___vfiprintf_internal_r+0xe30>
   498c4:	d9000017 	ldw	r4,0(sp)
   498c8:	d9800a04 	addi	r6,sp,40
   498cc:	900b883a 	mov	r5,r18
   498d0:	004915c0 	call	4915c <__sprint_r.part.0>
   498d4:	103f6f1e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   498d8:	d8800c17 	ldw	r2,48(sp)
   498dc:	003f6106 	br	49664 <___vfiprintf_internal_r+0x3fc>
   498e0:	d8c00317 	ldw	r3,12(sp)
   498e4:	8080040c 	andi	r2,r16,16
   498e8:	1d800017 	ldw	r22,0(r3)
   498ec:	18c00104 	addi	r3,r3,4
   498f0:	d8c00315 	stw	r3,12(sp)
   498f4:	1000251e 	bne	r2,zero,4998c <___vfiprintf_internal_r+0x724>
   498f8:	8080100c 	andi	r2,r16,64
   498fc:	10002326 	beq	r2,zero,4998c <___vfiprintf_internal_r+0x724>
   49900:	b5bfffcc 	andi	r22,r22,65535
   49904:	b5a0001c 	xori	r22,r22,32768
   49908:	b5a00004 	addi	r22,r22,-32768
   4990c:	b02bd7fa 	srai	r21,r22,31
   49910:	a805883a 	mov	r2,r21
   49914:	103f930e 	bge	r2,zero,49764 <___vfiprintf_internal_r+0x4fc>
   49918:	00800b44 	movi	r2,45
   4991c:	b006c03a 	cmpne	r3,r22,zero
   49920:	056bc83a 	sub	r21,zero,r21
   49924:	d8800945 	stb	r2,37(sp)
   49928:	48bfffd8 	cmpnei	r2,r9,-1
   4992c:	a8ebc83a 	sub	r21,r21,r3
   49930:	05adc83a 	sub	r22,zero,r22
   49934:	10000226 	beq	r2,zero,49940 <___vfiprintf_internal_r+0x6d8>
   49938:	00bfdfc4 	movi	r2,-129
   4993c:	80a0703a 	and	r16,r16,r2
   49940:	03000b44 	movi	r12,45
   49944:	a800d41e 	bne	r21,zero,49c98 <___vfiprintf_internal_r+0xa30>
   49948:	b08002a8 	cmpgeui	r2,r22,10
   4994c:	1000d21e 	bne	r2,zero,49c98 <___vfiprintf_internal_r+0xa30>
   49950:	b5800c04 	addi	r22,r22,48
   49954:	dd8016c5 	stb	r22,91(sp)
   49958:	482d883a 	mov	r22,r9
   4995c:	02400116 	blt	zero,r9,49964 <___vfiprintf_internal_r+0x6fc>
   49960:	05800044 	movi	r22,1
   49964:	05400044 	movi	r21,1
   49968:	df0016c4 	addi	fp,sp,91
   4996c:	63003fcc 	andi	r12,r12,255
   49970:	6300201c 	xori	r12,r12,128
   49974:	633fe004 	addi	r12,r12,-128
   49978:	603ef226 	beq	r12,zero,49544 <___vfiprintf_internal_r+0x2dc>
   4997c:	b5800044 	addi	r22,r22,1
   49980:	003ef006 	br	49544 <___vfiprintf_internal_r+0x2dc>
   49984:	00460340 	call	46034 <__sinit>
   49988:	003e4906 	br	492b0 <___vfiprintf_internal_r+0x48>
   4998c:	b02bd7fa 	srai	r21,r22,31
   49990:	a805883a 	mov	r2,r21
   49994:	003f7206 	br	49760 <___vfiprintf_internal_r+0x4f8>
   49998:	d8800317 	ldw	r2,12(sp)
   4999c:	14400017 	ldw	r17,0(r2)
   499a0:	17000104 	addi	fp,r2,4
   499a4:	8802200e 	bge	r17,zero,4a228 <___vfiprintf_internal_r+0xfc0>
   499a8:	0463c83a 	sub	r17,zero,r17
   499ac:	df000315 	stw	fp,12(sp)
   499b0:	a0800007 	ldb	r2,0(r20)
   499b4:	84000114 	ori	r16,r16,4
   499b8:	003e6d06 	br	49370 <___vfiprintf_internal_r+0x108>
   499bc:	a0800007 	ldb	r2,0(r20)
   499c0:	a1000044 	addi	r4,r20,1
   499c4:	10c00aa0 	cmpeqi	r3,r2,42
   499c8:	1802b11e 	bne	r3,zero,4a490 <___vfiprintf_internal_r+0x1228>
   499cc:	10fff404 	addi	r3,r2,-48
   499d0:	194002b0 	cmpltui	r5,r3,10
   499d4:	2029883a 	mov	r20,r4
   499d8:	0013883a 	mov	r9,zero
   499dc:	283e6526 	beq	r5,zero,49374 <___vfiprintf_internal_r+0x10c>
   499e0:	a0800007 	ldb	r2,0(r20)
   499e4:	4a4002a4 	muli	r9,r9,10
   499e8:	a5000044 	addi	r20,r20,1
   499ec:	48d3883a 	add	r9,r9,r3
   499f0:	10fff404 	addi	r3,r2,-48
   499f4:	190002b0 	cmpltui	r4,r3,10
   499f8:	203ff91e 	bne	r4,zero,499e0 <___vfiprintf_internal_r+0x778>
   499fc:	003e5d06 	br	49374 <___vfiprintf_internal_r+0x10c>
   49a00:	a0800007 	ldb	r2,0(r20)
   49a04:	84002014 	ori	r16,r16,128
   49a08:	003e5906 	br	49370 <___vfiprintf_internal_r+0x108>
   49a0c:	00c00ac4 	movi	r3,43
   49a10:	a0800007 	ldb	r2,0(r20)
   49a14:	d8c00945 	stb	r3,37(sp)
   49a18:	003e5506 	br	49370 <___vfiprintf_internal_r+0x108>
   49a1c:	a0800007 	ldb	r2,0(r20)
   49a20:	84000054 	ori	r16,r16,1
   49a24:	003e5206 	br	49370 <___vfiprintf_internal_r+0x108>
   49a28:	d8c00947 	ldb	r3,37(sp)
   49a2c:	a0800003 	ldbu	r2,0(r20)
   49a30:	1800091e 	bne	r3,zero,49a58 <___vfiprintf_internal_r+0x7f0>
   49a34:	10803fcc 	andi	r2,r2,255
   49a38:	00c00804 	movi	r3,32
   49a3c:	1080201c 	xori	r2,r2,128
   49a40:	d8c00945 	stb	r3,37(sp)
   49a44:	10bfe004 	addi	r2,r2,-128
   49a48:	003e4906 	br	49370 <___vfiprintf_internal_r+0x108>
   49a4c:	a0800043 	ldbu	r2,1(r20)
   49a50:	84000814 	ori	r16,r16,32
   49a54:	a5000044 	addi	r20,r20,1
   49a58:	10803fcc 	andi	r2,r2,255
   49a5c:	1080201c 	xori	r2,r2,128
   49a60:	10bfe004 	addi	r2,r2,-128
   49a64:	003e4206 	br	49370 <___vfiprintf_internal_r+0x108>
   49a68:	8080080c 	andi	r2,r16,32
   49a6c:	1001f826 	beq	r2,zero,4a250 <___vfiprintf_internal_r+0xfe8>
   49a70:	d9000117 	ldw	r4,4(sp)
   49a74:	d8800317 	ldw	r2,12(sp)
   49a78:	2007d7fa 	srai	r3,r4,31
   49a7c:	10800017 	ldw	r2,0(r2)
   49a80:	11000015 	stw	r4,0(r2)
   49a84:	10c00115 	stw	r3,4(r2)
   49a88:	d8800317 	ldw	r2,12(sp)
   49a8c:	10800104 	addi	r2,r2,4
   49a90:	d8800315 	stw	r2,12(sp)
   49a94:	003e2006 	br	49318 <___vfiprintf_internal_r+0xb0>
   49a98:	a0800007 	ldb	r2,0(r20)
   49a9c:	10c01b18 	cmpnei	r3,r2,108
   49aa0:	183fea26 	beq	r3,zero,49a4c <___vfiprintf_internal_r+0x7e4>
   49aa4:	84000414 	ori	r16,r16,16
   49aa8:	003e3106 	br	49370 <___vfiprintf_internal_r+0x108>
   49aac:	a0800007 	ldb	r2,0(r20)
   49ab0:	84001014 	ori	r16,r16,64
   49ab4:	003e2e06 	br	49370 <___vfiprintf_internal_r+0x108>
   49ab8:	d8c00317 	ldw	r3,12(sp)
   49abc:	d8000945 	stb	zero,37(sp)
   49ac0:	05800044 	movi	r22,1
   49ac4:	18800017 	ldw	r2,0(r3)
   49ac8:	18c00104 	addi	r3,r3,4
   49acc:	d8c00315 	stw	r3,12(sp)
   49ad0:	d8800d05 	stb	r2,52(sp)
   49ad4:	05400044 	movi	r21,1
   49ad8:	df000d04 	addi	fp,sp,52
   49adc:	003e9806 	br	49540 <___vfiprintf_internal_r+0x2d8>
   49ae0:	80800414 	ori	r2,r16,16
   49ae4:	10c0080c 	andi	r3,r2,32
   49ae8:	18019126 	beq	r3,zero,4a130 <___vfiprintf_internal_r+0xec8>
   49aec:	d8c00317 	ldw	r3,12(sp)
   49af0:	d8000945 	stb	zero,37(sp)
   49af4:	1d800017 	ldw	r22,0(r3)
   49af8:	1d400117 	ldw	r21,4(r3)
   49afc:	18c00204 	addi	r3,r3,8
   49b00:	d8c00315 	stw	r3,12(sp)
   49b04:	48ffffd8 	cmpnei	r3,r9,-1
   49b08:	18019626 	beq	r3,zero,4a164 <___vfiprintf_internal_r+0xefc>
   49b0c:	00c00044 	movi	r3,1
   49b10:	043fdfc4 	movi	r16,-129
   49b14:	b548b03a 	or	r4,r22,r21
   49b18:	1420703a 	and	r16,r2,r16
   49b1c:	2000191e 	bne	r4,zero,49b84 <___vfiprintf_internal_r+0x91c>
   49b20:	4802221e 	bne	r9,zero,4a3ac <___vfiprintf_internal_r+0x1144>
   49b24:	1801bc1e 	bne	r3,zero,4a218 <___vfiprintf_internal_r+0xfb0>
   49b28:	1540004c 	andi	r21,r2,1
   49b2c:	a801c126 	beq	r21,zero,4a234 <___vfiprintf_internal_r+0xfcc>
   49b30:	00800c04 	movi	r2,48
   49b34:	d88016c5 	stb	r2,91(sp)
   49b38:	a82d883a 	mov	r22,r21
   49b3c:	df0016c4 	addi	fp,sp,91
   49b40:	003e8006 	br	49544 <___vfiprintf_internal_r+0x2dc>
   49b44:	80800414 	ori	r2,r16,16
   49b48:	10c0080c 	andi	r3,r2,32
   49b4c:	18018826 	beq	r3,zero,4a170 <___vfiprintf_internal_r+0xf08>
   49b50:	d8c00317 	ldw	r3,12(sp)
   49b54:	d8000945 	stb	zero,37(sp)
   49b58:	1d800017 	ldw	r22,0(r3)
   49b5c:	1d400117 	ldw	r21,4(r3)
   49b60:	18c00204 	addi	r3,r3,8
   49b64:	d8c00315 	stw	r3,12(sp)
   49b68:	48ffffd8 	cmpnei	r3,r9,-1
   49b6c:	18018d26 	beq	r3,zero,4a1a4 <___vfiprintf_internal_r+0xf3c>
   49b70:	043fdfc4 	movi	r16,-129
   49b74:	b548b03a 	or	r4,r22,r21
   49b78:	0007883a 	mov	r3,zero
   49b7c:	1420703a 	and	r16,r2,r16
   49b80:	203fe726 	beq	r4,zero,49b20 <___vfiprintf_internal_r+0x8b8>
   49b84:	18800060 	cmpeqi	r2,r3,1
   49b88:	1002511e 	bne	r2,zero,4a4d0 <___vfiprintf_internal_r+0x1268>
   49b8c:	18c000a0 	cmpeqi	r3,r3,2
   49b90:	1801481e 	bne	r3,zero,4a0b4 <___vfiprintf_internal_r+0xe4c>
   49b94:	9839883a 	mov	fp,r19
   49b98:	a808977a 	slli	r4,r21,29
   49b9c:	b006d0fa 	srli	r3,r22,3
   49ba0:	a82ad0fa 	srli	r21,r21,3
   49ba4:	b08001cc 	andi	r2,r22,7
   49ba8:	10800c04 	addi	r2,r2,48
   49bac:	20ecb03a 	or	r22,r4,r3
   49bb0:	e0bfffc5 	stb	r2,-1(fp)
   49bb4:	b546b03a 	or	r3,r22,r21
   49bb8:	e00b883a 	mov	r5,fp
   49bbc:	e73fffc4 	addi	fp,fp,-1
   49bc0:	183ff51e 	bne	r3,zero,49b98 <___vfiprintf_internal_r+0x930>
   49bc4:	80c0004c 	andi	r3,r16,1
   49bc8:	18014726 	beq	r3,zero,4a0e8 <___vfiprintf_internal_r+0xe80>
   49bcc:	10800c18 	cmpnei	r2,r2,48
   49bd0:	10014526 	beq	r2,zero,4a0e8 <___vfiprintf_internal_r+0xe80>
   49bd4:	297fff84 	addi	r5,r5,-2
   49bd8:	00800c04 	movi	r2,48
   49bdc:	e0bfffc5 	stb	r2,-1(fp)
   49be0:	996bc83a 	sub	r21,r19,r5
   49be4:	482d883a 	mov	r22,r9
   49be8:	4d41a616 	blt	r9,r21,4a284 <___vfiprintf_internal_r+0x101c>
   49bec:	2839883a 	mov	fp,r5
   49bf0:	003e5406 	br	49544 <___vfiprintf_internal_r+0x2dc>
   49bf4:	d8800317 	ldw	r2,12(sp)
   49bf8:	d8000945 	stb	zero,37(sp)
   49bfc:	17000017 	ldw	fp,0(r2)
   49c00:	10c00104 	addi	r3,r2,4
   49c04:	e001f026 	beq	fp,zero,4a3c8 <___vfiprintf_internal_r+0x1160>
   49c08:	48bfffe0 	cmpeqi	r2,r9,-1
   49c0c:	1001a01e 	bne	r2,zero,4a290 <___vfiprintf_internal_r+0x1028>
   49c10:	480d883a 	mov	r6,r9
   49c14:	000b883a 	mov	r5,zero
   49c18:	e009883a 	mov	r4,fp
   49c1c:	d8c00415 	stw	r3,16(sp)
   49c20:	da000315 	stw	r8,12(sp)
   49c24:	da400215 	stw	r9,8(sp)
   49c28:	004748c0 	call	4748c <memchr>
   49c2c:	da400217 	ldw	r9,8(sp)
   49c30:	da000317 	ldw	r8,12(sp)
   49c34:	d8c00417 	ldw	r3,16(sp)
   49c38:	1001fe26 	beq	r2,zero,4a434 <___vfiprintf_internal_r+0x11cc>
   49c3c:	172bc83a 	sub	r21,r2,fp
   49c40:	a82d883a 	mov	r22,r21
   49c44:	d8c00315 	stw	r3,12(sp)
   49c48:	003e3d06 	br	49540 <___vfiprintf_internal_r+0x2d8>
   49c4c:	a0800007 	ldb	r2,0(r20)
   49c50:	84000814 	ori	r16,r16,32
   49c54:	003dc606 	br	49370 <___vfiprintf_internal_r+0x108>
   49c58:	d9000317 	ldw	r4,12(sp)
   49c5c:	00de0c04 	movi	r3,30768
   49c60:	01400174 	movhi	r5,5
   49c64:	d8c0098d 	sth	r3,38(sp)
   49c68:	25800017 	ldw	r22,0(r4)
   49c6c:	20c00104 	addi	r3,r4,4
   49c70:	d8c00315 	stw	r3,12(sp)
   49c74:	28c53904 	addi	r3,r5,5348
   49c78:	002b883a 	mov	r21,zero
   49c7c:	80800094 	ori	r2,r16,2
   49c80:	d8c00515 	stw	r3,20(sp)
   49c84:	d8000945 	stb	zero,37(sp)
   49c88:	48ffffd8 	cmpnei	r3,r9,-1
   49c8c:	18010826 	beq	r3,zero,4a0b0 <___vfiprintf_internal_r+0xe48>
   49c90:	00c00084 	movi	r3,2
   49c94:	003f9e06 	br	49b10 <___vfiprintf_internal_r+0x8a8>
   49c98:	9839883a 	mov	fp,r19
   49c9c:	b009883a 	mov	r4,r22
   49ca0:	a80b883a 	mov	r5,r21
   49ca4:	01800284 	movi	r6,10
   49ca8:	000f883a 	mov	r7,zero
   49cac:	db000615 	stw	r12,24(sp)
   49cb0:	da000415 	stw	r8,16(sp)
   49cb4:	da400215 	stw	r9,8(sp)
   49cb8:	004bc380 	call	4bc38 <__umoddi3>
   49cbc:	10800c04 	addi	r2,r2,48
   49cc0:	b009883a 	mov	r4,r22
   49cc4:	a80b883a 	mov	r5,r21
   49cc8:	e0bfffc5 	stb	r2,-1(fp)
   49ccc:	01800284 	movi	r6,10
   49cd0:	000f883a 	mov	r7,zero
   49cd4:	004b6e80 	call	4b6e8 <__udivdi3>
   49cd8:	a809883a 	mov	r4,r21
   49cdc:	b00b883a 	mov	r5,r22
   49ce0:	da400217 	ldw	r9,8(sp)
   49ce4:	da000417 	ldw	r8,16(sp)
   49ce8:	db000617 	ldw	r12,24(sp)
   49cec:	e73fffc4 	addi	fp,fp,-1
   49cf0:	102d883a 	mov	r22,r2
   49cf4:	182b883a 	mov	r21,r3
   49cf8:	203fe81e 	bne	r4,zero,49c9c <___vfiprintf_internal_r+0xa34>
   49cfc:	294002a8 	cmpgeui	r5,r5,10
   49d00:	283fe61e 	bne	r5,zero,49c9c <___vfiprintf_internal_r+0xa34>
   49d04:	9f2bc83a 	sub	r21,r19,fp
   49d08:	482d883a 	mov	r22,r9
   49d0c:	4d7f170e 	bge	r9,r21,4996c <___vfiprintf_internal_r+0x704>
   49d10:	a82d883a 	mov	r22,r21
   49d14:	003f1506 	br	4996c <___vfiprintf_internal_r+0x704>
   49d18:	00c00044 	movi	r3,1
   49d1c:	a805883a 	mov	r2,r21
   49d20:	df001715 	stw	fp,92(sp)
   49d24:	dd401815 	stw	r21,96(sp)
   49d28:	dd400c15 	stw	r21,48(sp)
   49d2c:	d8c00b15 	stw	r3,44(sp)
   49d30:	9811883a 	mov	r8,r19
   49d34:	42000204 	addi	r8,r8,8
   49d38:	003e4606 	br	49654 <___vfiprintf_internal_r+0x3ec>
   49d3c:	01400044 	movi	r5,1
   49d40:	0009883a 	mov	r4,zero
   49d44:	9811883a 	mov	r8,r19
   49d48:	003ebc06 	br	4983c <___vfiprintf_internal_r+0x5d4>
   49d4c:	8d8fc83a 	sub	r7,r17,r22
   49d50:	01fe2f0e 	bge	zero,r7,49610 <___vfiprintf_internal_r+0x3a8>
   49d54:	38c00450 	cmplti	r3,r7,17
   49d58:	1801c01e 	bne	r3,zero,4a45c <___vfiprintf_internal_r+0x11f4>
   49d5c:	00c00174 	movhi	r3,5
   49d60:	18c5b904 	addi	r3,r3,5860
   49d64:	d8c00415 	stw	r3,16(sp)
   49d68:	03000404 	movi	r12,16
   49d6c:	00000606 	br	49d88 <___vfiprintf_internal_r+0xb20>
   49d70:	21800084 	addi	r6,r4,2
   49d74:	42000204 	addi	r8,r8,8
   49d78:	1809883a 	mov	r4,r3
   49d7c:	39fffc04 	addi	r7,r7,-16
   49d80:	38c00448 	cmpgei	r3,r7,17
   49d84:	18001b26 	beq	r3,zero,49df4 <___vfiprintf_internal_r+0xb8c>
   49d88:	d9400417 	ldw	r5,16(sp)
   49d8c:	20c00044 	addi	r3,r4,1
   49d90:	10800404 	addi	r2,r2,16
   49d94:	41400015 	stw	r5,0(r8)
   49d98:	43000115 	stw	r12,4(r8)
   49d9c:	d8800c15 	stw	r2,48(sp)
   49da0:	d8c00b15 	stw	r3,44(sp)
   49da4:	19400208 	cmpgei	r5,r3,8
   49da8:	283ff126 	beq	r5,zero,49d70 <___vfiprintf_internal_r+0xb08>
   49dac:	d9000017 	ldw	r4,0(sp)
   49db0:	d9800a04 	addi	r6,sp,40
   49db4:	900b883a 	mov	r5,r18
   49db8:	10005c26 	beq	r2,zero,49f2c <___vfiprintf_internal_r+0xcc4>
   49dbc:	d9c00615 	stw	r7,24(sp)
   49dc0:	da400215 	stw	r9,8(sp)
   49dc4:	004915c0 	call	4915c <__sprint_r.part.0>
   49dc8:	103e321e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   49dcc:	d9c00617 	ldw	r7,24(sp)
   49dd0:	d9000b17 	ldw	r4,44(sp)
   49dd4:	d8800c17 	ldw	r2,48(sp)
   49dd8:	39fffc04 	addi	r7,r7,-16
   49ddc:	38c00448 	cmpgei	r3,r7,17
   49de0:	da400217 	ldw	r9,8(sp)
   49de4:	9811883a 	mov	r8,r19
   49de8:	21800044 	addi	r6,r4,1
   49dec:	03000404 	movi	r12,16
   49df0:	183fe51e 	bne	r3,zero,49d88 <___vfiprintf_internal_r+0xb20>
   49df4:	d8c00417 	ldw	r3,16(sp)
   49df8:	11c5883a 	add	r2,r2,r7
   49dfc:	41c00115 	stw	r7,4(r8)
   49e00:	40c00015 	stw	r3,0(r8)
   49e04:	d8800c15 	stw	r2,48(sp)
   49e08:	d9800b15 	stw	r6,44(sp)
   49e0c:	30c00208 	cmpgei	r3,r6,8
   49e10:	18010b26 	beq	r3,zero,4a240 <___vfiprintf_internal_r+0xfd8>
   49e14:	10017826 	beq	r2,zero,4a3f8 <___vfiprintf_internal_r+0x1190>
   49e18:	d9000017 	ldw	r4,0(sp)
   49e1c:	d9800a04 	addi	r6,sp,40
   49e20:	900b883a 	mov	r5,r18
   49e24:	da400215 	stw	r9,8(sp)
   49e28:	004915c0 	call	4915c <__sprint_r.part.0>
   49e2c:	103e191e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   49e30:	da400217 	ldw	r9,8(sp)
   49e34:	d9000b17 	ldw	r4,44(sp)
   49e38:	d8800c17 	ldw	r2,48(sp)
   49e3c:	4d53c83a 	sub	r9,r9,r21
   49e40:	9811883a 	mov	r8,r19
   49e44:	21400044 	addi	r5,r4,1
   49e48:	027df30e 	bge	zero,r9,49618 <___vfiprintf_internal_r+0x3b0>
   49e4c:	48c00450 	cmplti	r3,r9,17
   49e50:	1801651e 	bne	r3,zero,4a3e8 <___vfiprintf_internal_r+0x1180>
   49e54:	ddc00415 	stw	r23,16(sp)
   49e58:	01c00404 	movi	r7,16
   49e5c:	00000606 	br	49e78 <___vfiprintf_internal_r+0xc10>
   49e60:	21400084 	addi	r5,r4,2
   49e64:	42000204 	addi	r8,r8,8
   49e68:	1809883a 	mov	r4,r3
   49e6c:	4a7ffc04 	addi	r9,r9,-16
   49e70:	48c00448 	cmpgei	r3,r9,17
   49e74:	18001826 	beq	r3,zero,49ed8 <___vfiprintf_internal_r+0xc70>
   49e78:	20c00044 	addi	r3,r4,1
   49e7c:	10800404 	addi	r2,r2,16
   49e80:	45c00015 	stw	r23,0(r8)
   49e84:	41c00115 	stw	r7,4(r8)
   49e88:	d8800c15 	stw	r2,48(sp)
   49e8c:	d8c00b15 	stw	r3,44(sp)
   49e90:	19400208 	cmpgei	r5,r3,8
   49e94:	283ff226 	beq	r5,zero,49e60 <___vfiprintf_internal_r+0xbf8>
   49e98:	d9000017 	ldw	r4,0(sp)
   49e9c:	d9800a04 	addi	r6,sp,40
   49ea0:	900b883a 	mov	r5,r18
   49ea4:	10001726 	beq	r2,zero,49f04 <___vfiprintf_internal_r+0xc9c>
   49ea8:	da400215 	stw	r9,8(sp)
   49eac:	004915c0 	call	4915c <__sprint_r.part.0>
   49eb0:	103df81e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   49eb4:	da400217 	ldw	r9,8(sp)
   49eb8:	d9000b17 	ldw	r4,44(sp)
   49ebc:	d8800c17 	ldw	r2,48(sp)
   49ec0:	4a7ffc04 	addi	r9,r9,-16
   49ec4:	48c00448 	cmpgei	r3,r9,17
   49ec8:	9811883a 	mov	r8,r19
   49ecc:	21400044 	addi	r5,r4,1
   49ed0:	01c00404 	movi	r7,16
   49ed4:	183fe81e 	bne	r3,zero,49e78 <___vfiprintf_internal_r+0xc10>
   49ed8:	d8c00417 	ldw	r3,16(sp)
   49edc:	1245883a 	add	r2,r2,r9
   49ee0:	42400115 	stw	r9,4(r8)
   49ee4:	40c00015 	stw	r3,0(r8)
   49ee8:	d8800c15 	stw	r2,48(sp)
   49eec:	d9400b15 	stw	r5,44(sp)
   49ef0:	28c00208 	cmpgei	r3,r5,8
   49ef4:	1800811e 	bne	r3,zero,4a0fc <___vfiprintf_internal_r+0xe94>
   49ef8:	42000204 	addi	r8,r8,8
   49efc:	29400044 	addi	r5,r5,1
   49f00:	003dc506 	br	49618 <___vfiprintf_internal_r+0x3b0>
   49f04:	01400044 	movi	r5,1
   49f08:	0009883a 	mov	r4,zero
   49f0c:	9811883a 	mov	r8,r19
   49f10:	003fd606 	br	49e6c <___vfiprintf_internal_r+0xc04>
   49f14:	d9000017 	ldw	r4,0(sp)
   49f18:	d9800a04 	addi	r6,sp,40
   49f1c:	900b883a 	mov	r5,r18
   49f20:	004915c0 	call	4915c <__sprint_r.part.0>
   49f24:	103dd526 	beq	r2,zero,4967c <___vfiprintf_internal_r+0x414>
   49f28:	003dda06 	br	49694 <___vfiprintf_internal_r+0x42c>
   49f2c:	01800044 	movi	r6,1
   49f30:	0009883a 	mov	r4,zero
   49f34:	9811883a 	mov	r8,r19
   49f38:	003f9006 	br	49d7c <___vfiprintf_internal_r+0xb14>
   49f3c:	10001026 	beq	r2,zero,49f80 <___vfiprintf_internal_r+0xd18>
   49f40:	d9000017 	ldw	r4,0(sp)
   49f44:	d9800a04 	addi	r6,sp,40
   49f48:	900b883a 	mov	r5,r18
   49f4c:	da400615 	stw	r9,24(sp)
   49f50:	db000415 	stw	r12,16(sp)
   49f54:	db400215 	stw	r13,8(sp)
   49f58:	004915c0 	call	4915c <__sprint_r.part.0>
   49f5c:	103dcd1e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   49f60:	d9000b17 	ldw	r4,44(sp)
   49f64:	d8800c17 	ldw	r2,48(sp)
   49f68:	da400617 	ldw	r9,24(sp)
   49f6c:	db000417 	ldw	r12,16(sp)
   49f70:	db400217 	ldw	r13,8(sp)
   49f74:	9811883a 	mov	r8,r19
   49f78:	21400044 	addi	r5,r4,1
   49f7c:	003d8a06 	br	495a8 <___vfiprintf_internal_r+0x340>
   49f80:	6800bc26 	beq	r13,zero,4a274 <___vfiprintf_internal_r+0x100c>
   49f84:	d8800984 	addi	r2,sp,38
   49f88:	d8801715 	stw	r2,92(sp)
   49f8c:	00800084 	movi	r2,2
   49f90:	d8801815 	stw	r2,96(sp)
   49f94:	01400044 	movi	r5,1
   49f98:	9811883a 	mov	r8,r19
   49f9c:	2809883a 	mov	r4,r5
   49fa0:	42000204 	addi	r8,r8,8
   49fa4:	29400044 	addi	r5,r5,1
   49fa8:	003d9706 	br	49608 <___vfiprintf_internal_r+0x3a0>
   49fac:	19400450 	cmplti	r5,r3,17
   49fb0:	01c00174 	movhi	r7,5
   49fb4:	2801231e 	bne	r5,zero,4a444 <___vfiprintf_internal_r+0x11dc>
   49fb8:	39c5bd04 	addi	r7,r7,5876
   49fbc:	03800404 	movi	r14,16
   49fc0:	00000706 	br	49fe0 <___vfiprintf_internal_r+0xd78>
   49fc4:	23c00084 	addi	r15,r4,2
   49fc8:	42000204 	addi	r8,r8,8
   49fcc:	3009883a 	mov	r4,r6
   49fd0:	18fffc04 	addi	r3,r3,-16
   49fd4:	19400448 	cmpgei	r5,r3,17
   49fd8:	28002026 	beq	r5,zero,4a05c <___vfiprintf_internal_r+0xdf4>
   49fdc:	21800044 	addi	r6,r4,1
   49fe0:	10800404 	addi	r2,r2,16
   49fe4:	41c00015 	stw	r7,0(r8)
   49fe8:	43800115 	stw	r14,4(r8)
   49fec:	d8800c15 	stw	r2,48(sp)
   49ff0:	d9800b15 	stw	r6,44(sp)
   49ff4:	31400208 	cmpgei	r5,r6,8
   49ff8:	283ff226 	beq	r5,zero,49fc4 <___vfiprintf_internal_r+0xd5c>
   49ffc:	d9000017 	ldw	r4,0(sp)
   4a000:	d9800a04 	addi	r6,sp,40
   4a004:	900b883a 	mov	r5,r18
   4a008:	10001f26 	beq	r2,zero,4a088 <___vfiprintf_internal_r+0xe20>
   4a00c:	d9c00815 	stw	r7,32(sp)
   4a010:	d8c00715 	stw	r3,28(sp)
   4a014:	da400615 	stw	r9,24(sp)
   4a018:	db000415 	stw	r12,16(sp)
   4a01c:	db400215 	stw	r13,8(sp)
   4a020:	004915c0 	call	4915c <__sprint_r.part.0>
   4a024:	103d9b1e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   4a028:	d8c00717 	ldw	r3,28(sp)
   4a02c:	d9000b17 	ldw	r4,44(sp)
   4a030:	d8800c17 	ldw	r2,48(sp)
   4a034:	18fffc04 	addi	r3,r3,-16
   4a038:	19400448 	cmpgei	r5,r3,17
   4a03c:	d9c00817 	ldw	r7,32(sp)
   4a040:	da400617 	ldw	r9,24(sp)
   4a044:	db000417 	ldw	r12,16(sp)
   4a048:	db400217 	ldw	r13,8(sp)
   4a04c:	9811883a 	mov	r8,r19
   4a050:	23c00044 	addi	r15,r4,1
   4a054:	03800404 	movi	r14,16
   4a058:	283fe01e 	bne	r5,zero,49fdc <___vfiprintf_internal_r+0xd74>
   4a05c:	10c5883a 	add	r2,r2,r3
   4a060:	40c00115 	stw	r3,4(r8)
   4a064:	41c00015 	stw	r7,0(r8)
   4a068:	d8800c15 	stw	r2,48(sp)
   4a06c:	dbc00b15 	stw	r15,44(sp)
   4a070:	78c00208 	cmpgei	r3,r15,8
   4a074:	1800511e 	bne	r3,zero,4a1bc <___vfiprintf_internal_r+0xf54>
   4a078:	42000204 	addi	r8,r8,8
   4a07c:	79400044 	addi	r5,r15,1
   4a080:	7809883a 	mov	r4,r15
   4a084:	003d3a06 	br	49570 <___vfiprintf_internal_r+0x308>
   4a088:	0009883a 	mov	r4,zero
   4a08c:	03c00044 	movi	r15,1
   4a090:	9811883a 	mov	r8,r19
   4a094:	003fce06 	br	49fd0 <___vfiprintf_internal_r+0xd68>
   4a098:	8d80010e 	bge	r17,r22,4a0a0 <___vfiprintf_internal_r+0xe38>
   4a09c:	b023883a 	mov	r17,r22
   4a0a0:	d8800117 	ldw	r2,4(sp)
   4a0a4:	1445883a 	add	r2,r2,r17
   4a0a8:	d8800115 	stw	r2,4(sp)
   4a0ac:	003d7306 	br	4967c <___vfiprintf_internal_r+0x414>
   4a0b0:	1021883a 	mov	r16,r2
   4a0b4:	9839883a 	mov	fp,r19
   4a0b8:	d9000517 	ldw	r4,20(sp)
   4a0bc:	b08003cc 	andi	r2,r22,15
   4a0c0:	a806973a 	slli	r3,r21,28
   4a0c4:	b02cd13a 	srli	r22,r22,4
   4a0c8:	2085883a 	add	r2,r4,r2
   4a0cc:	10800003 	ldbu	r2,0(r2)
   4a0d0:	a82ad13a 	srli	r21,r21,4
   4a0d4:	1dacb03a 	or	r22,r3,r22
   4a0d8:	e0bfffc5 	stb	r2,-1(fp)
   4a0dc:	b544b03a 	or	r2,r22,r21
   4a0e0:	e73fffc4 	addi	fp,fp,-1
   4a0e4:	103ff41e 	bne	r2,zero,4a0b8 <___vfiprintf_internal_r+0xe50>
   4a0e8:	9f2bc83a 	sub	r21,r19,fp
   4a0ec:	482d883a 	mov	r22,r9
   4a0f0:	4d7d140e 	bge	r9,r21,49544 <___vfiprintf_internal_r+0x2dc>
   4a0f4:	a82d883a 	mov	r22,r21
   4a0f8:	003d1206 	br	49544 <___vfiprintf_internal_r+0x2dc>
   4a0fc:	103f0626 	beq	r2,zero,49d18 <___vfiprintf_internal_r+0xab0>
   4a100:	d9000017 	ldw	r4,0(sp)
   4a104:	d9800a04 	addi	r6,sp,40
   4a108:	900b883a 	mov	r5,r18
   4a10c:	004915c0 	call	4915c <__sprint_r.part.0>
   4a110:	103d601e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   4a114:	d9400b17 	ldw	r5,44(sp)
   4a118:	d8800c17 	ldw	r2,48(sp)
   4a11c:	9811883a 	mov	r8,r19
   4a120:	29400044 	addi	r5,r5,1
   4a124:	003d3c06 	br	49618 <___vfiprintf_internal_r+0x3b0>
   4a128:	d8000b15 	stw	zero,44(sp)
   4a12c:	003db106 	br	497f4 <___vfiprintf_internal_r+0x58c>
   4a130:	d9000317 	ldw	r4,12(sp)
   4a134:	10c0040c 	andi	r3,r2,16
   4a138:	25800017 	ldw	r22,0(r4)
   4a13c:	21000104 	addi	r4,r4,4
   4a140:	d9000315 	stw	r4,12(sp)
   4a144:	1800031e 	bne	r3,zero,4a154 <___vfiprintf_internal_r+0xeec>
   4a148:	10c0100c 	andi	r3,r2,64
   4a14c:	18000126 	beq	r3,zero,4a154 <___vfiprintf_internal_r+0xeec>
   4a150:	b5bfffcc 	andi	r22,r22,65535
   4a154:	d8000945 	stb	zero,37(sp)
   4a158:	48ffffd8 	cmpnei	r3,r9,-1
   4a15c:	002b883a 	mov	r21,zero
   4a160:	183e6a1e 	bne	r3,zero,49b0c <___vfiprintf_internal_r+0x8a4>
   4a164:	1021883a 	mov	r16,r2
   4a168:	0019883a 	mov	r12,zero
   4a16c:	003df506 	br	49944 <___vfiprintf_internal_r+0x6dc>
   4a170:	d9000317 	ldw	r4,12(sp)
   4a174:	10c0040c 	andi	r3,r2,16
   4a178:	25800017 	ldw	r22,0(r4)
   4a17c:	21000104 	addi	r4,r4,4
   4a180:	d9000315 	stw	r4,12(sp)
   4a184:	1800031e 	bne	r3,zero,4a194 <___vfiprintf_internal_r+0xf2c>
   4a188:	10c0100c 	andi	r3,r2,64
   4a18c:	18000126 	beq	r3,zero,4a194 <___vfiprintf_internal_r+0xf2c>
   4a190:	b5bfffcc 	andi	r22,r22,65535
   4a194:	d8000945 	stb	zero,37(sp)
   4a198:	48ffffd8 	cmpnei	r3,r9,-1
   4a19c:	002b883a 	mov	r21,zero
   4a1a0:	183e731e 	bne	r3,zero,49b70 <___vfiprintf_internal_r+0x908>
   4a1a4:	1021883a 	mov	r16,r2
   4a1a8:	003e7a06 	br	49b94 <___vfiprintf_internal_r+0x92c>
   4a1ac:	01400044 	movi	r5,1
   4a1b0:	0009883a 	mov	r4,zero
   4a1b4:	9811883a 	mov	r8,r19
   4a1b8:	003d1306 	br	49608 <___vfiprintf_internal_r+0x3a0>
   4a1bc:	10005726 	beq	r2,zero,4a31c <___vfiprintf_internal_r+0x10b4>
   4a1c0:	d9000017 	ldw	r4,0(sp)
   4a1c4:	d9800a04 	addi	r6,sp,40
   4a1c8:	900b883a 	mov	r5,r18
   4a1cc:	da400615 	stw	r9,24(sp)
   4a1d0:	db000415 	stw	r12,16(sp)
   4a1d4:	db400215 	stw	r13,8(sp)
   4a1d8:	004915c0 	call	4915c <__sprint_r.part.0>
   4a1dc:	103d2d1e 	bne	r2,zero,49694 <___vfiprintf_internal_r+0x42c>
   4a1e0:	d9000b17 	ldw	r4,44(sp)
   4a1e4:	d8800c17 	ldw	r2,48(sp)
   4a1e8:	da400617 	ldw	r9,24(sp)
   4a1ec:	db000417 	ldw	r12,16(sp)
   4a1f0:	db400217 	ldw	r13,8(sp)
   4a1f4:	9811883a 	mov	r8,r19
   4a1f8:	21400044 	addi	r5,r4,1
   4a1fc:	003cdc06 	br	49570 <___vfiprintf_internal_r+0x308>
   4a200:	d8000945 	stb	zero,37(sp)
   4a204:	48bfffd8 	cmpnei	r2,r9,-1
   4a208:	103faa26 	beq	r2,zero,4a0b4 <___vfiprintf_internal_r+0xe4c>
   4a20c:	00bfdfc4 	movi	r2,-129
   4a210:	80a0703a 	and	r16,r16,r2
   4a214:	4800621e 	bne	r9,zero,4a3a0 <___vfiprintf_internal_r+0x1138>
   4a218:	002d883a 	mov	r22,zero
   4a21c:	002b883a 	mov	r21,zero
   4a220:	9839883a 	mov	fp,r19
   4a224:	003cc706 	br	49544 <___vfiprintf_internal_r+0x2dc>
   4a228:	a0800007 	ldb	r2,0(r20)
   4a22c:	df000315 	stw	fp,12(sp)
   4a230:	003c4f06 	br	49370 <___vfiprintf_internal_r+0x108>
   4a234:	002d883a 	mov	r22,zero
   4a238:	9839883a 	mov	fp,r19
   4a23c:	003cc106 	br	49544 <___vfiprintf_internal_r+0x2dc>
   4a240:	42000204 	addi	r8,r8,8
   4a244:	31400044 	addi	r5,r6,1
   4a248:	3009883a 	mov	r4,r6
   4a24c:	003cf006 	br	49610 <___vfiprintf_internal_r+0x3a8>
   4a250:	8080040c 	andi	r2,r16,16
   4a254:	10003e1e 	bne	r2,zero,4a350 <___vfiprintf_internal_r+0x10e8>
   4a258:	8400100c 	andi	r16,r16,64
   4a25c:	80003c26 	beq	r16,zero,4a350 <___vfiprintf_internal_r+0x10e8>
   4a260:	d8800317 	ldw	r2,12(sp)
   4a264:	d8c00117 	ldw	r3,4(sp)
   4a268:	10800017 	ldw	r2,0(r2)
   4a26c:	10c0000d 	sth	r3,0(r2)
   4a270:	003e0506 	br	49a88 <___vfiprintf_internal_r+0x820>
   4a274:	0009883a 	mov	r4,zero
   4a278:	01400044 	movi	r5,1
   4a27c:	9811883a 	mov	r8,r19
   4a280:	003ce106 	br	49608 <___vfiprintf_internal_r+0x3a0>
   4a284:	a82d883a 	mov	r22,r21
   4a288:	2839883a 	mov	fp,r5
   4a28c:	003cad06 	br	49544 <___vfiprintf_internal_r+0x2dc>
   4a290:	e009883a 	mov	r4,fp
   4a294:	da000215 	stw	r8,8(sp)
   4a298:	d8c00315 	stw	r3,12(sp)
   4a29c:	00419c40 	call	419c4 <strlen>
   4a2a0:	da000217 	ldw	r8,8(sp)
   4a2a4:	102b883a 	mov	r21,r2
   4a2a8:	102d883a 	mov	r22,r2
   4a2ac:	003ca406 	br	49540 <___vfiprintf_internal_r+0x2d8>
   4a2b0:	8005883a 	mov	r2,r16
   4a2b4:	003e0b06 	br	49ae4 <___vfiprintf_internal_r+0x87c>
   4a2b8:	00c00174 	movhi	r3,5
   4a2bc:	18c53404 	addi	r3,r3,5328
   4a2c0:	d8c00515 	stw	r3,20(sp)
   4a2c4:	80c0080c 	andi	r3,r16,32
   4a2c8:	18002826 	beq	r3,zero,4a36c <___vfiprintf_internal_r+0x1104>
   4a2cc:	d8c00317 	ldw	r3,12(sp)
   4a2d0:	1d800017 	ldw	r22,0(r3)
   4a2d4:	1d400117 	ldw	r21,4(r3)
   4a2d8:	18c00204 	addi	r3,r3,8
   4a2dc:	d8c00315 	stw	r3,12(sp)
   4a2e0:	80c0004c 	andi	r3,r16,1
   4a2e4:	18001f26 	beq	r3,zero,4a364 <___vfiprintf_internal_r+0x10fc>
   4a2e8:	b546b03a 	or	r3,r22,r21
   4a2ec:	183fc426 	beq	r3,zero,4a200 <___vfiprintf_internal_r+0xf98>
   4a2f0:	00c00c04 	movi	r3,48
   4a2f4:	d8c00985 	stb	r3,38(sp)
   4a2f8:	d88009c5 	stb	r2,39(sp)
   4a2fc:	d8000945 	stb	zero,37(sp)
   4a300:	48bfffd8 	cmpnei	r2,r9,-1
   4a304:	80c00094 	ori	r3,r16,2
   4a308:	10006d1e 	bne	r2,zero,4a4c0 <___vfiprintf_internal_r+0x1258>
   4a30c:	1821883a 	mov	r16,r3
   4a310:	003f6806 	br	4a0b4 <___vfiprintf_internal_r+0xe4c>
   4a314:	8005883a 	mov	r2,r16
   4a318:	003e0b06 	br	49b48 <___vfiprintf_internal_r+0x8e0>
   4a31c:	d8c00947 	ldb	r3,37(sp)
   4a320:	18003b26 	beq	r3,zero,4a410 <___vfiprintf_internal_r+0x11a8>
   4a324:	d8800944 	addi	r2,sp,37
   4a328:	d8801715 	stw	r2,92(sp)
   4a32c:	00800044 	movi	r2,1
   4a330:	d8801815 	stw	r2,96(sp)
   4a334:	01400044 	movi	r5,1
   4a338:	9811883a 	mov	r8,r19
   4a33c:	003c9706 	br	4959c <___vfiprintf_internal_r+0x334>
   4a340:	00c00174 	movhi	r3,5
   4a344:	18c53904 	addi	r3,r3,5348
   4a348:	d8c00515 	stw	r3,20(sp)
   4a34c:	003fdd06 	br	4a2c4 <___vfiprintf_internal_r+0x105c>
   4a350:	d8800317 	ldw	r2,12(sp)
   4a354:	d8c00117 	ldw	r3,4(sp)
   4a358:	10800017 	ldw	r2,0(r2)
   4a35c:	10c00015 	stw	r3,0(r2)
   4a360:	003dc906 	br	49a88 <___vfiprintf_internal_r+0x820>
   4a364:	8005883a 	mov	r2,r16
   4a368:	003e4606 	br	49c84 <___vfiprintf_internal_r+0xa1c>
   4a36c:	d9000317 	ldw	r4,12(sp)
   4a370:	80c0040c 	andi	r3,r16,16
   4a374:	25800017 	ldw	r22,0(r4)
   4a378:	21000104 	addi	r4,r4,4
   4a37c:	d9000315 	stw	r4,12(sp)
   4a380:	1800051e 	bne	r3,zero,4a398 <___vfiprintf_internal_r+0x1130>
   4a384:	80c0100c 	andi	r3,r16,64
   4a388:	18000326 	beq	r3,zero,4a398 <___vfiprintf_internal_r+0x1130>
   4a38c:	b5bfffcc 	andi	r22,r22,65535
   4a390:	002b883a 	mov	r21,zero
   4a394:	003fd206 	br	4a2e0 <___vfiprintf_internal_r+0x1078>
   4a398:	002b883a 	mov	r21,zero
   4a39c:	003fd006 	br	4a2e0 <___vfiprintf_internal_r+0x1078>
   4a3a0:	002d883a 	mov	r22,zero
   4a3a4:	002b883a 	mov	r21,zero
   4a3a8:	003f4206 	br	4a0b4 <___vfiprintf_internal_r+0xe4c>
   4a3ac:	18800060 	cmpeqi	r2,r3,1
   4a3b0:	1000341e 	bne	r2,zero,4a484 <___vfiprintf_internal_r+0x121c>
   4a3b4:	18c000a0 	cmpeqi	r3,r3,2
   4a3b8:	183ff91e 	bne	r3,zero,4a3a0 <___vfiprintf_internal_r+0x1138>
   4a3bc:	002d883a 	mov	r22,zero
   4a3c0:	002b883a 	mov	r21,zero
   4a3c4:	003df306 	br	49b94 <___vfiprintf_internal_r+0x92c>
   4a3c8:	488001f0 	cmpltui	r2,r9,7
   4a3cc:	482b883a 	mov	r21,r9
   4a3d0:	10000d26 	beq	r2,zero,4a408 <___vfiprintf_internal_r+0x11a0>
   4a3d4:	07000174 	movhi	fp,5
   4a3d8:	a82d883a 	mov	r22,r21
   4a3dc:	d8c00315 	stw	r3,12(sp)
   4a3e0:	e7053e04 	addi	fp,fp,5368
   4a3e4:	003c5606 	br	49540 <___vfiprintf_internal_r+0x2d8>
   4a3e8:	00c00174 	movhi	r3,5
   4a3ec:	18c5b904 	addi	r3,r3,5860
   4a3f0:	d8c00415 	stw	r3,16(sp)
   4a3f4:	003eb806 	br	49ed8 <___vfiprintf_internal_r+0xc70>
   4a3f8:	01400044 	movi	r5,1
   4a3fc:	0009883a 	mov	r4,zero
   4a400:	9811883a 	mov	r8,r19
   4a404:	003c8206 	br	49610 <___vfiprintf_internal_r+0x3a8>
   4a408:	05400184 	movi	r21,6
   4a40c:	003ff106 	br	4a3d4 <___vfiprintf_internal_r+0x116c>
   4a410:	0009883a 	mov	r4,zero
   4a414:	01400044 	movi	r5,1
   4a418:	9811883a 	mov	r8,r19
   4a41c:	003c6206 	br	495a8 <___vfiprintf_internal_r+0x340>
   4a420:	d9000017 	ldw	r4,0(sp)
   4a424:	d9800a04 	addi	r6,sp,40
   4a428:	900b883a 	mov	r5,r18
   4a42c:	004915c0 	call	4915c <__sprint_r.part.0>
   4a430:	003c9806 	br	49694 <___vfiprintf_internal_r+0x42c>
   4a434:	482d883a 	mov	r22,r9
   4a438:	d8c00315 	stw	r3,12(sp)
   4a43c:	482b883a 	mov	r21,r9
   4a440:	003c3f06 	br	49540 <___vfiprintf_internal_r+0x2d8>
   4a444:	301f883a 	mov	r15,r6
   4a448:	39c5bd04 	addi	r7,r7,5876
   4a44c:	003f0306 	br	4a05c <___vfiprintf_internal_r+0xdf4>
   4a450:	21400044 	addi	r5,r4,1
   4a454:	39c5bd04 	addi	r7,r7,5876
   4a458:	003d1206 	br	498a4 <___vfiprintf_internal_r+0x63c>
   4a45c:	00c00174 	movhi	r3,5
   4a460:	18c5b904 	addi	r3,r3,5860
   4a464:	280d883a 	mov	r6,r5
   4a468:	d8c00415 	stw	r3,16(sp)
   4a46c:	003e6106 	br	49df4 <___vfiprintf_internal_r+0xb8c>
   4a470:	00bfffc4 	movi	r2,-1
   4a474:	d8800115 	stw	r2,4(sp)
   4a478:	003c8906 	br	496a0 <___vfiprintf_internal_r+0x438>
   4a47c:	05800c04 	movi	r22,48
   4a480:	003d3406 	br	49954 <___vfiprintf_internal_r+0x6ec>
   4a484:	0019883a 	mov	r12,zero
   4a488:	05800c04 	movi	r22,48
   4a48c:	003d3106 	br	49954 <___vfiprintf_internal_r+0x6ec>
   4a490:	d8800317 	ldw	r2,12(sp)
   4a494:	12400017 	ldw	r9,0(r2)
   4a498:	17000104 	addi	fp,r2,4
   4a49c:	4800010e 	bge	r9,zero,4a4a4 <___vfiprintf_internal_r+0x123c>
   4a4a0:	027fffc4 	movi	r9,-1
   4a4a4:	a0800043 	ldbu	r2,1(r20)
   4a4a8:	df000315 	stw	fp,12(sp)
   4a4ac:	2029883a 	mov	r20,r4
   4a4b0:	10803fcc 	andi	r2,r2,255
   4a4b4:	1080201c 	xori	r2,r2,128
   4a4b8:	10bfe004 	addi	r2,r2,-128
   4a4bc:	003bac06 	br	49370 <___vfiprintf_internal_r+0x108>
   4a4c0:	00bfdfc4 	movi	r2,-129
   4a4c4:	8084703a 	and	r2,r16,r2
   4a4c8:	14000094 	ori	r16,r2,2
   4a4cc:	003ef906 	br	4a0b4 <___vfiprintf_internal_r+0xe4c>
   4a4d0:	0019883a 	mov	r12,zero
   4a4d4:	003d1b06 	br	49944 <___vfiprintf_internal_r+0x6dc>

0004a4d8 <__vfiprintf_internal>:
   4a4d8:	00c00174 	movhi	r3,5
   4a4dc:	2005883a 	mov	r2,r4
   4a4e0:	190d6c17 	ldw	r4,13744(r3)
   4a4e4:	300f883a 	mov	r7,r6
   4a4e8:	280d883a 	mov	r6,r5
   4a4ec:	100b883a 	mov	r5,r2
   4a4f0:	00492681 	jmpi	49268 <___vfiprintf_internal_r>

0004a4f4 <__sbprintf>:
   4a4f4:	28c0038b 	ldhu	r3,14(r5)
   4a4f8:	2880030b 	ldhu	r2,12(r5)
   4a4fc:	2ac01917 	ldw	r11,100(r5)
   4a500:	1806943a 	slli	r3,r3,16
   4a504:	2a800717 	ldw	r10,28(r5)
   4a508:	2a400917 	ldw	r9,36(r5)
   4a50c:	defee204 	addi	sp,sp,-1144
   4a510:	10bfff4c 	andi	r2,r2,65533
   4a514:	10c4b03a 	or	r2,r2,r3
   4a518:	da001a04 	addi	r8,sp,104
   4a51c:	00c10004 	movi	r3,1024
   4a520:	dc011a15 	stw	r16,1128(sp)
   4a524:	2821883a 	mov	r16,r5
   4a528:	d80b883a 	mov	r5,sp
   4a52c:	dc811c15 	stw	r18,1136(sp)
   4a530:	dc411b15 	stw	r17,1132(sp)
   4a534:	dfc11d15 	stw	ra,1140(sp)
   4a538:	2025883a 	mov	r18,r4
   4a53c:	dac01915 	stw	r11,100(sp)
   4a540:	d8800315 	stw	r2,12(sp)
   4a544:	da800715 	stw	r10,28(sp)
   4a548:	da400915 	stw	r9,36(sp)
   4a54c:	da000015 	stw	r8,0(sp)
   4a550:	da000415 	stw	r8,16(sp)
   4a554:	d8c00215 	stw	r3,8(sp)
   4a558:	d8c00515 	stw	r3,20(sp)
   4a55c:	d8000615 	stw	zero,24(sp)
   4a560:	00492680 	call	49268 <___vfiprintf_internal_r>
   4a564:	1023883a 	mov	r17,r2
   4a568:	10000d0e 	bge	r2,zero,4a5a0 <__sbprintf+0xac>
   4a56c:	d880030b 	ldhu	r2,12(sp)
   4a570:	1080100c 	andi	r2,r2,64
   4a574:	10000326 	beq	r2,zero,4a584 <__sbprintf+0x90>
   4a578:	8080030b 	ldhu	r2,12(r16)
   4a57c:	10801014 	ori	r2,r2,64
   4a580:	8080030d 	sth	r2,12(r16)
   4a584:	8805883a 	mov	r2,r17
   4a588:	dfc11d17 	ldw	ra,1140(sp)
   4a58c:	dc811c17 	ldw	r18,1136(sp)
   4a590:	dc411b17 	ldw	r17,1132(sp)
   4a594:	dc011a17 	ldw	r16,1128(sp)
   4a598:	dec11e04 	addi	sp,sp,1144
   4a59c:	f800283a 	ret
   4a5a0:	d80b883a 	mov	r5,sp
   4a5a4:	9009883a 	mov	r4,r18
   4a5a8:	0045c1c0 	call	45c1c <_fflush_r>
   4a5ac:	103fef26 	beq	r2,zero,4a56c <__sbprintf+0x78>
   4a5b0:	047fffc4 	movi	r17,-1
   4a5b4:	003fed06 	br	4a56c <__sbprintf+0x78>

0004a5b8 <_write_r>:
   4a5b8:	2807883a 	mov	r3,r5
   4a5bc:	defffe04 	addi	sp,sp,-8
   4a5c0:	dc000015 	stw	r16,0(sp)
   4a5c4:	300b883a 	mov	r5,r6
   4a5c8:	00800174 	movhi	r2,5
   4a5cc:	380d883a 	mov	r6,r7
   4a5d0:	2021883a 	mov	r16,r4
   4a5d4:	1809883a 	mov	r4,r3
   4a5d8:	dfc00115 	stw	ra,4(sp)
   4a5dc:	10147815 	stw	zero,20960(r2)
   4a5e0:	004f5f80 	call	4f5f8 <write>
   4a5e4:	10ffffd8 	cmpnei	r3,r2,-1
   4a5e8:	18000426 	beq	r3,zero,4a5fc <_write_r+0x44>
   4a5ec:	dfc00117 	ldw	ra,4(sp)
   4a5f0:	dc000017 	ldw	r16,0(sp)
   4a5f4:	dec00204 	addi	sp,sp,8
   4a5f8:	f800283a 	ret
   4a5fc:	00c00174 	movhi	r3,5
   4a600:	18d47817 	ldw	r3,20960(r3)
   4a604:	183ff926 	beq	r3,zero,4a5ec <_write_r+0x34>
   4a608:	80c00015 	stw	r3,0(r16)
   4a60c:	dfc00117 	ldw	ra,4(sp)
   4a610:	dc000017 	ldw	r16,0(sp)
   4a614:	dec00204 	addi	sp,sp,8
   4a618:	f800283a 	ret

0004a61c <_close_r>:
   4a61c:	defffe04 	addi	sp,sp,-8
   4a620:	dc000015 	stw	r16,0(sp)
   4a624:	00800174 	movhi	r2,5
   4a628:	2021883a 	mov	r16,r4
   4a62c:	2809883a 	mov	r4,r5
   4a630:	dfc00115 	stw	ra,4(sp)
   4a634:	10147815 	stw	zero,20960(r2)
   4a638:	004e99c0 	call	4e99c <close>
   4a63c:	10ffffd8 	cmpnei	r3,r2,-1
   4a640:	18000426 	beq	r3,zero,4a654 <_close_r+0x38>
   4a644:	dfc00117 	ldw	ra,4(sp)
   4a648:	dc000017 	ldw	r16,0(sp)
   4a64c:	dec00204 	addi	sp,sp,8
   4a650:	f800283a 	ret
   4a654:	00c00174 	movhi	r3,5
   4a658:	18d47817 	ldw	r3,20960(r3)
   4a65c:	183ff926 	beq	r3,zero,4a644 <_close_r+0x28>
   4a660:	80c00015 	stw	r3,0(r16)
   4a664:	dfc00117 	ldw	ra,4(sp)
   4a668:	dc000017 	ldw	r16,0(sp)
   4a66c:	dec00204 	addi	sp,sp,8
   4a670:	f800283a 	ret

0004a674 <__assert_func>:
   4a674:	00800174 	movhi	r2,5
   4a678:	120d6c17 	ldw	r8,13744(r2)
   4a67c:	defffc04 	addi	sp,sp,-16
   4a680:	3807883a 	mov	r3,r7
   4a684:	3005883a 	mov	r2,r6
   4a688:	dfc00315 	stw	ra,12(sp)
   4a68c:	42400317 	ldw	r9,12(r8)
   4a690:	200f883a 	mov	r7,r4
   4a694:	2811883a 	mov	r8,r5
   4a698:	180d883a 	mov	r6,r3
   4a69c:	10000a26 	beq	r2,zero,4a6c8 <__assert_func+0x54>
   4a6a0:	00c00174 	movhi	r3,5
   4a6a4:	18c5c104 	addi	r3,r3,5892
   4a6a8:	01400174 	movhi	r5,5
   4a6ac:	2945c504 	addi	r5,r5,5908
   4a6b0:	4809883a 	mov	r4,r9
   4a6b4:	d8c00115 	stw	r3,4(sp)
   4a6b8:	da000015 	stw	r8,0(sp)
   4a6bc:	d8800215 	stw	r2,8(sp)
   4a6c0:	004a9640 	call	4a964 <fiprintf>
   4a6c4:	004b1ac0 	call	4b1ac <abort>
   4a6c8:	00c00174 	movhi	r3,5
   4a6cc:	18c5c404 	addi	r3,r3,5904
   4a6d0:	1805883a 	mov	r2,r3
   4a6d4:	003ff406 	br	4a6a8 <__assert_func+0x34>

0004a6d8 <__assert>:
   4a6d8:	deffff04 	addi	sp,sp,-4
   4a6dc:	300f883a 	mov	r7,r6
   4a6e0:	000d883a 	mov	r6,zero
   4a6e4:	dfc00015 	stw	ra,0(sp)
   4a6e8:	004a6740 	call	4a674 <__assert_func>

0004a6ec <_calloc_r>:
   4a6ec:	2804d43a 	srli	r2,r5,16
   4a6f0:	deffff04 	addi	sp,sp,-4
   4a6f4:	dfc00015 	stw	ra,0(sp)
   4a6f8:	3006d43a 	srli	r3,r6,16
   4a6fc:	10002a1e 	bne	r2,zero,4a7a8 <_calloc_r+0xbc>
   4a700:	1800411e 	bne	r3,zero,4a808 <_calloc_r+0x11c>
   4a704:	31bfffcc 	andi	r6,r6,65535
   4a708:	297fffcc 	andi	r5,r5,65535
   4a70c:	298b383a 	mul	r5,r5,r6
   4a710:	0046cd80 	call	46cd8 <_malloc_r>
   4a714:	1009883a 	mov	r4,r2
   4a718:	10003626 	beq	r2,zero,4a7f4 <_calloc_r+0x108>
   4a71c:	11bfff17 	ldw	r6,-4(r2)
   4a720:	00bfff04 	movi	r2,-4
   4a724:	308c703a 	and	r6,r6,r2
   4a728:	31bfff04 	addi	r6,r6,-4
   4a72c:	30800968 	cmpgeui	r2,r6,37
   4a730:	10000c1e 	bne	r2,zero,4a764 <_calloc_r+0x78>
   4a734:	30800530 	cmpltui	r2,r6,20
   4a738:	1000111e 	bne	r2,zero,4a780 <_calloc_r+0x94>
   4a73c:	20000015 	stw	zero,0(r4)
   4a740:	20000115 	stw	zero,4(r4)
   4a744:	30800728 	cmpgeui	r2,r6,28
   4a748:	10001526 	beq	r2,zero,4a7a0 <_calloc_r+0xb4>
   4a74c:	20000215 	stw	zero,8(r4)
   4a750:	20000315 	stw	zero,12(r4)
   4a754:	31800920 	cmpeqi	r6,r6,36
   4a758:	3000311e 	bne	r6,zero,4a820 <_calloc_r+0x134>
   4a75c:	20800404 	addi	r2,r4,16
   4a760:	00000806 	br	4a784 <_calloc_r+0x98>
   4a764:	000b883a 	mov	r5,zero
   4a768:	00477840 	call	47784 <memset>
   4a76c:	1009883a 	mov	r4,r2
   4a770:	2005883a 	mov	r2,r4
   4a774:	dfc00017 	ldw	ra,0(sp)
   4a778:	dec00104 	addi	sp,sp,4
   4a77c:	f800283a 	ret
   4a780:	2005883a 	mov	r2,r4
   4a784:	10000015 	stw	zero,0(r2)
   4a788:	10000115 	stw	zero,4(r2)
   4a78c:	10000215 	stw	zero,8(r2)
   4a790:	2005883a 	mov	r2,r4
   4a794:	dfc00017 	ldw	ra,0(sp)
   4a798:	dec00104 	addi	sp,sp,4
   4a79c:	f800283a 	ret
   4a7a0:	20800204 	addi	r2,r4,8
   4a7a4:	003ff706 	br	4a784 <_calloc_r+0x98>
   4a7a8:	1800191e 	bne	r3,zero,4a810 <_calloc_r+0x124>
   4a7ac:	1007883a 	mov	r3,r2
   4a7b0:	3005883a 	mov	r2,r6
   4a7b4:	297fffcc 	andi	r5,r5,65535
   4a7b8:	31bfffcc 	andi	r6,r6,65535
   4a7bc:	298b383a 	mul	r5,r5,r6
   4a7c0:	18ffffcc 	andi	r3,r3,65535
   4a7c4:	10bfffcc 	andi	r2,r2,65535
   4a7c8:	10c5383a 	mul	r2,r2,r3
   4a7cc:	2806d43a 	srli	r3,r5,16
   4a7d0:	10c5883a 	add	r2,r2,r3
   4a7d4:	1006d43a 	srli	r3,r2,16
   4a7d8:	18000d1e 	bne	r3,zero,4a810 <_calloc_r+0x124>
   4a7dc:	1004943a 	slli	r2,r2,16
   4a7e0:	297fffcc 	andi	r5,r5,65535
   4a7e4:	114ab03a 	or	r5,r2,r5
   4a7e8:	0046cd80 	call	46cd8 <_malloc_r>
   4a7ec:	1009883a 	mov	r4,r2
   4a7f0:	103fca1e 	bne	r2,zero,4a71c <_calloc_r+0x30>
   4a7f4:	0009883a 	mov	r4,zero
   4a7f8:	2005883a 	mov	r2,r4
   4a7fc:	dfc00017 	ldw	ra,0(sp)
   4a800:	dec00104 	addi	sp,sp,4
   4a804:	f800283a 	ret
   4a808:	2805883a 	mov	r2,r5
   4a80c:	003fe906 	br	4a7b4 <_calloc_r+0xc8>
   4a810:	004a8300 	call	4a830 <__errno>
   4a814:	00c00304 	movi	r3,12
   4a818:	10c00015 	stw	r3,0(r2)
   4a81c:	003ff506 	br	4a7f4 <_calloc_r+0x108>
   4a820:	20000415 	stw	zero,16(r4)
   4a824:	20800604 	addi	r2,r4,24
   4a828:	20000515 	stw	zero,20(r4)
   4a82c:	003fd506 	br	4a784 <_calloc_r+0x98>

0004a830 <__errno>:
   4a830:	00800174 	movhi	r2,5
   4a834:	108d6c17 	ldw	r2,13744(r2)
   4a838:	f800283a 	ret

0004a83c <_fclose_r>:
   4a83c:	defffc04 	addi	sp,sp,-16
   4a840:	dfc00315 	stw	ra,12(sp)
   4a844:	dc800215 	stw	r18,8(sp)
   4a848:	dc400115 	stw	r17,4(sp)
   4a84c:	dc000015 	stw	r16,0(sp)
   4a850:	28000726 	beq	r5,zero,4a870 <_fclose_r+0x34>
   4a854:	2821883a 	mov	r16,r5
   4a858:	2023883a 	mov	r17,r4
   4a85c:	20000226 	beq	r4,zero,4a868 <_fclose_r+0x2c>
   4a860:	20800e17 	ldw	r2,56(r4)
   4a864:	10002726 	beq	r2,zero,4a904 <_fclose_r+0xc8>
   4a868:	8080030f 	ldh	r2,12(r16)
   4a86c:	1000081e 	bne	r2,zero,4a890 <_fclose_r+0x54>
   4a870:	0025883a 	mov	r18,zero
   4a874:	9005883a 	mov	r2,r18
   4a878:	dfc00317 	ldw	ra,12(sp)
   4a87c:	dc800217 	ldw	r18,8(sp)
   4a880:	dc400117 	ldw	r17,4(sp)
   4a884:	dc000017 	ldw	r16,0(sp)
   4a888:	dec00404 	addi	sp,sp,16
   4a88c:	f800283a 	ret
   4a890:	800b883a 	mov	r5,r16
   4a894:	8809883a 	mov	r4,r17
   4a898:	0045a140 	call	45a14 <__sflush_r>
   4a89c:	80c00b17 	ldw	r3,44(r16)
   4a8a0:	1025883a 	mov	r18,r2
   4a8a4:	18000426 	beq	r3,zero,4a8b8 <_fclose_r+0x7c>
   4a8a8:	81400717 	ldw	r5,28(r16)
   4a8ac:	8809883a 	mov	r4,r17
   4a8b0:	183ee83a 	callr	r3
   4a8b4:	10001716 	blt	r2,zero,4a914 <_fclose_r+0xd8>
   4a8b8:	8080030b 	ldhu	r2,12(r16)
   4a8bc:	1080200c 	andi	r2,r2,128
   4a8c0:	1000181e 	bne	r2,zero,4a924 <_fclose_r+0xe8>
   4a8c4:	81400c17 	ldw	r5,48(r16)
   4a8c8:	28000526 	beq	r5,zero,4a8e0 <_fclose_r+0xa4>
   4a8cc:	80801004 	addi	r2,r16,64
   4a8d0:	28800226 	beq	r5,r2,4a8dc <_fclose_r+0xa0>
   4a8d4:	8809883a 	mov	r4,r17
   4a8d8:	00461a00 	call	461a0 <_free_r>
   4a8dc:	80000c15 	stw	zero,48(r16)
   4a8e0:	81401117 	ldw	r5,68(r16)
   4a8e4:	28000326 	beq	r5,zero,4a8f4 <_fclose_r+0xb8>
   4a8e8:	8809883a 	mov	r4,r17
   4a8ec:	00461a00 	call	461a0 <_free_r>
   4a8f0:	80001115 	stw	zero,68(r16)
   4a8f4:	00460440 	call	46044 <__sfp_lock_acquire>
   4a8f8:	8000030d 	sth	zero,12(r16)
   4a8fc:	00460480 	call	46048 <__sfp_lock_release>
   4a900:	003fdc06 	br	4a874 <_fclose_r+0x38>
   4a904:	00460340 	call	46034 <__sinit>
   4a908:	8080030f 	ldh	r2,12(r16)
   4a90c:	103fd826 	beq	r2,zero,4a870 <_fclose_r+0x34>
   4a910:	003fdf06 	br	4a890 <_fclose_r+0x54>
   4a914:	8080030b 	ldhu	r2,12(r16)
   4a918:	04bfffc4 	movi	r18,-1
   4a91c:	1080200c 	andi	r2,r2,128
   4a920:	103fe826 	beq	r2,zero,4a8c4 <_fclose_r+0x88>
   4a924:	81400417 	ldw	r5,16(r16)
   4a928:	8809883a 	mov	r4,r17
   4a92c:	00461a00 	call	461a0 <_free_r>
   4a930:	003fe406 	br	4a8c4 <_fclose_r+0x88>

0004a934 <fclose>:
   4a934:	00800174 	movhi	r2,5
   4a938:	200b883a 	mov	r5,r4
   4a93c:	110d6c17 	ldw	r4,13744(r2)
   4a940:	004a83c1 	jmpi	4a83c <_fclose_r>

0004a944 <_fiprintf_r>:
   4a944:	defffe04 	addi	sp,sp,-8
   4a948:	dfc00015 	stw	ra,0(sp)
   4a94c:	d9c00115 	stw	r7,4(sp)
   4a950:	d9c00104 	addi	r7,sp,4
   4a954:	004af180 	call	4af18 <_vfiprintf_r>
   4a958:	dfc00017 	ldw	ra,0(sp)
   4a95c:	dec00204 	addi	sp,sp,8
   4a960:	f800283a 	ret

0004a964 <fiprintf>:
   4a964:	defffd04 	addi	sp,sp,-12
   4a968:	2005883a 	mov	r2,r4
   4a96c:	dfc00015 	stw	ra,0(sp)
   4a970:	d9800115 	stw	r6,4(sp)
   4a974:	d9c00215 	stw	r7,8(sp)
   4a978:	00c00174 	movhi	r3,5
   4a97c:	190d6c17 	ldw	r4,13744(r3)
   4a980:	280d883a 	mov	r6,r5
   4a984:	d9c00104 	addi	r7,sp,4
   4a988:	100b883a 	mov	r5,r2
   4a98c:	004af180 	call	4af18 <_vfiprintf_r>
   4a990:	dfc00017 	ldw	ra,0(sp)
   4a994:	dec00304 	addi	sp,sp,12
   4a998:	f800283a 	ret

0004a99c <__fputwc>:
   4a99c:	defff904 	addi	sp,sp,-28
   4a9a0:	dcc00415 	stw	r19,16(sp)
   4a9a4:	dc800315 	stw	r18,12(sp)
   4a9a8:	dc000115 	stw	r16,4(sp)
   4a9ac:	dfc00615 	stw	ra,24(sp)
   4a9b0:	dd000515 	stw	r20,20(sp)
   4a9b4:	dc400215 	stw	r17,8(sp)
   4a9b8:	2027883a 	mov	r19,r4
   4a9bc:	2825883a 	mov	r18,r5
   4a9c0:	3021883a 	mov	r16,r6
   4a9c4:	004acc80 	call	4acc8 <__locale_mb_cur_max>
   4a9c8:	10800058 	cmpnei	r2,r2,1
   4a9cc:	1000071e 	bne	r2,zero,4a9ec <__fputwc+0x50>
   4a9d0:	90bfffc4 	addi	r2,r18,-1
   4a9d4:	10803fe8 	cmpgeui	r2,r2,255
   4a9d8:	1000041e 	bne	r2,zero,4a9ec <__fputwc+0x50>
   4a9dc:	900b883a 	mov	r5,r18
   4a9e0:	dc8000c5 	stb	r18,3(sp)
   4a9e4:	05000044 	movi	r20,1
   4a9e8:	00000a06 	br	4aa14 <__fputwc+0x78>
   4a9ec:	81c01704 	addi	r7,r16,92
   4a9f0:	900d883a 	mov	r6,r18
   4a9f4:	d94000c4 	addi	r5,sp,3
   4a9f8:	9809883a 	mov	r4,r19
   4a9fc:	004b07c0 	call	4b07c <_wcrtomb_r>
   4aa00:	1029883a 	mov	r20,r2
   4aa04:	10bfffd8 	cmpnei	r2,r2,-1
   4aa08:	10003826 	beq	r2,zero,4aaec <__fputwc+0x150>
   4aa0c:	a0001f26 	beq	r20,zero,4aa8c <__fputwc+0xf0>
   4aa10:	d94000c3 	ldbu	r5,3(sp)
   4aa14:	0023883a 	mov	r17,zero
   4aa18:	00000a06 	br	4aa44 <__fputwc+0xa8>
   4aa1c:	80800017 	ldw	r2,0(r16)
   4aa20:	11400005 	stb	r5,0(r2)
   4aa24:	80c00017 	ldw	r3,0(r16)
   4aa28:	18c00044 	addi	r3,r3,1
   4aa2c:	80c00015 	stw	r3,0(r16)
   4aa30:	8c400044 	addi	r17,r17,1
   4aa34:	d88000c4 	addi	r2,sp,3
   4aa38:	1447883a 	add	r3,r2,r17
   4aa3c:	8d00132e 	bgeu	r17,r20,4aa8c <__fputwc+0xf0>
   4aa40:	19400003 	ldbu	r5,0(r3)
   4aa44:	80c00217 	ldw	r3,8(r16)
   4aa48:	18ffffc4 	addi	r3,r3,-1
   4aa4c:	80c00215 	stw	r3,8(r16)
   4aa50:	183ff20e 	bge	r3,zero,4aa1c <__fputwc+0x80>
   4aa54:	80800617 	ldw	r2,24(r16)
   4aa58:	18801516 	blt	r3,r2,4aab0 <__fputwc+0x114>
   4aa5c:	80800017 	ldw	r2,0(r16)
   4aa60:	11400005 	stb	r5,0(r2)
   4aa64:	80800017 	ldw	r2,0(r16)
   4aa68:	10c00003 	ldbu	r3,0(r2)
   4aa6c:	10800044 	addi	r2,r2,1
   4aa70:	18c002a0 	cmpeqi	r3,r3,10
   4aa74:	1800161e 	bne	r3,zero,4aad0 <__fputwc+0x134>
   4aa78:	80800015 	stw	r2,0(r16)
   4aa7c:	8c400044 	addi	r17,r17,1
   4aa80:	d88000c4 	addi	r2,sp,3
   4aa84:	1447883a 	add	r3,r2,r17
   4aa88:	8d3fed36 	bltu	r17,r20,4aa40 <__fputwc+0xa4>
   4aa8c:	9005883a 	mov	r2,r18
   4aa90:	dfc00617 	ldw	ra,24(sp)
   4aa94:	dd000517 	ldw	r20,20(sp)
   4aa98:	dcc00417 	ldw	r19,16(sp)
   4aa9c:	dc800317 	ldw	r18,12(sp)
   4aaa0:	dc400217 	ldw	r17,8(sp)
   4aaa4:	dc000117 	ldw	r16,4(sp)
   4aaa8:	dec00704 	addi	sp,sp,28
   4aaac:	f800283a 	ret
   4aab0:	29403fcc 	andi	r5,r5,255
   4aab4:	800d883a 	mov	r6,r16
   4aab8:	9809883a 	mov	r4,r19
   4aabc:	004af1c0 	call	4af1c <__swbuf_r>
   4aac0:	10bfffe0 	cmpeqi	r2,r2,-1
   4aac4:	103fda26 	beq	r2,zero,4aa30 <__fputwc+0x94>
   4aac8:	00bfffc4 	movi	r2,-1
   4aacc:	003ff006 	br	4aa90 <__fputwc+0xf4>
   4aad0:	800d883a 	mov	r6,r16
   4aad4:	01400284 	movi	r5,10
   4aad8:	9809883a 	mov	r4,r19
   4aadc:	004af1c0 	call	4af1c <__swbuf_r>
   4aae0:	10bfffe0 	cmpeqi	r2,r2,-1
   4aae4:	103fd226 	beq	r2,zero,4aa30 <__fputwc+0x94>
   4aae8:	003ff706 	br	4aac8 <__fputwc+0x12c>
   4aaec:	8080030b 	ldhu	r2,12(r16)
   4aaf0:	10801014 	ori	r2,r2,64
   4aaf4:	8080030d 	sth	r2,12(r16)
   4aaf8:	00bfffc4 	movi	r2,-1
   4aafc:	003fe406 	br	4aa90 <__fputwc+0xf4>

0004ab00 <_fputwc_r>:
   4ab00:	3080030b 	ldhu	r2,12(r6)
   4ab04:	10c8000c 	andi	r3,r2,8192
   4ab08:	1800051e 	bne	r3,zero,4ab20 <_fputwc_r+0x20>
   4ab0c:	30c01917 	ldw	r3,100(r6)
   4ab10:	10880014 	ori	r2,r2,8192
   4ab14:	3080030d 	sth	r2,12(r6)
   4ab18:	18880014 	ori	r2,r3,8192
   4ab1c:	30801915 	stw	r2,100(r6)
   4ab20:	004a99c1 	jmpi	4a99c <__fputwc>

0004ab24 <fputwc>:
   4ab24:	defffc04 	addi	sp,sp,-16
   4ab28:	00800174 	movhi	r2,5
   4ab2c:	dc000215 	stw	r16,8(sp)
   4ab30:	140d6c17 	ldw	r16,13744(r2)
   4ab34:	dfc00315 	stw	ra,12(sp)
   4ab38:	280d883a 	mov	r6,r5
   4ab3c:	200b883a 	mov	r5,r4
   4ab40:	80000226 	beq	r16,zero,4ab4c <fputwc+0x28>
   4ab44:	80800e17 	ldw	r2,56(r16)
   4ab48:	10000d26 	beq	r2,zero,4ab80 <fputwc+0x5c>
   4ab4c:	3080030b 	ldhu	r2,12(r6)
   4ab50:	10c8000c 	andi	r3,r2,8192
   4ab54:	1800051e 	bne	r3,zero,4ab6c <fputwc+0x48>
   4ab58:	30c01917 	ldw	r3,100(r6)
   4ab5c:	10880014 	ori	r2,r2,8192
   4ab60:	3080030d 	sth	r2,12(r6)
   4ab64:	18880014 	ori	r2,r3,8192
   4ab68:	30801915 	stw	r2,100(r6)
   4ab6c:	8009883a 	mov	r4,r16
   4ab70:	dfc00317 	ldw	ra,12(sp)
   4ab74:	dc000217 	ldw	r16,8(sp)
   4ab78:	dec00404 	addi	sp,sp,16
   4ab7c:	004a99c1 	jmpi	4a99c <__fputwc>
   4ab80:	d9000015 	stw	r4,0(sp)
   4ab84:	8009883a 	mov	r4,r16
   4ab88:	d9800115 	stw	r6,4(sp)
   4ab8c:	00460340 	call	46034 <__sinit>
   4ab90:	d9800117 	ldw	r6,4(sp)
   4ab94:	d9400017 	ldw	r5,0(sp)
   4ab98:	003fec06 	br	4ab4c <fputwc+0x28>

0004ab9c <_fstat_r>:
   4ab9c:	2807883a 	mov	r3,r5
   4aba0:	defffe04 	addi	sp,sp,-8
   4aba4:	dc000015 	stw	r16,0(sp)
   4aba8:	00800174 	movhi	r2,5
   4abac:	300b883a 	mov	r5,r6
   4abb0:	2021883a 	mov	r16,r4
   4abb4:	1809883a 	mov	r4,r3
   4abb8:	dfc00115 	stw	ra,4(sp)
   4abbc:	10147815 	stw	zero,20960(r2)
   4abc0:	004eb100 	call	4eb10 <fstat>
   4abc4:	10ffffd8 	cmpnei	r3,r2,-1
   4abc8:	18000426 	beq	r3,zero,4abdc <_fstat_r+0x40>
   4abcc:	dfc00117 	ldw	ra,4(sp)
   4abd0:	dc000017 	ldw	r16,0(sp)
   4abd4:	dec00204 	addi	sp,sp,8
   4abd8:	f800283a 	ret
   4abdc:	00c00174 	movhi	r3,5
   4abe0:	18d47817 	ldw	r3,20960(r3)
   4abe4:	183ff926 	beq	r3,zero,4abcc <_fstat_r+0x30>
   4abe8:	80c00015 	stw	r3,0(r16)
   4abec:	dfc00117 	ldw	ra,4(sp)
   4abf0:	dc000017 	ldw	r16,0(sp)
   4abf4:	dec00204 	addi	sp,sp,8
   4abf8:	f800283a 	ret

0004abfc <_isatty_r>:
   4abfc:	defffe04 	addi	sp,sp,-8
   4ac00:	dc000015 	stw	r16,0(sp)
   4ac04:	00800174 	movhi	r2,5
   4ac08:	2021883a 	mov	r16,r4
   4ac0c:	2809883a 	mov	r4,r5
   4ac10:	dfc00115 	stw	ra,4(sp)
   4ac14:	10147815 	stw	zero,20960(r2)
   4ac18:	004eeb40 	call	4eeb4 <isatty>
   4ac1c:	10ffffd8 	cmpnei	r3,r2,-1
   4ac20:	18000426 	beq	r3,zero,4ac34 <_isatty_r+0x38>
   4ac24:	dfc00117 	ldw	ra,4(sp)
   4ac28:	dc000017 	ldw	r16,0(sp)
   4ac2c:	dec00204 	addi	sp,sp,8
   4ac30:	f800283a 	ret
   4ac34:	00c00174 	movhi	r3,5
   4ac38:	18d47817 	ldw	r3,20960(r3)
   4ac3c:	183ff926 	beq	r3,zero,4ac24 <_isatty_r+0x28>
   4ac40:	80c00015 	stw	r3,0(r16)
   4ac44:	dfc00117 	ldw	ra,4(sp)
   4ac48:	dc000017 	ldw	r16,0(sp)
   4ac4c:	dec00204 	addi	sp,sp,8
   4ac50:	f800283a 	ret

0004ac54 <_setlocale_r>:
   4ac54:	30001626 	beq	r6,zero,4acb0 <_setlocale_r+0x5c>
   4ac58:	01400174 	movhi	r5,5
   4ac5c:	defffe04 	addi	sp,sp,-8
   4ac60:	2945d204 	addi	r5,r5,5960
   4ac64:	3009883a 	mov	r4,r6
   4ac68:	dc000015 	stw	r16,0(sp)
   4ac6c:	dfc00115 	stw	ra,4(sp)
   4ac70:	3021883a 	mov	r16,r6
   4ac74:	004ae600 	call	4ae60 <strcmp>
   4ac78:	1000061e 	bne	r2,zero,4ac94 <_setlocale_r+0x40>
   4ac7c:	00800174 	movhi	r2,5
   4ac80:	1085d104 	addi	r2,r2,5956
   4ac84:	dfc00117 	ldw	ra,4(sp)
   4ac88:	dc000017 	ldw	r16,0(sp)
   4ac8c:	dec00204 	addi	sp,sp,8
   4ac90:	f800283a 	ret
   4ac94:	80800003 	ldbu	r2,0(r16)
   4ac98:	10bfef44 	addi	r2,r2,-67
   4ac9c:	10000726 	beq	r2,zero,4acbc <_setlocale_r+0x68>
   4aca0:	80800003 	ldbu	r2,0(r16)
   4aca4:	103ff526 	beq	r2,zero,4ac7c <_setlocale_r+0x28>
   4aca8:	0005883a 	mov	r2,zero
   4acac:	003ff506 	br	4ac84 <_setlocale_r+0x30>
   4acb0:	00800174 	movhi	r2,5
   4acb4:	1085d104 	addi	r2,r2,5956
   4acb8:	f800283a 	ret
   4acbc:	80800043 	ldbu	r2,1(r16)
   4acc0:	103fee26 	beq	r2,zero,4ac7c <_setlocale_r+0x28>
   4acc4:	003ff606 	br	4aca0 <_setlocale_r+0x4c>

0004acc8 <__locale_mb_cur_max>:
   4acc8:	00800174 	movhi	r2,5
   4accc:	1088d807 	ldb	r2,9056(r2)
   4acd0:	f800283a 	ret

0004acd4 <setlocale>:
   4acd4:	28001626 	beq	r5,zero,4ad30 <setlocale+0x5c>
   4acd8:	defffe04 	addi	sp,sp,-8
   4acdc:	dc000015 	stw	r16,0(sp)
   4ace0:	2821883a 	mov	r16,r5
   4ace4:	01400174 	movhi	r5,5
   4ace8:	2945d204 	addi	r5,r5,5960
   4acec:	8009883a 	mov	r4,r16
   4acf0:	dfc00115 	stw	ra,4(sp)
   4acf4:	004ae600 	call	4ae60 <strcmp>
   4acf8:	1000061e 	bne	r2,zero,4ad14 <setlocale+0x40>
   4acfc:	00800174 	movhi	r2,5
   4ad00:	1085d104 	addi	r2,r2,5956
   4ad04:	dfc00117 	ldw	ra,4(sp)
   4ad08:	dc000017 	ldw	r16,0(sp)
   4ad0c:	dec00204 	addi	sp,sp,8
   4ad10:	f800283a 	ret
   4ad14:	80800003 	ldbu	r2,0(r16)
   4ad18:	10bfef44 	addi	r2,r2,-67
   4ad1c:	10000726 	beq	r2,zero,4ad3c <setlocale+0x68>
   4ad20:	80800003 	ldbu	r2,0(r16)
   4ad24:	103ff526 	beq	r2,zero,4acfc <setlocale+0x28>
   4ad28:	0005883a 	mov	r2,zero
   4ad2c:	003ff506 	br	4ad04 <setlocale+0x30>
   4ad30:	00800174 	movhi	r2,5
   4ad34:	1085d104 	addi	r2,r2,5956
   4ad38:	f800283a 	ret
   4ad3c:	80800043 	ldbu	r2,1(r16)
   4ad40:	103fee26 	beq	r2,zero,4acfc <setlocale+0x28>
   4ad44:	003ff606 	br	4ad20 <setlocale+0x4c>

0004ad48 <_lseek_r>:
   4ad48:	2807883a 	mov	r3,r5
   4ad4c:	defffe04 	addi	sp,sp,-8
   4ad50:	dc000015 	stw	r16,0(sp)
   4ad54:	300b883a 	mov	r5,r6
   4ad58:	00800174 	movhi	r2,5
   4ad5c:	380d883a 	mov	r6,r7
   4ad60:	2021883a 	mov	r16,r4
   4ad64:	1809883a 	mov	r4,r3
   4ad68:	dfc00115 	stw	ra,4(sp)
   4ad6c:	10147815 	stw	zero,20960(r2)
   4ad70:	004f1ac0 	call	4f1ac <lseek>
   4ad74:	10ffffd8 	cmpnei	r3,r2,-1
   4ad78:	18000426 	beq	r3,zero,4ad8c <_lseek_r+0x44>
   4ad7c:	dfc00117 	ldw	ra,4(sp)
   4ad80:	dc000017 	ldw	r16,0(sp)
   4ad84:	dec00204 	addi	sp,sp,8
   4ad88:	f800283a 	ret
   4ad8c:	00c00174 	movhi	r3,5
   4ad90:	18d47817 	ldw	r3,20960(r3)
   4ad94:	183ff926 	beq	r3,zero,4ad7c <_lseek_r+0x34>
   4ad98:	80c00015 	stw	r3,0(r16)
   4ad9c:	dfc00117 	ldw	ra,4(sp)
   4ada0:	dc000017 	ldw	r16,0(sp)
   4ada4:	dec00204 	addi	sp,sp,8
   4ada8:	f800283a 	ret

0004adac <_mbtowc_r>:
   4adac:	00800174 	movhi	r2,5
   4adb0:	1088c717 	ldw	r2,8988(r2)
   4adb4:	1000683a 	jmp	r2

0004adb8 <__ascii_mbtowc>:
   4adb8:	deffff04 	addi	sp,sp,-4
   4adbc:	28000826 	beq	r5,zero,4ade0 <__ascii_mbtowc+0x28>
   4adc0:	30000926 	beq	r6,zero,4ade8 <__ascii_mbtowc+0x30>
   4adc4:	38000b26 	beq	r7,zero,4adf4 <__ascii_mbtowc+0x3c>
   4adc8:	30800003 	ldbu	r2,0(r6)
   4adcc:	28800015 	stw	r2,0(r5)
   4add0:	30800003 	ldbu	r2,0(r6)
   4add4:	1004c03a 	cmpne	r2,r2,zero
   4add8:	dec00104 	addi	sp,sp,4
   4addc:	f800283a 	ret
   4ade0:	d80b883a 	mov	r5,sp
   4ade4:	303ff71e 	bne	r6,zero,4adc4 <__ascii_mbtowc+0xc>
   4ade8:	0005883a 	mov	r2,zero
   4adec:	dec00104 	addi	sp,sp,4
   4adf0:	f800283a 	ret
   4adf4:	00bfff84 	movi	r2,-2
   4adf8:	003ff706 	br	4add8 <__ascii_mbtowc+0x20>

0004adfc <_read_r>:
   4adfc:	2807883a 	mov	r3,r5
   4ae00:	defffe04 	addi	sp,sp,-8
   4ae04:	dc000015 	stw	r16,0(sp)
   4ae08:	300b883a 	mov	r5,r6
   4ae0c:	00800174 	movhi	r2,5
   4ae10:	380d883a 	mov	r6,r7
   4ae14:	2021883a 	mov	r16,r4
   4ae18:	1809883a 	mov	r4,r3
   4ae1c:	dfc00115 	stw	ra,4(sp)
   4ae20:	10147815 	stw	zero,20960(r2)
   4ae24:	004f3800 	call	4f380 <read>
   4ae28:	10ffffd8 	cmpnei	r3,r2,-1
   4ae2c:	18000426 	beq	r3,zero,4ae40 <_read_r+0x44>
   4ae30:	dfc00117 	ldw	ra,4(sp)
   4ae34:	dc000017 	ldw	r16,0(sp)
   4ae38:	dec00204 	addi	sp,sp,8
   4ae3c:	f800283a 	ret
   4ae40:	00c00174 	movhi	r3,5
   4ae44:	18d47817 	ldw	r3,20960(r3)
   4ae48:	183ff926 	beq	r3,zero,4ae30 <_read_r+0x34>
   4ae4c:	80c00015 	stw	r3,0(r16)
   4ae50:	dfc00117 	ldw	ra,4(sp)
   4ae54:	dc000017 	ldw	r16,0(sp)
   4ae58:	dec00204 	addi	sp,sp,8
   4ae5c:	f800283a 	ret

0004ae60 <strcmp>:
   4ae60:	2144b03a 	or	r2,r4,r5
   4ae64:	108000cc 	andi	r2,r2,3
   4ae68:	1000141e 	bne	r2,zero,4aebc <strcmp+0x5c>
   4ae6c:	20800017 	ldw	r2,0(r4)
   4ae70:	28c00017 	ldw	r3,0(r5)
   4ae74:	10c0111e 	bne	r2,r3,4aebc <strcmp+0x5c>
   4ae78:	01ffbff4 	movhi	r7,65279
   4ae7c:	01a02074 	movhi	r6,32897
   4ae80:	39ffbfc4 	addi	r7,r7,-257
   4ae84:	31a02004 	addi	r6,r6,-32640
   4ae88:	00000306 	br	4ae98 <strcmp+0x38>
   4ae8c:	20800017 	ldw	r2,0(r4)
   4ae90:	28c00017 	ldw	r3,0(r5)
   4ae94:	10c0091e 	bne	r2,r3,4aebc <strcmp+0x5c>
   4ae98:	11c7883a 	add	r3,r2,r7
   4ae9c:	0084303a 	nor	r2,zero,r2
   4aea0:	1884703a 	and	r2,r3,r2
   4aea4:	1184703a 	and	r2,r2,r6
   4aea8:	21000104 	addi	r4,r4,4
   4aeac:	29400104 	addi	r5,r5,4
   4aeb0:	103ff626 	beq	r2,zero,4ae8c <strcmp+0x2c>
   4aeb4:	0005883a 	mov	r2,zero
   4aeb8:	f800283a 	ret
   4aebc:	20c00003 	ldbu	r3,0(r4)
   4aec0:	18803fcc 	andi	r2,r3,255
   4aec4:	1080201c 	xori	r2,r2,128
   4aec8:	10bfe004 	addi	r2,r2,-128
   4aecc:	1000071e 	bne	r2,zero,4aeec <strcmp+0x8c>
   4aed0:	00000a06 	br	4aefc <strcmp+0x9c>
   4aed4:	20c00003 	ldbu	r3,0(r4)
   4aed8:	29400044 	addi	r5,r5,1
   4aedc:	18803fcc 	andi	r2,r3,255
   4aee0:	1080201c 	xori	r2,r2,128
   4aee4:	10bfe004 	addi	r2,r2,-128
   4aee8:	10000726 	beq	r2,zero,4af08 <strcmp+0xa8>
   4aeec:	29800007 	ldb	r6,0(r5)
   4aef0:	21000044 	addi	r4,r4,1
   4aef4:	30bff726 	beq	r6,r2,4aed4 <strcmp+0x74>
   4aef8:	18803fcc 	andi	r2,r3,255
   4aefc:	28c00003 	ldbu	r3,0(r5)
   4af00:	10c5c83a 	sub	r2,r2,r3
   4af04:	f800283a 	ret
   4af08:	28c00003 	ldbu	r3,0(r5)
   4af0c:	0005883a 	mov	r2,zero
   4af10:	10c5c83a 	sub	r2,r2,r3
   4af14:	f800283a 	ret

0004af18 <_vfiprintf_r>:
   4af18:	00492681 	jmpi	49268 <___vfiprintf_internal_r>

0004af1c <__swbuf_r>:
   4af1c:	defffb04 	addi	sp,sp,-20
   4af20:	dcc00315 	stw	r19,12(sp)
   4af24:	dc400115 	stw	r17,4(sp)
   4af28:	dc000015 	stw	r16,0(sp)
   4af2c:	dfc00415 	stw	ra,16(sp)
   4af30:	dc800215 	stw	r18,8(sp)
   4af34:	2027883a 	mov	r19,r4
   4af38:	2823883a 	mov	r17,r5
   4af3c:	3021883a 	mov	r16,r6
   4af40:	20000226 	beq	r4,zero,4af4c <__swbuf_r+0x30>
   4af44:	20800e17 	ldw	r2,56(r4)
   4af48:	10003e26 	beq	r2,zero,4b044 <__swbuf_r+0x128>
   4af4c:	80800617 	ldw	r2,24(r16)
   4af50:	80c0030b 	ldhu	r3,12(r16)
   4af54:	80800215 	stw	r2,8(r16)
   4af58:	1880020c 	andi	r2,r3,8
   4af5c:	10001f26 	beq	r2,zero,4afdc <__swbuf_r+0xc0>
   4af60:	80800417 	ldw	r2,16(r16)
   4af64:	10001d26 	beq	r2,zero,4afdc <__swbuf_r+0xc0>
   4af68:	1948000c 	andi	r5,r3,8192
   4af6c:	8c803fcc 	andi	r18,r17,255
   4af70:	28002326 	beq	r5,zero,4b000 <__swbuf_r+0xe4>
   4af74:	80c00017 	ldw	r3,0(r16)
   4af78:	81000517 	ldw	r4,20(r16)
   4af7c:	1885c83a 	sub	r2,r3,r2
   4af80:	1100290e 	bge	r2,r4,4b028 <__swbuf_r+0x10c>
   4af84:	10800044 	addi	r2,r2,1
   4af88:	81400217 	ldw	r5,8(r16)
   4af8c:	19000044 	addi	r4,r3,1
   4af90:	81000015 	stw	r4,0(r16)
   4af94:	297fffc4 	addi	r5,r5,-1
   4af98:	81400215 	stw	r5,8(r16)
   4af9c:	1c400005 	stb	r17,0(r3)
   4afa0:	80c00517 	ldw	r3,20(r16)
   4afa4:	18802926 	beq	r3,r2,4b04c <__swbuf_r+0x130>
   4afa8:	8080030b 	ldhu	r2,12(r16)
   4afac:	1080004c 	andi	r2,r2,1
   4afb0:	10000226 	beq	r2,zero,4afbc <__swbuf_r+0xa0>
   4afb4:	90800298 	cmpnei	r2,r18,10
   4afb8:	10002426 	beq	r2,zero,4b04c <__swbuf_r+0x130>
   4afbc:	9005883a 	mov	r2,r18
   4afc0:	dfc00417 	ldw	ra,16(sp)
   4afc4:	dcc00317 	ldw	r19,12(sp)
   4afc8:	dc800217 	ldw	r18,8(sp)
   4afcc:	dc400117 	ldw	r17,4(sp)
   4afd0:	dc000017 	ldw	r16,0(sp)
   4afd4:	dec00504 	addi	sp,sp,20
   4afd8:	f800283a 	ret
   4afdc:	800b883a 	mov	r5,r16
   4afe0:	9809883a 	mov	r4,r19
   4afe4:	0043ee40 	call	43ee4 <__swsetup_r>
   4afe8:	10001c1e 	bne	r2,zero,4b05c <__swbuf_r+0x140>
   4afec:	80c0030b 	ldhu	r3,12(r16)
   4aff0:	80800417 	ldw	r2,16(r16)
   4aff4:	8c803fcc 	andi	r18,r17,255
   4aff8:	1948000c 	andi	r5,r3,8192
   4affc:	283fdd1e 	bne	r5,zero,4af74 <__swbuf_r+0x58>
   4b000:	81001917 	ldw	r4,100(r16)
   4b004:	18c80014 	ori	r3,r3,8192
   4b008:	0177ffc4 	movi	r5,-8193
   4b00c:	2148703a 	and	r4,r4,r5
   4b010:	80c0030d 	sth	r3,12(r16)
   4b014:	80c00017 	ldw	r3,0(r16)
   4b018:	81001915 	stw	r4,100(r16)
   4b01c:	81000517 	ldw	r4,20(r16)
   4b020:	1885c83a 	sub	r2,r3,r2
   4b024:	113fd716 	blt	r2,r4,4af84 <__swbuf_r+0x68>
   4b028:	800b883a 	mov	r5,r16
   4b02c:	9809883a 	mov	r4,r19
   4b030:	0045c1c0 	call	45c1c <_fflush_r>
   4b034:	1000091e 	bne	r2,zero,4b05c <__swbuf_r+0x140>
   4b038:	80c00017 	ldw	r3,0(r16)
   4b03c:	00800044 	movi	r2,1
   4b040:	003fd106 	br	4af88 <__swbuf_r+0x6c>
   4b044:	00460340 	call	46034 <__sinit>
   4b048:	003fc006 	br	4af4c <__swbuf_r+0x30>
   4b04c:	800b883a 	mov	r5,r16
   4b050:	9809883a 	mov	r4,r19
   4b054:	0045c1c0 	call	45c1c <_fflush_r>
   4b058:	103fd826 	beq	r2,zero,4afbc <__swbuf_r+0xa0>
   4b05c:	04bfffc4 	movi	r18,-1
   4b060:	003fd606 	br	4afbc <__swbuf_r+0xa0>

0004b064 <__swbuf>:
   4b064:	00c00174 	movhi	r3,5
   4b068:	2005883a 	mov	r2,r4
   4b06c:	190d6c17 	ldw	r4,13744(r3)
   4b070:	280d883a 	mov	r6,r5
   4b074:	100b883a 	mov	r5,r2
   4b078:	004af1c1 	jmpi	4af1c <__swbuf_r>

0004b07c <_wcrtomb_r>:
   4b07c:	defffa04 	addi	sp,sp,-24
   4b080:	dc400415 	stw	r17,16(sp)
   4b084:	dc000315 	stw	r16,12(sp)
   4b088:	00800174 	movhi	r2,5
   4b08c:	dfc00515 	stw	ra,20(sp)
   4b090:	1088c617 	ldw	r2,8984(r2)
   4b094:	2023883a 	mov	r17,r4
   4b098:	3821883a 	mov	r16,r7
   4b09c:	28000826 	beq	r5,zero,4b0c0 <_wcrtomb_r+0x44>
   4b0a0:	103ee83a 	callr	r2
   4b0a4:	10ffffd8 	cmpnei	r3,r2,-1
   4b0a8:	18000a26 	beq	r3,zero,4b0d4 <_wcrtomb_r+0x58>
   4b0ac:	dfc00517 	ldw	ra,20(sp)
   4b0b0:	dc400417 	ldw	r17,16(sp)
   4b0b4:	dc000317 	ldw	r16,12(sp)
   4b0b8:	dec00604 	addi	sp,sp,24
   4b0bc:	f800283a 	ret
   4b0c0:	000d883a 	mov	r6,zero
   4b0c4:	d9400084 	addi	r5,sp,2
   4b0c8:	103ee83a 	callr	r2
   4b0cc:	10ffffd8 	cmpnei	r3,r2,-1
   4b0d0:	183ff61e 	bne	r3,zero,4b0ac <_wcrtomb_r+0x30>
   4b0d4:	00802284 	movi	r2,138
   4b0d8:	80000015 	stw	zero,0(r16)
   4b0dc:	88800015 	stw	r2,0(r17)
   4b0e0:	00bfffc4 	movi	r2,-1
   4b0e4:	003ff106 	br	4b0ac <_wcrtomb_r+0x30>

0004b0e8 <wcrtomb>:
   4b0e8:	defffa04 	addi	sp,sp,-24
   4b0ec:	00c00174 	movhi	r3,5
   4b0f0:	dc400415 	stw	r17,16(sp)
   4b0f4:	dc000315 	stw	r16,12(sp)
   4b0f8:	1c4d6c17 	ldw	r17,13744(r3)
   4b0fc:	dfc00515 	stw	ra,20(sp)
   4b100:	00c00174 	movhi	r3,5
   4b104:	18c8c617 	ldw	r3,8984(r3)
   4b108:	3021883a 	mov	r16,r6
   4b10c:	20000c26 	beq	r4,zero,4b140 <wcrtomb+0x58>
   4b110:	280d883a 	mov	r6,r5
   4b114:	800f883a 	mov	r7,r16
   4b118:	200b883a 	mov	r5,r4
   4b11c:	8809883a 	mov	r4,r17
   4b120:	183ee83a 	callr	r3
   4b124:	10ffffd8 	cmpnei	r3,r2,-1
   4b128:	18000c26 	beq	r3,zero,4b15c <wcrtomb+0x74>
   4b12c:	dfc00517 	ldw	ra,20(sp)
   4b130:	dc400417 	ldw	r17,16(sp)
   4b134:	dc000317 	ldw	r16,12(sp)
   4b138:	dec00604 	addi	sp,sp,24
   4b13c:	f800283a 	ret
   4b140:	300f883a 	mov	r7,r6
   4b144:	d9400084 	addi	r5,sp,2
   4b148:	000d883a 	mov	r6,zero
   4b14c:	8809883a 	mov	r4,r17
   4b150:	183ee83a 	callr	r3
   4b154:	10ffffd8 	cmpnei	r3,r2,-1
   4b158:	183ff41e 	bne	r3,zero,4b12c <wcrtomb+0x44>
   4b15c:	00802284 	movi	r2,138
   4b160:	80000015 	stw	zero,0(r16)
   4b164:	88800015 	stw	r2,0(r17)
   4b168:	00bfffc4 	movi	r2,-1
   4b16c:	003fef06 	br	4b12c <wcrtomb+0x44>

0004b170 <_wctomb_r>:
   4b170:	00800174 	movhi	r2,5
   4b174:	1088c617 	ldw	r2,8984(r2)
   4b178:	1000683a 	jmp	r2

0004b17c <__ascii_wctomb>:
   4b17c:	28000926 	beq	r5,zero,4b1a4 <__ascii_wctomb+0x28>
   4b180:	30804030 	cmpltui	r2,r6,256
   4b184:	10000326 	beq	r2,zero,4b194 <__ascii_wctomb+0x18>
   4b188:	29800005 	stb	r6,0(r5)
   4b18c:	00800044 	movi	r2,1
   4b190:	f800283a 	ret
   4b194:	00802284 	movi	r2,138
   4b198:	20800015 	stw	r2,0(r4)
   4b19c:	00bfffc4 	movi	r2,-1
   4b1a0:	f800283a 	ret
   4b1a4:	0005883a 	mov	r2,zero
   4b1a8:	f800283a 	ret

0004b1ac <abort>:
   4b1ac:	deffff04 	addi	sp,sp,-4
   4b1b0:	01000184 	movi	r4,6
   4b1b4:	dfc00015 	stw	ra,0(sp)
   4b1b8:	004b41c0 	call	4b41c <raise>
   4b1bc:	01000044 	movi	r4,1
   4b1c0:	004ea980 	call	4ea98 <_exit>

0004b1c4 <_init_signal_r>:
   4b1c4:	2080b717 	ldw	r2,732(r4)
   4b1c8:	10000226 	beq	r2,zero,4b1d4 <_init_signal_r+0x10>
   4b1cc:	0005883a 	mov	r2,zero
   4b1d0:	f800283a 	ret
   4b1d4:	defffe04 	addi	sp,sp,-8
   4b1d8:	01402004 	movi	r5,128
   4b1dc:	dc000015 	stw	r16,0(sp)
   4b1e0:	dfc00115 	stw	ra,4(sp)
   4b1e4:	2021883a 	mov	r16,r4
   4b1e8:	0046cd80 	call	46cd8 <_malloc_r>
   4b1ec:	8080b715 	stw	r2,732(r16)
   4b1f0:	1009883a 	mov	r4,r2
   4b1f4:	10000826 	beq	r2,zero,4b218 <_init_signal_r+0x54>
   4b1f8:	01802004 	movi	r6,128
   4b1fc:	000b883a 	mov	r5,zero
   4b200:	00477840 	call	47784 <memset>
   4b204:	0005883a 	mov	r2,zero
   4b208:	dfc00117 	ldw	ra,4(sp)
   4b20c:	dc000017 	ldw	r16,0(sp)
   4b210:	dec00204 	addi	sp,sp,8
   4b214:	f800283a 	ret
   4b218:	00bfffc4 	movi	r2,-1
   4b21c:	003ffa06 	br	4b208 <_init_signal_r+0x44>

0004b220 <_signal_r>:
   4b220:	defffc04 	addi	sp,sp,-16
   4b224:	dc400115 	stw	r17,4(sp)
   4b228:	dfc00315 	stw	ra,12(sp)
   4b22c:	dc800215 	stw	r18,8(sp)
   4b230:	dc000015 	stw	r16,0(sp)
   4b234:	28800830 	cmpltui	r2,r5,32
   4b238:	2023883a 	mov	r17,r4
   4b23c:	10000e26 	beq	r2,zero,4b278 <_signal_r+0x58>
   4b240:	20c0b717 	ldw	r3,732(r4)
   4b244:	2821883a 	mov	r16,r5
   4b248:	3025883a 	mov	r18,r6
   4b24c:	18000e26 	beq	r3,zero,4b288 <_signal_r+0x68>
   4b250:	802090ba 	slli	r16,r16,2
   4b254:	1c07883a 	add	r3,r3,r16
   4b258:	18800017 	ldw	r2,0(r3)
   4b25c:	1c800015 	stw	r18,0(r3)
   4b260:	dfc00317 	ldw	ra,12(sp)
   4b264:	dc800217 	ldw	r18,8(sp)
   4b268:	dc400117 	ldw	r17,4(sp)
   4b26c:	dc000017 	ldw	r16,0(sp)
   4b270:	dec00404 	addi	sp,sp,16
   4b274:	f800283a 	ret
   4b278:	00800584 	movi	r2,22
   4b27c:	20800015 	stw	r2,0(r4)
   4b280:	00bfffc4 	movi	r2,-1
   4b284:	003ff606 	br	4b260 <_signal_r+0x40>
   4b288:	01402004 	movi	r5,128
   4b28c:	0046cd80 	call	46cd8 <_malloc_r>
   4b290:	8880b715 	stw	r2,732(r17)
   4b294:	103ffa26 	beq	r2,zero,4b280 <_signal_r+0x60>
   4b298:	01802004 	movi	r6,128
   4b29c:	000b883a 	mov	r5,zero
   4b2a0:	1009883a 	mov	r4,r2
   4b2a4:	00477840 	call	47784 <memset>
   4b2a8:	1007883a 	mov	r3,r2
   4b2ac:	003fe806 	br	4b250 <_signal_r+0x30>

0004b2b0 <_raise_r>:
   4b2b0:	28800830 	cmpltui	r2,r5,32
   4b2b4:	10002626 	beq	r2,zero,4b350 <_raise_r+0xa0>
   4b2b8:	2080b717 	ldw	r2,732(r4)
   4b2bc:	defffd04 	addi	sp,sp,-12
   4b2c0:	dc000115 	stw	r16,4(sp)
   4b2c4:	dfc00215 	stw	ra,8(sp)
   4b2c8:	2821883a 	mov	r16,r5
   4b2cc:	10001026 	beq	r2,zero,4b310 <_raise_r+0x60>
   4b2d0:	280690ba 	slli	r3,r5,2
   4b2d4:	10c5883a 	add	r2,r2,r3
   4b2d8:	10c00017 	ldw	r3,0(r2)
   4b2dc:	18000c26 	beq	r3,zero,4b310 <_raise_r+0x60>
   4b2e0:	19400060 	cmpeqi	r5,r3,1
   4b2e4:	2800051e 	bne	r5,zero,4b2fc <_raise_r+0x4c>
   4b2e8:	197fffd8 	cmpnei	r5,r3,-1
   4b2ec:	28001126 	beq	r5,zero,4b334 <_raise_r+0x84>
   4b2f0:	10000015 	stw	zero,0(r2)
   4b2f4:	8009883a 	mov	r4,r16
   4b2f8:	183ee83a 	callr	r3
   4b2fc:	0005883a 	mov	r2,zero
   4b300:	dfc00217 	ldw	ra,8(sp)
   4b304:	dc000117 	ldw	r16,4(sp)
   4b308:	dec00304 	addi	sp,sp,12
   4b30c:	f800283a 	ret
   4b310:	d9000015 	stw	r4,0(sp)
   4b314:	004b6e40 	call	4b6e4 <_getpid_r>
   4b318:	d9000017 	ldw	r4,0(sp)
   4b31c:	800d883a 	mov	r6,r16
   4b320:	100b883a 	mov	r5,r2
   4b324:	dfc00217 	ldw	ra,8(sp)
   4b328:	dc000117 	ldw	r16,4(sp)
   4b32c:	dec00304 	addi	sp,sp,12
   4b330:	004b6841 	jmpi	4b684 <_kill_r>
   4b334:	00800584 	movi	r2,22
   4b338:	20800015 	stw	r2,0(r4)
   4b33c:	00800044 	movi	r2,1
   4b340:	dfc00217 	ldw	ra,8(sp)
   4b344:	dc000117 	ldw	r16,4(sp)
   4b348:	dec00304 	addi	sp,sp,12
   4b34c:	f800283a 	ret
   4b350:	00800584 	movi	r2,22
   4b354:	20800015 	stw	r2,0(r4)
   4b358:	00bfffc4 	movi	r2,-1
   4b35c:	f800283a 	ret

0004b360 <__sigtramp_r>:
   4b360:	28800830 	cmpltui	r2,r5,32
   4b364:	10002b26 	beq	r2,zero,4b414 <__sigtramp_r+0xb4>
   4b368:	20c0b717 	ldw	r3,732(r4)
   4b36c:	defffd04 	addi	sp,sp,-12
   4b370:	dc400115 	stw	r17,4(sp)
   4b374:	dc000015 	stw	r16,0(sp)
   4b378:	dfc00215 	stw	ra,8(sp)
   4b37c:	2821883a 	mov	r16,r5
   4b380:	2023883a 	mov	r17,r4
   4b384:	18001726 	beq	r3,zero,4b3e4 <__sigtramp_r+0x84>
   4b388:	800490ba 	slli	r2,r16,2
   4b38c:	1887883a 	add	r3,r3,r2
   4b390:	18800017 	ldw	r2,0(r3)
   4b394:	10000d26 	beq	r2,zero,4b3cc <__sigtramp_r+0x6c>
   4b398:	113fffe0 	cmpeqi	r4,r2,-1
   4b39c:	20000f1e 	bne	r4,zero,4b3dc <__sigtramp_r+0x7c>
   4b3a0:	11000060 	cmpeqi	r4,r2,1
   4b3a4:	20000b1e 	bne	r4,zero,4b3d4 <__sigtramp_r+0x74>
   4b3a8:	18000015 	stw	zero,0(r3)
   4b3ac:	8009883a 	mov	r4,r16
   4b3b0:	103ee83a 	callr	r2
   4b3b4:	0005883a 	mov	r2,zero
   4b3b8:	dfc00217 	ldw	ra,8(sp)
   4b3bc:	dc400117 	ldw	r17,4(sp)
   4b3c0:	dc000017 	ldw	r16,0(sp)
   4b3c4:	dec00304 	addi	sp,sp,12
   4b3c8:	f800283a 	ret
   4b3cc:	00800044 	movi	r2,1
   4b3d0:	003ff906 	br	4b3b8 <__sigtramp_r+0x58>
   4b3d4:	008000c4 	movi	r2,3
   4b3d8:	003ff706 	br	4b3b8 <__sigtramp_r+0x58>
   4b3dc:	00800084 	movi	r2,2
   4b3e0:	003ff506 	br	4b3b8 <__sigtramp_r+0x58>
   4b3e4:	01402004 	movi	r5,128
   4b3e8:	0046cd80 	call	46cd8 <_malloc_r>
   4b3ec:	8880b715 	stw	r2,732(r17)
   4b3f0:	10000626 	beq	r2,zero,4b40c <__sigtramp_r+0xac>
   4b3f4:	01802004 	movi	r6,128
   4b3f8:	000b883a 	mov	r5,zero
   4b3fc:	1009883a 	mov	r4,r2
   4b400:	00477840 	call	47784 <memset>
   4b404:	1007883a 	mov	r3,r2
   4b408:	003fdf06 	br	4b388 <__sigtramp_r+0x28>
   4b40c:	00bfffc4 	movi	r2,-1
   4b410:	003fe906 	br	4b3b8 <__sigtramp_r+0x58>
   4b414:	00bfffc4 	movi	r2,-1
   4b418:	f800283a 	ret

0004b41c <raise>:
   4b41c:	defffd04 	addi	sp,sp,-12
   4b420:	dc400115 	stw	r17,4(sp)
   4b424:	00c00174 	movhi	r3,5
   4b428:	dfc00215 	stw	ra,8(sp)
   4b42c:	dc000015 	stw	r16,0(sp)
   4b430:	20800830 	cmpltui	r2,r4,32
   4b434:	1c4d6c17 	ldw	r17,13744(r3)
   4b438:	10002126 	beq	r2,zero,4b4c0 <raise+0xa4>
   4b43c:	8880b717 	ldw	r2,732(r17)
   4b440:	2021883a 	mov	r16,r4
   4b444:	10001026 	beq	r2,zero,4b488 <raise+0x6c>
   4b448:	200690ba 	slli	r3,r4,2
   4b44c:	10c5883a 	add	r2,r2,r3
   4b450:	10c00017 	ldw	r3,0(r2)
   4b454:	18000c26 	beq	r3,zero,4b488 <raise+0x6c>
   4b458:	19400060 	cmpeqi	r5,r3,1
   4b45c:	2800041e 	bne	r5,zero,4b470 <raise+0x54>
   4b460:	197fffd8 	cmpnei	r5,r3,-1
   4b464:	28001226 	beq	r5,zero,4b4b0 <raise+0x94>
   4b468:	10000015 	stw	zero,0(r2)
   4b46c:	183ee83a 	callr	r3
   4b470:	0005883a 	mov	r2,zero
   4b474:	dfc00217 	ldw	ra,8(sp)
   4b478:	dc400117 	ldw	r17,4(sp)
   4b47c:	dc000017 	ldw	r16,0(sp)
   4b480:	dec00304 	addi	sp,sp,12
   4b484:	f800283a 	ret
   4b488:	8809883a 	mov	r4,r17
   4b48c:	004b6e40 	call	4b6e4 <_getpid_r>
   4b490:	800d883a 	mov	r6,r16
   4b494:	100b883a 	mov	r5,r2
   4b498:	8809883a 	mov	r4,r17
   4b49c:	dfc00217 	ldw	ra,8(sp)
   4b4a0:	dc400117 	ldw	r17,4(sp)
   4b4a4:	dc000017 	ldw	r16,0(sp)
   4b4a8:	dec00304 	addi	sp,sp,12
   4b4ac:	004b6841 	jmpi	4b684 <_kill_r>
   4b4b0:	00800584 	movi	r2,22
   4b4b4:	88800015 	stw	r2,0(r17)
   4b4b8:	00800044 	movi	r2,1
   4b4bc:	003fed06 	br	4b474 <raise+0x58>
   4b4c0:	00800584 	movi	r2,22
   4b4c4:	88800015 	stw	r2,0(r17)
   4b4c8:	00bfffc4 	movi	r2,-1
   4b4cc:	003fe906 	br	4b474 <raise+0x58>

0004b4d0 <signal>:
   4b4d0:	defffc04 	addi	sp,sp,-16
   4b4d4:	dc800215 	stw	r18,8(sp)
   4b4d8:	00c00174 	movhi	r3,5
   4b4dc:	dfc00315 	stw	ra,12(sp)
   4b4e0:	dc400115 	stw	r17,4(sp)
   4b4e4:	dc000015 	stw	r16,0(sp)
   4b4e8:	20800830 	cmpltui	r2,r4,32
   4b4ec:	1c8d6c17 	ldw	r18,13744(r3)
   4b4f0:	10000e26 	beq	r2,zero,4b52c <signal+0x5c>
   4b4f4:	2021883a 	mov	r16,r4
   4b4f8:	9100b717 	ldw	r4,732(r18)
   4b4fc:	2823883a 	mov	r17,r5
   4b500:	20000e26 	beq	r4,zero,4b53c <signal+0x6c>
   4b504:	802090ba 	slli	r16,r16,2
   4b508:	2409883a 	add	r4,r4,r16
   4b50c:	20800017 	ldw	r2,0(r4)
   4b510:	24400015 	stw	r17,0(r4)
   4b514:	dfc00317 	ldw	ra,12(sp)
   4b518:	dc800217 	ldw	r18,8(sp)
   4b51c:	dc400117 	ldw	r17,4(sp)
   4b520:	dc000017 	ldw	r16,0(sp)
   4b524:	dec00404 	addi	sp,sp,16
   4b528:	f800283a 	ret
   4b52c:	00800584 	movi	r2,22
   4b530:	90800015 	stw	r2,0(r18)
   4b534:	00bfffc4 	movi	r2,-1
   4b538:	003ff606 	br	4b514 <signal+0x44>
   4b53c:	9009883a 	mov	r4,r18
   4b540:	01402004 	movi	r5,128
   4b544:	0046cd80 	call	46cd8 <_malloc_r>
   4b548:	9080b715 	stw	r2,732(r18)
   4b54c:	1009883a 	mov	r4,r2
   4b550:	103ff826 	beq	r2,zero,4b534 <signal+0x64>
   4b554:	01802004 	movi	r6,128
   4b558:	000b883a 	mov	r5,zero
   4b55c:	00477840 	call	47784 <memset>
   4b560:	1009883a 	mov	r4,r2
   4b564:	003fe706 	br	4b504 <signal+0x34>

0004b568 <_init_signal>:
   4b568:	defffe04 	addi	sp,sp,-8
   4b56c:	00800174 	movhi	r2,5
   4b570:	dc000015 	stw	r16,0(sp)
   4b574:	140d6c17 	ldw	r16,13744(r2)
   4b578:	dfc00115 	stw	ra,4(sp)
   4b57c:	8080b717 	ldw	r2,732(r16)
   4b580:	10000526 	beq	r2,zero,4b598 <_init_signal+0x30>
   4b584:	0005883a 	mov	r2,zero
   4b588:	dfc00117 	ldw	ra,4(sp)
   4b58c:	dc000017 	ldw	r16,0(sp)
   4b590:	dec00204 	addi	sp,sp,8
   4b594:	f800283a 	ret
   4b598:	8009883a 	mov	r4,r16
   4b59c:	01402004 	movi	r5,128
   4b5a0:	0046cd80 	call	46cd8 <_malloc_r>
   4b5a4:	8080b715 	stw	r2,732(r16)
   4b5a8:	1009883a 	mov	r4,r2
   4b5ac:	10000426 	beq	r2,zero,4b5c0 <_init_signal+0x58>
   4b5b0:	01802004 	movi	r6,128
   4b5b4:	000b883a 	mov	r5,zero
   4b5b8:	00477840 	call	47784 <memset>
   4b5bc:	003ff106 	br	4b584 <_init_signal+0x1c>
   4b5c0:	00bfffc4 	movi	r2,-1
   4b5c4:	003ff006 	br	4b588 <_init_signal+0x20>

0004b5c8 <__sigtramp>:
   4b5c8:	defffd04 	addi	sp,sp,-12
   4b5cc:	dc400115 	stw	r17,4(sp)
   4b5d0:	00c00174 	movhi	r3,5
   4b5d4:	dfc00215 	stw	ra,8(sp)
   4b5d8:	dc000015 	stw	r16,0(sp)
   4b5dc:	20800830 	cmpltui	r2,r4,32
   4b5e0:	1c4d6c17 	ldw	r17,13744(r3)
   4b5e4:	10002526 	beq	r2,zero,4b67c <__sigtramp+0xb4>
   4b5e8:	88c0b717 	ldw	r3,732(r17)
   4b5ec:	2021883a 	mov	r16,r4
   4b5f0:	18001726 	beq	r3,zero,4b650 <__sigtramp+0x88>
   4b5f4:	800490ba 	slli	r2,r16,2
   4b5f8:	1887883a 	add	r3,r3,r2
   4b5fc:	18800017 	ldw	r2,0(r3)
   4b600:	10000d26 	beq	r2,zero,4b638 <__sigtramp+0x70>
   4b604:	113fffe0 	cmpeqi	r4,r2,-1
   4b608:	20000f1e 	bne	r4,zero,4b648 <__sigtramp+0x80>
   4b60c:	11000060 	cmpeqi	r4,r2,1
   4b610:	20000b1e 	bne	r4,zero,4b640 <__sigtramp+0x78>
   4b614:	18000015 	stw	zero,0(r3)
   4b618:	8009883a 	mov	r4,r16
   4b61c:	103ee83a 	callr	r2
   4b620:	0005883a 	mov	r2,zero
   4b624:	dfc00217 	ldw	ra,8(sp)
   4b628:	dc400117 	ldw	r17,4(sp)
   4b62c:	dc000017 	ldw	r16,0(sp)
   4b630:	dec00304 	addi	sp,sp,12
   4b634:	f800283a 	ret
   4b638:	00800044 	movi	r2,1
   4b63c:	003ff906 	br	4b624 <__sigtramp+0x5c>
   4b640:	008000c4 	movi	r2,3
   4b644:	003ff706 	br	4b624 <__sigtramp+0x5c>
   4b648:	00800084 	movi	r2,2
   4b64c:	003ff506 	br	4b624 <__sigtramp+0x5c>
   4b650:	01402004 	movi	r5,128
   4b654:	8809883a 	mov	r4,r17
   4b658:	0046cd80 	call	46cd8 <_malloc_r>
   4b65c:	8880b715 	stw	r2,732(r17)
   4b660:	10000626 	beq	r2,zero,4b67c <__sigtramp+0xb4>
   4b664:	01802004 	movi	r6,128
   4b668:	000b883a 	mov	r5,zero
   4b66c:	1009883a 	mov	r4,r2
   4b670:	00477840 	call	47784 <memset>
   4b674:	1007883a 	mov	r3,r2
   4b678:	003fde06 	br	4b5f4 <__sigtramp+0x2c>
   4b67c:	00bfffc4 	movi	r2,-1
   4b680:	003fe806 	br	4b624 <__sigtramp+0x5c>

0004b684 <_kill_r>:
   4b684:	2807883a 	mov	r3,r5
   4b688:	defffe04 	addi	sp,sp,-8
   4b68c:	dc000015 	stw	r16,0(sp)
   4b690:	00800174 	movhi	r2,5
   4b694:	300b883a 	mov	r5,r6
   4b698:	2021883a 	mov	r16,r4
   4b69c:	1809883a 	mov	r4,r3
   4b6a0:	dfc00115 	stw	ra,4(sp)
   4b6a4:	10147815 	stw	zero,20960(r2)
   4b6a8:	004ef940 	call	4ef94 <kill>
   4b6ac:	10ffffd8 	cmpnei	r3,r2,-1
   4b6b0:	18000426 	beq	r3,zero,4b6c4 <_kill_r+0x40>
   4b6b4:	dfc00117 	ldw	ra,4(sp)
   4b6b8:	dc000017 	ldw	r16,0(sp)
   4b6bc:	dec00204 	addi	sp,sp,8
   4b6c0:	f800283a 	ret
   4b6c4:	00c00174 	movhi	r3,5
   4b6c8:	18d47817 	ldw	r3,20960(r3)
   4b6cc:	183ff926 	beq	r3,zero,4b6b4 <_kill_r+0x30>
   4b6d0:	80c00015 	stw	r3,0(r16)
   4b6d4:	dfc00117 	ldw	ra,4(sp)
   4b6d8:	dc000017 	ldw	r16,0(sp)
   4b6dc:	dec00204 	addi	sp,sp,8
   4b6e0:	f800283a 	ret

0004b6e4 <_getpid_r>:
   4b6e4:	004ebc01 	jmpi	4ebc0 <getpid>

0004b6e8 <__udivdi3>:
   4b6e8:	defff504 	addi	sp,sp,-44
   4b6ec:	dc800315 	stw	r18,12(sp)
   4b6f0:	dc000115 	stw	r16,4(sp)
   4b6f4:	dfc00a15 	stw	ra,40(sp)
   4b6f8:	df000915 	stw	fp,36(sp)
   4b6fc:	ddc00815 	stw	r23,32(sp)
   4b700:	dd800715 	stw	r22,28(sp)
   4b704:	dd400615 	stw	r21,24(sp)
   4b708:	dd000515 	stw	r20,20(sp)
   4b70c:	dcc00415 	stw	r19,16(sp)
   4b710:	dc400215 	stw	r17,8(sp)
   4b714:	2025883a 	mov	r18,r4
   4b718:	2821883a 	mov	r16,r5
   4b71c:	3800401e 	bne	r7,zero,4b820 <__udivdi3+0x138>
   4b720:	3023883a 	mov	r17,r6
   4b724:	2027883a 	mov	r19,r4
   4b728:	29805d2e 	bgeu	r5,r6,4b8a0 <__udivdi3+0x1b8>
   4b72c:	00bfffd4 	movui	r2,65535
   4b730:	282d883a 	mov	r22,r5
   4b734:	1180982e 	bgeu	r2,r6,4b998 <__udivdi3+0x2b0>
   4b738:	00804034 	movhi	r2,256
   4b73c:	30812536 	bltu	r6,r2,4bbd4 <__udivdi3+0x4ec>
   4b740:	00c00604 	movi	r3,24
   4b744:	30cad83a 	srl	r5,r6,r3
   4b748:	00800174 	movhi	r2,5
   4b74c:	01000804 	movi	r4,32
   4b750:	2885883a 	add	r2,r5,r2
   4b754:	1084ef03 	ldbu	r2,5052(r2)
   4b758:	10c5883a 	add	r2,r2,r3
   4b75c:	2087c83a 	sub	r3,r4,r2
   4b760:	20800526 	beq	r4,r2,4b778 <__udivdi3+0x90>
   4b764:	80ec983a 	sll	r22,r16,r3
   4b768:	9084d83a 	srl	r2,r18,r2
   4b76c:	30e2983a 	sll	r17,r6,r3
   4b770:	90e6983a 	sll	r19,r18,r3
   4b774:	15acb03a 	or	r22,r2,r22
   4b778:	882ad43a 	srli	r21,r17,16
   4b77c:	b009883a 	mov	r4,r22
   4b780:	8d3fffcc 	andi	r20,r17,65535
   4b784:	a80b883a 	mov	r5,r21
   4b788:	004c2a00 	call	4c2a0 <__umodsi3>
   4b78c:	b009883a 	mov	r4,r22
   4b790:	a80b883a 	mov	r5,r21
   4b794:	1025883a 	mov	r18,r2
   4b798:	004c23c0 	call	4c23c <__udivsi3>
   4b79c:	9008943a 	slli	r4,r18,16
   4b7a0:	9806d43a 	srli	r3,r19,16
   4b7a4:	1021883a 	mov	r16,r2
   4b7a8:	a085383a 	mul	r2,r20,r2
   4b7ac:	20c8b03a 	or	r4,r4,r3
   4b7b0:	2080052e 	bgeu	r4,r2,4b7c8 <__udivdi3+0xe0>
   4b7b4:	2449883a 	add	r4,r4,r17
   4b7b8:	80ffffc4 	addi	r3,r16,-1
   4b7bc:	24400136 	bltu	r4,r17,4b7c4 <__udivdi3+0xdc>
   4b7c0:	20811a36 	bltu	r4,r2,4bc2c <__udivdi3+0x544>
   4b7c4:	1821883a 	mov	r16,r3
   4b7c8:	20a5c83a 	sub	r18,r4,r2
   4b7cc:	9009883a 	mov	r4,r18
   4b7d0:	a80b883a 	mov	r5,r21
   4b7d4:	004c2a00 	call	4c2a0 <__umodsi3>
   4b7d8:	9009883a 	mov	r4,r18
   4b7dc:	a80b883a 	mov	r5,r21
   4b7e0:	1025883a 	mov	r18,r2
   4b7e4:	004c23c0 	call	4c23c <__udivsi3>
   4b7e8:	9006943a 	slli	r3,r18,16
   4b7ec:	a0a9383a 	mul	r20,r20,r2
   4b7f0:	9cffffcc 	andi	r19,r19,65535
   4b7f4:	1cc6b03a 	or	r3,r3,r19
   4b7f8:	1d00052e 	bgeu	r3,r20,4b810 <__udivdi3+0x128>
   4b7fc:	88c7883a 	add	r3,r17,r3
   4b800:	113fffc4 	addi	r4,r2,-1
   4b804:	1c400136 	bltu	r3,r17,4b80c <__udivdi3+0x124>
   4b808:	1d010136 	bltu	r3,r20,4bc10 <__udivdi3+0x528>
   4b80c:	2005883a 	mov	r2,r4
   4b810:	800c943a 	slli	r6,r16,16
   4b814:	0007883a 	mov	r3,zero
   4b818:	3084b03a 	or	r2,r6,r2
   4b81c:	00000306 	br	4b82c <__udivdi3+0x144>
   4b820:	29c00e2e 	bgeu	r5,r7,4b85c <__udivdi3+0x174>
   4b824:	0007883a 	mov	r3,zero
   4b828:	0005883a 	mov	r2,zero
   4b82c:	dfc00a17 	ldw	ra,40(sp)
   4b830:	df000917 	ldw	fp,36(sp)
   4b834:	ddc00817 	ldw	r23,32(sp)
   4b838:	dd800717 	ldw	r22,28(sp)
   4b83c:	dd400617 	ldw	r21,24(sp)
   4b840:	dd000517 	ldw	r20,20(sp)
   4b844:	dcc00417 	ldw	r19,16(sp)
   4b848:	dc800317 	ldw	r18,12(sp)
   4b84c:	dc400217 	ldw	r17,8(sp)
   4b850:	dc000117 	ldw	r16,4(sp)
   4b854:	dec00b04 	addi	sp,sp,44
   4b858:	f800283a 	ret
   4b85c:	00bfffd4 	movui	r2,65535
   4b860:	11c0562e 	bgeu	r2,r7,4b9bc <__udivdi3+0x2d4>
   4b864:	00804034 	movhi	r2,256
   4b868:	3880d836 	bltu	r7,r2,4bbcc <__udivdi3+0x4e4>
   4b86c:	00c00604 	movi	r3,24
   4b870:	38cad83a 	srl	r5,r7,r3
   4b874:	00800174 	movhi	r2,5
   4b878:	01000804 	movi	r4,32
   4b87c:	2885883a 	add	r2,r5,r2
   4b880:	1084ef03 	ldbu	r2,5052(r2)
   4b884:	10c5883a 	add	r2,r2,r3
   4b888:	20adc83a 	sub	r22,r4,r2
   4b88c:	2080801e 	bne	r4,r2,4ba90 <__udivdi3+0x3a8>
   4b890:	3c00d236 	bltu	r7,r16,4bbdc <__udivdi3+0x4f4>
   4b894:	9185403a 	cmpgeu	r2,r18,r6
   4b898:	0007883a 	mov	r3,zero
   4b89c:	003fe306 	br	4b82c <__udivdi3+0x144>
   4b8a0:	3000401e 	bne	r6,zero,4b9a4 <__udivdi3+0x2bc>
   4b8a4:	000b883a 	mov	r5,zero
   4b8a8:	01000044 	movi	r4,1
   4b8ac:	004c23c0 	call	4c23c <__udivsi3>
   4b8b0:	1023883a 	mov	r17,r2
   4b8b4:	88804028 	cmpgeui	r2,r17,256
   4b8b8:	100490fa 	slli	r2,r2,3
   4b8bc:	888ad83a 	srl	r5,r17,r2
   4b8c0:	00c00174 	movhi	r3,5
   4b8c4:	01000804 	movi	r4,32
   4b8c8:	28c7883a 	add	r3,r5,r3
   4b8cc:	18c4ef03 	ldbu	r3,5052(r3)
   4b8d0:	1887883a 	add	r3,r3,r2
   4b8d4:	20cdc83a 	sub	r6,r4,r3
   4b8d8:	20c03b1e 	bne	r4,r3,4b9c8 <__udivdi3+0x2e0>
   4b8dc:	8828d43a 	srli	r20,r17,16
   4b8e0:	8461c83a 	sub	r16,r16,r17
   4b8e4:	8d7fffcc 	andi	r21,r17,65535
   4b8e8:	00c00044 	movi	r3,1
   4b8ec:	8009883a 	mov	r4,r16
   4b8f0:	a00b883a 	mov	r5,r20
   4b8f4:	d8c00015 	stw	r3,0(sp)
   4b8f8:	004c2a00 	call	4c2a0 <__umodsi3>
   4b8fc:	8009883a 	mov	r4,r16
   4b900:	a00b883a 	mov	r5,r20
   4b904:	1025883a 	mov	r18,r2
   4b908:	004c23c0 	call	4c23c <__udivsi3>
   4b90c:	9008943a 	slli	r4,r18,16
   4b910:	980ad43a 	srli	r5,r19,16
   4b914:	1021883a 	mov	r16,r2
   4b918:	1545383a 	mul	r2,r2,r21
   4b91c:	2148b03a 	or	r4,r4,r5
   4b920:	d8c00017 	ldw	r3,0(sp)
   4b924:	2080052e 	bgeu	r4,r2,4b93c <__udivdi3+0x254>
   4b928:	2449883a 	add	r4,r4,r17
   4b92c:	817fffc4 	addi	r5,r16,-1
   4b930:	24400136 	bltu	r4,r17,4b938 <__udivdi3+0x250>
   4b934:	2080b836 	bltu	r4,r2,4bc18 <__udivdi3+0x530>
   4b938:	2821883a 	mov	r16,r5
   4b93c:	20a5c83a 	sub	r18,r4,r2
   4b940:	9009883a 	mov	r4,r18
   4b944:	a00b883a 	mov	r5,r20
   4b948:	d8c00015 	stw	r3,0(sp)
   4b94c:	004c2a00 	call	4c2a0 <__umodsi3>
   4b950:	9009883a 	mov	r4,r18
   4b954:	a00b883a 	mov	r5,r20
   4b958:	1025883a 	mov	r18,r2
   4b95c:	004c23c0 	call	4c23c <__udivsi3>
   4b960:	9008943a 	slli	r4,r18,16
   4b964:	156b383a 	mul	r21,r2,r21
   4b968:	9cffffcc 	andi	r19,r19,65535
   4b96c:	24c8b03a 	or	r4,r4,r19
   4b970:	d8c00017 	ldw	r3,0(sp)
   4b974:	2540052e 	bgeu	r4,r21,4b98c <__udivdi3+0x2a4>
   4b978:	8909883a 	add	r4,r17,r4
   4b97c:	117fffc4 	addi	r5,r2,-1
   4b980:	24400136 	bltu	r4,r17,4b988 <__udivdi3+0x2a0>
   4b984:	2540a036 	bltu	r4,r21,4bc08 <__udivdi3+0x520>
   4b988:	2805883a 	mov	r2,r5
   4b98c:	800c943a 	slli	r6,r16,16
   4b990:	3084b03a 	or	r2,r6,r2
   4b994:	003fa506 	br	4b82c <__udivdi3+0x144>
   4b998:	30c04028 	cmpgeui	r3,r6,256
   4b99c:	180690fa 	slli	r3,r3,3
   4b9a0:	003f6806 	br	4b744 <__udivdi3+0x5c>
   4b9a4:	00bfffd4 	movui	r2,65535
   4b9a8:	11bfc22e 	bgeu	r2,r6,4b8b4 <__udivdi3+0x1cc>
   4b9ac:	00804034 	movhi	r2,256
   4b9b0:	30809c2e 	bgeu	r6,r2,4bc24 <__udivdi3+0x53c>
   4b9b4:	00800404 	movi	r2,16
   4b9b8:	003fc006 	br	4b8bc <__udivdi3+0x1d4>
   4b9bc:	38c04028 	cmpgeui	r3,r7,256
   4b9c0:	180690fa 	slli	r3,r3,3
   4b9c4:	003faa06 	br	4b870 <__udivdi3+0x188>
   4b9c8:	89a2983a 	sll	r17,r17,r6
   4b9cc:	80ead83a 	srl	r21,r16,r3
   4b9d0:	81a0983a 	sll	r16,r16,r6
   4b9d4:	8828d43a 	srli	r20,r17,16
   4b9d8:	90c6d83a 	srl	r3,r18,r3
   4b9dc:	a809883a 	mov	r4,r21
   4b9e0:	a00b883a 	mov	r5,r20
   4b9e4:	1c2cb03a 	or	r22,r3,r16
   4b9e8:	91a6983a 	sll	r19,r18,r6
   4b9ec:	004c2a00 	call	4c2a0 <__umodsi3>
   4b9f0:	a809883a 	mov	r4,r21
   4b9f4:	a00b883a 	mov	r5,r20
   4b9f8:	1021883a 	mov	r16,r2
   4b9fc:	004c23c0 	call	4c23c <__udivsi3>
   4ba00:	8008943a 	slli	r4,r16,16
   4ba04:	b00ad43a 	srli	r5,r22,16
   4ba08:	8d7fffcc 	andi	r21,r17,65535
   4ba0c:	1025883a 	mov	r18,r2
   4ba10:	a885383a 	mul	r2,r21,r2
   4ba14:	2148b03a 	or	r4,r4,r5
   4ba18:	2080062e 	bgeu	r4,r2,4ba34 <__udivdi3+0x34c>
   4ba1c:	2449883a 	add	r4,r4,r17
   4ba20:	90ffffc4 	addi	r3,r18,-1
   4ba24:	24407636 	bltu	r4,r17,4bc00 <__udivdi3+0x518>
   4ba28:	2080752e 	bgeu	r4,r2,4bc00 <__udivdi3+0x518>
   4ba2c:	94bfff84 	addi	r18,r18,-2
   4ba30:	2449883a 	add	r4,r4,r17
   4ba34:	20a1c83a 	sub	r16,r4,r2
   4ba38:	8009883a 	mov	r4,r16
   4ba3c:	a00b883a 	mov	r5,r20
   4ba40:	004c2a00 	call	4c2a0 <__umodsi3>
   4ba44:	8009883a 	mov	r4,r16
   4ba48:	a00b883a 	mov	r5,r20
   4ba4c:	1021883a 	mov	r16,r2
   4ba50:	8020943a 	slli	r16,r16,16
   4ba54:	004c23c0 	call	4c23c <__udivsi3>
   4ba58:	a889383a 	mul	r4,r21,r2
   4ba5c:	b5bfffcc 	andi	r22,r22,65535
   4ba60:	85a0b03a 	or	r16,r16,r22
   4ba64:	8100062e 	bgeu	r16,r4,4ba80 <__udivdi3+0x398>
   4ba68:	8461883a 	add	r16,r16,r17
   4ba6c:	10ffffc4 	addi	r3,r2,-1
   4ba70:	84405f36 	bltu	r16,r17,4bbf0 <__udivdi3+0x508>
   4ba74:	81005e2e 	bgeu	r16,r4,4bbf0 <__udivdi3+0x508>
   4ba78:	10bfff84 	addi	r2,r2,-2
   4ba7c:	8461883a 	add	r16,r16,r17
   4ba80:	9006943a 	slli	r3,r18,16
   4ba84:	8121c83a 	sub	r16,r16,r4
   4ba88:	1886b03a 	or	r3,r3,r2
   4ba8c:	003f9706 	br	4b8ec <__udivdi3+0x204>
   4ba90:	30aed83a 	srl	r23,r6,r2
   4ba94:	3d8e983a 	sll	r7,r7,r22
   4ba98:	80a8d83a 	srl	r20,r16,r2
   4ba9c:	90a2d83a 	srl	r17,r18,r2
   4baa0:	b9eeb03a 	or	r23,r23,r7
   4baa4:	b826d43a 	srli	r19,r23,16
   4baa8:	8584983a 	sll	r2,r16,r22
   4baac:	a009883a 	mov	r4,r20
   4bab0:	980b883a 	mov	r5,r19
   4bab4:	35aa983a 	sll	r21,r6,r22
   4bab8:	88a2b03a 	or	r17,r17,r2
   4babc:	004c2a00 	call	4c2a0 <__umodsi3>
   4bac0:	a009883a 	mov	r4,r20
   4bac4:	980b883a 	mov	r5,r19
   4bac8:	1029883a 	mov	r20,r2
   4bacc:	004c23c0 	call	4c23c <__udivsi3>
   4bad0:	a008943a 	slli	r4,r20,16
   4bad4:	8806d43a 	srli	r3,r17,16
   4bad8:	bf3fffcc 	andi	fp,r23,65535
   4badc:	1021883a 	mov	r16,r2
   4bae0:	e085383a 	mul	r2,fp,r2
   4bae4:	20c8b03a 	or	r4,r4,r3
   4bae8:	2080062e 	bgeu	r4,r2,4bb04 <__udivdi3+0x41c>
   4baec:	25c9883a 	add	r4,r4,r23
   4baf0:	80ffffc4 	addi	r3,r16,-1
   4baf4:	25c04036 	bltu	r4,r23,4bbf8 <__udivdi3+0x510>
   4baf8:	20803f2e 	bgeu	r4,r2,4bbf8 <__udivdi3+0x510>
   4bafc:	843fff84 	addi	r16,r16,-2
   4bb00:	25c9883a 	add	r4,r4,r23
   4bb04:	20a9c83a 	sub	r20,r4,r2
   4bb08:	980b883a 	mov	r5,r19
   4bb0c:	a009883a 	mov	r4,r20
   4bb10:	004c2a00 	call	4c2a0 <__umodsi3>
   4bb14:	980b883a 	mov	r5,r19
   4bb18:	a009883a 	mov	r4,r20
   4bb1c:	1027883a 	mov	r19,r2
   4bb20:	004c23c0 	call	4c23c <__udivsi3>
   4bb24:	9806943a 	slli	r3,r19,16
   4bb28:	e0b9383a 	mul	fp,fp,r2
   4bb2c:	8c7fffcc 	andi	r17,r17,65535
   4bb30:	1c46b03a 	or	r3,r3,r17
   4bb34:	1009883a 	mov	r4,r2
   4bb38:	1f00062e 	bgeu	r3,fp,4bb54 <__udivdi3+0x46c>
   4bb3c:	1dc7883a 	add	r3,r3,r23
   4bb40:	10bfffc4 	addi	r2,r2,-1
   4bb44:	1dc02836 	bltu	r3,r23,4bbe8 <__udivdi3+0x500>
   4bb48:	1f00272e 	bgeu	r3,fp,4bbe8 <__udivdi3+0x500>
   4bb4c:	213fff84 	addi	r4,r4,-2
   4bb50:	1dc7883a 	add	r3,r3,r23
   4bb54:	8004943a 	slli	r2,r16,16
   4bb58:	a80ed43a 	srli	r7,r21,16
   4bb5c:	217fffcc 	andi	r5,r4,65535
   4bb60:	1104b03a 	or	r2,r2,r4
   4bb64:	1008d43a 	srli	r4,r2,16
   4bb68:	ad7fffcc 	andi	r21,r21,65535
   4bb6c:	2d51383a 	mul	r8,r5,r21
   4bb70:	256b383a 	mul	r21,r4,r21
   4bb74:	29cb383a 	mul	r5,r5,r7
   4bb78:	400cd43a 	srli	r6,r8,16
   4bb7c:	21c9383a 	mul	r4,r4,r7
   4bb80:	2d4b883a 	add	r5,r5,r21
   4bb84:	314b883a 	add	r5,r6,r5
   4bb88:	1f07c83a 	sub	r3,r3,fp
   4bb8c:	2d40022e 	bgeu	r5,r21,4bb98 <__udivdi3+0x4b0>
   4bb90:	01800074 	movhi	r6,1
   4bb94:	2189883a 	add	r4,r4,r6
   4bb98:	280cd43a 	srli	r6,r5,16
   4bb9c:	3109883a 	add	r4,r6,r4
   4bba0:	19000836 	bltu	r3,r4,4bbc4 <__udivdi3+0x4dc>
   4bba4:	19000226 	beq	r3,r4,4bbb0 <__udivdi3+0x4c8>
   4bba8:	0007883a 	mov	r3,zero
   4bbac:	003f1f06 	br	4b82c <__udivdi3+0x144>
   4bbb0:	280a943a 	slli	r5,r5,16
   4bbb4:	9588983a 	sll	r4,r18,r22
   4bbb8:	423fffcc 	andi	r8,r8,65535
   4bbbc:	2a0b883a 	add	r5,r5,r8
   4bbc0:	217ff92e 	bgeu	r4,r5,4bba8 <__udivdi3+0x4c0>
   4bbc4:	10bfffc4 	addi	r2,r2,-1
   4bbc8:	003ff706 	br	4bba8 <__udivdi3+0x4c0>
   4bbcc:	00c00404 	movi	r3,16
   4bbd0:	003f2706 	br	4b870 <__udivdi3+0x188>
   4bbd4:	00c00404 	movi	r3,16
   4bbd8:	003eda06 	br	4b744 <__udivdi3+0x5c>
   4bbdc:	0007883a 	mov	r3,zero
   4bbe0:	00800044 	movi	r2,1
   4bbe4:	003f1106 	br	4b82c <__udivdi3+0x144>
   4bbe8:	1009883a 	mov	r4,r2
   4bbec:	003fd906 	br	4bb54 <__udivdi3+0x46c>
   4bbf0:	1805883a 	mov	r2,r3
   4bbf4:	003fa206 	br	4ba80 <__udivdi3+0x398>
   4bbf8:	1821883a 	mov	r16,r3
   4bbfc:	003fc106 	br	4bb04 <__udivdi3+0x41c>
   4bc00:	1825883a 	mov	r18,r3
   4bc04:	003f8b06 	br	4ba34 <__udivdi3+0x34c>
   4bc08:	10bfff84 	addi	r2,r2,-2
   4bc0c:	003f5f06 	br	4b98c <__udivdi3+0x2a4>
   4bc10:	10bfff84 	addi	r2,r2,-2
   4bc14:	003efe06 	br	4b810 <__udivdi3+0x128>
   4bc18:	843fff84 	addi	r16,r16,-2
   4bc1c:	2449883a 	add	r4,r4,r17
   4bc20:	003f4606 	br	4b93c <__udivdi3+0x254>
   4bc24:	00800604 	movi	r2,24
   4bc28:	003f2406 	br	4b8bc <__udivdi3+0x1d4>
   4bc2c:	843fff84 	addi	r16,r16,-2
   4bc30:	2449883a 	add	r4,r4,r17
   4bc34:	003ee406 	br	4b7c8 <__udivdi3+0xe0>

0004bc38 <__umoddi3>:
   4bc38:	defff504 	addi	sp,sp,-44
   4bc3c:	dcc00415 	stw	r19,16(sp)
   4bc40:	dc000115 	stw	r16,4(sp)
   4bc44:	dfc00a15 	stw	ra,40(sp)
   4bc48:	df000915 	stw	fp,36(sp)
   4bc4c:	ddc00815 	stw	r23,32(sp)
   4bc50:	dd800715 	stw	r22,28(sp)
   4bc54:	dd400615 	stw	r21,24(sp)
   4bc58:	dd000515 	stw	r20,20(sp)
   4bc5c:	dc800315 	stw	r18,12(sp)
   4bc60:	dc400215 	stw	r17,8(sp)
   4bc64:	2827883a 	mov	r19,r5
   4bc68:	2021883a 	mov	r16,r4
   4bc6c:	38003b1e 	bne	r7,zero,4bd5c <__umoddi3+0x124>
   4bc70:	3029883a 	mov	r20,r6
   4bc74:	2025883a 	mov	r18,r4
   4bc78:	29805d2e 	bgeu	r5,r6,4bdf0 <__umoddi3+0x1b8>
   4bc7c:	00bfffd4 	movui	r2,65535
   4bc80:	282f883a 	mov	r23,r5
   4bc84:	11808e2e 	bgeu	r2,r6,4bec0 <__umoddi3+0x288>
   4bc88:	00804034 	movhi	r2,256
   4bc8c:	30811e36 	bltu	r6,r2,4c108 <__umoddi3+0x4d0>
   4bc90:	00c00604 	movi	r3,24
   4bc94:	30cad83a 	srl	r5,r6,r3
   4bc98:	00800174 	movhi	r2,5
   4bc9c:	01000804 	movi	r4,32
   4bca0:	2885883a 	add	r2,r5,r2
   4bca4:	1084ef03 	ldbu	r2,5052(r2)
   4bca8:	10c5883a 	add	r2,r2,r3
   4bcac:	20a3c83a 	sub	r17,r4,r2
   4bcb0:	20800526 	beq	r4,r2,4bcc8 <__umoddi3+0x90>
   4bcb4:	9c6e983a 	sll	r23,r19,r17
   4bcb8:	8084d83a 	srl	r2,r16,r2
   4bcbc:	3468983a 	sll	r20,r6,r17
   4bcc0:	8464983a 	sll	r18,r16,r17
   4bcc4:	15eeb03a 	or	r23,r2,r23
   4bcc8:	a02cd43a 	srli	r22,r20,16
   4bccc:	b809883a 	mov	r4,r23
   4bcd0:	a57fffcc 	andi	r21,r20,65535
   4bcd4:	b00b883a 	mov	r5,r22
   4bcd8:	004c2a00 	call	4c2a0 <__umodsi3>
   4bcdc:	b809883a 	mov	r4,r23
   4bce0:	b00b883a 	mov	r5,r22
   4bce4:	1021883a 	mov	r16,r2
   4bce8:	004c23c0 	call	4c23c <__udivsi3>
   4bcec:	8008943a 	slli	r4,r16,16
   4bcf0:	9006d43a 	srli	r3,r18,16
   4bcf4:	a885383a 	mul	r2,r21,r2
   4bcf8:	20c8b03a 	or	r4,r4,r3
   4bcfc:	2080032e 	bgeu	r4,r2,4bd0c <__umoddi3+0xd4>
   4bd00:	2509883a 	add	r4,r4,r20
   4bd04:	25000136 	bltu	r4,r20,4bd0c <__umoddi3+0xd4>
   4bd08:	20810d36 	bltu	r4,r2,4c140 <__umoddi3+0x508>
   4bd0c:	20a7c83a 	sub	r19,r4,r2
   4bd10:	b00b883a 	mov	r5,r22
   4bd14:	9809883a 	mov	r4,r19
   4bd18:	004c2a00 	call	4c2a0 <__umodsi3>
   4bd1c:	1021883a 	mov	r16,r2
   4bd20:	b00b883a 	mov	r5,r22
   4bd24:	9809883a 	mov	r4,r19
   4bd28:	8020943a 	slli	r16,r16,16
   4bd2c:	004c23c0 	call	4c23c <__udivsi3>
   4bd30:	a8ab383a 	mul	r21,r21,r2
   4bd34:	94bfffcc 	andi	r18,r18,65535
   4bd38:	84a0b03a 	or	r16,r16,r18
   4bd3c:	8540032e 	bgeu	r16,r21,4bd4c <__umoddi3+0x114>
   4bd40:	8521883a 	add	r16,r16,r20
   4bd44:	85000136 	bltu	r16,r20,4bd4c <__umoddi3+0x114>
   4bd48:	8540f736 	bltu	r16,r21,4c128 <__umoddi3+0x4f0>
   4bd4c:	8561c83a 	sub	r16,r16,r21
   4bd50:	8444d83a 	srl	r2,r16,r17
   4bd54:	0007883a 	mov	r3,zero
   4bd58:	00000406 	br	4bd6c <__umoddi3+0x134>
   4bd5c:	2807883a 	mov	r3,r5
   4bd60:	200b883a 	mov	r5,r4
   4bd64:	99c00d2e 	bgeu	r19,r7,4bd9c <__umoddi3+0x164>
   4bd68:	2005883a 	mov	r2,r4
   4bd6c:	dfc00a17 	ldw	ra,40(sp)
   4bd70:	df000917 	ldw	fp,36(sp)
   4bd74:	ddc00817 	ldw	r23,32(sp)
   4bd78:	dd800717 	ldw	r22,28(sp)
   4bd7c:	dd400617 	ldw	r21,24(sp)
   4bd80:	dd000517 	ldw	r20,20(sp)
   4bd84:	dcc00417 	ldw	r19,16(sp)
   4bd88:	dc800317 	ldw	r18,12(sp)
   4bd8c:	dc400217 	ldw	r17,8(sp)
   4bd90:	dc000117 	ldw	r16,4(sp)
   4bd94:	dec00b04 	addi	sp,sp,44
   4bd98:	f800283a 	ret
   4bd9c:	00bfffd4 	movui	r2,65535
   4bda0:	11c0502e 	bgeu	r2,r7,4bee4 <__umoddi3+0x2ac>
   4bda4:	00804034 	movhi	r2,256
   4bda8:	3880d936 	bltu	r7,r2,4c110 <__umoddi3+0x4d8>
   4bdac:	01000604 	movi	r4,24
   4bdb0:	3912d83a 	srl	r9,r7,r4
   4bdb4:	00800174 	movhi	r2,5
   4bdb8:	02000804 	movi	r8,32
   4bdbc:	4885883a 	add	r2,r9,r2
   4bdc0:	1504ef03 	ldbu	r20,5052(r2)
   4bdc4:	a129883a 	add	r20,r20,r4
   4bdc8:	4525c83a 	sub	r18,r8,r20
   4bdcc:	4500731e 	bne	r8,r20,4bf9c <__umoddi3+0x364>
   4bdd0:	3cc00136 	bltu	r7,r19,4bdd8 <__umoddi3+0x1a0>
   4bdd4:	81800436 	bltu	r16,r6,4bde8 <__umoddi3+0x1b0>
   4bdd8:	818bc83a 	sub	r5,r16,r6
   4bddc:	99cfc83a 	sub	r7,r19,r7
   4bde0:	8147803a 	cmpltu	r3,r16,r5
   4bde4:	38c7c83a 	sub	r3,r7,r3
   4bde8:	2805883a 	mov	r2,r5
   4bdec:	003fdf06 	br	4bd6c <__umoddi3+0x134>
   4bdf0:	3000361e 	bne	r6,zero,4becc <__umoddi3+0x294>
   4bdf4:	000b883a 	mov	r5,zero
   4bdf8:	01000044 	movi	r4,1
   4bdfc:	004c23c0 	call	4c23c <__udivsi3>
   4be00:	1029883a 	mov	r20,r2
   4be04:	a0804028 	cmpgeui	r2,r20,256
   4be08:	100490fa 	slli	r2,r2,3
   4be0c:	a08ad83a 	srl	r5,r20,r2
   4be10:	00c00174 	movhi	r3,5
   4be14:	01000804 	movi	r4,32
   4be18:	28c7883a 	add	r3,r5,r3
   4be1c:	1dc4ef03 	ldbu	r23,5052(r3)
   4be20:	b8af883a 	add	r23,r23,r2
   4be24:	25e3c83a 	sub	r17,r4,r23
   4be28:	25c0311e 	bne	r4,r23,4bef0 <__umoddi3+0x2b8>
   4be2c:	a02ad43a 	srli	r21,r20,16
   4be30:	9d27c83a 	sub	r19,r19,r20
   4be34:	a5bfffcc 	andi	r22,r20,65535
   4be38:	a80b883a 	mov	r5,r21
   4be3c:	9809883a 	mov	r4,r19
   4be40:	004c2a00 	call	4c2a0 <__umodsi3>
   4be44:	9809883a 	mov	r4,r19
   4be48:	a80b883a 	mov	r5,r21
   4be4c:	1021883a 	mov	r16,r2
   4be50:	004c23c0 	call	4c23c <__udivsi3>
   4be54:	8008943a 	slli	r4,r16,16
   4be58:	9006d43a 	srli	r3,r18,16
   4be5c:	1585383a 	mul	r2,r2,r22
   4be60:	20c8b03a 	or	r4,r4,r3
   4be64:	2080032e 	bgeu	r4,r2,4be74 <__umoddi3+0x23c>
   4be68:	2509883a 	add	r4,r4,r20
   4be6c:	25000136 	bltu	r4,r20,4be74 <__umoddi3+0x23c>
   4be70:	2080af36 	bltu	r4,r2,4c130 <__umoddi3+0x4f8>
   4be74:	20a7c83a 	sub	r19,r4,r2
   4be78:	a80b883a 	mov	r5,r21
   4be7c:	9809883a 	mov	r4,r19
   4be80:	004c2a00 	call	4c2a0 <__umodsi3>
   4be84:	1021883a 	mov	r16,r2
   4be88:	a80b883a 	mov	r5,r21
   4be8c:	9809883a 	mov	r4,r19
   4be90:	8020943a 	slli	r16,r16,16
   4be94:	004c23c0 	call	4c23c <__udivsi3>
   4be98:	1585383a 	mul	r2,r2,r22
   4be9c:	94bfffcc 	andi	r18,r18,65535
   4bea0:	84a0b03a 	or	r16,r16,r18
   4bea4:	8080042e 	bgeu	r16,r2,4beb8 <__umoddi3+0x280>
   4bea8:	8521883a 	add	r16,r16,r20
   4beac:	85000236 	bltu	r16,r20,4beb8 <__umoddi3+0x280>
   4beb0:	8080012e 	bgeu	r16,r2,4beb8 <__umoddi3+0x280>
   4beb4:	8521883a 	add	r16,r16,r20
   4beb8:	80a1c83a 	sub	r16,r16,r2
   4bebc:	003fa406 	br	4bd50 <__umoddi3+0x118>
   4bec0:	30c04028 	cmpgeui	r3,r6,256
   4bec4:	180690fa 	slli	r3,r3,3
   4bec8:	003f7206 	br	4bc94 <__umoddi3+0x5c>
   4becc:	00bfffd4 	movui	r2,65535
   4bed0:	11bfcc2e 	bgeu	r2,r6,4be04 <__umoddi3+0x1cc>
   4bed4:	00804034 	movhi	r2,256
   4bed8:	3080972e 	bgeu	r6,r2,4c138 <__umoddi3+0x500>
   4bedc:	00800404 	movi	r2,16
   4bee0:	003fca06 	br	4be0c <__umoddi3+0x1d4>
   4bee4:	39004028 	cmpgeui	r4,r7,256
   4bee8:	200890fa 	slli	r4,r4,3
   4beec:	003fb006 	br	4bdb0 <__umoddi3+0x178>
   4bef0:	a468983a 	sll	r20,r20,r17
   4bef4:	9decd83a 	srl	r22,r19,r23
   4bef8:	85eed83a 	srl	r23,r16,r23
   4befc:	a02ad43a 	srli	r21,r20,16
   4bf00:	b009883a 	mov	r4,r22
   4bf04:	9c66983a 	sll	r19,r19,r17
   4bf08:	a80b883a 	mov	r5,r21
   4bf0c:	004c2a00 	call	4c2a0 <__umodsi3>
   4bf10:	b009883a 	mov	r4,r22
   4bf14:	a80b883a 	mov	r5,r21
   4bf18:	1025883a 	mov	r18,r2
   4bf1c:	bceeb03a 	or	r23,r23,r19
   4bf20:	004c23c0 	call	4c23c <__udivsi3>
   4bf24:	9008943a 	slli	r4,r18,16
   4bf28:	b806d43a 	srli	r3,r23,16
   4bf2c:	a5bfffcc 	andi	r22,r20,65535
   4bf30:	b085383a 	mul	r2,r22,r2
   4bf34:	20c8b03a 	or	r4,r4,r3
   4bf38:	8464983a 	sll	r18,r16,r17
   4bf3c:	2080042e 	bgeu	r4,r2,4bf50 <__umoddi3+0x318>
   4bf40:	2509883a 	add	r4,r4,r20
   4bf44:	25000236 	bltu	r4,r20,4bf50 <__umoddi3+0x318>
   4bf48:	2080012e 	bgeu	r4,r2,4bf50 <__umoddi3+0x318>
   4bf4c:	2509883a 	add	r4,r4,r20
   4bf50:	20a1c83a 	sub	r16,r4,r2
   4bf54:	a80b883a 	mov	r5,r21
   4bf58:	8009883a 	mov	r4,r16
   4bf5c:	004c2a00 	call	4c2a0 <__umodsi3>
   4bf60:	1027883a 	mov	r19,r2
   4bf64:	a80b883a 	mov	r5,r21
   4bf68:	8009883a 	mov	r4,r16
   4bf6c:	9826943a 	slli	r19,r19,16
   4bf70:	004c23c0 	call	4c23c <__udivsi3>
   4bf74:	b085383a 	mul	r2,r22,r2
   4bf78:	bdffffcc 	andi	r23,r23,65535
   4bf7c:	9de6b03a 	or	r19,r19,r23
   4bf80:	9880042e 	bgeu	r19,r2,4bf94 <__umoddi3+0x35c>
   4bf84:	9d27883a 	add	r19,r19,r20
   4bf88:	9d000236 	bltu	r19,r20,4bf94 <__umoddi3+0x35c>
   4bf8c:	9880012e 	bgeu	r19,r2,4bf94 <__umoddi3+0x35c>
   4bf90:	9d27883a 	add	r19,r19,r20
   4bf94:	98a7c83a 	sub	r19,r19,r2
   4bf98:	003fa706 	br	4be38 <__umoddi3+0x200>
   4bf9c:	352cd83a 	srl	r22,r6,r20
   4bfa0:	3c8e983a 	sll	r7,r7,r18
   4bfa4:	9d2ed83a 	srl	r23,r19,r20
   4bfa8:	8504d83a 	srl	r2,r16,r20
   4bfac:	b1ecb03a 	or	r22,r22,r7
   4bfb0:	b02ad43a 	srli	r21,r22,16
   4bfb4:	9ca6983a 	sll	r19,r19,r18
   4bfb8:	b809883a 	mov	r4,r23
   4bfbc:	a80b883a 	mov	r5,r21
   4bfc0:	34a2983a 	sll	r17,r6,r18
   4bfc4:	14e6b03a 	or	r19,r2,r19
   4bfc8:	004c2a00 	call	4c2a0 <__umodsi3>
   4bfcc:	b809883a 	mov	r4,r23
   4bfd0:	a80b883a 	mov	r5,r21
   4bfd4:	102f883a 	mov	r23,r2
   4bfd8:	004c23c0 	call	4c23c <__udivsi3>
   4bfdc:	b808943a 	slli	r4,r23,16
   4bfe0:	9806d43a 	srli	r3,r19,16
   4bfe4:	b1bfffcc 	andi	r6,r22,65535
   4bfe8:	1039883a 	mov	fp,r2
   4bfec:	3085383a 	mul	r2,r6,r2
   4bff0:	20c8b03a 	or	r4,r4,r3
   4bff4:	84ae983a 	sll	r23,r16,r18
   4bff8:	2080062e 	bgeu	r4,r2,4c014 <__umoddi3+0x3dc>
   4bffc:	2589883a 	add	r4,r4,r22
   4c000:	e0ffffc4 	addi	r3,fp,-1
   4c004:	25804636 	bltu	r4,r22,4c120 <__umoddi3+0x4e8>
   4c008:	2080452e 	bgeu	r4,r2,4c120 <__umoddi3+0x4e8>
   4c00c:	e73fff84 	addi	fp,fp,-2
   4c010:	2589883a 	add	r4,r4,r22
   4c014:	20a1c83a 	sub	r16,r4,r2
   4c018:	8009883a 	mov	r4,r16
   4c01c:	a80b883a 	mov	r5,r21
   4c020:	d9800015 	stw	r6,0(sp)
   4c024:	004c2a00 	call	4c2a0 <__umodsi3>
   4c028:	a80b883a 	mov	r5,r21
   4c02c:	8009883a 	mov	r4,r16
   4c030:	1021883a 	mov	r16,r2
   4c034:	004c23c0 	call	4c23c <__udivsi3>
   4c038:	d9800017 	ldw	r6,0(sp)
   4c03c:	8006943a 	slli	r3,r16,16
   4c040:	9cffffcc 	andi	r19,r19,65535
   4c044:	308b383a 	mul	r5,r6,r2
   4c048:	1cc6b03a 	or	r3,r3,r19
   4c04c:	1940062e 	bgeu	r3,r5,4c068 <__umoddi3+0x430>
   4c050:	1d87883a 	add	r3,r3,r22
   4c054:	113fffc4 	addi	r4,r2,-1
   4c058:	1d802f36 	bltu	r3,r22,4c118 <__umoddi3+0x4e0>
   4c05c:	19402e2e 	bgeu	r3,r5,4c118 <__umoddi3+0x4e0>
   4c060:	10bfff84 	addi	r2,r2,-2
   4c064:	1d87883a 	add	r3,r3,r22
   4c068:	e038943a 	slli	fp,fp,16
   4c06c:	113fffcc 	andi	r4,r2,65535
   4c070:	8810d43a 	srli	r8,r17,16
   4c074:	e0b8b03a 	or	fp,fp,r2
   4c078:	e038d43a 	srli	fp,fp,16
   4c07c:	89bfffcc 	andi	r6,r17,65535
   4c080:	218f383a 	mul	r7,r4,r6
   4c084:	e18d383a 	mul	r6,fp,r6
   4c088:	2209383a 	mul	r4,r4,r8
   4c08c:	3804d43a 	srli	r2,r7,16
   4c090:	e239383a 	mul	fp,fp,r8
   4c094:	2189883a 	add	r4,r4,r6
   4c098:	1105883a 	add	r2,r2,r4
   4c09c:	1947c83a 	sub	r3,r3,r5
   4c0a0:	1180022e 	bgeu	r2,r6,4c0ac <__umoddi3+0x474>
   4c0a4:	01000074 	movhi	r4,1
   4c0a8:	e139883a 	add	fp,fp,r4
   4c0ac:	1008d43a 	srli	r4,r2,16
   4c0b0:	1004943a 	slli	r2,r2,16
   4c0b4:	39ffffcc 	andi	r7,r7,65535
   4c0b8:	2709883a 	add	r4,r4,fp
   4c0bc:	11c5883a 	add	r2,r2,r7
   4c0c0:	19000b36 	bltu	r3,r4,4c0f0 <__umoddi3+0x4b8>
   4c0c4:	19000926 	beq	r3,r4,4c0ec <__umoddi3+0x4b4>
   4c0c8:	b885c83a 	sub	r2,r23,r2
   4c0cc:	b8af803a 	cmpltu	r23,r23,r2
   4c0d0:	1907c83a 	sub	r3,r3,r4
   4c0d4:	1dc7c83a 	sub	r3,r3,r23
   4c0d8:	1d28983a 	sll	r20,r3,r20
   4c0dc:	1484d83a 	srl	r2,r2,r18
   4c0e0:	1c86d83a 	srl	r3,r3,r18
   4c0e4:	a084b03a 	or	r2,r20,r2
   4c0e8:	003f2006 	br	4bd6c <__umoddi3+0x134>
   4c0ec:	b8bff62e 	bgeu	r23,r2,4c0c8 <__umoddi3+0x490>
   4c0f0:	1463c83a 	sub	r17,r2,r17
   4c0f4:	1445803a 	cmpltu	r2,r2,r17
   4c0f8:	1585883a 	add	r2,r2,r22
   4c0fc:	2089c83a 	sub	r4,r4,r2
   4c100:	8805883a 	mov	r2,r17
   4c104:	003ff006 	br	4c0c8 <__umoddi3+0x490>
   4c108:	00c00404 	movi	r3,16
   4c10c:	003ee106 	br	4bc94 <__umoddi3+0x5c>
   4c110:	01000404 	movi	r4,16
   4c114:	003f2606 	br	4bdb0 <__umoddi3+0x178>
   4c118:	2005883a 	mov	r2,r4
   4c11c:	003fd206 	br	4c068 <__umoddi3+0x430>
   4c120:	1839883a 	mov	fp,r3
   4c124:	003fbb06 	br	4c014 <__umoddi3+0x3dc>
   4c128:	8521883a 	add	r16,r16,r20
   4c12c:	003f0706 	br	4bd4c <__umoddi3+0x114>
   4c130:	2509883a 	add	r4,r4,r20
   4c134:	003f4f06 	br	4be74 <__umoddi3+0x23c>
   4c138:	00800604 	movi	r2,24
   4c13c:	003f3306 	br	4be0c <__umoddi3+0x1d4>
   4c140:	2509883a 	add	r4,r4,r20
   4c144:	003ef106 	br	4bd0c <__umoddi3+0xd4>

0004c148 <__divsi3>:
   4c148:	20001a16 	blt	r4,zero,4c1b4 <__divsi3+0x6c>
   4c14c:	000f883a 	mov	r7,zero
   4c150:	2800020e 	bge	r5,zero,4c15c <__divsi3+0x14>
   4c154:	014bc83a 	sub	r5,zero,r5
   4c158:	39c0005c 	xori	r7,r7,1
   4c15c:	200d883a 	mov	r6,r4
   4c160:	00c00044 	movi	r3,1
   4c164:	2900092e 	bgeu	r5,r4,4c18c <__divsi3+0x44>
   4c168:	00800804 	movi	r2,32
   4c16c:	00c00044 	movi	r3,1
   4c170:	00000106 	br	4c178 <__divsi3+0x30>
   4c174:	10001226 	beq	r2,zero,4c1c0 <__divsi3+0x78>
   4c178:	294b883a 	add	r5,r5,r5
   4c17c:	10bfffc4 	addi	r2,r2,-1
   4c180:	18c7883a 	add	r3,r3,r3
   4c184:	293ffb36 	bltu	r5,r4,4c174 <__divsi3+0x2c>
   4c188:	18000d26 	beq	r3,zero,4c1c0 <__divsi3+0x78>
   4c18c:	0005883a 	mov	r2,zero
   4c190:	31400236 	bltu	r6,r5,4c19c <__divsi3+0x54>
   4c194:	314dc83a 	sub	r6,r6,r5
   4c198:	10c4b03a 	or	r2,r2,r3
   4c19c:	1806d07a 	srli	r3,r3,1
   4c1a0:	280ad07a 	srli	r5,r5,1
   4c1a4:	183ffa1e 	bne	r3,zero,4c190 <__divsi3+0x48>
   4c1a8:	38000126 	beq	r7,zero,4c1b0 <__divsi3+0x68>
   4c1ac:	0085c83a 	sub	r2,zero,r2
   4c1b0:	f800283a 	ret
   4c1b4:	0109c83a 	sub	r4,zero,r4
   4c1b8:	01c00044 	movi	r7,1
   4c1bc:	003fe406 	br	4c150 <__divsi3+0x8>
   4c1c0:	0005883a 	mov	r2,zero
   4c1c4:	003ff806 	br	4c1a8 <__divsi3+0x60>

0004c1c8 <__modsi3>:
   4c1c8:	20001716 	blt	r4,zero,4c228 <__modsi3+0x60>
   4c1cc:	000f883a 	mov	r7,zero
   4c1d0:	2005883a 	mov	r2,r4
   4c1d4:	2800010e 	bge	r5,zero,4c1dc <__modsi3+0x14>
   4c1d8:	014bc83a 	sub	r5,zero,r5
   4c1dc:	00c00044 	movi	r3,1
   4c1e0:	2900092e 	bgeu	r5,r4,4c208 <__modsi3+0x40>
   4c1e4:	01800804 	movi	r6,32
   4c1e8:	00c00044 	movi	r3,1
   4c1ec:	00000106 	br	4c1f4 <__modsi3+0x2c>
   4c1f0:	30001026 	beq	r6,zero,4c234 <__modsi3+0x6c>
   4c1f4:	294b883a 	add	r5,r5,r5
   4c1f8:	31bfffc4 	addi	r6,r6,-1
   4c1fc:	18c7883a 	add	r3,r3,r3
   4c200:	293ffb36 	bltu	r5,r4,4c1f0 <__modsi3+0x28>
   4c204:	18000b26 	beq	r3,zero,4c234 <__modsi3+0x6c>
   4c208:	1806d07a 	srli	r3,r3,1
   4c20c:	11400136 	bltu	r2,r5,4c214 <__modsi3+0x4c>
   4c210:	1145c83a 	sub	r2,r2,r5
   4c214:	280ad07a 	srli	r5,r5,1
   4c218:	183ffb1e 	bne	r3,zero,4c208 <__modsi3+0x40>
   4c21c:	38000126 	beq	r7,zero,4c224 <__modsi3+0x5c>
   4c220:	0085c83a 	sub	r2,zero,r2
   4c224:	f800283a 	ret
   4c228:	0109c83a 	sub	r4,zero,r4
   4c22c:	01c00044 	movi	r7,1
   4c230:	003fe706 	br	4c1d0 <__modsi3+0x8>
   4c234:	2005883a 	mov	r2,r4
   4c238:	003ff806 	br	4c21c <__modsi3+0x54>

0004c23c <__udivsi3>:
   4c23c:	200d883a 	mov	r6,r4
   4c240:	2900152e 	bgeu	r5,r4,4c298 <__udivsi3+0x5c>
   4c244:	28001416 	blt	r5,zero,4c298 <__udivsi3+0x5c>
   4c248:	00800804 	movi	r2,32
   4c24c:	00c00044 	movi	r3,1
   4c250:	00000206 	br	4c25c <__udivsi3+0x20>
   4c254:	10000e26 	beq	r2,zero,4c290 <__udivsi3+0x54>
   4c258:	28000416 	blt	r5,zero,4c26c <__udivsi3+0x30>
   4c25c:	294b883a 	add	r5,r5,r5
   4c260:	10bfffc4 	addi	r2,r2,-1
   4c264:	18c7883a 	add	r3,r3,r3
   4c268:	293ffa36 	bltu	r5,r4,4c254 <__udivsi3+0x18>
   4c26c:	18000826 	beq	r3,zero,4c290 <__udivsi3+0x54>
   4c270:	0005883a 	mov	r2,zero
   4c274:	31400236 	bltu	r6,r5,4c280 <__udivsi3+0x44>
   4c278:	314dc83a 	sub	r6,r6,r5
   4c27c:	10c4b03a 	or	r2,r2,r3
   4c280:	1806d07a 	srli	r3,r3,1
   4c284:	280ad07a 	srli	r5,r5,1
   4c288:	183ffa1e 	bne	r3,zero,4c274 <__udivsi3+0x38>
   4c28c:	f800283a 	ret
   4c290:	0005883a 	mov	r2,zero
   4c294:	f800283a 	ret
   4c298:	00c00044 	movi	r3,1
   4c29c:	003ff406 	br	4c270 <__udivsi3+0x34>

0004c2a0 <__umodsi3>:
   4c2a0:	2005883a 	mov	r2,r4
   4c2a4:	2900132e 	bgeu	r5,r4,4c2f4 <__umodsi3+0x54>
   4c2a8:	28001216 	blt	r5,zero,4c2f4 <__umodsi3+0x54>
   4c2ac:	01800804 	movi	r6,32
   4c2b0:	00c00044 	movi	r3,1
   4c2b4:	00000206 	br	4c2c0 <__umodsi3+0x20>
   4c2b8:	30000c26 	beq	r6,zero,4c2ec <__umodsi3+0x4c>
   4c2bc:	28000416 	blt	r5,zero,4c2d0 <__umodsi3+0x30>
   4c2c0:	294b883a 	add	r5,r5,r5
   4c2c4:	31bfffc4 	addi	r6,r6,-1
   4c2c8:	18c7883a 	add	r3,r3,r3
   4c2cc:	293ffa36 	bltu	r5,r4,4c2b8 <__umodsi3+0x18>
   4c2d0:	18000626 	beq	r3,zero,4c2ec <__umodsi3+0x4c>
   4c2d4:	1806d07a 	srli	r3,r3,1
   4c2d8:	11400136 	bltu	r2,r5,4c2e0 <__umodsi3+0x40>
   4c2dc:	1145c83a 	sub	r2,r2,r5
   4c2e0:	280ad07a 	srli	r5,r5,1
   4c2e4:	183ffb1e 	bne	r3,zero,4c2d4 <__umodsi3+0x34>
   4c2e8:	f800283a 	ret
   4c2ec:	2005883a 	mov	r2,r4
   4c2f0:	f800283a 	ret
   4c2f4:	00c00044 	movi	r3,1
   4c2f8:	003ff606 	br	4c2d4 <__umodsi3+0x34>

0004c2fc <__adddf3>:
   4c2fc:	00c00434 	movhi	r3,16
   4c300:	18ffffc4 	addi	r3,r3,-1
   4c304:	defffa04 	addi	sp,sp,-24
   4c308:	2810d7fa 	srli	r8,r5,31
   4c30c:	3804d53a 	srli	r2,r7,20
   4c310:	28d4703a 	and	r10,r5,r3
   4c314:	38d2703a 	and	r9,r7,r3
   4c318:	280ad53a 	srli	r5,r5,20
   4c31c:	501490fa 	slli	r10,r10,3
   4c320:	481290fa 	slli	r9,r9,3
   4c324:	3016d77a 	srli	r11,r6,29
   4c328:	dc400115 	stw	r17,4(sp)
   4c32c:	380ed7fa 	srli	r7,r7,31
   4c330:	2022d77a 	srli	r17,r4,29
   4c334:	dd000415 	stw	r20,16(sp)
   4c338:	dcc00315 	stw	r19,12(sp)
   4c33c:	dc000015 	stw	r16,0(sp)
   4c340:	1081ffcc 	andi	r2,r2,2047
   4c344:	2c01ffcc 	andi	r16,r5,2047
   4c348:	dfc00515 	stw	ra,20(sp)
   4c34c:	dc800215 	stw	r18,8(sp)
   4c350:	201890fa 	slli	r12,r4,3
   4c354:	301a90fa 	slli	r13,r6,3
   4c358:	4027883a 	mov	r19,r8
   4c35c:	45003fcc 	andi	r20,r8,255
   4c360:	8aa2b03a 	or	r17,r17,r10
   4c364:	5a56b03a 	or	r11,r11,r9
   4c368:	808bc83a 	sub	r5,r16,r2
   4c36c:	41c07526 	beq	r8,r7,4c544 <__adddf3+0x248>
   4c370:	0140540e 	bge	zero,r5,4c4c4 <__adddf3+0x1c8>
   4c374:	10008b26 	beq	r2,zero,4c5a4 <__adddf3+0x2a8>
   4c378:	8081ffe0 	cmpeqi	r2,r16,2047
   4c37c:	10010d1e 	bne	r2,zero,4c7b4 <__adddf3+0x4b8>
   4c380:	28800e48 	cmpgei	r2,r5,57
   4c384:	1000c11e 	bne	r2,zero,4c68c <__adddf3+0x390>
   4c388:	5ac02034 	orhi	r11,r11,128
   4c38c:	28800808 	cmpgei	r2,r5,32
   4c390:	1001461e 	bne	r2,zero,4c8ac <__adddf3+0x5b0>
   4c394:	00800804 	movi	r2,32
   4c398:	1145c83a 	sub	r2,r2,r5
   4c39c:	58a4983a 	sll	r18,r11,r2
   4c3a0:	6946d83a 	srl	r3,r13,r5
   4c3a4:	6884983a 	sll	r2,r13,r2
   4c3a8:	594ad83a 	srl	r5,r11,r5
   4c3ac:	90e4b03a 	or	r18,r18,r3
   4c3b0:	1004c03a 	cmpne	r2,r2,zero
   4c3b4:	90a4b03a 	or	r18,r18,r2
   4c3b8:	8963c83a 	sub	r17,r17,r5
   4c3bc:	64a5c83a 	sub	r18,r12,r18
   4c3c0:	6485803a 	cmpltu	r2,r12,r18
   4c3c4:	88a3c83a 	sub	r17,r17,r2
   4c3c8:	8880202c 	andhi	r2,r17,128
   4c3cc:	1000b826 	beq	r2,zero,4c6b0 <__adddf3+0x3b4>
   4c3d0:	00802034 	movhi	r2,128
   4c3d4:	10bfffc4 	addi	r2,r2,-1
   4c3d8:	88a2703a 	and	r17,r17,r2
   4c3dc:	8800d026 	beq	r17,zero,4c720 <__adddf3+0x424>
   4c3e0:	8809883a 	mov	r4,r17
   4c3e4:	004182c0 	call	4182c <__clzsi2>
   4c3e8:	113ffe04 	addi	r4,r2,-8
   4c3ec:	00c00804 	movi	r3,32
   4c3f0:	1905c83a 	sub	r2,r3,r4
   4c3f4:	9084d83a 	srl	r2,r18,r2
   4c3f8:	8922983a 	sll	r17,r17,r4
   4c3fc:	9124983a 	sll	r18,r18,r4
   4c400:	1444b03a 	or	r2,r2,r17
   4c404:	2400ff16 	blt	r4,r16,4c804 <__adddf3+0x508>
   4c408:	2409c83a 	sub	r4,r4,r16
   4c40c:	21000044 	addi	r4,r4,1
   4c410:	1907c83a 	sub	r3,r3,r4
   4c414:	90ca983a 	sll	r5,r18,r3
   4c418:	9122d83a 	srl	r17,r18,r4
   4c41c:	280ac03a 	cmpne	r5,r5,zero
   4c420:	10c6983a 	sll	r3,r2,r3
   4c424:	894ab03a 	or	r5,r17,r5
   4c428:	1122d83a 	srl	r17,r2,r4
   4c42c:	0021883a 	mov	r16,zero
   4c430:	1964b03a 	or	r18,r3,r5
   4c434:	908001cc 	andi	r2,r18,7
   4c438:	10000726 	beq	r2,zero,4c458 <__adddf3+0x15c>
   4c43c:	908003cc 	andi	r2,r18,15
   4c440:	10800120 	cmpeqi	r2,r2,4
   4c444:	1000041e 	bne	r2,zero,4c458 <__adddf3+0x15c>
   4c448:	90800104 	addi	r2,r18,4
   4c44c:	14a5803a 	cmpltu	r18,r2,r18
   4c450:	8ca3883a 	add	r17,r17,r18
   4c454:	1025883a 	mov	r18,r2
   4c458:	8880202c 	andhi	r2,r17,128
   4c45c:	1000c926 	beq	r2,zero,4c784 <__adddf3+0x488>
   4c460:	8081ffa0 	cmpeqi	r2,r16,2046
   4c464:	84000044 	addi	r16,r16,1
   4c468:	1000841e 	bne	r2,zero,4c67c <__adddf3+0x380>
   4c46c:	013fe034 	movhi	r4,65408
   4c470:	213fffc4 	addi	r4,r4,-1
   4c474:	8908703a 	and	r4,r17,r4
   4c478:	2004977a 	slli	r2,r4,29
   4c47c:	2008927a 	slli	r4,r4,9
   4c480:	9024d0fa 	srli	r18,r18,3
   4c484:	80c1ffcc 	andi	r3,r16,2047
   4c488:	2008d33a 	srli	r4,r4,12
   4c48c:	1484b03a 	or	r2,r2,r18
   4c490:	a027883a 	mov	r19,r20
   4c494:	1806953a 	slli	r3,r3,20
   4c498:	982697fa 	slli	r19,r19,31
   4c49c:	1906b03a 	or	r3,r3,r4
   4c4a0:	1cc6b03a 	or	r3,r3,r19
   4c4a4:	dfc00517 	ldw	ra,20(sp)
   4c4a8:	dd000417 	ldw	r20,16(sp)
   4c4ac:	dcc00317 	ldw	r19,12(sp)
   4c4b0:	dc800217 	ldw	r18,8(sp)
   4c4b4:	dc400117 	ldw	r17,4(sp)
   4c4b8:	dc000017 	ldw	r16,0(sp)
   4c4bc:	dec00604 	addi	sp,sp,24
   4c4c0:	f800283a 	ret
   4c4c4:	3a803fcc 	andi	r10,r7,255
   4c4c8:	28004026 	beq	r5,zero,4c5cc <__adddf3+0x2d0>
   4c4cc:	140bc83a 	sub	r5,r2,r16
   4c4d0:	8000e61e 	bne	r16,zero,4c86c <__adddf3+0x570>
   4c4d4:	8b06b03a 	or	r3,r17,r12
   4c4d8:	1800c426 	beq	r3,zero,4c7ec <__adddf3+0x4f0>
   4c4dc:	28ffffc4 	addi	r3,r5,-1
   4c4e0:	18017a26 	beq	r3,zero,4cacc <__adddf3+0x7d0>
   4c4e4:	2941ffe0 	cmpeqi	r5,r5,2047
   4c4e8:	28019a1e 	bne	r5,zero,4cb54 <__adddf3+0x858>
   4c4ec:	19000e48 	cmpgei	r4,r3,57
   4c4f0:	20010c1e 	bne	r4,zero,4c924 <__adddf3+0x628>
   4c4f4:	180b883a 	mov	r5,r3
   4c4f8:	28c00808 	cmpgei	r3,r5,32
   4c4fc:	1801521e 	bne	r3,zero,4ca48 <__adddf3+0x74c>
   4c500:	00c00804 	movi	r3,32
   4c504:	1947c83a 	sub	r3,r3,r5
   4c508:	88e4983a 	sll	r18,r17,r3
   4c50c:	6148d83a 	srl	r4,r12,r5
   4c510:	60c6983a 	sll	r3,r12,r3
   4c514:	894ad83a 	srl	r5,r17,r5
   4c518:	9124b03a 	or	r18,r18,r4
   4c51c:	1806c03a 	cmpne	r3,r3,zero
   4c520:	90e4b03a 	or	r18,r18,r3
   4c524:	5957c83a 	sub	r11,r11,r5
   4c528:	6ca5c83a 	sub	r18,r13,r18
   4c52c:	6c9b803a 	cmpltu	r13,r13,r18
   4c530:	5b63c83a 	sub	r17,r11,r13
   4c534:	3827883a 	mov	r19,r7
   4c538:	1021883a 	mov	r16,r2
   4c53c:	5029883a 	mov	r20,r10
   4c540:	003fa106 	br	4c3c8 <__adddf3+0xcc>
   4c544:	01405d0e 	bge	zero,r5,4c6bc <__adddf3+0x3c0>
   4c548:	1000351e 	bne	r2,zero,4c620 <__adddf3+0x324>
   4c54c:	5b44b03a 	or	r2,r11,r13
   4c550:	1000a926 	beq	r2,zero,4c7f8 <__adddf3+0x4fc>
   4c554:	28bfffc4 	addi	r2,r5,-1
   4c558:	10004e26 	beq	r2,zero,4c694 <__adddf3+0x398>
   4c55c:	2941ffe0 	cmpeqi	r5,r5,2047
   4c560:	2801121e 	bne	r5,zero,4c9ac <__adddf3+0x6b0>
   4c564:	10c00e48 	cmpgei	r3,r2,57
   4c568:	1800311e 	bne	r3,zero,4c630 <__adddf3+0x334>
   4c56c:	100b883a 	mov	r5,r2
   4c570:	28800808 	cmpgei	r2,r5,32
   4c574:	1001181e 	bne	r2,zero,4c9d8 <__adddf3+0x6dc>
   4c578:	00800804 	movi	r2,32
   4c57c:	1145c83a 	sub	r2,r2,r5
   4c580:	58a4983a 	sll	r18,r11,r2
   4c584:	6946d83a 	srl	r3,r13,r5
   4c588:	6884983a 	sll	r2,r13,r2
   4c58c:	594ad83a 	srl	r5,r11,r5
   4c590:	90e4b03a 	or	r18,r18,r3
   4c594:	1004c03a 	cmpne	r2,r2,zero
   4c598:	90a4b03a 	or	r18,r18,r2
   4c59c:	8963883a 	add	r17,r17,r5
   4c5a0:	00002406 	br	4c634 <__adddf3+0x338>
   4c5a4:	5b44b03a 	or	r2,r11,r13
   4c5a8:	10009326 	beq	r2,zero,4c7f8 <__adddf3+0x4fc>
   4c5ac:	28bfffc4 	addi	r2,r5,-1
   4c5b0:	1000f826 	beq	r2,zero,4c994 <__adddf3+0x698>
   4c5b4:	2941ffe0 	cmpeqi	r5,r5,2047
   4c5b8:	2800fc1e 	bne	r5,zero,4c9ac <__adddf3+0x6b0>
   4c5bc:	10c00e48 	cmpgei	r3,r2,57
   4c5c0:	1800321e 	bne	r3,zero,4c68c <__adddf3+0x390>
   4c5c4:	100b883a 	mov	r5,r2
   4c5c8:	003f7006 	br	4c38c <__adddf3+0x90>
   4c5cc:	80800044 	addi	r2,r16,1
   4c5d0:	1081ff8c 	andi	r2,r2,2046
   4c5d4:	1000ab1e 	bne	r2,zero,4c884 <__adddf3+0x588>
   4c5d8:	8b0ab03a 	or	r5,r17,r12
   4c5dc:	5b44b03a 	or	r2,r11,r13
   4c5e0:	8000e71e 	bne	r16,zero,4c980 <__adddf3+0x684>
   4c5e4:	28014126 	beq	r5,zero,4caec <__adddf3+0x7f0>
   4c5e8:	10010626 	beq	r2,zero,4ca04 <__adddf3+0x708>
   4c5ec:	6365c83a 	sub	r18,r12,r13
   4c5f0:	6485803a 	cmpltu	r2,r12,r18
   4c5f4:	8ac7c83a 	sub	r3,r17,r11
   4c5f8:	1887c83a 	sub	r3,r3,r2
   4c5fc:	1880202c 	andhi	r2,r3,128
   4c600:	10017326 	beq	r2,zero,4cbd0 <__adddf3+0x8d4>
   4c604:	6b25c83a 	sub	r18,r13,r12
   4c608:	5c57c83a 	sub	r11,r11,r17
   4c60c:	6c9b803a 	cmpltu	r13,r13,r18
   4c610:	5b63c83a 	sub	r17,r11,r13
   4c614:	3827883a 	mov	r19,r7
   4c618:	5029883a 	mov	r20,r10
   4c61c:	003f8506 	br	4c434 <__adddf3+0x138>
   4c620:	8081ffe0 	cmpeqi	r2,r16,2047
   4c624:	1000631e 	bne	r2,zero,4c7b4 <__adddf3+0x4b8>
   4c628:	28800e48 	cmpgei	r2,r5,57
   4c62c:	1000aa26 	beq	r2,zero,4c8d8 <__adddf3+0x5dc>
   4c630:	04800044 	movi	r18,1
   4c634:	9325883a 	add	r18,r18,r12
   4c638:	9305803a 	cmpltu	r2,r18,r12
   4c63c:	88a3883a 	add	r17,r17,r2
   4c640:	8880202c 	andhi	r2,r17,128
   4c644:	10001a26 	beq	r2,zero,4c6b0 <__adddf3+0x3b4>
   4c648:	84000044 	addi	r16,r16,1
   4c64c:	8081ffe0 	cmpeqi	r2,r16,2047
   4c650:	10000a1e 	bne	r2,zero,4c67c <__adddf3+0x380>
   4c654:	00bfe034 	movhi	r2,65408
   4c658:	10bfffc4 	addi	r2,r2,-1
   4c65c:	9006d07a 	srli	r3,r18,1
   4c660:	8884703a 	and	r2,r17,r2
   4c664:	100897fa 	slli	r4,r2,31
   4c668:	9480004c 	andi	r18,r18,1
   4c66c:	1c86b03a 	or	r3,r3,r18
   4c670:	1022d07a 	srli	r17,r2,1
   4c674:	20e4b03a 	or	r18,r4,r3
   4c678:	003f6e06 	br	4c434 <__adddf3+0x138>
   4c67c:	00c1ffc4 	movi	r3,2047
   4c680:	0009883a 	mov	r4,zero
   4c684:	0005883a 	mov	r2,zero
   4c688:	003f8206 	br	4c494 <__adddf3+0x198>
   4c68c:	04800044 	movi	r18,1
   4c690:	003f4a06 	br	4c3bc <__adddf3+0xc0>
   4c694:	6365883a 	add	r18,r12,r13
   4c698:	8ad7883a 	add	r11,r17,r11
   4c69c:	9305803a 	cmpltu	r2,r18,r12
   4c6a0:	58a3883a 	add	r17,r11,r2
   4c6a4:	8880202c 	andhi	r2,r17,128
   4c6a8:	1001061e 	bne	r2,zero,4cac4 <__adddf3+0x7c8>
   4c6ac:	04000044 	movi	r16,1
   4c6b0:	908001cc 	andi	r2,r18,7
   4c6b4:	103f611e 	bne	r2,zero,4c43c <__adddf3+0x140>
   4c6b8:	00006906 	br	4c860 <__adddf3+0x564>
   4c6bc:	28005626 	beq	r5,zero,4c818 <__adddf3+0x51c>
   4c6c0:	140bc83a 	sub	r5,r2,r16
   4c6c4:	80008626 	beq	r16,zero,4c8e0 <__adddf3+0x5e4>
   4c6c8:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c6cc:	1801101e 	bne	r3,zero,4cb10 <__adddf3+0x814>
   4c6d0:	28c00e48 	cmpgei	r3,r5,57
   4c6d4:	1800da1e 	bne	r3,zero,4ca40 <__adddf3+0x744>
   4c6d8:	8c402034 	orhi	r17,r17,128
   4c6dc:	28c00808 	cmpgei	r3,r5,32
   4c6e0:	1801241e 	bne	r3,zero,4cb74 <__adddf3+0x878>
   4c6e4:	00c00804 	movi	r3,32
   4c6e8:	1947c83a 	sub	r3,r3,r5
   4c6ec:	88e4983a 	sll	r18,r17,r3
   4c6f0:	6148d83a 	srl	r4,r12,r5
   4c6f4:	60c6983a 	sll	r3,r12,r3
   4c6f8:	894ad83a 	srl	r5,r17,r5
   4c6fc:	9124b03a 	or	r18,r18,r4
   4c700:	1806c03a 	cmpne	r3,r3,zero
   4c704:	90e4b03a 	or	r18,r18,r3
   4c708:	5957883a 	add	r11,r11,r5
   4c70c:	9365883a 	add	r18,r18,r13
   4c710:	935b803a 	cmpltu	r13,r18,r13
   4c714:	6ae3883a 	add	r17,r13,r11
   4c718:	1021883a 	mov	r16,r2
   4c71c:	003fc806 	br	4c640 <__adddf3+0x344>
   4c720:	9009883a 	mov	r4,r18
   4c724:	004182c0 	call	4182c <__clzsi2>
   4c728:	11000604 	addi	r4,r2,24
   4c72c:	20c00808 	cmpgei	r3,r4,32
   4c730:	183f2e26 	beq	r3,zero,4c3ec <__adddf3+0xf0>
   4c734:	10bffe04 	addi	r2,r2,-8
   4c738:	9084983a 	sll	r2,r18,r2
   4c73c:	24007216 	blt	r4,r16,4c908 <__adddf3+0x60c>
   4c740:	2425c83a 	sub	r18,r4,r16
   4c744:	91000044 	addi	r4,r18,1
   4c748:	20c00808 	cmpgei	r3,r4,32
   4c74c:	18012426 	beq	r3,zero,4cbe0 <__adddf3+0x8e4>
   4c750:	94bff844 	addi	r18,r18,-31
   4c754:	20c00820 	cmpeqi	r3,r4,32
   4c758:	14a4d83a 	srl	r18,r2,r18
   4c75c:	1800051e 	bne	r3,zero,4c774 <__adddf3+0x478>
   4c760:	00c01004 	movi	r3,64
   4c764:	1907c83a 	sub	r3,r3,r4
   4c768:	10c4983a 	sll	r2,r2,r3
   4c76c:	1004c03a 	cmpne	r2,r2,zero
   4c770:	90a4b03a 	or	r18,r18,r2
   4c774:	908001cc 	andi	r2,r18,7
   4c778:	0021883a 	mov	r16,zero
   4c77c:	103f2f1e 	bne	r2,zero,4c43c <__adddf3+0x140>
   4c780:	00003706 	br	4c860 <__adddf3+0x564>
   4c784:	9004d0fa 	srli	r2,r18,3
   4c788:	880a977a 	slli	r5,r17,29
   4c78c:	8101ffe0 	cmpeqi	r4,r16,2047
   4c790:	8806d0fa 	srli	r3,r17,3
   4c794:	2884b03a 	or	r2,r5,r2
   4c798:	20000c1e 	bne	r4,zero,4c7cc <__adddf3+0x4d0>
   4c79c:	01000434 	movhi	r4,16
   4c7a0:	213fffc4 	addi	r4,r4,-1
   4c7a4:	1908703a 	and	r4,r3,r4
   4c7a8:	80c1ffcc 	andi	r3,r16,2047
   4c7ac:	003f3906 	br	4c494 <__adddf3+0x198>
   4c7b0:	1000b31e 	bne	r2,zero,4ca80 <__adddf3+0x784>
   4c7b4:	880a977a 	slli	r5,r17,29
   4c7b8:	00880034 	movhi	r2,8192
   4c7bc:	10bfffc4 	addi	r2,r2,-1
   4c7c0:	8806d0fa 	srli	r3,r17,3
   4c7c4:	2084703a 	and	r2,r4,r2
   4c7c8:	1144b03a 	or	r2,r2,r5
   4c7cc:	10c8b03a 	or	r4,r2,r3
   4c7d0:	20010726 	beq	r4,zero,4cbf0 <__adddf3+0x8f4>
   4c7d4:	01400434 	movhi	r5,16
   4c7d8:	19000234 	orhi	r4,r3,8
   4c7dc:	297fffc4 	addi	r5,r5,-1
   4c7e0:	2148703a 	and	r4,r4,r5
   4c7e4:	00c1ffc4 	movi	r3,2047
   4c7e8:	003f2a06 	br	4c494 <__adddf3+0x198>
   4c7ec:	6819883a 	mov	r12,r13
   4c7f0:	5823883a 	mov	r17,r11
   4c7f4:	3827883a 	mov	r19,r7
   4c7f8:	6004d0fa 	srli	r2,r12,3
   4c7fc:	2821883a 	mov	r16,r5
   4c800:	003fe106 	br	4c788 <__adddf3+0x48c>
   4c804:	047fe034 	movhi	r17,65408
   4c808:	8c7fffc4 	addi	r17,r17,-1
   4c80c:	8121c83a 	sub	r16,r16,r4
   4c810:	1462703a 	and	r17,r2,r17
   4c814:	003f0706 	br	4c434 <__adddf3+0x138>
   4c818:	80c00044 	addi	r3,r16,1
   4c81c:	1881ff8c 	andi	r2,r3,2046
   4c820:	1000421e 	bne	r2,zero,4c92c <__adddf3+0x630>
   4c824:	8b04b03a 	or	r2,r17,r12
   4c828:	8000921e 	bne	r16,zero,4ca74 <__adddf3+0x778>
   4c82c:	1000c226 	beq	r2,zero,4cb38 <__adddf3+0x83c>
   4c830:	5b44b03a 	or	r2,r11,r13
   4c834:	10007326 	beq	r2,zero,4ca04 <__adddf3+0x708>
   4c838:	6365883a 	add	r18,r12,r13
   4c83c:	9305803a 	cmpltu	r2,r18,r12
   4c840:	8ad7883a 	add	r11,r17,r11
   4c844:	58a3883a 	add	r17,r11,r2
   4c848:	8880202c 	andhi	r2,r17,128
   4c84c:	10000426 	beq	r2,zero,4c860 <__adddf3+0x564>
   4c850:	00bfe034 	movhi	r2,65408
   4c854:	10bfffc4 	addi	r2,r2,-1
   4c858:	88a2703a 	and	r17,r17,r2
   4c85c:	04000044 	movi	r16,1
   4c860:	800b883a 	mov	r5,r16
   4c864:	9019883a 	mov	r12,r18
   4c868:	003fe306 	br	4c7f8 <__adddf3+0x4fc>
   4c86c:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c870:	18006b1e 	bne	r3,zero,4ca20 <__adddf3+0x724>
   4c874:	28c00e48 	cmpgei	r3,r5,57
   4c878:	18002a1e 	bne	r3,zero,4c924 <__adddf3+0x628>
   4c87c:	8c402034 	orhi	r17,r17,128
   4c880:	003f1d06 	br	4c4f8 <__adddf3+0x1fc>
   4c884:	6365c83a 	sub	r18,r12,r13
   4c888:	6485803a 	cmpltu	r2,r12,r18
   4c88c:	8ac7c83a 	sub	r3,r17,r11
   4c890:	1887c83a 	sub	r3,r3,r2
   4c894:	1880202c 	andhi	r2,r3,128
   4c898:	1000321e 	bne	r2,zero,4c964 <__adddf3+0x668>
   4c89c:	90c4b03a 	or	r2,r18,r3
   4c8a0:	10004926 	beq	r2,zero,4c9c8 <__adddf3+0x6cc>
   4c8a4:	1823883a 	mov	r17,r3
   4c8a8:	003ecc06 	br	4c3dc <__adddf3+0xe0>
   4c8ac:	28bff804 	addi	r2,r5,-32
   4c8b0:	28c00820 	cmpeqi	r3,r5,32
   4c8b4:	5884d83a 	srl	r2,r11,r2
   4c8b8:	1800041e 	bne	r3,zero,4c8cc <__adddf3+0x5d0>
   4c8bc:	00c01004 	movi	r3,64
   4c8c0:	1947c83a 	sub	r3,r3,r5
   4c8c4:	58c6983a 	sll	r3,r11,r3
   4c8c8:	68dab03a 	or	r13,r13,r3
   4c8cc:	6824c03a 	cmpne	r18,r13,zero
   4c8d0:	90a4b03a 	or	r18,r18,r2
   4c8d4:	003eb906 	br	4c3bc <__adddf3+0xc0>
   4c8d8:	5ac02034 	orhi	r11,r11,128
   4c8dc:	003f2406 	br	4c570 <__adddf3+0x274>
   4c8e0:	8b06b03a 	or	r3,r17,r12
   4c8e4:	18009126 	beq	r3,zero,4cb2c <__adddf3+0x830>
   4c8e8:	28ffffc4 	addi	r3,r5,-1
   4c8ec:	1800ac26 	beq	r3,zero,4cba0 <__adddf3+0x8a4>
   4c8f0:	2941ffe0 	cmpeqi	r5,r5,2047
   4c8f4:	2800861e 	bne	r5,zero,4cb10 <__adddf3+0x814>
   4c8f8:	19000e48 	cmpgei	r4,r3,57
   4c8fc:	2000501e 	bne	r4,zero,4ca40 <__adddf3+0x744>
   4c900:	180b883a 	mov	r5,r3
   4c904:	003f7506 	br	4c6dc <__adddf3+0x3e0>
   4c908:	00ffe034 	movhi	r3,65408
   4c90c:	18ffffc4 	addi	r3,r3,-1
   4c910:	10c6703a 	and	r3,r2,r3
   4c914:	1804977a 	slli	r2,r3,29
   4c918:	8121c83a 	sub	r16,r16,r4
   4c91c:	1806d0fa 	srli	r3,r3,3
   4c920:	003f9e06 	br	4c79c <__adddf3+0x4a0>
   4c924:	04800044 	movi	r18,1
   4c928:	003eff06 	br	4c528 <__adddf3+0x22c>
   4c92c:	1881ffe0 	cmpeqi	r2,r3,2047
   4c930:	103f521e 	bne	r2,zero,4c67c <__adddf3+0x380>
   4c934:	6349883a 	add	r4,r12,r13
   4c938:	8ad7883a 	add	r11,r17,r11
   4c93c:	2305803a 	cmpltu	r2,r4,r12
   4c940:	5885883a 	add	r2,r11,r2
   4c944:	2008d07a 	srli	r4,r4,1
   4c948:	102497fa 	slli	r18,r2,31
   4c94c:	1022d07a 	srli	r17,r2,1
   4c950:	208001cc 	andi	r2,r4,7
   4c954:	9124b03a 	or	r18,r18,r4
   4c958:	1821883a 	mov	r16,r3
   4c95c:	103eb71e 	bne	r2,zero,4c43c <__adddf3+0x140>
   4c960:	003fbf06 	br	4c860 <__adddf3+0x564>
   4c964:	6b25c83a 	sub	r18,r13,r12
   4c968:	5c57c83a 	sub	r11,r11,r17
   4c96c:	6c9b803a 	cmpltu	r13,r13,r18
   4c970:	5b63c83a 	sub	r17,r11,r13
   4c974:	3827883a 	mov	r19,r7
   4c978:	5029883a 	mov	r20,r10
   4c97c:	003e9706 	br	4c3dc <__adddf3+0xe0>
   4c980:	283f8b1e 	bne	r5,zero,4c7b0 <__adddf3+0x4b4>
   4c984:	1000261e 	bne	r2,zero,4ca20 <__adddf3+0x724>
   4c988:	00bfffc4 	movi	r2,-1
   4c98c:	0027883a 	mov	r19,zero
   4c990:	003f9006 	br	4c7d4 <__adddf3+0x4d8>
   4c994:	6365c83a 	sub	r18,r12,r13
   4c998:	8ad7c83a 	sub	r11,r17,r11
   4c99c:	6485803a 	cmpltu	r2,r12,r18
   4c9a0:	58a3c83a 	sub	r17,r11,r2
   4c9a4:	04000044 	movi	r16,1
   4c9a8:	003e8706 	br	4c3c8 <__adddf3+0xcc>
   4c9ac:	8804977a 	slli	r2,r17,29
   4c9b0:	00c80034 	movhi	r3,8192
   4c9b4:	18ffffc4 	addi	r3,r3,-1
   4c9b8:	20c8703a 	and	r4,r4,r3
   4c9bc:	2084b03a 	or	r2,r4,r2
   4c9c0:	8806d0fa 	srli	r3,r17,3
   4c9c4:	003f8106 	br	4c7cc <__adddf3+0x4d0>
   4c9c8:	0027883a 	mov	r19,zero
   4c9cc:	0007883a 	mov	r3,zero
   4c9d0:	0009883a 	mov	r4,zero
   4c9d4:	003eaf06 	br	4c494 <__adddf3+0x198>
   4c9d8:	28bff804 	addi	r2,r5,-32
   4c9dc:	28c00820 	cmpeqi	r3,r5,32
   4c9e0:	5884d83a 	srl	r2,r11,r2
   4c9e4:	1800041e 	bne	r3,zero,4c9f8 <__adddf3+0x6fc>
   4c9e8:	00c01004 	movi	r3,64
   4c9ec:	1947c83a 	sub	r3,r3,r5
   4c9f0:	58c6983a 	sll	r3,r11,r3
   4c9f4:	68dab03a 	or	r13,r13,r3
   4c9f8:	6824c03a 	cmpne	r18,r13,zero
   4c9fc:	90a4b03a 	or	r18,r18,r2
   4ca00:	003f0c06 	br	4c634 <__adddf3+0x338>
   4ca04:	880a977a 	slli	r5,r17,29
   4ca08:	00880034 	movhi	r2,8192
   4ca0c:	10bfffc4 	addi	r2,r2,-1
   4ca10:	2084703a 	and	r2,r4,r2
   4ca14:	8806d0fa 	srli	r3,r17,3
   4ca18:	1144b03a 	or	r2,r2,r5
   4ca1c:	003f5f06 	br	4c79c <__adddf3+0x4a0>
   4ca20:	5804977a 	slli	r2,r11,29
   4ca24:	00c80034 	movhi	r3,8192
   4ca28:	18ffffc4 	addi	r3,r3,-1
   4ca2c:	30c8703a 	and	r4,r6,r3
   4ca30:	1104b03a 	or	r2,r2,r4
   4ca34:	5806d0fa 	srli	r3,r11,3
   4ca38:	3827883a 	mov	r19,r7
   4ca3c:	003f6306 	br	4c7cc <__adddf3+0x4d0>
   4ca40:	04800044 	movi	r18,1
   4ca44:	003f3106 	br	4c70c <__adddf3+0x410>
   4ca48:	28fff804 	addi	r3,r5,-32
   4ca4c:	29000820 	cmpeqi	r4,r5,32
   4ca50:	88c6d83a 	srl	r3,r17,r3
   4ca54:	2000041e 	bne	r4,zero,4ca68 <__adddf3+0x76c>
   4ca58:	01001004 	movi	r4,64
   4ca5c:	2149c83a 	sub	r4,r4,r5
   4ca60:	8908983a 	sll	r4,r17,r4
   4ca64:	6118b03a 	or	r12,r12,r4
   4ca68:	6024c03a 	cmpne	r18,r12,zero
   4ca6c:	90e4b03a 	or	r18,r18,r3
   4ca70:	003ead06 	br	4c528 <__adddf3+0x22c>
   4ca74:	10004f26 	beq	r2,zero,4cbb4 <__adddf3+0x8b8>
   4ca78:	5b5ab03a 	or	r13,r11,r13
   4ca7c:	683f4d26 	beq	r13,zero,4c7b4 <__adddf3+0x4b8>
   4ca80:	8806d0fa 	srli	r3,r17,3
   4ca84:	01480034 	movhi	r5,8192
   4ca88:	8822977a 	slli	r17,r17,29
   4ca8c:	297fffc4 	addi	r5,r5,-1
   4ca90:	2144703a 	and	r2,r4,r5
   4ca94:	1900022c 	andhi	r4,r3,8
   4ca98:	1444b03a 	or	r2,r2,r17
   4ca9c:	203f4b26 	beq	r4,zero,4c7cc <__adddf3+0x4d0>
   4caa0:	5808d0fa 	srli	r4,r11,3
   4caa4:	2200022c 	andhi	r8,r4,8
   4caa8:	403f481e 	bne	r8,zero,4c7cc <__adddf3+0x4d0>
   4caac:	5804977a 	slli	r2,r11,29
   4cab0:	314a703a 	and	r5,r6,r5
   4cab4:	3827883a 	mov	r19,r7
   4cab8:	2884b03a 	or	r2,r5,r2
   4cabc:	2007883a 	mov	r3,r4
   4cac0:	003f4206 	br	4c7cc <__adddf3+0x4d0>
   4cac4:	04000084 	movi	r16,2
   4cac8:	003ee206 	br	4c654 <__adddf3+0x358>
   4cacc:	6b25c83a 	sub	r18,r13,r12
   4cad0:	5c57c83a 	sub	r11,r11,r17
   4cad4:	6c9b803a 	cmpltu	r13,r13,r18
   4cad8:	5b63c83a 	sub	r17,r11,r13
   4cadc:	3827883a 	mov	r19,r7
   4cae0:	5029883a 	mov	r20,r10
   4cae4:	04000044 	movi	r16,1
   4cae8:	003e3706 	br	4c3c8 <__adddf3+0xcc>
   4caec:	103fb626 	beq	r2,zero,4c9c8 <__adddf3+0x6cc>
   4caf0:	5808977a 	slli	r4,r11,29
   4caf4:	00880034 	movhi	r2,8192
   4caf8:	10bfffc4 	addi	r2,r2,-1
   4cafc:	3084703a 	and	r2,r6,r2
   4cb00:	5806d0fa 	srli	r3,r11,3
   4cb04:	1104b03a 	or	r2,r2,r4
   4cb08:	3827883a 	mov	r19,r7
   4cb0c:	003f2306 	br	4c79c <__adddf3+0x4a0>
   4cb10:	5808977a 	slli	r4,r11,29
   4cb14:	00880034 	movhi	r2,8192
   4cb18:	10bfffc4 	addi	r2,r2,-1
   4cb1c:	3084703a 	and	r2,r6,r2
   4cb20:	5806d0fa 	srli	r3,r11,3
   4cb24:	1104b03a 	or	r2,r2,r4
   4cb28:	003f2806 	br	4c7cc <__adddf3+0x4d0>
   4cb2c:	6819883a 	mov	r12,r13
   4cb30:	5823883a 	mov	r17,r11
   4cb34:	003f3006 	br	4c7f8 <__adddf3+0x4fc>
   4cb38:	5808977a 	slli	r4,r11,29
   4cb3c:	00880034 	movhi	r2,8192
   4cb40:	10bfffc4 	addi	r2,r2,-1
   4cb44:	3084703a 	and	r2,r6,r2
   4cb48:	5806d0fa 	srli	r3,r11,3
   4cb4c:	1104b03a 	or	r2,r2,r4
   4cb50:	003f1206 	br	4c79c <__adddf3+0x4a0>
   4cb54:	5808977a 	slli	r4,r11,29
   4cb58:	00880034 	movhi	r2,8192
   4cb5c:	10bfffc4 	addi	r2,r2,-1
   4cb60:	3084703a 	and	r2,r6,r2
   4cb64:	5806d0fa 	srli	r3,r11,3
   4cb68:	1104b03a 	or	r2,r2,r4
   4cb6c:	3827883a 	mov	r19,r7
   4cb70:	003f1606 	br	4c7cc <__adddf3+0x4d0>
   4cb74:	28fff804 	addi	r3,r5,-32
   4cb78:	29000820 	cmpeqi	r4,r5,32
   4cb7c:	88c6d83a 	srl	r3,r17,r3
   4cb80:	2000041e 	bne	r4,zero,4cb94 <__adddf3+0x898>
   4cb84:	01001004 	movi	r4,64
   4cb88:	2149c83a 	sub	r4,r4,r5
   4cb8c:	8908983a 	sll	r4,r17,r4
   4cb90:	6118b03a 	or	r12,r12,r4
   4cb94:	6024c03a 	cmpne	r18,r12,zero
   4cb98:	90e4b03a 	or	r18,r18,r3
   4cb9c:	003edb06 	br	4c70c <__adddf3+0x410>
   4cba0:	6365883a 	add	r18,r12,r13
   4cba4:	8ad7883a 	add	r11,r17,r11
   4cba8:	935b803a 	cmpltu	r13,r18,r13
   4cbac:	5b63883a 	add	r17,r11,r13
   4cbb0:	003ebc06 	br	4c6a4 <__adddf3+0x3a8>
   4cbb4:	5804977a 	slli	r2,r11,29
   4cbb8:	00c80034 	movhi	r3,8192
   4cbbc:	18ffffc4 	addi	r3,r3,-1
   4cbc0:	30cc703a 	and	r6,r6,r3
   4cbc4:	1184b03a 	or	r2,r2,r6
   4cbc8:	5806d0fa 	srli	r3,r11,3
   4cbcc:	003eff06 	br	4c7cc <__adddf3+0x4d0>
   4cbd0:	90c4b03a 	or	r2,r18,r3
   4cbd4:	103f7c26 	beq	r2,zero,4c9c8 <__adddf3+0x6cc>
   4cbd8:	1823883a 	mov	r17,r3
   4cbdc:	003f2006 	br	4c860 <__adddf3+0x564>
   4cbe0:	00c00804 	movi	r3,32
   4cbe4:	1907c83a 	sub	r3,r3,r4
   4cbe8:	000b883a 	mov	r5,zero
   4cbec:	003e0c06 	br	4c420 <__adddf3+0x124>
   4cbf0:	0005883a 	mov	r2,zero
   4cbf4:	00c1ffc4 	movi	r3,2047
   4cbf8:	0009883a 	mov	r4,zero
   4cbfc:	003e2506 	br	4c494 <__adddf3+0x198>

0004cc00 <__divdf3>:
   4cc00:	2806d53a 	srli	r3,r5,20
   4cc04:	defff304 	addi	sp,sp,-52
   4cc08:	00800434 	movhi	r2,16
   4cc0c:	dd800915 	stw	r22,36(sp)
   4cc10:	dd400815 	stw	r21,32(sp)
   4cc14:	dd000715 	stw	r20,28(sp)
   4cc18:	dc400415 	stw	r17,16(sp)
   4cc1c:	dc000315 	stw	r16,12(sp)
   4cc20:	10bfffc4 	addi	r2,r2,-1
   4cc24:	dfc00c15 	stw	ra,48(sp)
   4cc28:	df000b15 	stw	fp,44(sp)
   4cc2c:	ddc00a15 	stw	r23,40(sp)
   4cc30:	dcc00615 	stw	r19,24(sp)
   4cc34:	dc800515 	stw	r18,20(sp)
   4cc38:	18c1ffcc 	andi	r3,r3,2047
   4cc3c:	282cd7fa 	srli	r22,r5,31
   4cc40:	302b883a 	mov	r21,r6
   4cc44:	3821883a 	mov	r16,r7
   4cc48:	2029883a 	mov	r20,r4
   4cc4c:	28a2703a 	and	r17,r5,r2
   4cc50:	18010d26 	beq	r3,zero,4d088 <__divdf3+0x488>
   4cc54:	1881ffe0 	cmpeqi	r2,r3,2047
   4cc58:	10011e1e 	bne	r2,zero,4d0d4 <__divdf3+0x4d4>
   4cc5c:	880a90fa 	slli	r5,r17,3
   4cc60:	2008d77a 	srli	r4,r4,29
   4cc64:	a02890fa 	slli	r20,r20,3
   4cc68:	1cff0044 	addi	r19,r3,-1023
   4cc6c:	2148b03a 	or	r4,r4,r5
   4cc70:	24802034 	orhi	r18,r4,128
   4cc74:	0023883a 	mov	r17,zero
   4cc78:	0039883a 	mov	fp,zero
   4cc7c:	8006d53a 	srli	r3,r16,20
   4cc80:	00800434 	movhi	r2,16
   4cc84:	10bfffc4 	addi	r2,r2,-1
   4cc88:	18c1ffcc 	andi	r3,r3,2047
   4cc8c:	802ed7fa 	srli	r23,r16,31
   4cc90:	80a0703a 	and	r16,r16,r2
   4cc94:	1800eb26 	beq	r3,zero,4d044 <__divdf3+0x444>
   4cc98:	1881ffe0 	cmpeqi	r2,r3,2047
   4cc9c:	1001141e 	bne	r2,zero,4d0f0 <__divdf3+0x4f0>
   4cca0:	802090fa 	slli	r16,r16,3
   4cca4:	a804d77a 	srli	r2,r21,29
   4cca8:	a80e90fa 	slli	r7,r21,3
   4ccac:	18ff0044 	addi	r3,r3,-1023
   4ccb0:	1420b03a 	or	r16,r2,r16
   4ccb4:	98e7c83a 	sub	r19,r19,r3
   4ccb8:	84002034 	orhi	r16,r16,128
   4ccbc:	0007883a 	mov	r3,zero
   4ccc0:	88800428 	cmpgeui	r2,r17,16
   4ccc4:	b5eaf03a 	xor	r21,r22,r23
   4ccc8:	1000391e 	bne	r2,zero,4cdb0 <__divdf3+0x1b0>
   4cccc:	882290ba 	slli	r17,r17,2
   4ccd0:	00800174 	movhi	r2,5
   4ccd4:	8885883a 	add	r2,r17,r2
   4ccd8:	10b33817 	ldw	r2,-13088(r2)
   4ccdc:	1000683a 	jmp	r2
   4cce0:	0004cdb0 	cmpltui	zero,zero,4918
   4cce4:	0004cd98 	cmpnei	zero,zero,4918
   4cce8:	0004cd48 	cmpgei	zero,zero,4917
   4ccec:	0004cda8 	cmpgeui	zero,zero,4918
   4ccf0:	0004cd48 	cmpgei	zero,zero,4917
   4ccf4:	0004d154 	movui	zero,4933
   4ccf8:	0004cd48 	cmpgei	zero,zero,4917
   4ccfc:	0004cda8 	cmpgeui	zero,zero,4918
   4cd00:	0004cd98 	cmpnei	zero,zero,4918
   4cd04:	0004cd98 	cmpnei	zero,zero,4918
   4cd08:	0004d154 	movui	zero,4933
   4cd0c:	0004cda8 	cmpgeui	zero,zero,4918
   4cd10:	0004cd20 	cmpeqi	zero,zero,4916
   4cd14:	0004cd20 	cmpeqi	zero,zero,4916
   4cd18:	0004cd20 	cmpeqi	zero,zero,4916
   4cd1c:	0004d1e4 	muli	zero,zero,4935
   4cd20:	b02b883a 	mov	r21,r22
   4cd24:	9021883a 	mov	r16,r18
   4cd28:	a00f883a 	mov	r7,r20
   4cd2c:	e007883a 	mov	r3,fp
   4cd30:	188000a0 	cmpeqi	r2,r3,2
   4cd34:	1000181e 	bne	r2,zero,4cd98 <__divdf3+0x198>
   4cd38:	188000e0 	cmpeqi	r2,r3,3
   4cd3c:	1001b61e 	bne	r2,zero,4d418 <__divdf3+0x818>
   4cd40:	18c00060 	cmpeqi	r3,r3,1
   4cd44:	1800ac26 	beq	r3,zero,4cff8 <__divdf3+0x3f8>
   4cd48:	000b883a 	mov	r5,zero
   4cd4c:	0009883a 	mov	r4,zero
   4cd50:	0029883a 	mov	r20,zero
   4cd54:	2806953a 	slli	r3,r5,20
   4cd58:	a82a97fa 	slli	r21,r21,31
   4cd5c:	a005883a 	mov	r2,r20
   4cd60:	1906b03a 	or	r3,r3,r4
   4cd64:	1d46b03a 	or	r3,r3,r21
   4cd68:	dfc00c17 	ldw	ra,48(sp)
   4cd6c:	df000b17 	ldw	fp,44(sp)
   4cd70:	ddc00a17 	ldw	r23,40(sp)
   4cd74:	dd800917 	ldw	r22,36(sp)
   4cd78:	dd400817 	ldw	r21,32(sp)
   4cd7c:	dd000717 	ldw	r20,28(sp)
   4cd80:	dcc00617 	ldw	r19,24(sp)
   4cd84:	dc800517 	ldw	r18,20(sp)
   4cd88:	dc400417 	ldw	r17,16(sp)
   4cd8c:	dc000317 	ldw	r16,12(sp)
   4cd90:	dec00d04 	addi	sp,sp,52
   4cd94:	f800283a 	ret
   4cd98:	0141ffc4 	movi	r5,2047
   4cd9c:	0009883a 	mov	r4,zero
   4cda0:	0029883a 	mov	r20,zero
   4cda4:	003feb06 	br	4cd54 <__divdf3+0x154>
   4cda8:	b82b883a 	mov	r21,r23
   4cdac:	003fe006 	br	4cd30 <__divdf3+0x130>
   4cdb0:	84812636 	bltu	r16,r18,4d24c <__divdf3+0x64c>
   4cdb4:	84812426 	beq	r16,r18,4d248 <__divdf3+0x648>
   4cdb8:	9cffffc4 	addi	r19,r19,-1
   4cdbc:	a023883a 	mov	r17,r20
   4cdc0:	0007883a 	mov	r3,zero
   4cdc4:	8020923a 	slli	r16,r16,8
   4cdc8:	3828d63a 	srli	r20,r7,24
   4cdcc:	9009883a 	mov	r4,r18
   4cdd0:	802cd43a 	srli	r22,r16,16
   4cdd4:	d8c00015 	stw	r3,0(sp)
   4cdd8:	382e923a 	slli	r23,r7,8
   4cddc:	b00b883a 	mov	r5,r22
   4cde0:	004c23c0 	call	4c23c <__udivsi3>
   4cde4:	9009883a 	mov	r4,r18
   4cde8:	b00b883a 	mov	r5,r22
   4cdec:	a428b03a 	or	r20,r20,r16
   4cdf0:	1021883a 	mov	r16,r2
   4cdf4:	004c2a00 	call	4c2a0 <__umodsi3>
   4cdf8:	1004943a 	slli	r2,r2,16
   4cdfc:	8808d43a 	srli	r4,r17,16
   4ce00:	a4bfffcc 	andi	r18,r20,65535
   4ce04:	940b383a 	mul	r5,r18,r16
   4ce08:	2088b03a 	or	r4,r4,r2
   4ce0c:	d8c00017 	ldw	r3,0(sp)
   4ce10:	2140042e 	bgeu	r4,r5,4ce24 <__divdf3+0x224>
   4ce14:	2509883a 	add	r4,r4,r20
   4ce18:	80bfffc4 	addi	r2,r16,-1
   4ce1c:	25013b2e 	bgeu	r4,r20,4d30c <__divdf3+0x70c>
   4ce20:	1021883a 	mov	r16,r2
   4ce24:	2179c83a 	sub	fp,r4,r5
   4ce28:	e009883a 	mov	r4,fp
   4ce2c:	b00b883a 	mov	r5,r22
   4ce30:	d8c00015 	stw	r3,0(sp)
   4ce34:	004c23c0 	call	4c23c <__udivsi3>
   4ce38:	e009883a 	mov	r4,fp
   4ce3c:	b00b883a 	mov	r5,r22
   4ce40:	1039883a 	mov	fp,r2
   4ce44:	004c2a00 	call	4c2a0 <__umodsi3>
   4ce48:	1004943a 	slli	r2,r2,16
   4ce4c:	9715383a 	mul	r10,r18,fp
   4ce50:	893fffcc 	andi	r4,r17,65535
   4ce54:	2088b03a 	or	r4,r4,r2
   4ce58:	d8c00017 	ldw	r3,0(sp)
   4ce5c:	2280042e 	bgeu	r4,r10,4ce70 <__divdf3+0x270>
   4ce60:	2509883a 	add	r4,r4,r20
   4ce64:	e0bfffc4 	addi	r2,fp,-1
   4ce68:	2501242e 	bgeu	r4,r20,4d2fc <__divdf3+0x6fc>
   4ce6c:	1039883a 	mov	fp,r2
   4ce70:	8020943a 	slli	r16,r16,16
   4ce74:	b80cd43a 	srli	r6,r23,16
   4ce78:	ba3fffcc 	andi	r8,r23,65535
   4ce7c:	8720b03a 	or	r16,r16,fp
   4ce80:	80bfffcc 	andi	r2,r16,65535
   4ce84:	800ed43a 	srli	r7,r16,16
   4ce88:	1213383a 	mul	r9,r2,r8
   4ce8c:	308b383a 	mul	r5,r6,r2
   4ce90:	3a17383a 	mul	r11,r7,r8
   4ce94:	4804d43a 	srli	r2,r9,16
   4ce98:	398f383a 	mul	r7,r7,r6
   4ce9c:	2acb883a 	add	r5,r5,r11
   4cea0:	1145883a 	add	r2,r2,r5
   4cea4:	2289c83a 	sub	r4,r4,r10
   4cea8:	12c0022e 	bgeu	r2,r11,4ceb4 <__divdf3+0x2b4>
   4ceac:	01400074 	movhi	r5,1
   4ceb0:	394f883a 	add	r7,r7,r5
   4ceb4:	100ad43a 	srli	r5,r2,16
   4ceb8:	1038943a 	slli	fp,r2,16
   4cebc:	4a7fffcc 	andi	r9,r9,65535
   4cec0:	29c5883a 	add	r2,r5,r7
   4cec4:	e279883a 	add	fp,fp,r9
   4cec8:	20800236 	bltu	r4,r2,4ced4 <__divdf3+0x2d4>
   4cecc:	20800a1e 	bne	r4,r2,4cef8 <__divdf3+0x2f8>
   4ced0:	1f00092e 	bgeu	r3,fp,4cef8 <__divdf3+0x2f8>
   4ced4:	1dc7883a 	add	r3,r3,r23
   4ced8:	1dcb803a 	cmpltu	r5,r3,r23
   4cedc:	2d0b883a 	add	r5,r5,r20
   4cee0:	2149883a 	add	r4,r4,r5
   4cee4:	817fffc4 	addi	r5,r16,-1
   4cee8:	a101012e 	bgeu	r20,r4,4d2f0 <__divdf3+0x6f0>
   4ceec:	20813236 	bltu	r4,r2,4d3b8 <__divdf3+0x7b8>
   4cef0:	11013026 	beq	r2,r4,4d3b4 <__divdf3+0x7b4>
   4cef4:	2821883a 	mov	r16,r5
   4cef8:	1f39c83a 	sub	fp,r3,fp
   4cefc:	2089c83a 	sub	r4,r4,r2
   4cf00:	1f07803a 	cmpltu	r3,r3,fp
   4cf04:	da000115 	stw	r8,4(sp)
   4cf08:	d9800015 	stw	r6,0(sp)
   4cf0c:	20e3c83a 	sub	r17,r4,r3
   4cf10:	a4411726 	beq	r20,r17,4d370 <__divdf3+0x770>
   4cf14:	b00b883a 	mov	r5,r22
   4cf18:	8809883a 	mov	r4,r17
   4cf1c:	004c23c0 	call	4c23c <__udivsi3>
   4cf20:	8809883a 	mov	r4,r17
   4cf24:	b00b883a 	mov	r5,r22
   4cf28:	d8800215 	stw	r2,8(sp)
   4cf2c:	004c2a00 	call	4c2a0 <__umodsi3>
   4cf30:	d9c00217 	ldw	r7,8(sp)
   4cf34:	1004943a 	slli	r2,r2,16
   4cf38:	e008d43a 	srli	r4,fp,16
   4cf3c:	91c7383a 	mul	r3,r18,r7
   4cf40:	d9800017 	ldw	r6,0(sp)
   4cf44:	2088b03a 	or	r4,r4,r2
   4cf48:	da000117 	ldw	r8,4(sp)
   4cf4c:	20c0e136 	bltu	r4,r3,4d2d4 <__divdf3+0x6d4>
   4cf50:	20e3c83a 	sub	r17,r4,r3
   4cf54:	8809883a 	mov	r4,r17
   4cf58:	b00b883a 	mov	r5,r22
   4cf5c:	da000215 	stw	r8,8(sp)
   4cf60:	d9c00115 	stw	r7,4(sp)
   4cf64:	d9800015 	stw	r6,0(sp)
   4cf68:	004c23c0 	call	4c23c <__udivsi3>
   4cf6c:	8809883a 	mov	r4,r17
   4cf70:	b00b883a 	mov	r5,r22
   4cf74:	1023883a 	mov	r17,r2
   4cf78:	004c2a00 	call	4c2a0 <__umodsi3>
   4cf7c:	1004943a 	slli	r2,r2,16
   4cf80:	9465383a 	mul	r18,r18,r17
   4cf84:	e73fffcc 	andi	fp,fp,65535
   4cf88:	e0b8b03a 	or	fp,fp,r2
   4cf8c:	d9800017 	ldw	r6,0(sp)
   4cf90:	d9c00117 	ldw	r7,4(sp)
   4cf94:	da000217 	ldw	r8,8(sp)
   4cf98:	e480c736 	bltu	fp,r18,4d2b8 <__divdf3+0x6b8>
   4cf9c:	380e943a 	slli	r7,r7,16
   4cfa0:	e4b9c83a 	sub	fp,fp,r18
   4cfa4:	3c4eb03a 	or	r7,r7,r17
   4cfa8:	38bfffcc 	andi	r2,r7,65535
   4cfac:	380ad43a 	srli	r5,r7,16
   4cfb0:	4089383a 	mul	r4,r8,r2
   4cfb4:	3087383a 	mul	r3,r6,r2
   4cfb8:	2a11383a 	mul	r8,r5,r8
   4cfbc:	2004d43a 	srli	r2,r4,16
   4cfc0:	314d383a 	mul	r6,r6,r5
   4cfc4:	1a07883a 	add	r3,r3,r8
   4cfc8:	10c5883a 	add	r2,r2,r3
   4cfcc:	1200022e 	bgeu	r2,r8,4cfd8 <__divdf3+0x3d8>
   4cfd0:	00c00074 	movhi	r3,1
   4cfd4:	30cd883a 	add	r6,r6,r3
   4cfd8:	1006d43a 	srli	r3,r2,16
   4cfdc:	1004943a 	slli	r2,r2,16
   4cfe0:	213fffcc 	andi	r4,r4,65535
   4cfe4:	1987883a 	add	r3,r3,r6
   4cfe8:	1105883a 	add	r2,r2,r4
   4cfec:	e0c08f36 	bltu	fp,r3,4d22c <__divdf3+0x62c>
   4cff0:	e0c08d26 	beq	fp,r3,4d228 <__divdf3+0x628>
   4cff4:	39c00054 	ori	r7,r7,1
   4cff8:	9940ffc4 	addi	r5,r19,1023
   4cffc:	01405c0e 	bge	zero,r5,4d170 <__divdf3+0x570>
   4d000:	388001cc 	andi	r2,r7,7
   4d004:	1000e21e 	bne	r2,zero,4d390 <__divdf3+0x790>
   4d008:	8080402c 	andhi	r2,r16,256
   4d00c:	10000426 	beq	r2,zero,4d020 <__divdf3+0x420>
   4d010:	00bfc034 	movhi	r2,65280
   4d014:	10bfffc4 	addi	r2,r2,-1
   4d018:	80a0703a 	and	r16,r16,r2
   4d01c:	99410004 	addi	r5,r19,1024
   4d020:	2881ffc8 	cmpgei	r2,r5,2047
   4d024:	103f5c1e 	bne	r2,zero,4cd98 <__divdf3+0x198>
   4d028:	380ed0fa 	srli	r7,r7,3
   4d02c:	8028977a 	slli	r20,r16,29
   4d030:	8008927a 	slli	r4,r16,9
   4d034:	2941ffcc 	andi	r5,r5,2047
   4d038:	a1e8b03a 	or	r20,r20,r7
   4d03c:	2008d33a 	srli	r4,r4,12
   4d040:	003f4406 	br	4cd54 <__divdf3+0x154>
   4d044:	854eb03a 	or	r7,r16,r21
   4d048:	38003e26 	beq	r7,zero,4d144 <__divdf3+0x544>
   4d04c:	80008f26 	beq	r16,zero,4d28c <__divdf3+0x68c>
   4d050:	8009883a 	mov	r4,r16
   4d054:	004182c0 	call	4182c <__clzsi2>
   4d058:	113ffd44 	addi	r4,r2,-11
   4d05c:	00c00744 	movi	r3,29
   4d060:	11fffe04 	addi	r7,r2,-8
   4d064:	1907c83a 	sub	r3,r3,r4
   4d068:	81e0983a 	sll	r16,r16,r7
   4d06c:	a8c6d83a 	srl	r3,r21,r3
   4d070:	a9ce983a 	sll	r7,r21,r7
   4d074:	1c20b03a 	or	r16,r3,r16
   4d078:	14c5883a 	add	r2,r2,r19
   4d07c:	14c0fcc4 	addi	r19,r2,1011
   4d080:	0007883a 	mov	r3,zero
   4d084:	003f0e06 	br	4ccc0 <__divdf3+0xc0>
   4d088:	2464b03a 	or	r18,r4,r17
   4d08c:	2027883a 	mov	r19,r4
   4d090:	90002726 	beq	r18,zero,4d130 <__divdf3+0x530>
   4d094:	88007326 	beq	r17,zero,4d264 <__divdf3+0x664>
   4d098:	8809883a 	mov	r4,r17
   4d09c:	004182c0 	call	4182c <__clzsi2>
   4d0a0:	10fffd44 	addi	r3,r2,-11
   4d0a4:	01000744 	movi	r4,29
   4d0a8:	153ffe04 	addi	r20,r2,-8
   4d0ac:	20c9c83a 	sub	r4,r4,r3
   4d0b0:	8d0a983a 	sll	r5,r17,r20
   4d0b4:	9908d83a 	srl	r4,r19,r4
   4d0b8:	9d28983a 	sll	r20,r19,r20
   4d0bc:	2164b03a 	or	r18,r4,r5
   4d0c0:	00ff0344 	movi	r3,-1011
   4d0c4:	18a7c83a 	sub	r19,r3,r2
   4d0c8:	0023883a 	mov	r17,zero
   4d0cc:	0039883a 	mov	fp,zero
   4d0d0:	003eea06 	br	4cc7c <__divdf3+0x7c>
   4d0d4:	2464b03a 	or	r18,r4,r17
   4d0d8:	9000101e 	bne	r18,zero,4d11c <__divdf3+0x51c>
   4d0dc:	0029883a 	mov	r20,zero
   4d0e0:	04400204 	movi	r17,8
   4d0e4:	04c1ffc4 	movi	r19,2047
   4d0e8:	07000084 	movi	fp,2
   4d0ec:	003ee306 	br	4cc7c <__divdf3+0x7c>
   4d0f0:	854eb03a 	or	r7,r16,r21
   4d0f4:	9cfe0044 	addi	r19,r19,-2047
   4d0f8:	3800041e 	bne	r7,zero,4d10c <__divdf3+0x50c>
   4d0fc:	8c400094 	ori	r17,r17,2
   4d100:	0021883a 	mov	r16,zero
   4d104:	00c00084 	movi	r3,2
   4d108:	003eed06 	br	4ccc0 <__divdf3+0xc0>
   4d10c:	8c4000d4 	ori	r17,r17,3
   4d110:	a80f883a 	mov	r7,r21
   4d114:	00c000c4 	movi	r3,3
   4d118:	003ee906 	br	4ccc0 <__divdf3+0xc0>
   4d11c:	8825883a 	mov	r18,r17
   4d120:	04c1ffc4 	movi	r19,2047
   4d124:	04400304 	movi	r17,12
   4d128:	070000c4 	movi	fp,3
   4d12c:	003ed306 	br	4cc7c <__divdf3+0x7c>
   4d130:	0029883a 	mov	r20,zero
   4d134:	04400104 	movi	r17,4
   4d138:	0027883a 	mov	r19,zero
   4d13c:	07000044 	movi	fp,1
   4d140:	003ece06 	br	4cc7c <__divdf3+0x7c>
   4d144:	8c400054 	ori	r17,r17,1
   4d148:	0021883a 	mov	r16,zero
   4d14c:	00c00044 	movi	r3,1
   4d150:	003edb06 	br	4ccc0 <__divdf3+0xc0>
   4d154:	01000434 	movhi	r4,16
   4d158:	002b883a 	mov	r21,zero
   4d15c:	213fffc4 	addi	r4,r4,-1
   4d160:	053fffc4 	movi	r20,-1
   4d164:	0141ffc4 	movi	r5,2047
   4d168:	003efa06 	br	4cd54 <__divdf3+0x154>
   4d16c:	01ffffc4 	movi	r7,-1
   4d170:	00800044 	movi	r2,1
   4d174:	1145c83a 	sub	r2,r2,r5
   4d178:	10c00e48 	cmpgei	r3,r2,57
   4d17c:	183ef21e 	bne	r3,zero,4cd48 <__divdf3+0x148>
   4d180:	10c00808 	cmpgei	r3,r2,32
   4d184:	1800651e 	bne	r3,zero,4d31c <__divdf3+0x71c>
   4d188:	98c10784 	addi	r3,r19,1054
   4d18c:	80e8983a 	sll	r20,r16,r3
   4d190:	3888d83a 	srl	r4,r7,r2
   4d194:	38c6983a 	sll	r3,r7,r3
   4d198:	80a0d83a 	srl	r16,r16,r2
   4d19c:	a128b03a 	or	r20,r20,r4
   4d1a0:	1806c03a 	cmpne	r3,r3,zero
   4d1a4:	a0e8b03a 	or	r20,r20,r3
   4d1a8:	a08001cc 	andi	r2,r20,7
   4d1ac:	10000726 	beq	r2,zero,4d1cc <__divdf3+0x5cc>
   4d1b0:	a08003cc 	andi	r2,r20,15
   4d1b4:	10800120 	cmpeqi	r2,r2,4
   4d1b8:	1000041e 	bne	r2,zero,4d1cc <__divdf3+0x5cc>
   4d1bc:	a0800104 	addi	r2,r20,4
   4d1c0:	1529803a 	cmpltu	r20,r2,r20
   4d1c4:	8521883a 	add	r16,r16,r20
   4d1c8:	1029883a 	mov	r20,r2
   4d1cc:	8080202c 	andhi	r2,r16,128
   4d1d0:	10008d26 	beq	r2,zero,4d408 <__divdf3+0x808>
   4d1d4:	01400044 	movi	r5,1
   4d1d8:	0009883a 	mov	r4,zero
   4d1dc:	0029883a 	mov	r20,zero
   4d1e0:	003edc06 	br	4cd54 <__divdf3+0x154>
   4d1e4:	9080022c 	andhi	r2,r18,8
   4d1e8:	10000926 	beq	r2,zero,4d210 <__divdf3+0x610>
   4d1ec:	8080022c 	andhi	r2,r16,8
   4d1f0:	1000071e 	bne	r2,zero,4d210 <__divdf3+0x610>
   4d1f4:	00800434 	movhi	r2,16
   4d1f8:	81000234 	orhi	r4,r16,8
   4d1fc:	10bfffc4 	addi	r2,r2,-1
   4d200:	2088703a 	and	r4,r4,r2
   4d204:	b82b883a 	mov	r21,r23
   4d208:	3829883a 	mov	r20,r7
   4d20c:	003fd506 	br	4d164 <__divdf3+0x564>
   4d210:	00800434 	movhi	r2,16
   4d214:	91000234 	orhi	r4,r18,8
   4d218:	10bfffc4 	addi	r2,r2,-1
   4d21c:	2088703a 	and	r4,r4,r2
   4d220:	b02b883a 	mov	r21,r22
   4d224:	003fcf06 	br	4d164 <__divdf3+0x564>
   4d228:	103f7326 	beq	r2,zero,4cff8 <__divdf3+0x3f8>
   4d22c:	a739883a 	add	fp,r20,fp
   4d230:	393fffc4 	addi	r4,r7,-1
   4d234:	e5004a36 	bltu	fp,r20,4d360 <__divdf3+0x760>
   4d238:	e0c06536 	bltu	fp,r3,4d3d0 <__divdf3+0x7d0>
   4d23c:	e0c07c26 	beq	fp,r3,4d430 <__divdf3+0x830>
   4d240:	200f883a 	mov	r7,r4
   4d244:	003f6b06 	br	4cff4 <__divdf3+0x3f4>
   4d248:	a1fedb36 	bltu	r20,r7,4cdb8 <__divdf3+0x1b8>
   4d24c:	902297fa 	slli	r17,r18,31
   4d250:	a004d07a 	srli	r2,r20,1
   4d254:	9024d07a 	srli	r18,r18,1
   4d258:	a00697fa 	slli	r3,r20,31
   4d25c:	88a2b03a 	or	r17,r17,r2
   4d260:	003ed806 	br	4cdc4 <__divdf3+0x1c4>
   4d264:	004182c0 	call	4182c <__clzsi2>
   4d268:	10c00544 	addi	r3,r2,21
   4d26c:	19400748 	cmpgei	r5,r3,29
   4d270:	1009883a 	mov	r4,r2
   4d274:	10800804 	addi	r2,r2,32
   4d278:	283f8a26 	beq	r5,zero,4d0a4 <__divdf3+0x4a4>
   4d27c:	213ffe04 	addi	r4,r4,-8
   4d280:	a124983a 	sll	r18,r20,r4
   4d284:	0029883a 	mov	r20,zero
   4d288:	003f8d06 	br	4d0c0 <__divdf3+0x4c0>
   4d28c:	a809883a 	mov	r4,r21
   4d290:	004182c0 	call	4182c <__clzsi2>
   4d294:	11000544 	addi	r4,r2,21
   4d298:	21400748 	cmpgei	r5,r4,29
   4d29c:	1007883a 	mov	r3,r2
   4d2a0:	10800804 	addi	r2,r2,32
   4d2a4:	283f6d26 	beq	r5,zero,4d05c <__divdf3+0x45c>
   4d2a8:	18fffe04 	addi	r3,r3,-8
   4d2ac:	a8e0983a 	sll	r16,r21,r3
   4d2b0:	000f883a 	mov	r7,zero
   4d2b4:	003f7006 	br	4d078 <__divdf3+0x478>
   4d2b8:	e539883a 	add	fp,fp,r20
   4d2bc:	88bfffc4 	addi	r2,r17,-1
   4d2c0:	e5003a36 	bltu	fp,r20,4d3ac <__divdf3+0x7ac>
   4d2c4:	e480392e 	bgeu	fp,r18,4d3ac <__divdf3+0x7ac>
   4d2c8:	8c7fff84 	addi	r17,r17,-2
   4d2cc:	e539883a 	add	fp,fp,r20
   4d2d0:	003f3206 	br	4cf9c <__divdf3+0x39c>
   4d2d4:	2509883a 	add	r4,r4,r20
   4d2d8:	38bfffc4 	addi	r2,r7,-1
   4d2dc:	25003136 	bltu	r4,r20,4d3a4 <__divdf3+0x7a4>
   4d2e0:	20c0302e 	bgeu	r4,r3,4d3a4 <__divdf3+0x7a4>
   4d2e4:	39ffff84 	addi	r7,r7,-2
   4d2e8:	2509883a 	add	r4,r4,r20
   4d2ec:	003f1806 	br	4cf50 <__divdf3+0x350>
   4d2f0:	a13f001e 	bne	r20,r4,4cef4 <__divdf3+0x2f4>
   4d2f4:	1dfeff36 	bltu	r3,r23,4cef4 <__divdf3+0x2f4>
   4d2f8:	003efc06 	br	4ceec <__divdf3+0x2ec>
   4d2fc:	22bedb2e 	bgeu	r4,r10,4ce6c <__divdf3+0x26c>
   4d300:	e73fff84 	addi	fp,fp,-2
   4d304:	2509883a 	add	r4,r4,r20
   4d308:	003ed906 	br	4ce70 <__divdf3+0x270>
   4d30c:	217ec42e 	bgeu	r4,r5,4ce20 <__divdf3+0x220>
   4d310:	843fff84 	addi	r16,r16,-2
   4d314:	2509883a 	add	r4,r4,r20
   4d318:	003ec206 	br	4ce24 <__divdf3+0x224>
   4d31c:	013ff844 	movi	r4,-31
   4d320:	2149c83a 	sub	r4,r4,r5
   4d324:	10800820 	cmpeqi	r2,r2,32
   4d328:	8108d83a 	srl	r4,r16,r4
   4d32c:	1000031e 	bne	r2,zero,4d33c <__divdf3+0x73c>
   4d330:	98c10f84 	addi	r3,r19,1086
   4d334:	80c6983a 	sll	r3,r16,r3
   4d338:	38ceb03a 	or	r7,r7,r3
   4d33c:	3828c03a 	cmpne	r20,r7,zero
   4d340:	a128b03a 	or	r20,r20,r4
   4d344:	a40001cc 	andi	r16,r20,7
   4d348:	8000291e 	bne	r16,zero,4d3f0 <__divdf3+0x7f0>
   4d34c:	0009883a 	mov	r4,zero
   4d350:	a028d0fa 	srli	r20,r20,3
   4d354:	000b883a 	mov	r5,zero
   4d358:	a428b03a 	or	r20,r20,r16
   4d35c:	003e7d06 	br	4cd54 <__divdf3+0x154>
   4d360:	200f883a 	mov	r7,r4
   4d364:	e0ff231e 	bne	fp,r3,4cff4 <__divdf3+0x3f4>
   4d368:	15ff221e 	bne	r2,r23,4cff4 <__divdf3+0x3f4>
   4d36c:	003f2206 	br	4cff8 <__divdf3+0x3f8>
   4d370:	98bf0088 	cmpgei	r2,r19,-1022
   4d374:	9940ffc4 	addi	r5,r19,1023
   4d378:	103f7c26 	beq	r2,zero,4d16c <__divdf3+0x56c>
   4d37c:	00bfffc4 	movi	r2,-1
   4d380:	11c00104 	addi	r7,r2,4
   4d384:	3885803a 	cmpltu	r2,r7,r2
   4d388:	80a1883a 	add	r16,r16,r2
   4d38c:	003f1e06 	br	4d008 <__divdf3+0x408>
   4d390:	388003cc 	andi	r2,r7,15
   4d394:	10800120 	cmpeqi	r2,r2,4
   4d398:	103f1b1e 	bne	r2,zero,4d008 <__divdf3+0x408>
   4d39c:	3805883a 	mov	r2,r7
   4d3a0:	003ff706 	br	4d380 <__divdf3+0x780>
   4d3a4:	100f883a 	mov	r7,r2
   4d3a8:	003ee906 	br	4cf50 <__divdf3+0x350>
   4d3ac:	1023883a 	mov	r17,r2
   4d3b0:	003efa06 	br	4cf9c <__divdf3+0x39c>
   4d3b4:	1f3ecf2e 	bgeu	r3,fp,4cef4 <__divdf3+0x2f4>
   4d3b8:	1dc7883a 	add	r3,r3,r23
   4d3bc:	1dcb803a 	cmpltu	r5,r3,r23
   4d3c0:	2d0b883a 	add	r5,r5,r20
   4d3c4:	843fff84 	addi	r16,r16,-2
   4d3c8:	2149883a 	add	r4,r4,r5
   4d3cc:	003eca06 	br	4cef8 <__divdf3+0x2f8>
   4d3d0:	bdc9883a 	add	r4,r23,r23
   4d3d4:	25ef803a 	cmpltu	r23,r4,r23
   4d3d8:	bd2f883a 	add	r23,r23,r20
   4d3dc:	e5f9883a 	add	fp,fp,r23
   4d3e0:	39ffff84 	addi	r7,r7,-2
   4d3e4:	202f883a 	mov	r23,r4
   4d3e8:	e0ffdf26 	beq	fp,r3,4d368 <__divdf3+0x768>
   4d3ec:	003f0106 	br	4cff4 <__divdf3+0x3f4>
   4d3f0:	a08003cc 	andi	r2,r20,15
   4d3f4:	10800120 	cmpeqi	r2,r2,4
   4d3f8:	1000111e 	bne	r2,zero,4d440 <__divdf3+0x840>
   4d3fc:	a0800104 	addi	r2,r20,4
   4d400:	1521803a 	cmpltu	r16,r2,r20
   4d404:	1029883a 	mov	r20,r2
   4d408:	8008927a 	slli	r4,r16,9
   4d40c:	8020977a 	slli	r16,r16,29
   4d410:	2008d33a 	srli	r4,r4,12
   4d414:	003fce06 	br	4d350 <__divdf3+0x750>
   4d418:	00800434 	movhi	r2,16
   4d41c:	81000234 	orhi	r4,r16,8
   4d420:	10bfffc4 	addi	r2,r2,-1
   4d424:	2088703a 	and	r4,r4,r2
   4d428:	3829883a 	mov	r20,r7
   4d42c:	003f4d06 	br	4d164 <__divdf3+0x564>
   4d430:	b8bfe736 	bltu	r23,r2,4d3d0 <__divdf3+0x7d0>
   4d434:	200f883a 	mov	r7,r4
   4d438:	15feee1e 	bne	r2,r23,4cff4 <__divdf3+0x3f4>
   4d43c:	003eee06 	br	4cff8 <__divdf3+0x3f8>
   4d440:	0021883a 	mov	r16,zero
   4d444:	003ff006 	br	4d408 <__divdf3+0x808>

0004d448 <__eqdf2>:
   4d448:	2810d53a 	srli	r8,r5,20
   4d44c:	3804d53a 	srli	r2,r7,20
   4d450:	00c00434 	movhi	r3,16
   4d454:	4201ffcc 	andi	r8,r8,2047
   4d458:	18ffffc4 	addi	r3,r3,-1
   4d45c:	4241ffe0 	cmpeqi	r9,r8,2047
   4d460:	2816d7fa 	srli	r11,r5,31
   4d464:	3814d7fa 	srli	r10,r7,31
   4d468:	28ca703a 	and	r5,r5,r3
   4d46c:	38ce703a 	and	r7,r7,r3
   4d470:	1081ffcc 	andi	r2,r2,2047
   4d474:	4800061e 	bne	r9,zero,4d490 <__eqdf2+0x48>
   4d478:	10c1ffe0 	cmpeqi	r3,r2,2047
   4d47c:	1800061e 	bne	r3,zero,4d498 <__eqdf2+0x50>
   4d480:	4080051e 	bne	r8,r2,4d498 <__eqdf2+0x50>
   4d484:	00800044 	movi	r2,1
   4d488:	29c00b26 	beq	r5,r7,4d4b8 <__eqdf2+0x70>
   4d48c:	f800283a 	ret
   4d490:	1081ffd8 	cmpnei	r2,r2,2047
   4d494:	10000226 	beq	r2,zero,4d4a0 <__eqdf2+0x58>
   4d498:	00800044 	movi	r2,1
   4d49c:	f800283a 	ret
   4d4a0:	29cab03a 	or	r5,r5,r7
   4d4a4:	2984b03a 	or	r2,r5,r6
   4d4a8:	1104b03a 	or	r2,r2,r4
   4d4ac:	103ffa1e 	bne	r2,zero,4d498 <__eqdf2+0x50>
   4d4b0:	5a84c03a 	cmpne	r2,r11,r10
   4d4b4:	f800283a 	ret
   4d4b8:	21800126 	beq	r4,r6,4d4c0 <__eqdf2+0x78>
   4d4bc:	f800283a 	ret
   4d4c0:	5a800426 	beq	r11,r10,4d4d4 <__eqdf2+0x8c>
   4d4c4:	403ffd1e 	bne	r8,zero,4d4bc <__eqdf2+0x74>
   4d4c8:	290ab03a 	or	r5,r5,r4
   4d4cc:	2804c03a 	cmpne	r2,r5,zero
   4d4d0:	f800283a 	ret
   4d4d4:	0005883a 	mov	r2,zero
   4d4d8:	003ff806 	br	4d4bc <__eqdf2+0x74>

0004d4dc <__gedf2>:
   4d4dc:	2810d53a 	srli	r8,r5,20
   4d4e0:	3812d53a 	srli	r9,r7,20
   4d4e4:	00c00434 	movhi	r3,16
   4d4e8:	4201ffcc 	andi	r8,r8,2047
   4d4ec:	18ffffc4 	addi	r3,r3,-1
   4d4f0:	4281ffd8 	cmpnei	r10,r8,2047
   4d4f4:	2816d7fa 	srli	r11,r5,31
   4d4f8:	3804d7fa 	srli	r2,r7,31
   4d4fc:	28ca703a 	and	r5,r5,r3
   4d500:	38ce703a 	and	r7,r7,r3
   4d504:	48c1ffcc 	andi	r3,r9,2047
   4d508:	50001426 	beq	r10,zero,4d55c <__gedf2+0x80>
   4d50c:	1a41ffd8 	cmpnei	r9,r3,2047
   4d510:	48000926 	beq	r9,zero,4d538 <__gedf2+0x5c>
   4d514:	40001b1e 	bne	r8,zero,4d584 <__gedf2+0xa8>
   4d518:	2910b03a 	or	r8,r5,r4
   4d51c:	1800161e 	bne	r3,zero,4d578 <__gedf2+0x9c>
   4d520:	3986b03a 	or	r3,r7,r6
   4d524:	18002126 	beq	r3,zero,4d5ac <__gedf2+0xd0>
   4d528:	4000291e 	bne	r8,zero,4d5d0 <__gedf2+0xf4>
   4d52c:	1000111e 	bne	r2,zero,4d574 <__gedf2+0x98>
   4d530:	00bfffc4 	movi	r2,-1
   4d534:	f800283a 	ret
   4d538:	398eb03a 	or	r7,r7,r6
   4d53c:	3800221e 	bne	r7,zero,4d5c8 <__gedf2+0xec>
   4d540:	4000021e 	bne	r8,zero,4d54c <__gedf2+0x70>
   4d544:	2908b03a 	or	r4,r5,r4
   4d548:	203ff826 	beq	r4,zero,4d52c <__gedf2+0x50>
   4d54c:	5880071e 	bne	r11,r2,4d56c <__gedf2+0x90>
   4d550:	583ff726 	beq	r11,zero,4d530 <__gedf2+0x54>
   4d554:	5805883a 	mov	r2,r11
   4d558:	f800283a 	ret
   4d55c:	290ab03a 	or	r5,r5,r4
   4d560:	2800191e 	bne	r5,zero,4d5c8 <__gedf2+0xec>
   4d564:	1901ffe0 	cmpeqi	r4,r3,2047
   4d568:	2000131e 	bne	r4,zero,4d5b8 <__gedf2+0xdc>
   4d56c:	00800044 	movi	r2,1
   4d570:	583fef1e 	bne	r11,zero,4d530 <__gedf2+0x54>
   4d574:	f800283a 	ret
   4d578:	403ff41e 	bne	r8,zero,4d54c <__gedf2+0x70>
   4d57c:	103ffd1e 	bne	r2,zero,4d574 <__gedf2+0x98>
   4d580:	003feb06 	br	4d530 <__gedf2+0x54>
   4d584:	183ff926 	beq	r3,zero,4d56c <__gedf2+0x90>
   4d588:	58bff81e 	bne	r11,r2,4d56c <__gedf2+0x90>
   4d58c:	1a3ff716 	blt	r3,r8,4d56c <__gedf2+0x90>
   4d590:	40ffef16 	blt	r8,r3,4d550 <__gedf2+0x74>
   4d594:	397ff536 	bltu	r7,r5,4d56c <__gedf2+0x90>
   4d598:	29ffed1e 	bne	r5,r7,4d550 <__gedf2+0x74>
   4d59c:	313ff336 	bltu	r6,r4,4d56c <__gedf2+0x90>
   4d5a0:	21bfeb36 	bltu	r4,r6,4d550 <__gedf2+0x74>
   4d5a4:	0005883a 	mov	r2,zero
   4d5a8:	f800283a 	ret
   4d5ac:	0005883a 	mov	r2,zero
   4d5b0:	403fee1e 	bne	r8,zero,4d56c <__gedf2+0x90>
   4d5b4:	f800283a 	ret
   4d5b8:	398eb03a 	or	r7,r7,r6
   4d5bc:	3800021e 	bne	r7,zero,4d5c8 <__gedf2+0xec>
   4d5c0:	58bff826 	beq	r11,r2,4d5a4 <__gedf2+0xc8>
   4d5c4:	003fe906 	br	4d56c <__gedf2+0x90>
   4d5c8:	00bfff84 	movi	r2,-2
   4d5cc:	f800283a 	ret
   4d5d0:	58bff026 	beq	r11,r2,4d594 <__gedf2+0xb8>
   4d5d4:	003fe506 	br	4d56c <__gedf2+0x90>

0004d5d8 <__ledf2>:
   4d5d8:	2810d53a 	srli	r8,r5,20
   4d5dc:	3812d53a 	srli	r9,r7,20
   4d5e0:	00c00434 	movhi	r3,16
   4d5e4:	4201ffcc 	andi	r8,r8,2047
   4d5e8:	18ffffc4 	addi	r3,r3,-1
   4d5ec:	4281ffd8 	cmpnei	r10,r8,2047
   4d5f0:	2816d7fa 	srli	r11,r5,31
   4d5f4:	3804d7fa 	srli	r2,r7,31
   4d5f8:	28ca703a 	and	r5,r5,r3
   4d5fc:	38ce703a 	and	r7,r7,r3
   4d600:	48c1ffcc 	andi	r3,r9,2047
   4d604:	50001426 	beq	r10,zero,4d658 <__ledf2+0x80>
   4d608:	1a41ffd8 	cmpnei	r9,r3,2047
   4d60c:	48000926 	beq	r9,zero,4d634 <__ledf2+0x5c>
   4d610:	4000191e 	bne	r8,zero,4d678 <__ledf2+0xa0>
   4d614:	2910b03a 	or	r8,r5,r4
   4d618:	1800221e 	bne	r3,zero,4d6a4 <__ledf2+0xcc>
   4d61c:	3986b03a 	or	r3,r7,r6
   4d620:	18002326 	beq	r3,zero,4d6b0 <__ledf2+0xd8>
   4d624:	4000281e 	bne	r8,zero,4d6c8 <__ledf2+0xf0>
   4d628:	10000a1e 	bne	r2,zero,4d654 <__ledf2+0x7c>
   4d62c:	00bfffc4 	movi	r2,-1
   4d630:	f800283a 	ret
   4d634:	398eb03a 	or	r7,r7,r6
   4d638:	38000d1e 	bne	r7,zero,4d670 <__ledf2+0x98>
   4d63c:	4000021e 	bne	r8,zero,4d648 <__ledf2+0x70>
   4d640:	290ab03a 	or	r5,r5,r4
   4d644:	283ff826 	beq	r5,zero,4d628 <__ledf2+0x50>
   4d648:	58801326 	beq	r11,r2,4d698 <__ledf2+0xc0>
   4d64c:	00800044 	movi	r2,1
   4d650:	583ff61e 	bne	r11,zero,4d62c <__ledf2+0x54>
   4d654:	f800283a 	ret
   4d658:	290ab03a 	or	r5,r5,r4
   4d65c:	2800041e 	bne	r5,zero,4d670 <__ledf2+0x98>
   4d660:	1901ffe0 	cmpeqi	r4,r3,2047
   4d664:	203ff926 	beq	r4,zero,4d64c <__ledf2+0x74>
   4d668:	398eb03a 	or	r7,r7,r6
   4d66c:	38001326 	beq	r7,zero,4d6bc <__ledf2+0xe4>
   4d670:	00800084 	movi	r2,2
   4d674:	f800283a 	ret
   4d678:	183ff426 	beq	r3,zero,4d64c <__ledf2+0x74>
   4d67c:	58bff31e 	bne	r11,r2,4d64c <__ledf2+0x74>
   4d680:	1a3ff216 	blt	r3,r8,4d64c <__ledf2+0x74>
   4d684:	40c00416 	blt	r8,r3,4d698 <__ledf2+0xc0>
   4d688:	397ff036 	bltu	r7,r5,4d64c <__ledf2+0x74>
   4d68c:	29c0021e 	bne	r5,r7,4d698 <__ledf2+0xc0>
   4d690:	313fee36 	bltu	r6,r4,4d64c <__ledf2+0x74>
   4d694:	21800a2e 	bgeu	r4,r6,4d6c0 <__ledf2+0xe8>
   4d698:	583fe426 	beq	r11,zero,4d62c <__ledf2+0x54>
   4d69c:	5805883a 	mov	r2,r11
   4d6a0:	f800283a 	ret
   4d6a4:	403fe81e 	bne	r8,zero,4d648 <__ledf2+0x70>
   4d6a8:	103fea1e 	bne	r2,zero,4d654 <__ledf2+0x7c>
   4d6ac:	003fdf06 	br	4d62c <__ledf2+0x54>
   4d6b0:	0005883a 	mov	r2,zero
   4d6b4:	403fe726 	beq	r8,zero,4d654 <__ledf2+0x7c>
   4d6b8:	003fe406 	br	4d64c <__ledf2+0x74>
   4d6bc:	58bfe31e 	bne	r11,r2,4d64c <__ledf2+0x74>
   4d6c0:	0005883a 	mov	r2,zero
   4d6c4:	f800283a 	ret
   4d6c8:	58bfef26 	beq	r11,r2,4d688 <__ledf2+0xb0>
   4d6cc:	003fdf06 	br	4d64c <__ledf2+0x74>

0004d6d0 <__muldf3>:
   4d6d0:	defff304 	addi	sp,sp,-52
   4d6d4:	2804d53a 	srli	r2,r5,20
   4d6d8:	df000b15 	stw	fp,44(sp)
   4d6dc:	2838d7fa 	srli	fp,r5,31
   4d6e0:	00c00434 	movhi	r3,16
   4d6e4:	ddc00a15 	stw	r23,40(sp)
   4d6e8:	dd400815 	stw	r21,32(sp)
   4d6ec:	dc400415 	stw	r17,16(sp)
   4d6f0:	dc000315 	stw	r16,12(sp)
   4d6f4:	18ffffc4 	addi	r3,r3,-1
   4d6f8:	dfc00c15 	stw	ra,48(sp)
   4d6fc:	dd800915 	stw	r22,36(sp)
   4d700:	dd000715 	stw	r20,28(sp)
   4d704:	dcc00615 	stw	r19,24(sp)
   4d708:	dc800515 	stw	r18,20(sp)
   4d70c:	1081ffcc 	andi	r2,r2,2047
   4d710:	2021883a 	mov	r16,r4
   4d714:	382f883a 	mov	r23,r7
   4d718:	28e2703a 	and	r17,r5,r3
   4d71c:	e02b883a 	mov	r21,fp
   4d720:	10009126 	beq	r2,zero,4d968 <__muldf3+0x298>
   4d724:	10c1ffe0 	cmpeqi	r3,r2,2047
   4d728:	1800a41e 	bne	r3,zero,4d9bc <__muldf3+0x2ec>
   4d72c:	882290fa 	slli	r17,r17,3
   4d730:	2006d77a 	srli	r3,r4,29
   4d734:	202890fa 	slli	r20,r4,3
   4d738:	14ff0044 	addi	r19,r2,-1023
   4d73c:	1c62b03a 	or	r17,r3,r17
   4d740:	8c402034 	orhi	r17,r17,128
   4d744:	0025883a 	mov	r18,zero
   4d748:	000f883a 	mov	r7,zero
   4d74c:	b804d53a 	srli	r2,r23,20
   4d750:	04000434 	movhi	r16,16
   4d754:	843fffc4 	addi	r16,r16,-1
   4d758:	1081ffcc 	andi	r2,r2,2047
   4d75c:	b80ad7fa 	srli	r5,r23,31
   4d760:	302d883a 	mov	r22,r6
   4d764:	bc20703a 	and	r16,r23,r16
   4d768:	10006526 	beq	r2,zero,4d900 <__muldf3+0x230>
   4d76c:	10c1ffe0 	cmpeqi	r3,r2,2047
   4d770:	1800291e 	bne	r3,zero,4d818 <__muldf3+0x148>
   4d774:	3006d77a 	srli	r3,r6,29
   4d778:	800890fa 	slli	r4,r16,3
   4d77c:	10bf0044 	addi	r2,r2,-1023
   4d780:	14c5883a 	add	r2,r2,r19
   4d784:	1920b03a 	or	r16,r3,r4
   4d788:	90c002c8 	cmpgei	r3,r18,11
   4d78c:	302c90fa 	slli	r22,r6,3
   4d790:	84002034 	orhi	r16,r16,128
   4d794:	0009883a 	mov	r4,zero
   4d798:	14c00044 	addi	r19,r2,1
   4d79c:	18002c1e 	bne	r3,zero,4d850 <__muldf3+0x180>
   4d7a0:	2f2af03a 	xor	r21,r5,fp
   4d7a4:	90c000c8 	cmpgei	r3,r18,3
   4d7a8:	1800251e 	bne	r3,zero,4d840 <__muldf3+0x170>
   4d7ac:	94bfffc4 	addi	r18,r18,-1
   4d7b0:	948000a8 	cmpgeui	r18,r18,2
   4d7b4:	9000cb1e 	bne	r18,zero,4dae4 <__muldf3+0x414>
   4d7b8:	208000a0 	cmpeqi	r2,r4,2
   4d7bc:	1000861e 	bne	r2,zero,4d9d8 <__muldf3+0x308>
   4d7c0:	21000060 	cmpeqi	r4,r4,1
   4d7c4:	20002b26 	beq	r4,zero,4d874 <__muldf3+0x1a4>
   4d7c8:	0009883a 	mov	r4,zero
   4d7cc:	0021883a 	mov	r16,zero
   4d7d0:	0029883a 	mov	r20,zero
   4d7d4:	2006953a 	slli	r3,r4,20
   4d7d8:	a82a97fa 	slli	r21,r21,31
   4d7dc:	a005883a 	mov	r2,r20
   4d7e0:	1c06b03a 	or	r3,r3,r16
   4d7e4:	1d46b03a 	or	r3,r3,r21
   4d7e8:	dfc00c17 	ldw	ra,48(sp)
   4d7ec:	df000b17 	ldw	fp,44(sp)
   4d7f0:	ddc00a17 	ldw	r23,40(sp)
   4d7f4:	dd800917 	ldw	r22,36(sp)
   4d7f8:	dd400817 	ldw	r21,32(sp)
   4d7fc:	dd000717 	ldw	r20,28(sp)
   4d800:	dcc00617 	ldw	r19,24(sp)
   4d804:	dc800517 	ldw	r18,20(sp)
   4d808:	dc400417 	ldw	r17,16(sp)
   4d80c:	dc000317 	ldw	r16,12(sp)
   4d810:	dec00d04 	addi	sp,sp,52
   4d814:	f800283a 	ret
   4d818:	8186b03a 	or	r3,r16,r6
   4d81c:	9881ffc4 	addi	r2,r19,2047
   4d820:	18007726 	beq	r3,zero,4da00 <__muldf3+0x330>
   4d824:	948000d4 	ori	r18,r18,3
   4d828:	90c002c8 	cmpgei	r3,r18,11
   4d82c:	2f38f03a 	xor	fp,r5,fp
   4d830:	9cc20004 	addi	r19,r19,2048
   4d834:	1801501e 	bne	r3,zero,4dd78 <__muldf3+0x6a8>
   4d838:	e02b883a 	mov	r21,fp
   4d83c:	010000c4 	movi	r4,3
   4d840:	00c00044 	movi	r3,1
   4d844:	1c86983a 	sll	r3,r3,r18
   4d848:	19814c0c 	andi	r6,r3,1328
   4d84c:	30002326 	beq	r6,zero,4d8dc <__muldf3+0x20c>
   4d850:	388000a0 	cmpeqi	r2,r7,2
   4d854:	1000601e 	bne	r2,zero,4d9d8 <__muldf3+0x308>
   4d858:	388000e0 	cmpeqi	r2,r7,3
   4d85c:	10010b1e 	bne	r2,zero,4dc8c <__muldf3+0x5bc>
   4d860:	3809883a 	mov	r4,r7
   4d864:	21000060 	cmpeqi	r4,r4,1
   4d868:	8821883a 	mov	r16,r17
   4d86c:	a02d883a 	mov	r22,r20
   4d870:	203fd51e 	bne	r4,zero,4d7c8 <__muldf3+0xf8>
   4d874:	98c0ffc4 	addi	r3,r19,1023
   4d878:	00c07d0e 	bge	zero,r3,4da70 <__muldf3+0x3a0>
   4d87c:	b08001cc 	andi	r2,r22,7
   4d880:	10000726 	beq	r2,zero,4d8a0 <__muldf3+0x1d0>
   4d884:	b08003cc 	andi	r2,r22,15
   4d888:	10800120 	cmpeqi	r2,r2,4
   4d88c:	1000041e 	bne	r2,zero,4d8a0 <__muldf3+0x1d0>
   4d890:	b0800104 	addi	r2,r22,4
   4d894:	15ad803a 	cmpltu	r22,r2,r22
   4d898:	85a1883a 	add	r16,r16,r22
   4d89c:	102d883a 	mov	r22,r2
   4d8a0:	8080402c 	andhi	r2,r16,256
   4d8a4:	10000426 	beq	r2,zero,4d8b8 <__muldf3+0x1e8>
   4d8a8:	00bfc034 	movhi	r2,65280
   4d8ac:	10bfffc4 	addi	r2,r2,-1
   4d8b0:	80a0703a 	and	r16,r16,r2
   4d8b4:	98c10004 	addi	r3,r19,1024
   4d8b8:	1881ffc8 	cmpgei	r2,r3,2047
   4d8bc:	1000461e 	bne	r2,zero,4d9d8 <__muldf3+0x308>
   4d8c0:	8028977a 	slli	r20,r16,29
   4d8c4:	b02cd0fa 	srli	r22,r22,3
   4d8c8:	8020927a 	slli	r16,r16,9
   4d8cc:	1901ffcc 	andi	r4,r3,2047
   4d8d0:	a5a8b03a 	or	r20,r20,r22
   4d8d4:	8020d33a 	srli	r16,r16,12
   4d8d8:	003fbe06 	br	4d7d4 <__muldf3+0x104>
   4d8dc:	1980900c 	andi	r6,r3,576
   4d8e0:	3000411e 	bne	r6,zero,4d9e8 <__muldf3+0x318>
   4d8e4:	18c0220c 	andi	r3,r3,136
   4d8e8:	18007e26 	beq	r3,zero,4dae4 <__muldf3+0x414>
   4d8ec:	282b883a 	mov	r21,r5
   4d8f0:	8023883a 	mov	r17,r16
   4d8f4:	b029883a 	mov	r20,r22
   4d8f8:	200f883a 	mov	r7,r4
   4d8fc:	003fd406 	br	4d850 <__muldf3+0x180>
   4d900:	8184b03a 	or	r2,r16,r6
   4d904:	10005126 	beq	r2,zero,4da4c <__muldf3+0x37c>
   4d908:	d9800215 	stw	r6,8(sp)
   4d90c:	d9400115 	stw	r5,4(sp)
   4d910:	d9c00015 	stw	r7,0(sp)
   4d914:	8000ec26 	beq	r16,zero,4dcc8 <__muldf3+0x5f8>
   4d918:	8009883a 	mov	r4,r16
   4d91c:	004182c0 	call	4182c <__clzsi2>
   4d920:	d9c00017 	ldw	r7,0(sp)
   4d924:	d9400117 	ldw	r5,4(sp)
   4d928:	d9800217 	ldw	r6,8(sp)
   4d92c:	113ffd44 	addi	r4,r2,-11
   4d930:	00c00744 	movi	r3,29
   4d934:	15bffe04 	addi	r22,r2,-8
   4d938:	1907c83a 	sub	r3,r3,r4
   4d93c:	85a0983a 	sll	r16,r16,r22
   4d940:	30c6d83a 	srl	r3,r6,r3
   4d944:	35ac983a 	sll	r22,r6,r22
   4d948:	1c20b03a 	or	r16,r3,r16
   4d94c:	9885c83a 	sub	r2,r19,r2
   4d950:	10bf0344 	addi	r2,r2,-1011
   4d954:	90c002c8 	cmpgei	r3,r18,11
   4d958:	0009883a 	mov	r4,zero
   4d95c:	14c00044 	addi	r19,r2,1
   4d960:	183f8f26 	beq	r3,zero,4d7a0 <__muldf3+0xd0>
   4d964:	003fba06 	br	4d850 <__muldf3+0x180>
   4d968:	2468b03a 	or	r20,r4,r17
   4d96c:	a0003226 	beq	r20,zero,4da38 <__muldf3+0x368>
   4d970:	d9800015 	stw	r6,0(sp)
   4d974:	8800ca26 	beq	r17,zero,4dca0 <__muldf3+0x5d0>
   4d978:	8809883a 	mov	r4,r17
   4d97c:	004182c0 	call	4182c <__clzsi2>
   4d980:	d9800017 	ldw	r6,0(sp)
   4d984:	1009883a 	mov	r4,r2
   4d988:	117ffd44 	addi	r5,r2,-11
   4d98c:	00c00744 	movi	r3,29
   4d990:	253ffe04 	addi	r20,r4,-8
   4d994:	1947c83a 	sub	r3,r3,r5
   4d998:	8d22983a 	sll	r17,r17,r20
   4d99c:	80c6d83a 	srl	r3,r16,r3
   4d9a0:	8528983a 	sll	r20,r16,r20
   4d9a4:	1c62b03a 	or	r17,r3,r17
   4d9a8:	00bf0344 	movi	r2,-1011
   4d9ac:	1127c83a 	sub	r19,r2,r4
   4d9b0:	0025883a 	mov	r18,zero
   4d9b4:	000f883a 	mov	r7,zero
   4d9b8:	003f6406 	br	4d74c <__muldf3+0x7c>
   4d9bc:	2468b03a 	or	r20,r4,r17
   4d9c0:	a000181e 	bne	r20,zero,4da24 <__muldf3+0x354>
   4d9c4:	0023883a 	mov	r17,zero
   4d9c8:	04800204 	movi	r18,8
   4d9cc:	04c1ffc4 	movi	r19,2047
   4d9d0:	01c00084 	movi	r7,2
   4d9d4:	003f5d06 	br	4d74c <__muldf3+0x7c>
   4d9d8:	0101ffc4 	movi	r4,2047
   4d9dc:	0021883a 	mov	r16,zero
   4d9e0:	0029883a 	mov	r20,zero
   4d9e4:	003f7b06 	br	4d7d4 <__muldf3+0x104>
   4d9e8:	04000434 	movhi	r16,16
   4d9ec:	002b883a 	mov	r21,zero
   4d9f0:	843fffc4 	addi	r16,r16,-1
   4d9f4:	053fffc4 	movi	r20,-1
   4d9f8:	0101ffc4 	movi	r4,2047
   4d9fc:	003f7506 	br	4d7d4 <__muldf3+0x104>
   4da00:	94800094 	ori	r18,r18,2
   4da04:	90c002c8 	cmpgei	r3,r18,11
   4da08:	9cc20004 	addi	r19,r19,2048
   4da0c:	183f901e 	bne	r3,zero,4d850 <__muldf3+0x180>
   4da10:	2f2af03a 	xor	r21,r5,fp
   4da14:	002d883a 	mov	r22,zero
   4da18:	0021883a 	mov	r16,zero
   4da1c:	01000084 	movi	r4,2
   4da20:	003f6006 	br	4d7a4 <__muldf3+0xd4>
   4da24:	2029883a 	mov	r20,r4
   4da28:	04800304 	movi	r18,12
   4da2c:	04c1ffc4 	movi	r19,2047
   4da30:	01c000c4 	movi	r7,3
   4da34:	003f4506 	br	4d74c <__muldf3+0x7c>
   4da38:	0023883a 	mov	r17,zero
   4da3c:	04800104 	movi	r18,4
   4da40:	0027883a 	mov	r19,zero
   4da44:	01c00044 	movi	r7,1
   4da48:	003f4006 	br	4d74c <__muldf3+0x7c>
   4da4c:	94800054 	ori	r18,r18,1
   4da50:	9805883a 	mov	r2,r19
   4da54:	90c002c8 	cmpgei	r3,r18,11
   4da58:	0021883a 	mov	r16,zero
   4da5c:	002d883a 	mov	r22,zero
   4da60:	01000044 	movi	r4,1
   4da64:	14c00044 	addi	r19,r2,1
   4da68:	183f4d26 	beq	r3,zero,4d7a0 <__muldf3+0xd0>
   4da6c:	003f7806 	br	4d850 <__muldf3+0x180>
   4da70:	01000044 	movi	r4,1
   4da74:	20c9c83a 	sub	r4,r4,r3
   4da78:	20800e48 	cmpgei	r2,r4,57
   4da7c:	103f521e 	bne	r2,zero,4d7c8 <__muldf3+0xf8>
   4da80:	20800808 	cmpgei	r2,r4,32
   4da84:	1000a11e 	bne	r2,zero,4dd0c <__muldf3+0x63c>
   4da88:	9cc10784 	addi	r19,r19,1054
   4da8c:	b104d83a 	srl	r2,r22,r4
   4da90:	84e8983a 	sll	r20,r16,r19
   4da94:	b4e6983a 	sll	r19,r22,r19
   4da98:	8108d83a 	srl	r4,r16,r4
   4da9c:	a0a8b03a 	or	r20,r20,r2
   4daa0:	9826c03a 	cmpne	r19,r19,zero
   4daa4:	a4e8b03a 	or	r20,r20,r19
   4daa8:	a08001cc 	andi	r2,r20,7
   4daac:	10000726 	beq	r2,zero,4dacc <__muldf3+0x3fc>
   4dab0:	a08003cc 	andi	r2,r20,15
   4dab4:	10800120 	cmpeqi	r2,r2,4
   4dab8:	1000041e 	bne	r2,zero,4dacc <__muldf3+0x3fc>
   4dabc:	a0800104 	addi	r2,r20,4
   4dac0:	1529803a 	cmpltu	r20,r2,r20
   4dac4:	2509883a 	add	r4,r4,r20
   4dac8:	1029883a 	mov	r20,r2
   4dacc:	2080202c 	andhi	r2,r4,128
   4dad0:	1000a526 	beq	r2,zero,4dd68 <__muldf3+0x698>
   4dad4:	01000044 	movi	r4,1
   4dad8:	0021883a 	mov	r16,zero
   4dadc:	0029883a 	mov	r20,zero
   4dae0:	003f3c06 	br	4d7d4 <__muldf3+0x104>
   4dae4:	a018d43a 	srli	r12,r20,16
   4dae8:	b010d43a 	srli	r8,r22,16
   4daec:	a53fffcc 	andi	r20,r20,65535
   4daf0:	b5bfffcc 	andi	r22,r22,65535
   4daf4:	b509383a 	mul	r4,r22,r20
   4daf8:	658d383a 	mul	r6,r12,r22
   4dafc:	450b383a 	mul	r5,r8,r20
   4db00:	2006d43a 	srli	r3,r4,16
   4db04:	620f383a 	mul	r7,r12,r8
   4db08:	298b883a 	add	r5,r5,r6
   4db0c:	1947883a 	add	r3,r3,r5
   4db10:	1980022e 	bgeu	r3,r6,4db1c <__muldf3+0x44c>
   4db14:	01400074 	movhi	r5,1
   4db18:	394f883a 	add	r7,r7,r5
   4db1c:	8014d43a 	srli	r10,r16,16
   4db20:	843fffcc 	andi	r16,r16,65535
   4db24:	8517383a 	mul	r11,r16,r20
   4db28:	641b383a 	mul	r13,r12,r16
   4db2c:	5529383a 	mul	r20,r10,r20
   4db30:	580ad43a 	srli	r5,r11,16
   4db34:	180c943a 	slli	r6,r3,16
   4db38:	a369883a 	add	r20,r20,r13
   4db3c:	227fffcc 	andi	r9,r4,65535
   4db40:	2d0b883a 	add	r5,r5,r20
   4db44:	1808d43a 	srli	r4,r3,16
   4db48:	6299383a 	mul	r12,r12,r10
   4db4c:	324d883a 	add	r6,r6,r9
   4db50:	2b40022e 	bgeu	r5,r13,4db5c <__muldf3+0x48c>
   4db54:	00c00074 	movhi	r3,1
   4db58:	60d9883a 	add	r12,r12,r3
   4db5c:	881ad43a 	srli	r13,r17,16
   4db60:	8c7fffcc 	andi	r17,r17,65535
   4db64:	b45f383a 	mul	r15,r22,r17
   4db68:	445d383a 	mul	r14,r8,r17
   4db6c:	6dad383a 	mul	r22,r13,r22
   4db70:	2812943a 	slli	r9,r5,16
   4db74:	7806d43a 	srli	r3,r15,16
   4db78:	280ad43a 	srli	r5,r5,16
   4db7c:	5affffcc 	andi	r11,r11,65535
   4db80:	759d883a 	add	r14,r14,r22
   4db84:	4ad3883a 	add	r9,r9,r11
   4db88:	1b87883a 	add	r3,r3,r14
   4db8c:	4365383a 	mul	r18,r8,r13
   4db90:	2b17883a 	add	r11,r5,r12
   4db94:	2249883a 	add	r4,r4,r9
   4db98:	1d80022e 	bgeu	r3,r22,4dba4 <__muldf3+0x4d4>
   4db9c:	01400074 	movhi	r5,1
   4dba0:	9165883a 	add	r18,r18,r5
   4dba4:	8459383a 	mul	r12,r16,r17
   4dba8:	5463383a 	mul	r17,r10,r17
   4dbac:	6c21383a 	mul	r16,r13,r16
   4dbb0:	6010d43a 	srli	r8,r12,16
   4dbb4:	181cd43a 	srli	r14,r3,16
   4dbb8:	180a943a 	slli	r5,r3,16
   4dbbc:	8c23883a 	add	r17,r17,r16
   4dbc0:	78ffffcc 	andi	r3,r15,65535
   4dbc4:	4451883a 	add	r8,r8,r17
   4dbc8:	5355383a 	mul	r10,r10,r13
   4dbcc:	749d883a 	add	r14,r14,r18
   4dbd0:	28cb883a 	add	r5,r5,r3
   4dbd4:	4400022e 	bgeu	r8,r16,4dbe0 <__muldf3+0x510>
   4dbd8:	00c00074 	movhi	r3,1
   4dbdc:	50d5883a 	add	r10,r10,r3
   4dbe0:	4006943a 	slli	r3,r8,16
   4dbe4:	633fffcc 	andi	r12,r12,65535
   4dbe8:	21c9883a 	add	r4,r4,r7
   4dbec:	1b07883a 	add	r3,r3,r12
   4dbf0:	2253803a 	cmpltu	r9,r4,r9
   4dbf4:	1ac7883a 	add	r3,r3,r11
   4dbf8:	2149883a 	add	r4,r4,r5
   4dbfc:	1a5b883a 	add	r13,r3,r9
   4dc00:	214b803a 	cmpltu	r5,r4,r5
   4dc04:	6b8f883a 	add	r7,r13,r14
   4dc08:	4010d43a 	srli	r8,r8,16
   4dc0c:	3959883a 	add	r12,r7,r5
   4dc10:	1ae1803a 	cmpltu	r16,r3,r11
   4dc14:	6a5b803a 	cmpltu	r13,r13,r9
   4dc18:	614b803a 	cmpltu	r5,r12,r5
   4dc1c:	8360b03a 	or	r16,r16,r13
   4dc20:	3b8f803a 	cmpltu	r7,r7,r14
   4dc24:	394eb03a 	or	r7,r7,r5
   4dc28:	8221883a 	add	r16,r16,r8
   4dc2c:	202c927a 	slli	r22,r4,9
   4dc30:	81e1883a 	add	r16,r16,r7
   4dc34:	82a1883a 	add	r16,r16,r10
   4dc38:	8020927a 	slli	r16,r16,9
   4dc3c:	2008d5fa 	srli	r4,r4,23
   4dc40:	600ad5fa 	srli	r5,r12,23
   4dc44:	6006927a 	slli	r3,r12,9
   4dc48:	b1acb03a 	or	r22,r22,r6
   4dc4c:	b02cc03a 	cmpne	r22,r22,zero
   4dc50:	b12cb03a 	or	r22,r22,r4
   4dc54:	8100402c 	andhi	r4,r16,256
   4dc58:	b0ecb03a 	or	r22,r22,r3
   4dc5c:	8160b03a 	or	r16,r16,r5
   4dc60:	20002826 	beq	r4,zero,4dd04 <__muldf3+0x634>
   4dc64:	b006d07a 	srli	r3,r22,1
   4dc68:	800497fa 	slli	r2,r16,31
   4dc6c:	b580004c 	andi	r22,r22,1
   4dc70:	1d86b03a 	or	r3,r3,r22
   4dc74:	8020d07a 	srli	r16,r16,1
   4dc78:	18acb03a 	or	r22,r3,r2
   4dc7c:	003efd06 	br	4d874 <__muldf3+0x1a4>
   4dc80:	282b883a 	mov	r21,r5
   4dc84:	8023883a 	mov	r17,r16
   4dc88:	3029883a 	mov	r20,r6
   4dc8c:	00800434 	movhi	r2,16
   4dc90:	8c000234 	orhi	r16,r17,8
   4dc94:	10bfffc4 	addi	r2,r2,-1
   4dc98:	80a0703a 	and	r16,r16,r2
   4dc9c:	003f5606 	br	4d9f8 <__muldf3+0x328>
   4dca0:	004182c0 	call	4182c <__clzsi2>
   4dca4:	11400544 	addi	r5,r2,21
   4dca8:	28c00748 	cmpgei	r3,r5,29
   4dcac:	d9800017 	ldw	r6,0(sp)
   4dcb0:	11000804 	addi	r4,r2,32
   4dcb4:	183f3526 	beq	r3,zero,4d98c <__muldf3+0x2bc>
   4dcb8:	10bffe04 	addi	r2,r2,-8
   4dcbc:	80a2983a 	sll	r17,r16,r2
   4dcc0:	0029883a 	mov	r20,zero
   4dcc4:	003f3806 	br	4d9a8 <__muldf3+0x2d8>
   4dcc8:	3009883a 	mov	r4,r6
   4dccc:	004182c0 	call	4182c <__clzsi2>
   4dcd0:	11000544 	addi	r4,r2,21
   4dcd4:	22000748 	cmpgei	r8,r4,29
   4dcd8:	1007883a 	mov	r3,r2
   4dcdc:	d9c00017 	ldw	r7,0(sp)
   4dce0:	d9400117 	ldw	r5,4(sp)
   4dce4:	d9800217 	ldw	r6,8(sp)
   4dce8:	10800804 	addi	r2,r2,32
   4dcec:	403f1026 	beq	r8,zero,4d930 <__muldf3+0x260>
   4dcf0:	18fffe04 	addi	r3,r3,-8
   4dcf4:	b0c6983a 	sll	r3,r22,r3
   4dcf8:	002d883a 	mov	r22,zero
   4dcfc:	1821883a 	mov	r16,r3
   4dd00:	003f1206 	br	4d94c <__muldf3+0x27c>
   4dd04:	1027883a 	mov	r19,r2
   4dd08:	003eda06 	br	4d874 <__muldf3+0x1a4>
   4dd0c:	00bff844 	movi	r2,-31
   4dd10:	10c7c83a 	sub	r3,r2,r3
   4dd14:	21000820 	cmpeqi	r4,r4,32
   4dd18:	80c6d83a 	srl	r3,r16,r3
   4dd1c:	2000031e 	bne	r4,zero,4dd2c <__muldf3+0x65c>
   4dd20:	9cc10f84 	addi	r19,r19,1086
   4dd24:	84e6983a 	sll	r19,r16,r19
   4dd28:	b4ecb03a 	or	r22,r22,r19
   4dd2c:	b028c03a 	cmpne	r20,r22,zero
   4dd30:	a0e8b03a 	or	r20,r20,r3
   4dd34:	a08001cc 	andi	r2,r20,7
   4dd38:	1000051e 	bne	r2,zero,4dd50 <__muldf3+0x680>
   4dd3c:	0021883a 	mov	r16,zero
   4dd40:	a028d0fa 	srli	r20,r20,3
   4dd44:	0009883a 	mov	r4,zero
   4dd48:	a0a8b03a 	or	r20,r20,r2
   4dd4c:	003ea106 	br	4d7d4 <__muldf3+0x104>
   4dd50:	a08003cc 	andi	r2,r20,15
   4dd54:	10800120 	cmpeqi	r2,r2,4
   4dd58:	1000111e 	bne	r2,zero,4dda0 <__muldf3+0x6d0>
   4dd5c:	a0800104 	addi	r2,r20,4
   4dd60:	1509803a 	cmpltu	r4,r2,r20
   4dd64:	1029883a 	mov	r20,r2
   4dd68:	2020927a 	slli	r16,r4,9
   4dd6c:	2004977a 	slli	r2,r4,29
   4dd70:	8020d33a 	srli	r16,r16,12
   4dd74:	003ff206 	br	4dd40 <__muldf3+0x670>
   4dd78:	948003e0 	cmpeqi	r18,r18,15
   4dd7c:	903fc026 	beq	r18,zero,4dc80 <__muldf3+0x5b0>
   4dd80:	8880022c 	andhi	r2,r17,8
   4dd84:	103fc126 	beq	r2,zero,4dc8c <__muldf3+0x5bc>
   4dd88:	b9c0022c 	andhi	r7,r23,8
   4dd8c:	383fbf1e 	bne	r7,zero,4dc8c <__muldf3+0x5bc>
   4dd90:	84000234 	orhi	r16,r16,8
   4dd94:	282b883a 	mov	r21,r5
   4dd98:	3029883a 	mov	r20,r6
   4dd9c:	003f1606 	br	4d9f8 <__muldf3+0x328>
   4dda0:	0009883a 	mov	r4,zero
   4dda4:	003ff006 	br	4dd68 <__muldf3+0x698>

0004dda8 <__subdf3>:
   4dda8:	00800434 	movhi	r2,16
   4ddac:	3806d53a 	srli	r3,r7,20
   4ddb0:	10bfffc4 	addi	r2,r2,-1
   4ddb4:	defffa04 	addi	sp,sp,-24
   4ddb8:	2890703a 	and	r8,r5,r2
   4ddbc:	3884703a 	and	r2,r7,r2
   4ddc0:	2812d7fa 	srli	r9,r5,31
   4ddc4:	401090fa 	slli	r8,r8,3
   4ddc8:	280ad53a 	srli	r5,r5,20
   4ddcc:	100490fa 	slli	r2,r2,3
   4ddd0:	3016d77a 	srli	r11,r6,29
   4ddd4:	dc400115 	stw	r17,4(sp)
   4ddd8:	2022d77a 	srli	r17,r4,29
   4dddc:	18c1ffcc 	andi	r3,r3,2047
   4dde0:	dd000415 	stw	r20,16(sp)
   4dde4:	dcc00315 	stw	r19,12(sp)
   4dde8:	dc000015 	stw	r16,0(sp)
   4ddec:	dfc00515 	stw	ra,20(sp)
   4ddf0:	dc800215 	stw	r18,8(sp)
   4ddf4:	1a81ffd8 	cmpnei	r10,r3,2047
   4ddf8:	2c01ffcc 	andi	r16,r5,2047
   4ddfc:	380ed7fa 	srli	r7,r7,31
   4de00:	201890fa 	slli	r12,r4,3
   4de04:	301a90fa 	slli	r13,r6,3
   4de08:	4829883a 	mov	r20,r9
   4de0c:	4cc03fcc 	andi	r19,r9,255
   4de10:	8a22b03a 	or	r17,r17,r8
   4de14:	588ab03a 	or	r5,r11,r2
   4de18:	50007126 	beq	r10,zero,4dfe0 <__subdf3+0x238>
   4de1c:	39c0005c 	xori	r7,r7,1
   4de20:	3813883a 	mov	r9,r7
   4de24:	3a803fcc 	andi	r10,r7,255
   4de28:	80d1c83a 	sub	r8,r16,r3
   4de2c:	99c05526 	beq	r19,r7,4df84 <__subdf3+0x1dc>
   4de30:	0202320e 	bge	zero,r8,4e6fc <__subdf3+0x954>
   4de34:	18008426 	beq	r3,zero,4e048 <__subdf3+0x2a0>
   4de38:	8081ffe0 	cmpeqi	r2,r16,2047
   4de3c:	10011b1e 	bne	r2,zero,4e2ac <__subdf3+0x504>
   4de40:	40800e48 	cmpgei	r2,r8,57
   4de44:	1000881e 	bne	r2,zero,4e068 <__subdf3+0x2c0>
   4de48:	29402034 	orhi	r5,r5,128
   4de4c:	40800808 	cmpgei	r2,r8,32
   4de50:	1001451e 	bne	r2,zero,4e368 <__subdf3+0x5c0>
   4de54:	00800804 	movi	r2,32
   4de58:	1205c83a 	sub	r2,r2,r8
   4de5c:	28a4983a 	sll	r18,r5,r2
   4de60:	6a06d83a 	srl	r3,r13,r8
   4de64:	6884983a 	sll	r2,r13,r2
   4de68:	2a10d83a 	srl	r8,r5,r8
   4de6c:	90e4b03a 	or	r18,r18,r3
   4de70:	1004c03a 	cmpne	r2,r2,zero
   4de74:	90a4b03a 	or	r18,r18,r2
   4de78:	8a23c83a 	sub	r17,r17,r8
   4de7c:	64a5c83a 	sub	r18,r12,r18
   4de80:	6485803a 	cmpltu	r2,r12,r18
   4de84:	88a3c83a 	sub	r17,r17,r2
   4de88:	8880202c 	andhi	r2,r17,128
   4de8c:	1000ae26 	beq	r2,zero,4e148 <__subdf3+0x3a0>
   4de90:	00802034 	movhi	r2,128
   4de94:	10bfffc4 	addi	r2,r2,-1
   4de98:	88a2703a 	and	r17,r17,r2
   4de9c:	8800de26 	beq	r17,zero,4e218 <__subdf3+0x470>
   4dea0:	8809883a 	mov	r4,r17
   4dea4:	004182c0 	call	4182c <__clzsi2>
   4dea8:	10fffe04 	addi	r3,r2,-8
   4deac:	01000804 	movi	r4,32
   4deb0:	20c5c83a 	sub	r2,r4,r3
   4deb4:	9084d83a 	srl	r2,r18,r2
   4deb8:	88e2983a 	sll	r17,r17,r3
   4debc:	90e4983a 	sll	r18,r18,r3
   4dec0:	1444b03a 	or	r2,r2,r17
   4dec4:	1c010516 	blt	r3,r16,4e2dc <__subdf3+0x534>
   4dec8:	1c07c83a 	sub	r3,r3,r16
   4decc:	18c00044 	addi	r3,r3,1
   4ded0:	20c9c83a 	sub	r4,r4,r3
   4ded4:	910a983a 	sll	r5,r18,r4
   4ded8:	90e2d83a 	srl	r17,r18,r3
   4dedc:	280ac03a 	cmpne	r5,r5,zero
   4dee0:	1108983a 	sll	r4,r2,r4
   4dee4:	894ab03a 	or	r5,r17,r5
   4dee8:	10e2d83a 	srl	r17,r2,r3
   4deec:	0021883a 	mov	r16,zero
   4def0:	2164b03a 	or	r18,r4,r5
   4def4:	908001cc 	andi	r2,r18,7
   4def8:	10000726 	beq	r2,zero,4df18 <__subdf3+0x170>
   4defc:	908003cc 	andi	r2,r18,15
   4df00:	10800120 	cmpeqi	r2,r2,4
   4df04:	1000041e 	bne	r2,zero,4df18 <__subdf3+0x170>
   4df08:	90800104 	addi	r2,r18,4
   4df0c:	14a5803a 	cmpltu	r18,r2,r18
   4df10:	8ca3883a 	add	r17,r17,r18
   4df14:	1025883a 	mov	r18,r2
   4df18:	8880202c 	andhi	r2,r17,128
   4df1c:	1000d726 	beq	r2,zero,4e27c <__subdf3+0x4d4>
   4df20:	8081ffa0 	cmpeqi	r2,r16,2046
   4df24:	84000044 	addi	r16,r16,1
   4df28:	10007c1e 	bne	r2,zero,4e11c <__subdf3+0x374>
   4df2c:	013fe034 	movhi	r4,65408
   4df30:	213fffc4 	addi	r4,r4,-1
   4df34:	8908703a 	and	r4,r17,r4
   4df38:	2004977a 	slli	r2,r4,29
   4df3c:	2008927a 	slli	r4,r4,9
   4df40:	9024d0fa 	srli	r18,r18,3
   4df44:	80c1ffcc 	andi	r3,r16,2047
   4df48:	2008d33a 	srli	r4,r4,12
   4df4c:	1484b03a 	or	r2,r2,r18
   4df50:	9d00004c 	andi	r20,r19,1
   4df54:	1806953a 	slli	r3,r3,20
   4df58:	a02897fa 	slli	r20,r20,31
   4df5c:	1906b03a 	or	r3,r3,r4
   4df60:	1d06b03a 	or	r3,r3,r20
   4df64:	dfc00517 	ldw	ra,20(sp)
   4df68:	dd000417 	ldw	r20,16(sp)
   4df6c:	dcc00317 	ldw	r19,12(sp)
   4df70:	dc800217 	ldw	r18,8(sp)
   4df74:	dc400117 	ldw	r17,4(sp)
   4df78:	dc000017 	ldw	r16,0(sp)
   4df7c:	dec00604 	addi	sp,sp,24
   4df80:	f800283a 	ret
   4df84:	0201e60e 	bge	zero,r8,4e720 <__subdf3+0x978>
   4df88:	18004d1e 	bne	r3,zero,4e0c0 <__subdf3+0x318>
   4df8c:	2b44b03a 	or	r2,r5,r13
   4df90:	1000d026 	beq	r2,zero,4e2d4 <__subdf3+0x52c>
   4df94:	823fffc4 	addi	r8,r16,-1
   4df98:	40006426 	beq	r8,zero,4e12c <__subdf3+0x384>
   4df9c:	8081ffe0 	cmpeqi	r2,r16,2047
   4dfa0:	10018e1e 	bne	r2,zero,4e5dc <__subdf3+0x834>
   4dfa4:	40800e48 	cmpgei	r2,r8,57
   4dfa8:	1000491e 	bne	r2,zero,4e0d0 <__subdf3+0x328>
   4dfac:	40800808 	cmpgei	r2,r8,32
   4dfb0:	1001431e 	bne	r2,zero,4e4c0 <__subdf3+0x718>
   4dfb4:	00800804 	movi	r2,32
   4dfb8:	1205c83a 	sub	r2,r2,r8
   4dfbc:	28a4983a 	sll	r18,r5,r2
   4dfc0:	6a06d83a 	srl	r3,r13,r8
   4dfc4:	6884983a 	sll	r2,r13,r2
   4dfc8:	2a10d83a 	srl	r8,r5,r8
   4dfcc:	90e4b03a 	or	r18,r18,r3
   4dfd0:	1004c03a 	cmpne	r2,r2,zero
   4dfd4:	90a4b03a 	or	r18,r18,r2
   4dfd8:	8a23883a 	add	r17,r17,r8
   4dfdc:	00003d06 	br	4e0d4 <__subdf3+0x32c>
   4dfe0:	2b44b03a 	or	r2,r5,r13
   4dfe4:	823e0044 	addi	r8,r16,-2047
   4dfe8:	1000211e 	bne	r2,zero,4e070 <__subdf3+0x2c8>
   4dfec:	39c0005c 	xori	r7,r7,1
   4dff0:	3813883a 	mov	r9,r7
   4dff4:	3a803fcc 	andi	r10,r7,255
   4dff8:	99c06b26 	beq	r19,r7,4e1a8 <__subdf3+0x400>
   4dffc:	40005526 	beq	r8,zero,4e154 <__subdf3+0x3ac>
   4e000:	8000201e 	bne	r16,zero,4e084 <__subdf3+0x2dc>
   4e004:	0401ffc4 	movi	r16,2047
   4e008:	8b04b03a 	or	r2,r17,r12
   4e00c:	1000ae26 	beq	r2,zero,4e2c8 <__subdf3+0x520>
   4e010:	80bfffc4 	addi	r2,r16,-1
   4e014:	10015e26 	beq	r2,zero,4e590 <__subdf3+0x7e8>
   4e018:	8401ffe0 	cmpeqi	r16,r16,2047
   4e01c:	8001801e 	bne	r16,zero,4e620 <__subdf3+0x878>
   4e020:	11000e48 	cmpgei	r4,r2,57
   4e024:	5027883a 	mov	r19,r10
   4e028:	4829883a 	mov	r20,r9
   4e02c:	20011326 	beq	r4,zero,4e47c <__subdf3+0x6d4>
   4e030:	04800044 	movi	r18,1
   4e034:	6ca5c83a 	sub	r18,r13,r18
   4e038:	6c9b803a 	cmpltu	r13,r13,r18
   4e03c:	2b63c83a 	sub	r17,r5,r13
   4e040:	1821883a 	mov	r16,r3
   4e044:	003f9006 	br	4de88 <__subdf3+0xe0>
   4e048:	2b44b03a 	or	r2,r5,r13
   4e04c:	1000a126 	beq	r2,zero,4e2d4 <__subdf3+0x52c>
   4e050:	823fffc4 	addi	r8,r16,-1
   4e054:	4000fe26 	beq	r8,zero,4e450 <__subdf3+0x6a8>
   4e058:	8081ffe0 	cmpeqi	r2,r16,2047
   4e05c:	1000931e 	bne	r2,zero,4e2ac <__subdf3+0x504>
   4e060:	40800e48 	cmpgei	r2,r8,57
   4e064:	103f7926 	beq	r2,zero,4de4c <__subdf3+0xa4>
   4e068:	04800044 	movi	r18,1
   4e06c:	003f8306 	br	4de7c <__subdf3+0xd4>
   4e070:	3a803fcc 	andi	r10,r7,255
   4e074:	99c04c26 	beq	r19,r7,4e1a8 <__subdf3+0x400>
   4e078:	40003626 	beq	r8,zero,4e154 <__subdf3+0x3ac>
   4e07c:	3813883a 	mov	r9,r7
   4e080:	803fe026 	beq	r16,zero,4e004 <__subdf3+0x25c>
   4e084:	2804977a 	slli	r2,r5,29
   4e088:	00c80034 	movhi	r3,8192
   4e08c:	18ffffc4 	addi	r3,r3,-1
   4e090:	280ad0fa 	srli	r5,r5,3
   4e094:	30c6703a 	and	r3,r6,r3
   4e098:	10c4b03a 	or	r2,r2,r3
   4e09c:	4829883a 	mov	r20,r9
   4e0a0:	1146b03a 	or	r3,r2,r5
   4e0a4:	18019126 	beq	r3,zero,4e6ec <__subdf3+0x944>
   4e0a8:	00c00434 	movhi	r3,16
   4e0ac:	18ffffc4 	addi	r3,r3,-1
   4e0b0:	29000234 	orhi	r4,r5,8
   4e0b4:	20c8703a 	and	r4,r4,r3
   4e0b8:	00c1ffc4 	movi	r3,2047
   4e0bc:	003fa506 	br	4df54 <__subdf3+0x1ac>
   4e0c0:	8081ffe0 	cmpeqi	r2,r16,2047
   4e0c4:	1000791e 	bne	r2,zero,4e2ac <__subdf3+0x504>
   4e0c8:	40800e48 	cmpgei	r2,r8,57
   4e0cc:	1000b126 	beq	r2,zero,4e394 <__subdf3+0x5ec>
   4e0d0:	04800044 	movi	r18,1
   4e0d4:	9325883a 	add	r18,r18,r12
   4e0d8:	9305803a 	cmpltu	r2,r18,r12
   4e0dc:	88a3883a 	add	r17,r17,r2
   4e0e0:	8880202c 	andhi	r2,r17,128
   4e0e4:	10001826 	beq	r2,zero,4e148 <__subdf3+0x3a0>
   4e0e8:	84000044 	addi	r16,r16,1
   4e0ec:	8081ffe0 	cmpeqi	r2,r16,2047
   4e0f0:	10000a1e 	bne	r2,zero,4e11c <__subdf3+0x374>
   4e0f4:	00bfe034 	movhi	r2,65408
   4e0f8:	10bfffc4 	addi	r2,r2,-1
   4e0fc:	9006d07a 	srli	r3,r18,1
   4e100:	8884703a 	and	r2,r17,r2
   4e104:	100897fa 	slli	r4,r2,31
   4e108:	9480004c 	andi	r18,r18,1
   4e10c:	1c86b03a 	or	r3,r3,r18
   4e110:	1022d07a 	srli	r17,r2,1
   4e114:	20e4b03a 	or	r18,r4,r3
   4e118:	003f7606 	br	4def4 <__subdf3+0x14c>
   4e11c:	00c1ffc4 	movi	r3,2047
   4e120:	0009883a 	mov	r4,zero
   4e124:	0005883a 	mov	r2,zero
   4e128:	003f8a06 	br	4df54 <__subdf3+0x1ac>
   4e12c:	6365883a 	add	r18,r12,r13
   4e130:	894b883a 	add	r5,r17,r5
   4e134:	9305803a 	cmpltu	r2,r18,r12
   4e138:	28a3883a 	add	r17,r5,r2
   4e13c:	8880202c 	andhi	r2,r17,128
   4e140:	1001241e 	bne	r2,zero,4e5d4 <__subdf3+0x82c>
   4e144:	04000044 	movi	r16,1
   4e148:	908001cc 	andi	r2,r18,7
   4e14c:	103f6b1e 	bne	r2,zero,4defc <__subdf3+0x154>
   4e150:	00007906 	br	4e338 <__subdf3+0x590>
   4e154:	80800044 	addi	r2,r16,1
   4e158:	1081ff8c 	andi	r2,r2,2046
   4e15c:	1000781e 	bne	r2,zero,4e340 <__subdf3+0x598>
   4e160:	2b44b03a 	or	r2,r5,r13
   4e164:	8b06b03a 	or	r3,r17,r12
   4e168:	8000af1e 	bne	r16,zero,4e428 <__subdf3+0x680>
   4e16c:	18011026 	beq	r3,zero,4e5b0 <__subdf3+0x808>
   4e170:	1000de26 	beq	r2,zero,4e4ec <__subdf3+0x744>
   4e174:	6365c83a 	sub	r18,r12,r13
   4e178:	6485803a 	cmpltu	r2,r12,r18
   4e17c:	8947c83a 	sub	r3,r17,r5
   4e180:	1887c83a 	sub	r3,r3,r2
   4e184:	1880202c 	andhi	r2,r3,128
   4e188:	10014426 	beq	r2,zero,4e69c <__subdf3+0x8f4>
   4e18c:	6b25c83a 	sub	r18,r13,r12
   4e190:	2c4bc83a 	sub	r5,r5,r17
   4e194:	6c9b803a 	cmpltu	r13,r13,r18
   4e198:	2b63c83a 	sub	r17,r5,r13
   4e19c:	5029883a 	mov	r20,r10
   4e1a0:	5027883a 	mov	r19,r10
   4e1a4:	003f5306 	br	4def4 <__subdf3+0x14c>
   4e1a8:	40005126 	beq	r8,zero,4e2f0 <__subdf3+0x548>
   4e1ac:	80007b1e 	bne	r16,zero,4e39c <__subdf3+0x5f4>
   4e1b0:	0401ffc4 	movi	r16,2047
   4e1b4:	8b04b03a 	or	r2,r17,r12
   4e1b8:	10010f26 	beq	r2,zero,4e5f8 <__subdf3+0x850>
   4e1bc:	80bfffc4 	addi	r2,r16,-1
   4e1c0:	10012a26 	beq	r2,zero,4e66c <__subdf3+0x8c4>
   4e1c4:	8401ffe0 	cmpeqi	r16,r16,2047
   4e1c8:	80013d1e 	bne	r16,zero,4e6c0 <__subdf3+0x918>
   4e1cc:	11000e48 	cmpgei	r4,r2,57
   4e1d0:	2000cd1e 	bne	r4,zero,4e508 <__subdf3+0x760>
   4e1d4:	11000808 	cmpgei	r4,r2,32
   4e1d8:	2001191e 	bne	r4,zero,4e640 <__subdf3+0x898>
   4e1dc:	01000804 	movi	r4,32
   4e1e0:	2089c83a 	sub	r4,r4,r2
   4e1e4:	8924983a 	sll	r18,r17,r4
   4e1e8:	608cd83a 	srl	r6,r12,r2
   4e1ec:	6108983a 	sll	r4,r12,r4
   4e1f0:	8884d83a 	srl	r2,r17,r2
   4e1f4:	91a4b03a 	or	r18,r18,r6
   4e1f8:	2008c03a 	cmpne	r4,r4,zero
   4e1fc:	9124b03a 	or	r18,r18,r4
   4e200:	288b883a 	add	r5,r5,r2
   4e204:	9365883a 	add	r18,r18,r13
   4e208:	935b803a 	cmpltu	r13,r18,r13
   4e20c:	6963883a 	add	r17,r13,r5
   4e210:	1821883a 	mov	r16,r3
   4e214:	003fb206 	br	4e0e0 <__subdf3+0x338>
   4e218:	9009883a 	mov	r4,r18
   4e21c:	004182c0 	call	4182c <__clzsi2>
   4e220:	10c00604 	addi	r3,r2,24
   4e224:	19000808 	cmpgei	r4,r3,32
   4e228:	203f2026 	beq	r4,zero,4deac <__subdf3+0x104>
   4e22c:	10bffe04 	addi	r2,r2,-8
   4e230:	9084983a 	sll	r2,r18,r2
   4e234:	1c006016 	blt	r3,r16,4e3b8 <__subdf3+0x610>
   4e238:	1c25c83a 	sub	r18,r3,r16
   4e23c:	90c00044 	addi	r3,r18,1
   4e240:	19000808 	cmpgei	r4,r3,32
   4e244:	20012526 	beq	r4,zero,4e6dc <__subdf3+0x934>
   4e248:	94bff844 	addi	r18,r18,-31
   4e24c:	19000820 	cmpeqi	r4,r3,32
   4e250:	14a4d83a 	srl	r18,r2,r18
   4e254:	2000051e 	bne	r4,zero,4e26c <__subdf3+0x4c4>
   4e258:	01001004 	movi	r4,64
   4e25c:	20c7c83a 	sub	r3,r4,r3
   4e260:	10c4983a 	sll	r2,r2,r3
   4e264:	1004c03a 	cmpne	r2,r2,zero
   4e268:	90a4b03a 	or	r18,r18,r2
   4e26c:	908001cc 	andi	r2,r18,7
   4e270:	0021883a 	mov	r16,zero
   4e274:	103f211e 	bne	r2,zero,4defc <__subdf3+0x154>
   4e278:	00002f06 	br	4e338 <__subdf3+0x590>
   4e27c:	9004d0fa 	srli	r2,r18,3
   4e280:	8808977a 	slli	r4,r17,29
   4e284:	80c1ffe0 	cmpeqi	r3,r16,2047
   4e288:	880ad0fa 	srli	r5,r17,3
   4e28c:	2084b03a 	or	r2,r4,r2
   4e290:	183f831e 	bne	r3,zero,4e0a0 <__subdf3+0x2f8>
   4e294:	01000434 	movhi	r4,16
   4e298:	213fffc4 	addi	r4,r4,-1
   4e29c:	2908703a 	and	r4,r5,r4
   4e2a0:	80c1ffcc 	andi	r3,r16,2047
   4e2a4:	003f2b06 	br	4df54 <__subdf3+0x1ac>
   4e2a8:	1000a71e 	bne	r2,zero,4e548 <__subdf3+0x7a0>
   4e2ac:	8806977a 	slli	r3,r17,29
   4e2b0:	00880034 	movhi	r2,8192
   4e2b4:	10bfffc4 	addi	r2,r2,-1
   4e2b8:	2084703a 	and	r2,r4,r2
   4e2bc:	880ad0fa 	srli	r5,r17,3
   4e2c0:	10c4b03a 	or	r2,r2,r3
   4e2c4:	003f7606 	br	4e0a0 <__subdf3+0x2f8>
   4e2c8:	6819883a 	mov	r12,r13
   4e2cc:	2823883a 	mov	r17,r5
   4e2d0:	4829883a 	mov	r20,r9
   4e2d4:	6004d0fa 	srli	r2,r12,3
   4e2d8:	003fe906 	br	4e280 <__subdf3+0x4d8>
   4e2dc:	047fe034 	movhi	r17,65408
   4e2e0:	8c7fffc4 	addi	r17,r17,-1
   4e2e4:	80e1c83a 	sub	r16,r16,r3
   4e2e8:	1462703a 	and	r17,r2,r17
   4e2ec:	003f0106 	br	4def4 <__subdf3+0x14c>
   4e2f0:	80c00044 	addi	r3,r16,1
   4e2f4:	1881ff8c 	andi	r2,r3,2046
   4e2f8:	1000361e 	bne	r2,zero,4e3d4 <__subdf3+0x62c>
   4e2fc:	8b04b03a 	or	r2,r17,r12
   4e300:	80008e1e 	bne	r16,zero,4e53c <__subdf3+0x794>
   4e304:	1000bf26 	beq	r2,zero,4e604 <__subdf3+0x85c>
   4e308:	2b44b03a 	or	r2,r5,r13
   4e30c:	10007726 	beq	r2,zero,4e4ec <__subdf3+0x744>
   4e310:	6365883a 	add	r18,r12,r13
   4e314:	9305803a 	cmpltu	r2,r18,r12
   4e318:	894b883a 	add	r5,r17,r5
   4e31c:	28a3883a 	add	r17,r5,r2
   4e320:	8880202c 	andhi	r2,r17,128
   4e324:	10000426 	beq	r2,zero,4e338 <__subdf3+0x590>
   4e328:	00bfe034 	movhi	r2,65408
   4e32c:	10bfffc4 	addi	r2,r2,-1
   4e330:	88a2703a 	and	r17,r17,r2
   4e334:	04000044 	movi	r16,1
   4e338:	9019883a 	mov	r12,r18
   4e33c:	003fe506 	br	4e2d4 <__subdf3+0x52c>
   4e340:	6365c83a 	sub	r18,r12,r13
   4e344:	6485803a 	cmpltu	r2,r12,r18
   4e348:	8947c83a 	sub	r3,r17,r5
   4e34c:	1887c83a 	sub	r3,r3,r2
   4e350:	1880202c 	andhi	r2,r3,128
   4e354:	10002d1e 	bne	r2,zero,4e40c <__subdf3+0x664>
   4e358:	90c4b03a 	or	r2,r18,r3
   4e35c:	10005426 	beq	r2,zero,4e4b0 <__subdf3+0x708>
   4e360:	1823883a 	mov	r17,r3
   4e364:	003ecd06 	br	4de9c <__subdf3+0xf4>
   4e368:	40bff804 	addi	r2,r8,-32
   4e36c:	40c00820 	cmpeqi	r3,r8,32
   4e370:	2884d83a 	srl	r2,r5,r2
   4e374:	1800041e 	bne	r3,zero,4e388 <__subdf3+0x5e0>
   4e378:	00c01004 	movi	r3,64
   4e37c:	1a07c83a 	sub	r3,r3,r8
   4e380:	28c6983a 	sll	r3,r5,r3
   4e384:	68dab03a 	or	r13,r13,r3
   4e388:	6824c03a 	cmpne	r18,r13,zero
   4e38c:	90a4b03a 	or	r18,r18,r2
   4e390:	003eba06 	br	4de7c <__subdf3+0xd4>
   4e394:	29402034 	orhi	r5,r5,128
   4e398:	003f0406 	br	4dfac <__subdf3+0x204>
   4e39c:	2804977a 	slli	r2,r5,29
   4e3a0:	00c80034 	movhi	r3,8192
   4e3a4:	18ffffc4 	addi	r3,r3,-1
   4e3a8:	30c6703a 	and	r3,r6,r3
   4e3ac:	280ad0fa 	srli	r5,r5,3
   4e3b0:	10c4b03a 	or	r2,r2,r3
   4e3b4:	003f3a06 	br	4e0a0 <__subdf3+0x2f8>
   4e3b8:	017fe034 	movhi	r5,65408
   4e3bc:	297fffc4 	addi	r5,r5,-1
   4e3c0:	114a703a 	and	r5,r2,r5
   4e3c4:	2804977a 	slli	r2,r5,29
   4e3c8:	80e1c83a 	sub	r16,r16,r3
   4e3cc:	280ad0fa 	srli	r5,r5,3
   4e3d0:	003fb006 	br	4e294 <__subdf3+0x4ec>
   4e3d4:	1881ffe0 	cmpeqi	r2,r3,2047
   4e3d8:	103f501e 	bne	r2,zero,4e11c <__subdf3+0x374>
   4e3dc:	6349883a 	add	r4,r12,r13
   4e3e0:	894b883a 	add	r5,r17,r5
   4e3e4:	2305803a 	cmpltu	r2,r4,r12
   4e3e8:	2885883a 	add	r2,r5,r2
   4e3ec:	2008d07a 	srli	r4,r4,1
   4e3f0:	102497fa 	slli	r18,r2,31
   4e3f4:	1022d07a 	srli	r17,r2,1
   4e3f8:	208001cc 	andi	r2,r4,7
   4e3fc:	9124b03a 	or	r18,r18,r4
   4e400:	1821883a 	mov	r16,r3
   4e404:	103ebd1e 	bne	r2,zero,4defc <__subdf3+0x154>
   4e408:	003fcb06 	br	4e338 <__subdf3+0x590>
   4e40c:	6b25c83a 	sub	r18,r13,r12
   4e410:	2c4bc83a 	sub	r5,r5,r17
   4e414:	6c9b803a 	cmpltu	r13,r13,r18
   4e418:	2b63c83a 	sub	r17,r5,r13
   4e41c:	5029883a 	mov	r20,r10
   4e420:	5027883a 	mov	r19,r10
   4e424:	003e9d06 	br	4de9c <__subdf3+0xf4>
   4e428:	183f9f1e 	bne	r3,zero,4e2a8 <__subdf3+0x500>
   4e42c:	10009f26 	beq	r2,zero,4e6ac <__subdf3+0x904>
   4e430:	2804977a 	slli	r2,r5,29
   4e434:	00c80034 	movhi	r3,8192
   4e438:	18ffffc4 	addi	r3,r3,-1
   4e43c:	30c6703a 	and	r3,r6,r3
   4e440:	280ad0fa 	srli	r5,r5,3
   4e444:	5029883a 	mov	r20,r10
   4e448:	10c4b03a 	or	r2,r2,r3
   4e44c:	003f1406 	br	4e0a0 <__subdf3+0x2f8>
   4e450:	6365c83a 	sub	r18,r12,r13
   4e454:	894bc83a 	sub	r5,r17,r5
   4e458:	6485803a 	cmpltu	r2,r12,r18
   4e45c:	28a3c83a 	sub	r17,r5,r2
   4e460:	04000044 	movi	r16,1
   4e464:	003e8806 	br	4de88 <__subdf3+0xe0>
   4e468:	11000e48 	cmpgei	r4,r2,57
   4e46c:	2000a81e 	bne	r4,zero,4e710 <__subdf3+0x968>
   4e470:	8c402034 	orhi	r17,r17,128
   4e474:	5027883a 	mov	r19,r10
   4e478:	3829883a 	mov	r20,r7
   4e47c:	11000808 	cmpgei	r4,r2,32
   4e480:	2000231e 	bne	r4,zero,4e510 <__subdf3+0x768>
   4e484:	01000804 	movi	r4,32
   4e488:	2089c83a 	sub	r4,r4,r2
   4e48c:	8924983a 	sll	r18,r17,r4
   4e490:	608cd83a 	srl	r6,r12,r2
   4e494:	6108983a 	sll	r4,r12,r4
   4e498:	8884d83a 	srl	r2,r17,r2
   4e49c:	91a4b03a 	or	r18,r18,r6
   4e4a0:	2008c03a 	cmpne	r4,r4,zero
   4e4a4:	9124b03a 	or	r18,r18,r4
   4e4a8:	288bc83a 	sub	r5,r5,r2
   4e4ac:	003ee106 	br	4e034 <__subdf3+0x28c>
   4e4b0:	0029883a 	mov	r20,zero
   4e4b4:	0007883a 	mov	r3,zero
   4e4b8:	0009883a 	mov	r4,zero
   4e4bc:	003ea506 	br	4df54 <__subdf3+0x1ac>
   4e4c0:	40bff804 	addi	r2,r8,-32
   4e4c4:	40c00820 	cmpeqi	r3,r8,32
   4e4c8:	2884d83a 	srl	r2,r5,r2
   4e4cc:	1800041e 	bne	r3,zero,4e4e0 <__subdf3+0x738>
   4e4d0:	00c01004 	movi	r3,64
   4e4d4:	1a07c83a 	sub	r3,r3,r8
   4e4d8:	28c6983a 	sll	r3,r5,r3
   4e4dc:	68dab03a 	or	r13,r13,r3
   4e4e0:	6824c03a 	cmpne	r18,r13,zero
   4e4e4:	90a4b03a 	or	r18,r18,r2
   4e4e8:	003efa06 	br	4e0d4 <__subdf3+0x32c>
   4e4ec:	8806977a 	slli	r3,r17,29
   4e4f0:	00880034 	movhi	r2,8192
   4e4f4:	10bfffc4 	addi	r2,r2,-1
   4e4f8:	2084703a 	and	r2,r4,r2
   4e4fc:	880ad0fa 	srli	r5,r17,3
   4e500:	10c4b03a 	or	r2,r2,r3
   4e504:	003f6306 	br	4e294 <__subdf3+0x4ec>
   4e508:	04800044 	movi	r18,1
   4e50c:	003f3d06 	br	4e204 <__subdf3+0x45c>
   4e510:	113ff804 	addi	r4,r2,-32
   4e514:	11800820 	cmpeqi	r6,r2,32
   4e518:	8908d83a 	srl	r4,r17,r4
   4e51c:	3000041e 	bne	r6,zero,4e530 <__subdf3+0x788>
   4e520:	01801004 	movi	r6,64
   4e524:	3085c83a 	sub	r2,r6,r2
   4e528:	8884983a 	sll	r2,r17,r2
   4e52c:	6098b03a 	or	r12,r12,r2
   4e530:	6024c03a 	cmpne	r18,r12,zero
   4e534:	9124b03a 	or	r18,r18,r4
   4e538:	003ebe06 	br	4e034 <__subdf3+0x28c>
   4e53c:	10005026 	beq	r2,zero,4e680 <__subdf3+0x8d8>
   4e540:	2b5ab03a 	or	r13,r5,r13
   4e544:	683f5926 	beq	r13,zero,4e2ac <__subdf3+0x504>
   4e548:	880ed0fa 	srli	r7,r17,3
   4e54c:	00c80034 	movhi	r3,8192
   4e550:	8822977a 	slli	r17,r17,29
   4e554:	18ffffc4 	addi	r3,r3,-1
   4e558:	20c4703a 	and	r2,r4,r3
   4e55c:	3900022c 	andhi	r4,r7,8
   4e560:	1444b03a 	or	r2,r2,r17
   4e564:	20000826 	beq	r4,zero,4e588 <__subdf3+0x7e0>
   4e568:	2808d0fa 	srli	r4,r5,3
   4e56c:	2200022c 	andhi	r8,r4,8
   4e570:	4000051e 	bne	r8,zero,4e588 <__subdf3+0x7e0>
   4e574:	2804977a 	slli	r2,r5,29
   4e578:	30c6703a 	and	r3,r6,r3
   4e57c:	5029883a 	mov	r20,r10
   4e580:	1884b03a 	or	r2,r3,r2
   4e584:	200f883a 	mov	r7,r4
   4e588:	380b883a 	mov	r5,r7
   4e58c:	003ec406 	br	4e0a0 <__subdf3+0x2f8>
   4e590:	6b25c83a 	sub	r18,r13,r12
   4e594:	2c4bc83a 	sub	r5,r5,r17
   4e598:	6c9b803a 	cmpltu	r13,r13,r18
   4e59c:	2b63c83a 	sub	r17,r5,r13
   4e5a0:	4829883a 	mov	r20,r9
   4e5a4:	5027883a 	mov	r19,r10
   4e5a8:	04000044 	movi	r16,1
   4e5ac:	003e3606 	br	4de88 <__subdf3+0xe0>
   4e5b0:	103fbf26 	beq	r2,zero,4e4b0 <__subdf3+0x708>
   4e5b4:	2806977a 	slli	r3,r5,29
   4e5b8:	00880034 	movhi	r2,8192
   4e5bc:	10bfffc4 	addi	r2,r2,-1
   4e5c0:	3084703a 	and	r2,r6,r2
   4e5c4:	280ad0fa 	srli	r5,r5,3
   4e5c8:	5029883a 	mov	r20,r10
   4e5cc:	10c4b03a 	or	r2,r2,r3
   4e5d0:	003f3006 	br	4e294 <__subdf3+0x4ec>
   4e5d4:	04000084 	movi	r16,2
   4e5d8:	003ec606 	br	4e0f4 <__subdf3+0x34c>
   4e5dc:	8804977a 	slli	r2,r17,29
   4e5e0:	00c80034 	movhi	r3,8192
   4e5e4:	18ffffc4 	addi	r3,r3,-1
   4e5e8:	20c8703a 	and	r4,r4,r3
   4e5ec:	880ad0fa 	srli	r5,r17,3
   4e5f0:	1104b03a 	or	r2,r2,r4
   4e5f4:	003eaa06 	br	4e0a0 <__subdf3+0x2f8>
   4e5f8:	6819883a 	mov	r12,r13
   4e5fc:	2823883a 	mov	r17,r5
   4e600:	003f3406 	br	4e2d4 <__subdf3+0x52c>
   4e604:	2806977a 	slli	r3,r5,29
   4e608:	00880034 	movhi	r2,8192
   4e60c:	10bfffc4 	addi	r2,r2,-1
   4e610:	3084703a 	and	r2,r6,r2
   4e614:	280ad0fa 	srli	r5,r5,3
   4e618:	10c4b03a 	or	r2,r2,r3
   4e61c:	003f1d06 	br	4e294 <__subdf3+0x4ec>
   4e620:	2806977a 	slli	r3,r5,29
   4e624:	00880034 	movhi	r2,8192
   4e628:	10bfffc4 	addi	r2,r2,-1
   4e62c:	3084703a 	and	r2,r6,r2
   4e630:	280ad0fa 	srli	r5,r5,3
   4e634:	10c4b03a 	or	r2,r2,r3
   4e638:	4829883a 	mov	r20,r9
   4e63c:	003e9806 	br	4e0a0 <__subdf3+0x2f8>
   4e640:	113ff804 	addi	r4,r2,-32
   4e644:	11800820 	cmpeqi	r6,r2,32
   4e648:	8908d83a 	srl	r4,r17,r4
   4e64c:	3000041e 	bne	r6,zero,4e660 <__subdf3+0x8b8>
   4e650:	01801004 	movi	r6,64
   4e654:	3085c83a 	sub	r2,r6,r2
   4e658:	8884983a 	sll	r2,r17,r2
   4e65c:	6098b03a 	or	r12,r12,r2
   4e660:	6024c03a 	cmpne	r18,r12,zero
   4e664:	9124b03a 	or	r18,r18,r4
   4e668:	003ee606 	br	4e204 <__subdf3+0x45c>
   4e66c:	6365883a 	add	r18,r12,r13
   4e670:	894b883a 	add	r5,r17,r5
   4e674:	935b803a 	cmpltu	r13,r18,r13
   4e678:	2b63883a 	add	r17,r5,r13
   4e67c:	003eaf06 	br	4e13c <__subdf3+0x394>
   4e680:	2804977a 	slli	r2,r5,29
   4e684:	00c80034 	movhi	r3,8192
   4e688:	18ffffc4 	addi	r3,r3,-1
   4e68c:	30cc703a 	and	r6,r6,r3
   4e690:	280ad0fa 	srli	r5,r5,3
   4e694:	3084b03a 	or	r2,r6,r2
   4e698:	003e8106 	br	4e0a0 <__subdf3+0x2f8>
   4e69c:	90c4b03a 	or	r2,r18,r3
   4e6a0:	103f8326 	beq	r2,zero,4e4b0 <__subdf3+0x708>
   4e6a4:	1823883a 	mov	r17,r3
   4e6a8:	003f2306 	br	4e338 <__subdf3+0x590>
   4e6ac:	01400434 	movhi	r5,16
   4e6b0:	297fffc4 	addi	r5,r5,-1
   4e6b4:	00bfffc4 	movi	r2,-1
   4e6b8:	0029883a 	mov	r20,zero
   4e6bc:	003e7a06 	br	4e0a8 <__subdf3+0x300>
   4e6c0:	2806977a 	slli	r3,r5,29
   4e6c4:	00880034 	movhi	r2,8192
   4e6c8:	10bfffc4 	addi	r2,r2,-1
   4e6cc:	3084703a 	and	r2,r6,r2
   4e6d0:	280ad0fa 	srli	r5,r5,3
   4e6d4:	10c4b03a 	or	r2,r2,r3
   4e6d8:	003e7106 	br	4e0a0 <__subdf3+0x2f8>
   4e6dc:	01000804 	movi	r4,32
   4e6e0:	20c9c83a 	sub	r4,r4,r3
   4e6e4:	000b883a 	mov	r5,zero
   4e6e8:	003dfd06 	br	4dee0 <__subdf3+0x138>
   4e6ec:	0005883a 	mov	r2,zero
   4e6f0:	00c1ffc4 	movi	r3,2047
   4e6f4:	0009883a 	mov	r4,zero
   4e6f8:	003e1606 	br	4df54 <__subdf3+0x1ac>
   4e6fc:	403e9526 	beq	r8,zero,4e154 <__subdf3+0x3ac>
   4e700:	1c05c83a 	sub	r2,r3,r16
   4e704:	803f581e 	bne	r16,zero,4e468 <__subdf3+0x6c0>
   4e708:	1021883a 	mov	r16,r2
   4e70c:	003e3e06 	br	4e008 <__subdf3+0x260>
   4e710:	5027883a 	mov	r19,r10
   4e714:	3829883a 	mov	r20,r7
   4e718:	04800044 	movi	r18,1
   4e71c:	003e4506 	br	4e034 <__subdf3+0x28c>
   4e720:	403ef326 	beq	r8,zero,4e2f0 <__subdf3+0x548>
   4e724:	1c05c83a 	sub	r2,r3,r16
   4e728:	8000021e 	bne	r16,zero,4e734 <__subdf3+0x98c>
   4e72c:	1021883a 	mov	r16,r2
   4e730:	003ea006 	br	4e1b4 <__subdf3+0x40c>
   4e734:	11000e48 	cmpgei	r4,r2,57
   4e738:	203f731e 	bne	r4,zero,4e508 <__subdf3+0x760>
   4e73c:	8c402034 	orhi	r17,r17,128
   4e740:	003ea406 	br	4e1d4 <__subdf3+0x42c>

0004e744 <__unorddf2>:
   4e744:	2804d53a 	srli	r2,r5,20
   4e748:	3806d53a 	srli	r3,r7,20
   4e74c:	02000434 	movhi	r8,16
   4e750:	1081ffcc 	andi	r2,r2,2047
   4e754:	423fffc4 	addi	r8,r8,-1
   4e758:	1081ffd8 	cmpnei	r2,r2,2047
   4e75c:	2a0a703a 	and	r5,r5,r8
   4e760:	3a0e703a 	and	r7,r7,r8
   4e764:	18c1ffcc 	andi	r3,r3,2047
   4e768:	10000426 	beq	r2,zero,4e77c <__unorddf2+0x38>
   4e76c:	18c1ffd8 	cmpnei	r3,r3,2047
   4e770:	18000626 	beq	r3,zero,4e78c <__unorddf2+0x48>
   4e774:	0005883a 	mov	r2,zero
   4e778:	f800283a 	ret
   4e77c:	290ab03a 	or	r5,r5,r4
   4e780:	283ffa26 	beq	r5,zero,4e76c <__unorddf2+0x28>
   4e784:	00800044 	movi	r2,1
   4e788:	f800283a 	ret
   4e78c:	398eb03a 	or	r7,r7,r6
   4e790:	3804c03a 	cmpne	r2,r7,zero
   4e794:	f800283a 	ret

0004e798 <__fixdfsi>:
   4e798:	2804d53a 	srli	r2,r5,20
   4e79c:	00c00434 	movhi	r3,16
   4e7a0:	18ffffc4 	addi	r3,r3,-1
   4e7a4:	1081ffcc 	andi	r2,r2,2047
   4e7a8:	1180ffd0 	cmplti	r6,r2,1023
   4e7ac:	280ed7fa 	srli	r7,r5,31
   4e7b0:	28ca703a 	and	r5,r5,r3
   4e7b4:	3000061e 	bne	r6,zero,4e7d0 <__fixdfsi+0x38>
   4e7b8:	10c10790 	cmplti	r3,r2,1054
   4e7bc:	1800061e 	bne	r3,zero,4e7d8 <__fixdfsi+0x40>
   4e7c0:	00a00034 	movhi	r2,32768
   4e7c4:	10bfffc4 	addi	r2,r2,-1
   4e7c8:	3885883a 	add	r2,r7,r2
   4e7cc:	f800283a 	ret
   4e7d0:	0005883a 	mov	r2,zero
   4e7d4:	f800283a 	ret
   4e7d8:	00c10cc4 	movi	r3,1075
   4e7dc:	1887c83a 	sub	r3,r3,r2
   4e7e0:	19800808 	cmpgei	r6,r3,32
   4e7e4:	29400434 	orhi	r5,r5,16
   4e7e8:	3000071e 	bne	r6,zero,4e808 <__fixdfsi+0x70>
   4e7ec:	10befb44 	addi	r2,r2,-1043
   4e7f0:	2884983a 	sll	r2,r5,r2
   4e7f4:	20c8d83a 	srl	r4,r4,r3
   4e7f8:	1104b03a 	or	r2,r2,r4
   4e7fc:	383ff526 	beq	r7,zero,4e7d4 <__fixdfsi+0x3c>
   4e800:	0085c83a 	sub	r2,zero,r2
   4e804:	f800283a 	ret
   4e808:	00c104c4 	movi	r3,1043
   4e80c:	1885c83a 	sub	r2,r3,r2
   4e810:	2884d83a 	srl	r2,r5,r2
   4e814:	003ff906 	br	4e7fc <__fixdfsi+0x64>

0004e818 <__floatsidf>:
   4e818:	defffd04 	addi	sp,sp,-12
   4e81c:	dfc00215 	stw	ra,8(sp)
   4e820:	dc400115 	stw	r17,4(sp)
   4e824:	dc000015 	stw	r16,0(sp)
   4e828:	20001326 	beq	r4,zero,4e878 <__floatsidf+0x60>
   4e82c:	2022d7fa 	srli	r17,r4,31
   4e830:	2021883a 	mov	r16,r4
   4e834:	20002416 	blt	r4,zero,4e8c8 <__floatsidf+0xb0>
   4e838:	8009883a 	mov	r4,r16
   4e83c:	004182c0 	call	4182c <__clzsi2>
   4e840:	01010784 	movi	r4,1054
   4e844:	2089c83a 	sub	r4,r4,r2
   4e848:	10c002c8 	cmpgei	r3,r2,11
   4e84c:	2101ffcc 	andi	r4,r4,2047
   4e850:	1800161e 	bne	r3,zero,4e8ac <__floatsidf+0x94>
   4e854:	014002c4 	movi	r5,11
   4e858:	288bc83a 	sub	r5,r5,r2
   4e85c:	814ad83a 	srl	r5,r16,r5
   4e860:	00c00434 	movhi	r3,16
   4e864:	10800544 	addi	r2,r2,21
   4e868:	18ffffc4 	addi	r3,r3,-1
   4e86c:	8084983a 	sll	r2,r16,r2
   4e870:	28ca703a 	and	r5,r5,r3
   4e874:	00000406 	br	4e888 <__floatsidf+0x70>
   4e878:	0023883a 	mov	r17,zero
   4e87c:	0009883a 	mov	r4,zero
   4e880:	000b883a 	mov	r5,zero
   4e884:	0005883a 	mov	r2,zero
   4e888:	2008953a 	slli	r4,r4,20
   4e88c:	880697fa 	slli	r3,r17,31
   4e890:	2148b03a 	or	r4,r4,r5
   4e894:	20c6b03a 	or	r3,r4,r3
   4e898:	dfc00217 	ldw	ra,8(sp)
   4e89c:	dc400117 	ldw	r17,4(sp)
   4e8a0:	dc000017 	ldw	r16,0(sp)
   4e8a4:	dec00304 	addi	sp,sp,12
   4e8a8:	f800283a 	ret
   4e8ac:	10bffd44 	addi	r2,r2,-11
   4e8b0:	808a983a 	sll	r5,r16,r2
   4e8b4:	00800434 	movhi	r2,16
   4e8b8:	10bfffc4 	addi	r2,r2,-1
   4e8bc:	288a703a 	and	r5,r5,r2
   4e8c0:	0005883a 	mov	r2,zero
   4e8c4:	003ff006 	br	4e888 <__floatsidf+0x70>
   4e8c8:	0121c83a 	sub	r16,zero,r4
   4e8cc:	003fda06 	br	4e838 <__floatsidf+0x20>

0004e8d0 <__floatunsidf>:
   4e8d0:	defffe04 	addi	sp,sp,-8
   4e8d4:	dc000015 	stw	r16,0(sp)
   4e8d8:	dfc00115 	stw	ra,4(sp)
   4e8dc:	2021883a 	mov	r16,r4
   4e8e0:	20000f26 	beq	r4,zero,4e920 <__floatunsidf+0x50>
   4e8e4:	004182c0 	call	4182c <__clzsi2>
   4e8e8:	00c10784 	movi	r3,1054
   4e8ec:	1887c83a 	sub	r3,r3,r2
   4e8f0:	110002c8 	cmpgei	r4,r2,11
   4e8f4:	18c1ffcc 	andi	r3,r3,2047
   4e8f8:	2000121e 	bne	r4,zero,4e944 <__floatunsidf+0x74>
   4e8fc:	010002c4 	movi	r4,11
   4e900:	2089c83a 	sub	r4,r4,r2
   4e904:	8108d83a 	srl	r4,r16,r4
   4e908:	01400434 	movhi	r5,16
   4e90c:	10800544 	addi	r2,r2,21
   4e910:	297fffc4 	addi	r5,r5,-1
   4e914:	80a0983a 	sll	r16,r16,r2
   4e918:	214a703a 	and	r5,r4,r5
   4e91c:	00000206 	br	4e928 <__floatunsidf+0x58>
   4e920:	0007883a 	mov	r3,zero
   4e924:	000b883a 	mov	r5,zero
   4e928:	1806953a 	slli	r3,r3,20
   4e92c:	8005883a 	mov	r2,r16
   4e930:	1946b03a 	or	r3,r3,r5
   4e934:	dfc00117 	ldw	ra,4(sp)
   4e938:	dc000017 	ldw	r16,0(sp)
   4e93c:	dec00204 	addi	sp,sp,8
   4e940:	f800283a 	ret
   4e944:	117ffd44 	addi	r5,r2,-11
   4e948:	814a983a 	sll	r5,r16,r5
   4e94c:	00800434 	movhi	r2,16
   4e950:	10bfffc4 	addi	r2,r2,-1
   4e954:	288a703a 	and	r5,r5,r2
   4e958:	0021883a 	mov	r16,zero
   4e95c:	003ff206 	br	4e928 <__floatunsidf+0x58>

0004e960 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e960:	defffe04 	addi	sp,sp,-8
   4e964:	dfc00115 	stw	ra,4(sp)
   4e968:	df000015 	stw	fp,0(sp)
   4e96c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e970:	d0a00917 	ldw	r2,-32732(gp)
   4e974:	10000326 	beq	r2,zero,4e984 <alt_get_errno+0x24>
   4e978:	d0a00917 	ldw	r2,-32732(gp)
   4e97c:	103ee83a 	callr	r2
   4e980:	00000106 	br	4e988 <alt_get_errno+0x28>
   4e984:	d0a70d04 	addi	r2,gp,-25548
}
   4e988:	e037883a 	mov	sp,fp
   4e98c:	dfc00117 	ldw	ra,4(sp)
   4e990:	df000017 	ldw	fp,0(sp)
   4e994:	dec00204 	addi	sp,sp,8
   4e998:	f800283a 	ret

0004e99c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4e99c:	defffb04 	addi	sp,sp,-20
   4e9a0:	dfc00415 	stw	ra,16(sp)
   4e9a4:	df000315 	stw	fp,12(sp)
   4e9a8:	df000304 	addi	fp,sp,12
   4e9ac:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4e9b0:	e0bffd17 	ldw	r2,-12(fp)
   4e9b4:	10000616 	blt	r2,zero,4e9d0 <close+0x34>
   4e9b8:	e0bffd17 	ldw	r2,-12(fp)
   4e9bc:	10c00324 	muli	r3,r2,12
   4e9c0:	00800174 	movhi	r2,5
   4e9c4:	1088f304 	addi	r2,r2,9164
   4e9c8:	1885883a 	add	r2,r3,r2
   4e9cc:	00000106 	br	4e9d4 <close+0x38>
   4e9d0:	0005883a 	mov	r2,zero
   4e9d4:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   4e9d8:	e0bfff17 	ldw	r2,-4(fp)
   4e9dc:	10001926 	beq	r2,zero,4ea44 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4e9e0:	e0bfff17 	ldw	r2,-4(fp)
   4e9e4:	10800017 	ldw	r2,0(r2)
   4e9e8:	10800417 	ldw	r2,16(r2)
   4e9ec:	10000626 	beq	r2,zero,4ea08 <close+0x6c>
   4e9f0:	e0bfff17 	ldw	r2,-4(fp)
   4e9f4:	10800017 	ldw	r2,0(r2)
   4e9f8:	10800417 	ldw	r2,16(r2)
   4e9fc:	e13fff17 	ldw	r4,-4(fp)
   4ea00:	103ee83a 	callr	r2
   4ea04:	00000106 	br	4ea0c <close+0x70>
   4ea08:	0005883a 	mov	r2,zero
   4ea0c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4ea10:	e13ffd17 	ldw	r4,-12(fp)
   4ea14:	004f47c0 	call	4f47c <alt_release_fd>
    if (rval < 0)
   4ea18:	e0bffe17 	ldw	r2,-8(fp)
   4ea1c:	1000070e 	bge	r2,zero,4ea3c <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4ea20:	004e9600 	call	4e960 <alt_get_errno>
   4ea24:	1007883a 	mov	r3,r2
   4ea28:	e0bffe17 	ldw	r2,-8(fp)
   4ea2c:	0085c83a 	sub	r2,zero,r2
   4ea30:	18800015 	stw	r2,0(r3)
      return -1;
   4ea34:	00bfffc4 	movi	r2,-1
   4ea38:	00000706 	br	4ea58 <close+0xbc>
    }
    return 0;
   4ea3c:	0005883a 	mov	r2,zero
   4ea40:	00000506 	br	4ea58 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4ea44:	004e9600 	call	4e960 <alt_get_errno>
   4ea48:	1007883a 	mov	r3,r2
   4ea4c:	00801444 	movi	r2,81
   4ea50:	18800015 	stw	r2,0(r3)
    return -1;
   4ea54:	00bfffc4 	movi	r2,-1
  }
}
   4ea58:	e037883a 	mov	sp,fp
   4ea5c:	dfc00117 	ldw	ra,4(sp)
   4ea60:	df000017 	ldw	fp,0(sp)
   4ea64:	dec00204 	addi	sp,sp,8
   4ea68:	f800283a 	ret

0004ea6c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4ea6c:	defffc04 	addi	sp,sp,-16
   4ea70:	df000315 	stw	fp,12(sp)
   4ea74:	df000304 	addi	fp,sp,12
   4ea78:	e13fff15 	stw	r4,-4(fp)
   4ea7c:	e17ffe15 	stw	r5,-8(fp)
   4ea80:	e1bffd15 	stw	r6,-12(fp)
  return len;
   4ea84:	e0bffd17 	ldw	r2,-12(fp)
}
   4ea88:	e037883a 	mov	sp,fp
   4ea8c:	df000017 	ldw	fp,0(sp)
   4ea90:	dec00104 	addi	sp,sp,4
   4ea94:	f800283a 	ret

0004ea98 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4ea98:	defffd04 	addi	sp,sp,-12
   4ea9c:	df000215 	stw	fp,8(sp)
   4eaa0:	df000204 	addi	fp,sp,8
   4eaa4:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4eaa8:	0001883a 	nop
   4eaac:	e0bffe17 	ldw	r2,-8(fp)
   4eab0:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4eab4:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4eab8:	10000226 	beq	r2,zero,4eac4 <_exit+0x2c>
    ALT_SIM_FAIL();
   4eabc:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   4eac0:	00000106 	br	4eac8 <_exit+0x30>
    ALT_SIM_PASS();
   4eac4:	002af0b0 	cmpltui	zero,zero,43970
}
   4eac8:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4eacc:	0001883a 	nop
   4ead0:	003ffe06 	br	4eacc <_exit+0x34>

0004ead4 <alt_get_errno>:
{
   4ead4:	defffe04 	addi	sp,sp,-8
   4ead8:	dfc00115 	stw	ra,4(sp)
   4eadc:	df000015 	stw	fp,0(sp)
   4eae0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4eae4:	d0a00917 	ldw	r2,-32732(gp)
   4eae8:	10000326 	beq	r2,zero,4eaf8 <alt_get_errno+0x24>
   4eaec:	d0a00917 	ldw	r2,-32732(gp)
   4eaf0:	103ee83a 	callr	r2
   4eaf4:	00000106 	br	4eafc <alt_get_errno+0x28>
   4eaf8:	d0a70d04 	addi	r2,gp,-25548
}
   4eafc:	e037883a 	mov	sp,fp
   4eb00:	dfc00117 	ldw	ra,4(sp)
   4eb04:	df000017 	ldw	fp,0(sp)
   4eb08:	dec00204 	addi	sp,sp,8
   4eb0c:	f800283a 	ret

0004eb10 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4eb10:	defffb04 	addi	sp,sp,-20
   4eb14:	dfc00415 	stw	ra,16(sp)
   4eb18:	df000315 	stw	fp,12(sp)
   4eb1c:	df000304 	addi	fp,sp,12
   4eb20:	e13ffe15 	stw	r4,-8(fp)
   4eb24:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4eb28:	e0bffe17 	ldw	r2,-8(fp)
   4eb2c:	10000616 	blt	r2,zero,4eb48 <fstat+0x38>
   4eb30:	e0bffe17 	ldw	r2,-8(fp)
   4eb34:	10c00324 	muli	r3,r2,12
   4eb38:	00800174 	movhi	r2,5
   4eb3c:	1088f304 	addi	r2,r2,9164
   4eb40:	1885883a 	add	r2,r3,r2
   4eb44:	00000106 	br	4eb4c <fstat+0x3c>
   4eb48:	0005883a 	mov	r2,zero
   4eb4c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4eb50:	e0bfff17 	ldw	r2,-4(fp)
   4eb54:	10001026 	beq	r2,zero,4eb98 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4eb58:	e0bfff17 	ldw	r2,-4(fp)
   4eb5c:	10800017 	ldw	r2,0(r2)
   4eb60:	10800817 	ldw	r2,32(r2)
   4eb64:	10000726 	beq	r2,zero,4eb84 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4eb68:	e0bfff17 	ldw	r2,-4(fp)
   4eb6c:	10800017 	ldw	r2,0(r2)
   4eb70:	10800817 	ldw	r2,32(r2)
   4eb74:	e17ffd17 	ldw	r5,-12(fp)
   4eb78:	e13fff17 	ldw	r4,-4(fp)
   4eb7c:	103ee83a 	callr	r2
   4eb80:	00000a06 	br	4ebac <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4eb84:	e0bffd17 	ldw	r2,-12(fp)
   4eb88:	00c80004 	movi	r3,8192
   4eb8c:	10c00115 	stw	r3,4(r2)
      return 0;
   4eb90:	0005883a 	mov	r2,zero
   4eb94:	00000506 	br	4ebac <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4eb98:	004ead40 	call	4ead4 <alt_get_errno>
   4eb9c:	1007883a 	mov	r3,r2
   4eba0:	00801444 	movi	r2,81
   4eba4:	18800015 	stw	r2,0(r3)
    return -1;
   4eba8:	00bfffc4 	movi	r2,-1
  }
}
   4ebac:	e037883a 	mov	sp,fp
   4ebb0:	dfc00117 	ldw	ra,4(sp)
   4ebb4:	df000017 	ldw	fp,0(sp)
   4ebb8:	dec00204 	addi	sp,sp,8
   4ebbc:	f800283a 	ret

0004ebc0 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   4ebc0:	deffff04 	addi	sp,sp,-4
   4ebc4:	df000015 	stw	fp,0(sp)
   4ebc8:	d839883a 	mov	fp,sp
  return 0;
   4ebcc:	0005883a 	mov	r2,zero
}
   4ebd0:	e037883a 	mov	sp,fp
   4ebd4:	df000017 	ldw	fp,0(sp)
   4ebd8:	dec00104 	addi	sp,sp,4
   4ebdc:	f800283a 	ret

0004ebe0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4ebe0:	defff904 	addi	sp,sp,-28
   4ebe4:	dfc00615 	stw	ra,24(sp)
   4ebe8:	df000515 	stw	fp,20(sp)
   4ebec:	df000504 	addi	fp,sp,20
   4ebf0:	e13fff15 	stw	r4,-4(fp)
   4ebf4:	e17ffe15 	stw	r5,-8(fp)
   4ebf8:	e1bffd15 	stw	r6,-12(fp)
   4ebfc:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4ec00:	e0800217 	ldw	r2,8(fp)
   4ec04:	d8800015 	stw	r2,0(sp)
   4ec08:	e1fffc17 	ldw	r7,-16(fp)
   4ec0c:	e1bffd17 	ldw	r6,-12(fp)
   4ec10:	e17ffe17 	ldw	r5,-8(fp)
   4ec14:	e13fff17 	ldw	r4,-4(fp)
   4ec18:	004ed900 	call	4ed90 <alt_iic_isr_register>
}  
   4ec1c:	e037883a 	mov	sp,fp
   4ec20:	dfc00117 	ldw	ra,4(sp)
   4ec24:	df000017 	ldw	fp,0(sp)
   4ec28:	dec00204 	addi	sp,sp,8
   4ec2c:	f800283a 	ret

0004ec30 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4ec30:	defff904 	addi	sp,sp,-28
   4ec34:	df000615 	stw	fp,24(sp)
   4ec38:	df000604 	addi	fp,sp,24
   4ec3c:	e13ffb15 	stw	r4,-20(fp)
   4ec40:	e17ffa15 	stw	r5,-24(fp)
   4ec44:	e0bffa17 	ldw	r2,-24(fp)
   4ec48:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   4ec4c:	0005303a 	rdctl	r2,status
   4ec50:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ec54:	e0fffe17 	ldw	r3,-8(fp)
   4ec58:	00bfff84 	movi	r2,-2
   4ec5c:	1884703a 	and	r2,r3,r2
   4ec60:	1001703a 	wrctl	status,r2
  return context;
   4ec64:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4ec68:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   4ec6c:	00c00044 	movi	r3,1
   4ec70:	e0bfff17 	ldw	r2,-4(fp)
   4ec74:	1884983a 	sll	r2,r3,r2
   4ec78:	1007883a 	mov	r3,r2
   4ec7c:	d0a70f17 	ldw	r2,-25540(gp)
   4ec80:	1884b03a 	or	r2,r3,r2
   4ec84:	d0a70f15 	stw	r2,-25540(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4ec88:	d0a70f17 	ldw	r2,-25540(gp)
   4ec8c:	100170fa 	wrctl	ienable,r2
   4ec90:	e0bffd17 	ldw	r2,-12(fp)
   4ec94:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4ec98:	e0bffc17 	ldw	r2,-16(fp)
   4ec9c:	1001703a 	wrctl	status,r2
}
   4eca0:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   4eca4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   4eca8:	e037883a 	mov	sp,fp
   4ecac:	df000017 	ldw	fp,0(sp)
   4ecb0:	dec00104 	addi	sp,sp,4
   4ecb4:	f800283a 	ret

0004ecb8 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4ecb8:	defff904 	addi	sp,sp,-28
   4ecbc:	df000615 	stw	fp,24(sp)
   4ecc0:	df000604 	addi	fp,sp,24
   4ecc4:	e13ffb15 	stw	r4,-20(fp)
   4ecc8:	e17ffa15 	stw	r5,-24(fp)
   4eccc:	e0bffa17 	ldw	r2,-24(fp)
   4ecd0:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   4ecd4:	0005303a 	rdctl	r2,status
   4ecd8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ecdc:	e0fffe17 	ldw	r3,-8(fp)
   4ece0:	00bfff84 	movi	r2,-2
   4ece4:	1884703a 	and	r2,r3,r2
   4ece8:	1001703a 	wrctl	status,r2
  return context;
   4ecec:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
   4ecf0:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
   4ecf4:	00c00044 	movi	r3,1
   4ecf8:	e0bfff17 	ldw	r2,-4(fp)
   4ecfc:	1884983a 	sll	r2,r3,r2
   4ed00:	0084303a 	nor	r2,zero,r2
   4ed04:	1007883a 	mov	r3,r2
   4ed08:	d0a70f17 	ldw	r2,-25540(gp)
   4ed0c:	1884703a 	and	r2,r3,r2
   4ed10:	d0a70f15 	stw	r2,-25540(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4ed14:	d0a70f17 	ldw	r2,-25540(gp)
   4ed18:	100170fa 	wrctl	ienable,r2
   4ed1c:	e0bffd17 	ldw	r2,-12(fp)
   4ed20:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4ed24:	e0bffc17 	ldw	r2,-16(fp)
   4ed28:	1001703a 	wrctl	status,r2
}
   4ed2c:	0001883a 	nop
  return 0;
   4ed30:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   4ed34:	e037883a 	mov	sp,fp
   4ed38:	df000017 	ldw	fp,0(sp)
   4ed3c:	dec00104 	addi	sp,sp,4
   4ed40:	f800283a 	ret

0004ed44 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4ed44:	defffc04 	addi	sp,sp,-16
   4ed48:	df000315 	stw	fp,12(sp)
   4ed4c:	df000304 	addi	fp,sp,12
   4ed50:	e13ffe15 	stw	r4,-8(fp)
   4ed54:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4ed58:	000530fa 	rdctl	r2,ienable
   4ed5c:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4ed60:	00c00044 	movi	r3,1
   4ed64:	e0bffd17 	ldw	r2,-12(fp)
   4ed68:	1884983a 	sll	r2,r3,r2
   4ed6c:	1007883a 	mov	r3,r2
   4ed70:	e0bfff17 	ldw	r2,-4(fp)
   4ed74:	1884703a 	and	r2,r3,r2
   4ed78:	1004c03a 	cmpne	r2,r2,zero
   4ed7c:	10803fcc 	andi	r2,r2,255
}
   4ed80:	e037883a 	mov	sp,fp
   4ed84:	df000017 	ldw	fp,0(sp)
   4ed88:	dec00104 	addi	sp,sp,4
   4ed8c:	f800283a 	ret

0004ed90 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4ed90:	defff504 	addi	sp,sp,-44
   4ed94:	dfc00a15 	stw	ra,40(sp)
   4ed98:	df000915 	stw	fp,36(sp)
   4ed9c:	df000904 	addi	fp,sp,36
   4eda0:	e13ffa15 	stw	r4,-24(fp)
   4eda4:	e17ff915 	stw	r5,-28(fp)
   4eda8:	e1bff815 	stw	r6,-32(fp)
   4edac:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
   4edb0:	00bffa84 	movi	r2,-22
   4edb4:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4edb8:	e0bff917 	ldw	r2,-28(fp)
   4edbc:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4edc0:	e0bffe17 	ldw	r2,-8(fp)
   4edc4:	10800808 	cmpgei	r2,r2,32
   4edc8:	1000251e 	bne	r2,zero,4ee60 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
   4edcc:	0005303a 	rdctl	r2,status
   4edd0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4edd4:	e0fffc17 	ldw	r3,-16(fp)
   4edd8:	00bfff84 	movi	r2,-2
   4eddc:	1884703a 	and	r2,r3,r2
   4ede0:	1001703a 	wrctl	status,r2
  return context;
   4ede4:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4ede8:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
   4edec:	e0bffe17 	ldw	r2,-8(fp)
   4edf0:	100890fa 	slli	r4,r2,3
   4edf4:	e0fff817 	ldw	r3,-32(fp)
   4edf8:	00800174 	movhi	r2,5
   4edfc:	2085883a 	add	r2,r4,r2
   4ee00:	10d48c15 	stw	r3,21040(r2)
    alt_irq[id].context = isr_context;
   4ee04:	e0bffe17 	ldw	r2,-8(fp)
   4ee08:	100890fa 	slli	r4,r2,3
   4ee0c:	e0fff717 	ldw	r3,-36(fp)
   4ee10:	00800174 	movhi	r2,5
   4ee14:	2085883a 	add	r2,r4,r2
   4ee18:	10d48d15 	stw	r3,21044(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4ee1c:	e0bff817 	ldw	r2,-32(fp)
   4ee20:	10000526 	beq	r2,zero,4ee38 <alt_iic_isr_register+0xa8>
   4ee24:	e0bffe17 	ldw	r2,-8(fp)
   4ee28:	100b883a 	mov	r5,r2
   4ee2c:	e13ffa17 	ldw	r4,-24(fp)
   4ee30:	004ec300 	call	4ec30 <alt_ic_irq_enable>
   4ee34:	00000406 	br	4ee48 <alt_iic_isr_register+0xb8>
   4ee38:	e0bffe17 	ldw	r2,-8(fp)
   4ee3c:	100b883a 	mov	r5,r2
   4ee40:	e13ffa17 	ldw	r4,-24(fp)
   4ee44:	004ecb80 	call	4ecb8 <alt_ic_irq_disable>
   4ee48:	e0bfff15 	stw	r2,-4(fp)
   4ee4c:	e0bffd17 	ldw	r2,-12(fp)
   4ee50:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   4ee54:	e0bffb17 	ldw	r2,-20(fp)
   4ee58:	1001703a 	wrctl	status,r2
}
   4ee5c:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
   4ee60:	e0bfff17 	ldw	r2,-4(fp)
}
   4ee64:	e037883a 	mov	sp,fp
   4ee68:	dfc00117 	ldw	ra,4(sp)
   4ee6c:	df000017 	ldw	fp,0(sp)
   4ee70:	dec00204 	addi	sp,sp,8
   4ee74:	f800283a 	ret

0004ee78 <alt_get_errno>:
{
   4ee78:	defffe04 	addi	sp,sp,-8
   4ee7c:	dfc00115 	stw	ra,4(sp)
   4ee80:	df000015 	stw	fp,0(sp)
   4ee84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ee88:	d0a00917 	ldw	r2,-32732(gp)
   4ee8c:	10000326 	beq	r2,zero,4ee9c <alt_get_errno+0x24>
   4ee90:	d0a00917 	ldw	r2,-32732(gp)
   4ee94:	103ee83a 	callr	r2
   4ee98:	00000106 	br	4eea0 <alt_get_errno+0x28>
   4ee9c:	d0a70d04 	addi	r2,gp,-25548
}
   4eea0:	e037883a 	mov	sp,fp
   4eea4:	dfc00117 	ldw	ra,4(sp)
   4eea8:	df000017 	ldw	fp,0(sp)
   4eeac:	dec00204 	addi	sp,sp,8
   4eeb0:	f800283a 	ret

0004eeb4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4eeb4:	deffea04 	addi	sp,sp,-88
   4eeb8:	dfc01515 	stw	ra,84(sp)
   4eebc:	df001415 	stw	fp,80(sp)
   4eec0:	df001404 	addi	fp,sp,80
   4eec4:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4eec8:	e0bfec17 	ldw	r2,-80(fp)
   4eecc:	10000616 	blt	r2,zero,4eee8 <isatty+0x34>
   4eed0:	e0bfec17 	ldw	r2,-80(fp)
   4eed4:	10c00324 	muli	r3,r2,12
   4eed8:	00800174 	movhi	r2,5
   4eedc:	1088f304 	addi	r2,r2,9164
   4eee0:	1885883a 	add	r2,r3,r2
   4eee4:	00000106 	br	4eeec <isatty+0x38>
   4eee8:	0005883a 	mov	r2,zero
   4eeec:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4eef0:	e0bfff17 	ldw	r2,-4(fp)
   4eef4:	10000e26 	beq	r2,zero,4ef30 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4eef8:	e0bfff17 	ldw	r2,-4(fp)
   4eefc:	10800017 	ldw	r2,0(r2)
   4ef00:	10800817 	ldw	r2,32(r2)
   4ef04:	1000021e 	bne	r2,zero,4ef10 <isatty+0x5c>
    {
      return 1;
   4ef08:	00800044 	movi	r2,1
   4ef0c:	00000d06 	br	4ef44 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4ef10:	e0bfed04 	addi	r2,fp,-76
   4ef14:	100b883a 	mov	r5,r2
   4ef18:	e13fec17 	ldw	r4,-80(fp)
   4ef1c:	004eb100 	call	4eb10 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4ef20:	e0bfee17 	ldw	r2,-72(fp)
   4ef24:	10880020 	cmpeqi	r2,r2,8192
   4ef28:	10803fcc 	andi	r2,r2,255
   4ef2c:	00000506 	br	4ef44 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4ef30:	004ee780 	call	4ee78 <alt_get_errno>
   4ef34:	1007883a 	mov	r3,r2
   4ef38:	00801444 	movi	r2,81
   4ef3c:	18800015 	stw	r2,0(r3)
    return 0;
   4ef40:	0005883a 	mov	r2,zero
  }
}
   4ef44:	e037883a 	mov	sp,fp
   4ef48:	dfc00117 	ldw	ra,4(sp)
   4ef4c:	df000017 	ldw	fp,0(sp)
   4ef50:	dec00204 	addi	sp,sp,8
   4ef54:	f800283a 	ret

0004ef58 <alt_get_errno>:
{
   4ef58:	defffe04 	addi	sp,sp,-8
   4ef5c:	dfc00115 	stw	ra,4(sp)
   4ef60:	df000015 	stw	fp,0(sp)
   4ef64:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ef68:	d0a00917 	ldw	r2,-32732(gp)
   4ef6c:	10000326 	beq	r2,zero,4ef7c <alt_get_errno+0x24>
   4ef70:	d0a00917 	ldw	r2,-32732(gp)
   4ef74:	103ee83a 	callr	r2
   4ef78:	00000106 	br	4ef80 <alt_get_errno+0x28>
   4ef7c:	d0a70d04 	addi	r2,gp,-25548
}
   4ef80:	e037883a 	mov	sp,fp
   4ef84:	dfc00117 	ldw	ra,4(sp)
   4ef88:	df000017 	ldw	fp,0(sp)
   4ef8c:	dec00204 	addi	sp,sp,8
   4ef90:	f800283a 	ret

0004ef94 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   4ef94:	defffb04 	addi	sp,sp,-20
   4ef98:	dfc00415 	stw	ra,16(sp)
   4ef9c:	df000315 	stw	fp,12(sp)
   4efa0:	df000304 	addi	fp,sp,12
   4efa4:	e13ffe15 	stw	r4,-8(fp)
   4efa8:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   4efac:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   4efb0:	e0bffe17 	ldw	r2,-8(fp)
   4efb4:	00801d16 	blt	zero,r2,4f02c <kill+0x98>
  {
    switch (sig)
   4efb8:	e0bffd17 	ldw	r2,-12(fp)
   4efbc:	10002026 	beq	r2,zero,4f040 <kill+0xac>
   4efc0:	e0bffd17 	ldw	r2,-12(fp)
   4efc4:	10001616 	blt	r2,zero,4f020 <kill+0x8c>
   4efc8:	e0bffd17 	ldw	r2,-12(fp)
   4efcc:	10800808 	cmpgei	r2,r2,32
   4efd0:	1000131e 	bne	r2,zero,4f020 <kill+0x8c>
   4efd4:	e0bffd17 	ldw	r2,-12(fp)
   4efd8:	108000d0 	cmplti	r2,r2,3
   4efdc:	1000101e 	bne	r2,zero,4f020 <kill+0x8c>
   4efe0:	e0bffd17 	ldw	r2,-12(fp)
   4efe4:	00c00044 	movi	r3,1
   4efe8:	1886983a 	sll	r3,r3,r2
   4efec:	00b3e074 	movhi	r2,53121
   4eff0:	10bfde04 	addi	r2,r2,-136
   4eff4:	1884703a 	and	r2,r3,r2
   4eff8:	1004c03a 	cmpne	r2,r2,zero
   4effc:	10803fcc 	andi	r2,r2,255
   4f000:	1000051e 	bne	r2,zero,4f018 <kill+0x84>
   4f004:	1880046c 	andhi	r2,r3,17
   4f008:	1004c03a 	cmpne	r2,r2,zero
   4f00c:	10803fcc 	andi	r2,r2,255
   4f010:	10000d1e 	bne	r2,zero,4f048 <kill+0xb4>
   4f014:	00000206 	br	4f020 <kill+0x8c>
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   4f018:	0009883a 	mov	r4,zero
   4f01c:	004ea980 	call	4ea98 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   4f020:	00800584 	movi	r2,22
   4f024:	e0bfff15 	stw	r2,-4(fp)
   4f028:	00000806 	br	4f04c <kill+0xb8>
    }
  }

  else if (pid > 0)
   4f02c:	e0bffe17 	ldw	r2,-8(fp)
   4f030:	0080060e 	bge	zero,r2,4f04c <kill+0xb8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   4f034:	008000c4 	movi	r2,3
   4f038:	e0bfff15 	stw	r2,-4(fp)
   4f03c:	00000306 	br	4f04c <kill+0xb8>
      break;
   4f040:	0001883a 	nop
   4f044:	00000106 	br	4f04c <kill+0xb8>
      break;
   4f048:	0001883a 	nop
  }

  if (status)
   4f04c:	e0bfff17 	ldw	r2,-4(fp)
   4f050:	10000626 	beq	r2,zero,4f06c <kill+0xd8>
  {
    ALT_ERRNO = status;
   4f054:	004ef580 	call	4ef58 <alt_get_errno>
   4f058:	1007883a 	mov	r3,r2
   4f05c:	e0bfff17 	ldw	r2,-4(fp)
   4f060:	18800015 	stw	r2,0(r3)
    return -1;
   4f064:	00bfffc4 	movi	r2,-1
   4f068:	00000106 	br	4f070 <kill+0xdc>
  }

  return 0;
   4f06c:	0005883a 	mov	r2,zero
}
   4f070:	e037883a 	mov	sp,fp
   4f074:	dfc00117 	ldw	ra,4(sp)
   4f078:	df000017 	ldw	fp,0(sp)
   4f07c:	dec00204 	addi	sp,sp,8
   4f080:	f800283a 	ret

0004f084 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4f084:	defffc04 	addi	sp,sp,-16
   4f088:	df000315 	stw	fp,12(sp)
   4f08c:	df000304 	addi	fp,sp,12
   4f090:	e13fff15 	stw	r4,-4(fp)
   4f094:	e17ffe15 	stw	r5,-8(fp)
   4f098:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   4f09c:	e0fffe17 	ldw	r3,-8(fp)
   4f0a0:	e0bfff17 	ldw	r2,-4(fp)
   4f0a4:	18800c26 	beq	r3,r2,4f0d8 <alt_load_section+0x54>
  {
    while( to != end )
   4f0a8:	00000806 	br	4f0cc <alt_load_section+0x48>
    {
      *to++ = *from++;
   4f0ac:	e0ffff17 	ldw	r3,-4(fp)
   4f0b0:	18800104 	addi	r2,r3,4
   4f0b4:	e0bfff15 	stw	r2,-4(fp)
   4f0b8:	e0bffe17 	ldw	r2,-8(fp)
   4f0bc:	11000104 	addi	r4,r2,4
   4f0c0:	e13ffe15 	stw	r4,-8(fp)
   4f0c4:	18c00017 	ldw	r3,0(r3)
   4f0c8:	10c00015 	stw	r3,0(r2)
    while( to != end )
   4f0cc:	e0fffe17 	ldw	r3,-8(fp)
   4f0d0:	e0bffd17 	ldw	r2,-12(fp)
   4f0d4:	18bff51e 	bne	r3,r2,4f0ac <alt_load_section+0x28>
    }
  }
}
   4f0d8:	0001883a 	nop
   4f0dc:	e037883a 	mov	sp,fp
   4f0e0:	df000017 	ldw	fp,0(sp)
   4f0e4:	dec00104 	addi	sp,sp,4
   4f0e8:	f800283a 	ret

0004f0ec <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4f0ec:	defffe04 	addi	sp,sp,-8
   4f0f0:	dfc00115 	stw	ra,4(sp)
   4f0f4:	df000015 	stw	fp,0(sp)
   4f0f8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4f0fc:	01800174 	movhi	r6,5
   4f100:	318d7904 	addi	r6,r6,13796
   4f104:	01400174 	movhi	r5,5
   4f108:	29468304 	addi	r5,r5,6668
   4f10c:	01000174 	movhi	r4,5
   4f110:	210d7904 	addi	r4,r4,13796
   4f114:	004f0840 	call	4f084 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4f118:	01800134 	movhi	r6,4
   4f11c:	31808e04 	addi	r6,r6,568
   4f120:	01400134 	movhi	r5,4
   4f124:	29400804 	addi	r5,r5,32
   4f128:	01000134 	movhi	r4,4
   4f12c:	21000804 	addi	r4,r4,32
   4f130:	004f0840 	call	4f084 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4f134:	01800174 	movhi	r6,5
   4f138:	31868304 	addi	r6,r6,6668
   4f13c:	01400174 	movhi	r5,5
   4f140:	2944cf04 	addi	r5,r5,4924
   4f144:	01000174 	movhi	r4,5
   4f148:	2104cf04 	addi	r4,r4,4924
   4f14c:	004f0840 	call	4f084 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4f150:	00505fc0 	call	505fc <alt_dcache_flush_all>
  alt_icache_flush_all();
   4f154:	00507f40 	call	507f4 <alt_icache_flush_all>
}
   4f158:	0001883a 	nop
   4f15c:	e037883a 	mov	sp,fp
   4f160:	dfc00117 	ldw	ra,4(sp)
   4f164:	df000017 	ldw	fp,0(sp)
   4f168:	dec00204 	addi	sp,sp,8
   4f16c:	f800283a 	ret

0004f170 <alt_get_errno>:
{
   4f170:	defffe04 	addi	sp,sp,-8
   4f174:	dfc00115 	stw	ra,4(sp)
   4f178:	df000015 	stw	fp,0(sp)
   4f17c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f180:	d0a00917 	ldw	r2,-32732(gp)
   4f184:	10000326 	beq	r2,zero,4f194 <alt_get_errno+0x24>
   4f188:	d0a00917 	ldw	r2,-32732(gp)
   4f18c:	103ee83a 	callr	r2
   4f190:	00000106 	br	4f198 <alt_get_errno+0x28>
   4f194:	d0a70d04 	addi	r2,gp,-25548
}
   4f198:	e037883a 	mov	sp,fp
   4f19c:	dfc00117 	ldw	ra,4(sp)
   4f1a0:	df000017 	ldw	fp,0(sp)
   4f1a4:	dec00204 	addi	sp,sp,8
   4f1a8:	f800283a 	ret

0004f1ac <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4f1ac:	defff904 	addi	sp,sp,-28
   4f1b0:	dfc00615 	stw	ra,24(sp)
   4f1b4:	df000515 	stw	fp,20(sp)
   4f1b8:	df000504 	addi	fp,sp,20
   4f1bc:	e13ffd15 	stw	r4,-12(fp)
   4f1c0:	e17ffc15 	stw	r5,-16(fp)
   4f1c4:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4f1c8:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f1cc:	e0bffd17 	ldw	r2,-12(fp)
   4f1d0:	10000616 	blt	r2,zero,4f1ec <lseek+0x40>
   4f1d4:	e0bffd17 	ldw	r2,-12(fp)
   4f1d8:	10c00324 	muli	r3,r2,12
   4f1dc:	00800174 	movhi	r2,5
   4f1e0:	1088f304 	addi	r2,r2,9164
   4f1e4:	1885883a 	add	r2,r3,r2
   4f1e8:	00000106 	br	4f1f0 <lseek+0x44>
   4f1ec:	0005883a 	mov	r2,zero
   4f1f0:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   4f1f4:	e0bffe17 	ldw	r2,-8(fp)
   4f1f8:	10001026 	beq	r2,zero,4f23c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4f1fc:	e0bffe17 	ldw	r2,-8(fp)
   4f200:	10800017 	ldw	r2,0(r2)
   4f204:	10800717 	ldw	r2,28(r2)
   4f208:	10000926 	beq	r2,zero,4f230 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4f20c:	e0bffe17 	ldw	r2,-8(fp)
   4f210:	10800017 	ldw	r2,0(r2)
   4f214:	10800717 	ldw	r2,28(r2)
   4f218:	e1bffb17 	ldw	r6,-20(fp)
   4f21c:	e17ffc17 	ldw	r5,-16(fp)
   4f220:	e13ffe17 	ldw	r4,-8(fp)
   4f224:	103ee83a 	callr	r2
   4f228:	e0bfff15 	stw	r2,-4(fp)
   4f22c:	00000506 	br	4f244 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4f230:	00bfde84 	movi	r2,-134
   4f234:	e0bfff15 	stw	r2,-4(fp)
   4f238:	00000206 	br	4f244 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4f23c:	00bfebc4 	movi	r2,-81
   4f240:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   4f244:	e0bfff17 	ldw	r2,-4(fp)
   4f248:	1000070e 	bge	r2,zero,4f268 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4f24c:	004f1700 	call	4f170 <alt_get_errno>
   4f250:	1007883a 	mov	r3,r2
   4f254:	e0bfff17 	ldw	r2,-4(fp)
   4f258:	0085c83a 	sub	r2,zero,r2
   4f25c:	18800015 	stw	r2,0(r3)
    rc = -1;
   4f260:	00bfffc4 	movi	r2,-1
   4f264:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   4f268:	e0bfff17 	ldw	r2,-4(fp)
}
   4f26c:	e037883a 	mov	sp,fp
   4f270:	dfc00117 	ldw	ra,4(sp)
   4f274:	df000017 	ldw	fp,0(sp)
   4f278:	dec00204 	addi	sp,sp,8
   4f27c:	f800283a 	ret

0004f280 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4f280:	defffd04 	addi	sp,sp,-12
   4f284:	dfc00215 	stw	ra,8(sp)
   4f288:	df000115 	stw	fp,4(sp)
   4f28c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4f290:	0009883a 	mov	r4,zero
   4f294:	004f7240 	call	4f724 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4f298:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4f29c:	004f7600 	call	4f760 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4f2a0:	01800174 	movhi	r6,5
   4f2a4:	31867904 	addi	r6,r6,6628
   4f2a8:	01400174 	movhi	r5,5
   4f2ac:	29467904 	addi	r5,r5,6628
   4f2b0:	01000174 	movhi	r4,5
   4f2b4:	21067904 	addi	r4,r4,6628
   4f2b8:	005094c0 	call	5094c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4f2bc:	005072c0 	call	5072c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4f2c0:	01000174 	movhi	r4,5
   4f2c4:	2101e404 	addi	r4,r4,1936
   4f2c8:	00510cc0 	call	510cc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4f2cc:	d0a71017 	ldw	r2,-25536(gp)
   4f2d0:	d0e71117 	ldw	r3,-25532(gp)
   4f2d4:	d1271217 	ldw	r4,-25528(gp)
   4f2d8:	200d883a 	mov	r6,r4
   4f2dc:	180b883a 	mov	r5,r3
   4f2e0:	1009883a 	mov	r4,r2
   4f2e4:	0040a3c0 	call	40a3c <main>
   4f2e8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4f2ec:	01000044 	movi	r4,1
   4f2f0:	004e99c0 	call	4e99c <close>
  exit (result);
   4f2f4:	e13fff17 	ldw	r4,-4(fp)
   4f2f8:	00510e00 	call	510e0 <exit>

0004f2fc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4f2fc:	defffe04 	addi	sp,sp,-8
   4f300:	df000115 	stw	fp,4(sp)
   4f304:	df000104 	addi	fp,sp,4
   4f308:	e13fff15 	stw	r4,-4(fp)
}
   4f30c:	0001883a 	nop
   4f310:	e037883a 	mov	sp,fp
   4f314:	df000017 	ldw	fp,0(sp)
   4f318:	dec00104 	addi	sp,sp,4
   4f31c:	f800283a 	ret

0004f320 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4f320:	defffe04 	addi	sp,sp,-8
   4f324:	df000115 	stw	fp,4(sp)
   4f328:	df000104 	addi	fp,sp,4
   4f32c:	e13fff15 	stw	r4,-4(fp)
}
   4f330:	0001883a 	nop
   4f334:	e037883a 	mov	sp,fp
   4f338:	df000017 	ldw	fp,0(sp)
   4f33c:	dec00104 	addi	sp,sp,4
   4f340:	f800283a 	ret

0004f344 <alt_get_errno>:
{
   4f344:	defffe04 	addi	sp,sp,-8
   4f348:	dfc00115 	stw	ra,4(sp)
   4f34c:	df000015 	stw	fp,0(sp)
   4f350:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f354:	d0a00917 	ldw	r2,-32732(gp)
   4f358:	10000326 	beq	r2,zero,4f368 <alt_get_errno+0x24>
   4f35c:	d0a00917 	ldw	r2,-32732(gp)
   4f360:	103ee83a 	callr	r2
   4f364:	00000106 	br	4f36c <alt_get_errno+0x28>
   4f368:	d0a70d04 	addi	r2,gp,-25548
}
   4f36c:	e037883a 	mov	sp,fp
   4f370:	dfc00117 	ldw	ra,4(sp)
   4f374:	df000017 	ldw	fp,0(sp)
   4f378:	dec00204 	addi	sp,sp,8
   4f37c:	f800283a 	ret

0004f380 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4f380:	defff904 	addi	sp,sp,-28
   4f384:	dfc00615 	stw	ra,24(sp)
   4f388:	df000515 	stw	fp,20(sp)
   4f38c:	df000504 	addi	fp,sp,20
   4f390:	e13ffd15 	stw	r4,-12(fp)
   4f394:	e17ffc15 	stw	r5,-16(fp)
   4f398:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f39c:	e0bffd17 	ldw	r2,-12(fp)
   4f3a0:	10000616 	blt	r2,zero,4f3bc <read+0x3c>
   4f3a4:	e0bffd17 	ldw	r2,-12(fp)
   4f3a8:	10c00324 	muli	r3,r2,12
   4f3ac:	00800174 	movhi	r2,5
   4f3b0:	1088f304 	addi	r2,r2,9164
   4f3b4:	1885883a 	add	r2,r3,r2
   4f3b8:	00000106 	br	4f3c0 <read+0x40>
   4f3bc:	0005883a 	mov	r2,zero
   4f3c0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4f3c4:	e0bfff17 	ldw	r2,-4(fp)
   4f3c8:	10002226 	beq	r2,zero,4f454 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4f3cc:	e0bfff17 	ldw	r2,-4(fp)
   4f3d0:	10800217 	ldw	r2,8(r2)
   4f3d4:	108000cc 	andi	r2,r2,3
   4f3d8:	10800060 	cmpeqi	r2,r2,1
   4f3dc:	1000181e 	bne	r2,zero,4f440 <read+0xc0>
        (fd->dev->read))
   4f3e0:	e0bfff17 	ldw	r2,-4(fp)
   4f3e4:	10800017 	ldw	r2,0(r2)
   4f3e8:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4f3ec:	10001426 	beq	r2,zero,4f440 <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4f3f0:	e0bfff17 	ldw	r2,-4(fp)
   4f3f4:	10800017 	ldw	r2,0(r2)
   4f3f8:	10800517 	ldw	r2,20(r2)
   4f3fc:	e0fffb17 	ldw	r3,-20(fp)
   4f400:	180d883a 	mov	r6,r3
   4f404:	e17ffc17 	ldw	r5,-16(fp)
   4f408:	e13fff17 	ldw	r4,-4(fp)
   4f40c:	103ee83a 	callr	r2
   4f410:	e0bffe15 	stw	r2,-8(fp)
   4f414:	e0bffe17 	ldw	r2,-8(fp)
   4f418:	1000070e 	bge	r2,zero,4f438 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4f41c:	004f3440 	call	4f344 <alt_get_errno>
   4f420:	1007883a 	mov	r3,r2
   4f424:	e0bffe17 	ldw	r2,-8(fp)
   4f428:	0085c83a 	sub	r2,zero,r2
   4f42c:	18800015 	stw	r2,0(r3)
          return -1;
   4f430:	00bfffc4 	movi	r2,-1
   4f434:	00000c06 	br	4f468 <read+0xe8>
        }
        return rval;
   4f438:	e0bffe17 	ldw	r2,-8(fp)
   4f43c:	00000a06 	br	4f468 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4f440:	004f3440 	call	4f344 <alt_get_errno>
   4f444:	1007883a 	mov	r3,r2
   4f448:	00800344 	movi	r2,13
   4f44c:	18800015 	stw	r2,0(r3)
   4f450:	00000406 	br	4f464 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4f454:	004f3440 	call	4f344 <alt_get_errno>
   4f458:	1007883a 	mov	r3,r2
   4f45c:	00801444 	movi	r2,81
   4f460:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4f464:	00bfffc4 	movi	r2,-1
}
   4f468:	e037883a 	mov	sp,fp
   4f46c:	dfc00117 	ldw	ra,4(sp)
   4f470:	df000017 	ldw	fp,0(sp)
   4f474:	dec00204 	addi	sp,sp,8
   4f478:	f800283a 	ret

0004f47c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4f47c:	defffe04 	addi	sp,sp,-8
   4f480:	df000115 	stw	fp,4(sp)
   4f484:	df000104 	addi	fp,sp,4
   4f488:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4f48c:	e0bfff17 	ldw	r2,-4(fp)
   4f490:	108000d0 	cmplti	r2,r2,3
   4f494:	10000a1e 	bne	r2,zero,4f4c0 <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
   4f498:	e0bfff17 	ldw	r2,-4(fp)
   4f49c:	10c00324 	muli	r3,r2,12
   4f4a0:	00800174 	movhi	r2,5
   4f4a4:	1885883a 	add	r2,r3,r2
   4f4a8:	1008f515 	stw	zero,9172(r2)
    alt_fd_list[fd].dev      = 0;
   4f4ac:	e0bfff17 	ldw	r2,-4(fp)
   4f4b0:	10c00324 	muli	r3,r2,12
   4f4b4:	00800174 	movhi	r2,5
   4f4b8:	1885883a 	add	r2,r3,r2
   4f4bc:	1008f315 	stw	zero,9164(r2)
  }
}
   4f4c0:	0001883a 	nop
   4f4c4:	e037883a 	mov	sp,fp
   4f4c8:	df000017 	ldw	fp,0(sp)
   4f4cc:	dec00104 	addi	sp,sp,4
   4f4d0:	f800283a 	ret

0004f4d4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4f4d4:	defff904 	addi	sp,sp,-28
   4f4d8:	df000615 	stw	fp,24(sp)
   4f4dc:	df000604 	addi	fp,sp,24
   4f4e0:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   4f4e4:	0005303a 	rdctl	r2,status
   4f4e8:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f4ec:	e0fffd17 	ldw	r3,-12(fp)
   4f4f0:	00bfff84 	movi	r2,-2
   4f4f4:	1884703a 	and	r2,r3,r2
   4f4f8:	1001703a 	wrctl	status,r2
  return context;
   4f4fc:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4f500:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4f504:	d0a00b17 	ldw	r2,-32724(gp)
   4f508:	10c000c4 	addi	r3,r2,3
   4f50c:	00bfff04 	movi	r2,-4
   4f510:	1884703a 	and	r2,r3,r2
   4f514:	d0a00b15 	stw	r2,-32724(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4f518:	d0e00b17 	ldw	r3,-32724(gp)
   4f51c:	e0bffa17 	ldw	r2,-24(fp)
   4f520:	1887883a 	add	r3,r3,r2
   4f524:	008001b4 	movhi	r2,6
   4f528:	10960004 	addi	r2,r2,22528
   4f52c:	10c0072e 	bgeu	r2,r3,4f54c <sbrk+0x78>
   4f530:	e0bfff17 	ldw	r2,-4(fp)
   4f534:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4f538:	e0bffc17 	ldw	r2,-16(fp)
   4f53c:	1001703a 	wrctl	status,r2
}
   4f540:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4f544:	00bfffc4 	movi	r2,-1
   4f548:	00000c06 	br	4f57c <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   4f54c:	d0a00b17 	ldw	r2,-32724(gp)
   4f550:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   4f554:	d0e00b17 	ldw	r3,-32724(gp)
   4f558:	e0bffa17 	ldw	r2,-24(fp)
   4f55c:	1885883a 	add	r2,r3,r2
   4f560:	d0a00b15 	stw	r2,-32724(gp)
   4f564:	e0bfff17 	ldw	r2,-4(fp)
   4f568:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   4f56c:	e0bffb17 	ldw	r2,-20(fp)
   4f570:	1001703a 	wrctl	status,r2
}
   4f574:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4f578:	e0bffe17 	ldw	r2,-8(fp)
} 
   4f57c:	e037883a 	mov	sp,fp
   4f580:	df000017 	ldw	fp,0(sp)
   4f584:	dec00104 	addi	sp,sp,4
   4f588:	f800283a 	ret

0004f58c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   4f58c:	defffd04 	addi	sp,sp,-12
   4f590:	dfc00215 	stw	ra,8(sp)
   4f594:	df000115 	stw	fp,4(sp)
   4f598:	df000104 	addi	fp,sp,4
   4f59c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   4f5a0:	e13fff17 	ldw	r4,-4(fp)
   4f5a4:	00504a40 	call	504a4 <alt_busy_sleep>
}
   4f5a8:	e037883a 	mov	sp,fp
   4f5ac:	dfc00117 	ldw	ra,4(sp)
   4f5b0:	df000017 	ldw	fp,0(sp)
   4f5b4:	dec00204 	addi	sp,sp,8
   4f5b8:	f800283a 	ret

0004f5bc <alt_get_errno>:
{
   4f5bc:	defffe04 	addi	sp,sp,-8
   4f5c0:	dfc00115 	stw	ra,4(sp)
   4f5c4:	df000015 	stw	fp,0(sp)
   4f5c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f5cc:	d0a00917 	ldw	r2,-32732(gp)
   4f5d0:	10000326 	beq	r2,zero,4f5e0 <alt_get_errno+0x24>
   4f5d4:	d0a00917 	ldw	r2,-32732(gp)
   4f5d8:	103ee83a 	callr	r2
   4f5dc:	00000106 	br	4f5e4 <alt_get_errno+0x28>
   4f5e0:	d0a70d04 	addi	r2,gp,-25548
}
   4f5e4:	e037883a 	mov	sp,fp
   4f5e8:	dfc00117 	ldw	ra,4(sp)
   4f5ec:	df000017 	ldw	fp,0(sp)
   4f5f0:	dec00204 	addi	sp,sp,8
   4f5f4:	f800283a 	ret

0004f5f8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4f5f8:	defff904 	addi	sp,sp,-28
   4f5fc:	dfc00615 	stw	ra,24(sp)
   4f600:	df000515 	stw	fp,20(sp)
   4f604:	df000504 	addi	fp,sp,20
   4f608:	e13ffd15 	stw	r4,-12(fp)
   4f60c:	e17ffc15 	stw	r5,-16(fp)
   4f610:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f614:	e0bffd17 	ldw	r2,-12(fp)
   4f618:	10000616 	blt	r2,zero,4f634 <write+0x3c>
   4f61c:	e0bffd17 	ldw	r2,-12(fp)
   4f620:	10c00324 	muli	r3,r2,12
   4f624:	00800174 	movhi	r2,5
   4f628:	1088f304 	addi	r2,r2,9164
   4f62c:	1885883a 	add	r2,r3,r2
   4f630:	00000106 	br	4f638 <write+0x40>
   4f634:	0005883a 	mov	r2,zero
   4f638:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4f63c:	e0bfff17 	ldw	r2,-4(fp)
   4f640:	10002126 	beq	r2,zero,4f6c8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4f644:	e0bfff17 	ldw	r2,-4(fp)
   4f648:	10800217 	ldw	r2,8(r2)
   4f64c:	108000cc 	andi	r2,r2,3
   4f650:	10001826 	beq	r2,zero,4f6b4 <write+0xbc>
   4f654:	e0bfff17 	ldw	r2,-4(fp)
   4f658:	10800017 	ldw	r2,0(r2)
   4f65c:	10800617 	ldw	r2,24(r2)
   4f660:	10001426 	beq	r2,zero,4f6b4 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4f664:	e0bfff17 	ldw	r2,-4(fp)
   4f668:	10800017 	ldw	r2,0(r2)
   4f66c:	10800617 	ldw	r2,24(r2)
   4f670:	e0fffb17 	ldw	r3,-20(fp)
   4f674:	180d883a 	mov	r6,r3
   4f678:	e17ffc17 	ldw	r5,-16(fp)
   4f67c:	e13fff17 	ldw	r4,-4(fp)
   4f680:	103ee83a 	callr	r2
   4f684:	e0bffe15 	stw	r2,-8(fp)
   4f688:	e0bffe17 	ldw	r2,-8(fp)
   4f68c:	1000070e 	bge	r2,zero,4f6ac <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4f690:	004f5bc0 	call	4f5bc <alt_get_errno>
   4f694:	1007883a 	mov	r3,r2
   4f698:	e0bffe17 	ldw	r2,-8(fp)
   4f69c:	0085c83a 	sub	r2,zero,r2
   4f6a0:	18800015 	stw	r2,0(r3)
        return -1;
   4f6a4:	00bfffc4 	movi	r2,-1
   4f6a8:	00000c06 	br	4f6dc <write+0xe4>
      }
      return rval;
   4f6ac:	e0bffe17 	ldw	r2,-8(fp)
   4f6b0:	00000a06 	br	4f6dc <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4f6b4:	004f5bc0 	call	4f5bc <alt_get_errno>
   4f6b8:	1007883a 	mov	r3,r2
   4f6bc:	00800344 	movi	r2,13
   4f6c0:	18800015 	stw	r2,0(r3)
   4f6c4:	00000406 	br	4f6d8 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4f6c8:	004f5bc0 	call	4f5bc <alt_get_errno>
   4f6cc:	1007883a 	mov	r3,r2
   4f6d0:	00801444 	movi	r2,81
   4f6d4:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4f6d8:	00bfffc4 	movi	r2,-1
}
   4f6dc:	e037883a 	mov	sp,fp
   4f6e0:	dfc00117 	ldw	ra,4(sp)
   4f6e4:	df000017 	ldw	fp,0(sp)
   4f6e8:	dec00204 	addi	sp,sp,8
   4f6ec:	f800283a 	ret

0004f6f0 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4f6f0:	defffd04 	addi	sp,sp,-12
   4f6f4:	dfc00215 	stw	ra,8(sp)
   4f6f8:	df000115 	stw	fp,4(sp)
   4f6fc:	df000104 	addi	fp,sp,4
   4f700:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4f704:	d1600604 	addi	r5,gp,-32744
   4f708:	e13fff17 	ldw	r4,-4(fp)
   4f70c:	00506840 	call	50684 <alt_dev_llist_insert>
}
   4f710:	e037883a 	mov	sp,fp
   4f714:	dfc00117 	ldw	ra,4(sp)
   4f718:	df000017 	ldw	fp,0(sp)
   4f71c:	dec00204 	addi	sp,sp,8
   4f720:	f800283a 	ret

0004f724 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4f724:	defffd04 	addi	sp,sp,-12
   4f728:	dfc00215 	stw	ra,8(sp)
   4f72c:	df000115 	stw	fp,4(sp)
   4f730:	df000104 	addi	fp,sp,4
   4f734:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   4f738:	0050de00 	call	50de0 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4f73c:	00800044 	movi	r2,1
   4f740:	1001703a 	wrctl	status,r2
}
   4f744:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   4f748:	0001883a 	nop
   4f74c:	e037883a 	mov	sp,fp
   4f750:	dfc00117 	ldw	ra,4(sp)
   4f754:	df000017 	ldw	fp,0(sp)
   4f758:	dec00204 	addi	sp,sp,8
   4f75c:	f800283a 	ret

0004f760 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4f760:	defffe04 	addi	sp,sp,-8
   4f764:	dfc00115 	stw	ra,4(sp)
   4f768:	df000015 	stw	fp,0(sp)
   4f76c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
   4f770:	01c00044 	movi	r7,1
   4f774:	01800044 	movi	r6,1
   4f778:	000b883a 	mov	r5,zero
   4f77c:	01000234 	movhi	r4,8
   4f780:	21040804 	addi	r4,r4,4128
   4f784:	00502c00 	call	502c0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   4f788:	01800284 	movi	r6,10
   4f78c:	000b883a 	mov	r5,zero
   4f790:	01000174 	movhi	r4,5
   4f794:	21095d04 	addi	r4,r4,9588
   4f798:	004f9240 	call	4f924 <altera_avalon_jtag_uart_init>
   4f79c:	01000174 	movhi	r4,5
   4f7a0:	21095304 	addi	r4,r4,9548
   4f7a4:	004f6f00 	call	4f6f0 <alt_dev_reg>
}
   4f7a8:	0001883a 	nop
   4f7ac:	e037883a 	mov	sp,fp
   4f7b0:	dfc00117 	ldw	ra,4(sp)
   4f7b4:	df000017 	ldw	fp,0(sp)
   4f7b8:	dec00204 	addi	sp,sp,8
   4f7bc:	f800283a 	ret

0004f7c0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4f7c0:	defffa04 	addi	sp,sp,-24
   4f7c4:	dfc00515 	stw	ra,20(sp)
   4f7c8:	df000415 	stw	fp,16(sp)
   4f7cc:	df000404 	addi	fp,sp,16
   4f7d0:	e13ffe15 	stw	r4,-8(fp)
   4f7d4:	e17ffd15 	stw	r5,-12(fp)
   4f7d8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f7dc:	e0bffe17 	ldw	r2,-8(fp)
   4f7e0:	10800017 	ldw	r2,0(r2)
   4f7e4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4f7e8:	e0bfff17 	ldw	r2,-4(fp)
   4f7ec:	10c00a04 	addi	r3,r2,40
   4f7f0:	e0bffe17 	ldw	r2,-8(fp)
   4f7f4:	10800217 	ldw	r2,8(r2)
   4f7f8:	100f883a 	mov	r7,r2
   4f7fc:	e1bffc17 	ldw	r6,-16(fp)
   4f800:	e17ffd17 	ldw	r5,-12(fp)
   4f804:	1809883a 	mov	r4,r3
   4f808:	004fdfc0 	call	4fdfc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4f80c:	e037883a 	mov	sp,fp
   4f810:	dfc00117 	ldw	ra,4(sp)
   4f814:	df000017 	ldw	fp,0(sp)
   4f818:	dec00204 	addi	sp,sp,8
   4f81c:	f800283a 	ret

0004f820 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4f820:	defffa04 	addi	sp,sp,-24
   4f824:	dfc00515 	stw	ra,20(sp)
   4f828:	df000415 	stw	fp,16(sp)
   4f82c:	df000404 	addi	fp,sp,16
   4f830:	e13ffe15 	stw	r4,-8(fp)
   4f834:	e17ffd15 	stw	r5,-12(fp)
   4f838:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f83c:	e0bffe17 	ldw	r2,-8(fp)
   4f840:	10800017 	ldw	r2,0(r2)
   4f844:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4f848:	e0bfff17 	ldw	r2,-4(fp)
   4f84c:	10c00a04 	addi	r3,r2,40
   4f850:	e0bffe17 	ldw	r2,-8(fp)
   4f854:	10800217 	ldw	r2,8(r2)
   4f858:	100f883a 	mov	r7,r2
   4f85c:	e1bffc17 	ldw	r6,-16(fp)
   4f860:	e17ffd17 	ldw	r5,-12(fp)
   4f864:	1809883a 	mov	r4,r3
   4f868:	005001c0 	call	5001c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4f86c:	e037883a 	mov	sp,fp
   4f870:	dfc00117 	ldw	ra,4(sp)
   4f874:	df000017 	ldw	fp,0(sp)
   4f878:	dec00204 	addi	sp,sp,8
   4f87c:	f800283a 	ret

0004f880 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4f880:	defffc04 	addi	sp,sp,-16
   4f884:	dfc00315 	stw	ra,12(sp)
   4f888:	df000215 	stw	fp,8(sp)
   4f88c:	df000204 	addi	fp,sp,8
   4f890:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f894:	e0bffe17 	ldw	r2,-8(fp)
   4f898:	10800017 	ldw	r2,0(r2)
   4f89c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4f8a0:	e0bfff17 	ldw	r2,-4(fp)
   4f8a4:	10c00a04 	addi	r3,r2,40
   4f8a8:	e0bffe17 	ldw	r2,-8(fp)
   4f8ac:	10800217 	ldw	r2,8(r2)
   4f8b0:	100b883a 	mov	r5,r2
   4f8b4:	1809883a 	mov	r4,r3
   4f8b8:	004fca00 	call	4fca0 <altera_avalon_jtag_uart_close>
}
   4f8bc:	e037883a 	mov	sp,fp
   4f8c0:	dfc00117 	ldw	ra,4(sp)
   4f8c4:	df000017 	ldw	fp,0(sp)
   4f8c8:	dec00204 	addi	sp,sp,8
   4f8cc:	f800283a 	ret

0004f8d0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4f8d0:	defffa04 	addi	sp,sp,-24
   4f8d4:	dfc00515 	stw	ra,20(sp)
   4f8d8:	df000415 	stw	fp,16(sp)
   4f8dc:	df000404 	addi	fp,sp,16
   4f8e0:	e13ffe15 	stw	r4,-8(fp)
   4f8e4:	e17ffd15 	stw	r5,-12(fp)
   4f8e8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4f8ec:	e0bffe17 	ldw	r2,-8(fp)
   4f8f0:	10800017 	ldw	r2,0(r2)
   4f8f4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4f8f8:	e0bfff17 	ldw	r2,-4(fp)
   4f8fc:	10800a04 	addi	r2,r2,40
   4f900:	e1bffc17 	ldw	r6,-16(fp)
   4f904:	e17ffd17 	ldw	r5,-12(fp)
   4f908:	1009883a 	mov	r4,r2
   4f90c:	004fd080 	call	4fd08 <altera_avalon_jtag_uart_ioctl>
}
   4f910:	e037883a 	mov	sp,fp
   4f914:	dfc00117 	ldw	ra,4(sp)
   4f918:	df000017 	ldw	fp,0(sp)
   4f91c:	dec00204 	addi	sp,sp,8
   4f920:	f800283a 	ret

0004f924 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4f924:	defffa04 	addi	sp,sp,-24
   4f928:	dfc00515 	stw	ra,20(sp)
   4f92c:	df000415 	stw	fp,16(sp)
   4f930:	df000404 	addi	fp,sp,16
   4f934:	e13fff15 	stw	r4,-4(fp)
   4f938:	e17ffe15 	stw	r5,-8(fp)
   4f93c:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f940:	e0bfff17 	ldw	r2,-4(fp)
   4f944:	00c00044 	movi	r3,1
   4f948:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4f94c:	e0bfff17 	ldw	r2,-4(fp)
   4f950:	10800017 	ldw	r2,0(r2)
   4f954:	10800104 	addi	r2,r2,4
   4f958:	1007883a 	mov	r3,r2
   4f95c:	e0bfff17 	ldw	r2,-4(fp)
   4f960:	10800817 	ldw	r2,32(r2)
   4f964:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4f968:	e0bffe17 	ldw	r2,-8(fp)
   4f96c:	e0fffd17 	ldw	r3,-12(fp)
   4f970:	d8000015 	stw	zero,0(sp)
   4f974:	e1ffff17 	ldw	r7,-4(fp)
   4f978:	01800174 	movhi	r6,5
   4f97c:	31be7904 	addi	r6,r6,-1564
   4f980:	180b883a 	mov	r5,r3
   4f984:	1009883a 	mov	r4,r2
   4f988:	004ebe00 	call	4ebe0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4f98c:	e0bfff17 	ldw	r2,-4(fp)
   4f990:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4f994:	e0bfff17 	ldw	r2,-4(fp)
   4f998:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4f99c:	d0e71417 	ldw	r3,-25520(gp)
   4f9a0:	e1ffff17 	ldw	r7,-4(fp)
   4f9a4:	01800174 	movhi	r6,5
   4f9a8:	31befe04 	addi	r6,r6,-1032
   4f9ac:	180b883a 	mov	r5,r3
   4f9b0:	1009883a 	mov	r4,r2
   4f9b4:	00503440 	call	50344 <alt_alarm_start>
   4f9b8:	1000040e 	bge	r2,zero,4f9cc <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4f9bc:	e0ffff17 	ldw	r3,-4(fp)
   4f9c0:	00a00034 	movhi	r2,32768
   4f9c4:	10bfffc4 	addi	r2,r2,-1
   4f9c8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4f9cc:	0001883a 	nop
   4f9d0:	e037883a 	mov	sp,fp
   4f9d4:	dfc00117 	ldw	ra,4(sp)
   4f9d8:	df000017 	ldw	fp,0(sp)
   4f9dc:	dec00204 	addi	sp,sp,8
   4f9e0:	f800283a 	ret

0004f9e4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4f9e4:	defff704 	addi	sp,sp,-36
   4f9e8:	df000815 	stw	fp,32(sp)
   4f9ec:	df000804 	addi	fp,sp,32
   4f9f0:	e13ff815 	stw	r4,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4f9f4:	e0bff817 	ldw	r2,-32(fp)
   4f9f8:	e0bffc15 	stw	r2,-16(fp)
  unsigned int base = sp->base;
   4f9fc:	e0bffc17 	ldw	r2,-16(fp)
   4fa00:	10800017 	ldw	r2,0(r2)
   4fa04:	e0bffb15 	stw	r2,-20(fp)
  unsigned int postflag=0;
   4fa08:	e03fff15 	stw	zero,-4(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4fa0c:	e0bffb17 	ldw	r2,-20(fp)
   4fa10:	10800104 	addi	r2,r2,4
   4fa14:	10800037 	ldwio	r2,0(r2)
   4fa18:	e0bffa15 	stw	r2,-24(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4fa1c:	e0bffa17 	ldw	r2,-24(fp)
   4fa20:	1080c00c 	andi	r2,r2,768
   4fa24:	10006e26 	beq	r2,zero,4fbe0 <altera_avalon_jtag_uart_irq+0x1fc>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4fa28:	e0bffa17 	ldw	r2,-24(fp)
   4fa2c:	1080400c 	andi	r2,r2,256
   4fa30:	10003526 	beq	r2,zero,4fb08 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4fa34:	00800074 	movhi	r2,1
   4fa38:	e0bffe15 	stw	r2,-8(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4fa3c:	e0bffc17 	ldw	r2,-16(fp)
   4fa40:	10800a17 	ldw	r2,40(r2)
   4fa44:	10800044 	addi	r2,r2,1
   4fa48:	1081ffcc 	andi	r2,r2,2047
   4fa4c:	e0bff915 	stw	r2,-28(fp)
        if (next == sp->rx_out)
   4fa50:	e0bffc17 	ldw	r2,-16(fp)
   4fa54:	10800b17 	ldw	r2,44(r2)
   4fa58:	e0fff917 	ldw	r3,-28(fp)
   4fa5c:	18801526 	beq	r3,r2,4fab4 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4fa60:	e0bffb17 	ldw	r2,-20(fp)
   4fa64:	10800037 	ldwio	r2,0(r2)
   4fa68:	e0bffe15 	stw	r2,-8(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4fa6c:	e0bffe17 	ldw	r2,-8(fp)
   4fa70:	10a0000c 	andi	r2,r2,32768
   4fa74:	10001126 	beq	r2,zero,4fabc <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4fa78:	e0bffc17 	ldw	r2,-16(fp)
   4fa7c:	10800a17 	ldw	r2,40(r2)
   4fa80:	e0fffe17 	ldw	r3,-8(fp)
   4fa84:	1809883a 	mov	r4,r3
   4fa88:	e0fffc17 	ldw	r3,-16(fp)
   4fa8c:	1885883a 	add	r2,r3,r2
   4fa90:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4fa94:	e0bffc17 	ldw	r2,-16(fp)
   4fa98:	10800a17 	ldw	r2,40(r2)
   4fa9c:	10800044 	addi	r2,r2,1
   4faa0:	10c1ffcc 	andi	r3,r2,2047
   4faa4:	e0bffc17 	ldw	r2,-16(fp)
   4faa8:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   4faac:	0001883a 	nop
      {
   4fab0:	003fe206 	br	4fa3c <altera_avalon_jtag_uart_irq+0x58>
          break;
   4fab4:	0001883a 	nop
   4fab8:	00000106 	br	4fac0 <altera_avalon_jtag_uart_irq+0xdc>
          break;
   4fabc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, ALT_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4fac0:	e0bffe17 	ldw	r2,-8(fp)
   4fac4:	00ffffd4 	movui	r3,65535
   4fac8:	18800f2e 	bgeu	r3,r2,4fb08 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4facc:	e0bffc17 	ldw	r2,-16(fp)
   4fad0:	10c00817 	ldw	r3,32(r2)
   4fad4:	00bfff84 	movi	r2,-2
   4fad8:	1886703a 	and	r3,r3,r2
   4fadc:	e0bffc17 	ldw	r2,-16(fp)
   4fae0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4fae4:	e0bffb17 	ldw	r2,-20(fp)
   4fae8:	10800104 	addi	r2,r2,4
   4faec:	1007883a 	mov	r3,r2
   4faf0:	e0bffc17 	ldw	r2,-16(fp)
   4faf4:	10800817 	ldw	r2,32(r2)
   4faf8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4fafc:	e0bffb17 	ldw	r2,-20(fp)
   4fb00:	10800104 	addi	r2,r2,4
   4fb04:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4fb08:	e0bffa17 	ldw	r2,-24(fp)
   4fb0c:	1080800c 	andi	r2,r2,512
   4fb10:	103fbe26 	beq	r2,zero,4fa0c <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4fb14:	e0bffa17 	ldw	r2,-24(fp)
   4fb18:	1004d43a 	srli	r2,r2,16
   4fb1c:	e0bffd15 	stw	r2,-12(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4fb20:	00001506 	br	4fb78 <altera_avalon_jtag_uart_irq+0x194>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4fb24:	e0bffb17 	ldw	r2,-20(fp)
   4fb28:	e0fffc17 	ldw	r3,-16(fp)
   4fb2c:	18c00d17 	ldw	r3,52(r3)
   4fb30:	e13ffc17 	ldw	r4,-16(fp)
   4fb34:	20c7883a 	add	r3,r4,r3
   4fb38:	18c20e03 	ldbu	r3,2104(r3)
   4fb3c:	18c03fcc 	andi	r3,r3,255
   4fb40:	18c0201c 	xori	r3,r3,128
   4fb44:	18ffe004 	addi	r3,r3,-128
   4fb48:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4fb4c:	e0bffc17 	ldw	r2,-16(fp)
   4fb50:	10800d17 	ldw	r2,52(r2)
   4fb54:	10800044 	addi	r2,r2,1
   4fb58:	10c1ffcc 	andi	r3,r2,2047
   4fb5c:	e0bffc17 	ldw	r2,-16(fp)
   4fb60:	10c00d15 	stw	r3,52(r2)
        
        /* indicate that the ALT_FLAG_POST routine must be called */
        postflag=1;
   4fb64:	00800044 	movi	r2,1
   4fb68:	e0bfff15 	stw	r2,-4(fp)

        space--;
   4fb6c:	e0bffd17 	ldw	r2,-12(fp)
   4fb70:	10bfffc4 	addi	r2,r2,-1
   4fb74:	e0bffd15 	stw	r2,-12(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   4fb78:	e0bffd17 	ldw	r2,-12(fp)
   4fb7c:	10000526 	beq	r2,zero,4fb94 <altera_avalon_jtag_uart_irq+0x1b0>
   4fb80:	e0bffc17 	ldw	r2,-16(fp)
   4fb84:	10c00d17 	ldw	r3,52(r2)
   4fb88:	e0bffc17 	ldw	r2,-16(fp)
   4fb8c:	10800c17 	ldw	r2,48(r2)
   4fb90:	18bfe41e 	bne	r3,r2,4fb24 <altera_avalon_jtag_uart_irq+0x140>
      {
        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, ALT_FLAG_SET);
      }

      if (space > 0)
   4fb94:	e0bffd17 	ldw	r2,-12(fp)
   4fb98:	103f9c26 	beq	r2,zero,4fa0c <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4fb9c:	e0bffc17 	ldw	r2,-16(fp)
   4fba0:	10c00817 	ldw	r3,32(r2)
   4fba4:	00bfff44 	movi	r2,-3
   4fba8:	1886703a 	and	r3,r3,r2
   4fbac:	e0bffc17 	ldw	r2,-16(fp)
   4fbb0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4fbb4:	e0bffc17 	ldw	r2,-16(fp)
   4fbb8:	10800017 	ldw	r2,0(r2)
   4fbbc:	10800104 	addi	r2,r2,4
   4fbc0:	1007883a 	mov	r3,r2
   4fbc4:	e0bffc17 	ldw	r2,-16(fp)
   4fbc8:	10800817 	ldw	r2,32(r2)
   4fbcc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4fbd0:	e0bffb17 	ldw	r2,-20(fp)
   4fbd4:	10800104 	addi	r2,r2,4
   4fbd8:	10800037 	ldwio	r2,0(r2)
  {
   4fbdc:	003f8b06 	br	4fa0c <altera_avalon_jtag_uart_irq+0x28>
      break;
   4fbe0:	0001883a 	nop
      }
    }
  }
}
   4fbe4:	0001883a 	nop
   4fbe8:	e037883a 	mov	sp,fp
   4fbec:	df000017 	ldw	fp,0(sp)
   4fbf0:	dec00104 	addi	sp,sp,4
   4fbf4:	f800283a 	ret

0004fbf8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4fbf8:	defffc04 	addi	sp,sp,-16
   4fbfc:	df000315 	stw	fp,12(sp)
   4fc00:	df000304 	addi	fp,sp,12
   4fc04:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4fc08:	e0bffd17 	ldw	r2,-12(fp)
   4fc0c:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4fc10:	e0bfff17 	ldw	r2,-4(fp)
   4fc14:	10800017 	ldw	r2,0(r2)
   4fc18:	10800104 	addi	r2,r2,4
   4fc1c:	10800037 	ldwio	r2,0(r2)
   4fc20:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4fc24:	e0bffe17 	ldw	r2,-8(fp)
   4fc28:	1081000c 	andi	r2,r2,1024
   4fc2c:	10000b26 	beq	r2,zero,4fc5c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4fc30:	e0bfff17 	ldw	r2,-4(fp)
   4fc34:	10800017 	ldw	r2,0(r2)
   4fc38:	10800104 	addi	r2,r2,4
   4fc3c:	1007883a 	mov	r3,r2
   4fc40:	e0bfff17 	ldw	r2,-4(fp)
   4fc44:	10800817 	ldw	r2,32(r2)
   4fc48:	10810014 	ori	r2,r2,1024
   4fc4c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4fc50:	e0bfff17 	ldw	r2,-4(fp)
   4fc54:	10000915 	stw	zero,36(r2)
   4fc58:	00000c06 	br	4fc8c <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4fc5c:	e0bfff17 	ldw	r2,-4(fp)
   4fc60:	10c00917 	ldw	r3,36(r2)
   4fc64:	00a00034 	movhi	r2,32768
   4fc68:	10bfff04 	addi	r2,r2,-4
   4fc6c:	10c00736 	bltu	r2,r3,4fc8c <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   4fc70:	e0bfff17 	ldw	r2,-4(fp)
   4fc74:	10800917 	ldw	r2,36(r2)
   4fc78:	10c00044 	addi	r3,r2,1
   4fc7c:	e0bfff17 	ldw	r2,-4(fp)
   4fc80:	10c00915 	stw	r3,36(r2)
    
    if (sp->host_inactive >= sp->timeout) {
   4fc84:	e0bfff17 	ldw	r2,-4(fp)
   4fc88:	10800917 	ldw	r2,36(r2)
   4fc8c:	d0a71417 	ldw	r2,-25520(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, ALT_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4fc90:	e037883a 	mov	sp,fp
   4fc94:	df000017 	ldw	fp,0(sp)
   4fc98:	dec00104 	addi	sp,sp,4
   4fc9c:	f800283a 	ret

0004fca0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4fca0:	defffd04 	addi	sp,sp,-12
   4fca4:	df000215 	stw	fp,8(sp)
   4fca8:	df000204 	addi	fp,sp,8
   4fcac:	e13fff15 	stw	r4,-4(fp)
   4fcb0:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4fcb4:	00000506 	br	4fccc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4fcb8:	e0bffe17 	ldw	r2,-8(fp)
   4fcbc:	1090000c 	andi	r2,r2,16384
   4fcc0:	10000226 	beq	r2,zero,4fccc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4fcc4:	00bffd44 	movi	r2,-11
   4fcc8:	00000b06 	br	4fcf8 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4fccc:	e0bfff17 	ldw	r2,-4(fp)
   4fcd0:	10c00d17 	ldw	r3,52(r2)
   4fcd4:	e0bfff17 	ldw	r2,-4(fp)
   4fcd8:	10800c17 	ldw	r2,48(r2)
   4fcdc:	18800526 	beq	r3,r2,4fcf4 <altera_avalon_jtag_uart_close+0x54>
   4fce0:	e0bfff17 	ldw	r2,-4(fp)
   4fce4:	10c00917 	ldw	r3,36(r2)
   4fce8:	e0bfff17 	ldw	r2,-4(fp)
   4fcec:	10800117 	ldw	r2,4(r2)
   4fcf0:	18bff136 	bltu	r3,r2,4fcb8 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   4fcf4:	0005883a 	mov	r2,zero
}
   4fcf8:	e037883a 	mov	sp,fp
   4fcfc:	df000017 	ldw	fp,0(sp)
   4fd00:	dec00104 	addi	sp,sp,4
   4fd04:	f800283a 	ret

0004fd08 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4fd08:	defffa04 	addi	sp,sp,-24
   4fd0c:	df000515 	stw	fp,20(sp)
   4fd10:	df000504 	addi	fp,sp,20
   4fd14:	e13ffd15 	stw	r4,-12(fp)
   4fd18:	e17ffc15 	stw	r5,-16(fp)
   4fd1c:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   4fd20:	00bff9c4 	movi	r2,-25
   4fd24:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   4fd28:	e0bffc17 	ldw	r2,-16(fp)
   4fd2c:	109a8060 	cmpeqi	r2,r2,27137
   4fd30:	1000041e 	bne	r2,zero,4fd44 <altera_avalon_jtag_uart_ioctl+0x3c>
   4fd34:	e0bffc17 	ldw	r2,-16(fp)
   4fd38:	109a80a0 	cmpeqi	r2,r2,27138
   4fd3c:	1000181e 	bne	r2,zero,4fda0 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   4fd40:	00002906 	br	4fde8 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   4fd44:	e0bffd17 	ldw	r2,-12(fp)
   4fd48:	10c00117 	ldw	r3,4(r2)
   4fd4c:	00a00034 	movhi	r2,32768
   4fd50:	10bfffc4 	addi	r2,r2,-1
   4fd54:	18802126 	beq	r3,r2,4fddc <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   4fd58:	e0bffb17 	ldw	r2,-20(fp)
   4fd5c:	10800017 	ldw	r2,0(r2)
   4fd60:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4fd64:	e0bffe17 	ldw	r2,-8(fp)
   4fd68:	10800090 	cmplti	r2,r2,2
   4fd6c:	1000061e 	bne	r2,zero,4fd88 <altera_avalon_jtag_uart_ioctl+0x80>
   4fd70:	e0fffe17 	ldw	r3,-8(fp)
   4fd74:	00a00034 	movhi	r2,32768
   4fd78:	10bfffc4 	addi	r2,r2,-1
   4fd7c:	18800226 	beq	r3,r2,4fd88 <altera_avalon_jtag_uart_ioctl+0x80>
   4fd80:	e0bffe17 	ldw	r2,-8(fp)
   4fd84:	00000206 	br	4fd90 <altera_avalon_jtag_uart_ioctl+0x88>
   4fd88:	00a00034 	movhi	r2,32768
   4fd8c:	10bfff84 	addi	r2,r2,-2
   4fd90:	e0fffd17 	ldw	r3,-12(fp)
   4fd94:	18800115 	stw	r2,4(r3)
      rc = 0;
   4fd98:	e03fff15 	stw	zero,-4(fp)
    break;
   4fd9c:	00000f06 	br	4fddc <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   4fda0:	e0bffd17 	ldw	r2,-12(fp)
   4fda4:	10c00117 	ldw	r3,4(r2)
   4fda8:	00a00034 	movhi	r2,32768
   4fdac:	10bfffc4 	addi	r2,r2,-1
   4fdb0:	18800c26 	beq	r3,r2,4fde4 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4fdb4:	e0bffd17 	ldw	r2,-12(fp)
   4fdb8:	10c00917 	ldw	r3,36(r2)
   4fdbc:	e0bffd17 	ldw	r2,-12(fp)
   4fdc0:	10800117 	ldw	r2,4(r2)
   4fdc4:	1885803a 	cmpltu	r2,r3,r2
   4fdc8:	10c03fcc 	andi	r3,r2,255
   4fdcc:	e0bffb17 	ldw	r2,-20(fp)
   4fdd0:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4fdd4:	e03fff15 	stw	zero,-4(fp)
    break;
   4fdd8:	00000206 	br	4fde4 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   4fddc:	0001883a 	nop
   4fde0:	00000106 	br	4fde8 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   4fde4:	0001883a 	nop
  }

  return rc;
   4fde8:	e0bfff17 	ldw	r2,-4(fp)
}
   4fdec:	e037883a 	mov	sp,fp
   4fdf0:	df000017 	ldw	fp,0(sp)
   4fdf4:	dec00104 	addi	sp,sp,4
   4fdf8:	f800283a 	ret

0004fdfc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4fdfc:	defff304 	addi	sp,sp,-52
   4fe00:	dfc00c15 	stw	ra,48(sp)
   4fe04:	df000b15 	stw	fp,44(sp)
   4fe08:	df000b04 	addi	fp,sp,44
   4fe0c:	e13ff815 	stw	r4,-32(fp)
   4fe10:	e17ff715 	stw	r5,-36(fp)
   4fe14:	e1bff615 	stw	r6,-40(fp)
   4fe18:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   4fe1c:	e0bff717 	ldw	r2,-36(fp)
   4fe20:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4fe24:	00004706 	br	4ff44 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4fe28:	e0bff817 	ldw	r2,-32(fp)
   4fe2c:	10800a17 	ldw	r2,40(r2)
   4fe30:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   4fe34:	e0bff817 	ldw	r2,-32(fp)
   4fe38:	10800b17 	ldw	r2,44(r2)
   4fe3c:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   4fe40:	e0fffd17 	ldw	r3,-12(fp)
   4fe44:	e0bffc17 	ldw	r2,-16(fp)
   4fe48:	18800536 	bltu	r3,r2,4fe60 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4fe4c:	e0fffd17 	ldw	r3,-12(fp)
   4fe50:	e0bffc17 	ldw	r2,-16(fp)
   4fe54:	1885c83a 	sub	r2,r3,r2
   4fe58:	e0bffe15 	stw	r2,-8(fp)
   4fe5c:	00000406 	br	4fe70 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4fe60:	00c20004 	movi	r3,2048
   4fe64:	e0bffc17 	ldw	r2,-16(fp)
   4fe68:	1885c83a 	sub	r2,r3,r2
   4fe6c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   4fe70:	e0bffe17 	ldw	r2,-8(fp)
   4fe74:	10001e26 	beq	r2,zero,4fef0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4fe78:	e0fff617 	ldw	r3,-40(fp)
   4fe7c:	e0bffe17 	ldw	r2,-8(fp)
   4fe80:	1880022e 	bgeu	r3,r2,4fe8c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4fe84:	e0bff617 	ldw	r2,-40(fp)
   4fe88:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4fe8c:	e0bff817 	ldw	r2,-32(fp)
   4fe90:	10c00e04 	addi	r3,r2,56
   4fe94:	e0bffc17 	ldw	r2,-16(fp)
   4fe98:	1885883a 	add	r2,r3,r2
   4fe9c:	e1bffe17 	ldw	r6,-8(fp)
   4fea0:	100b883a 	mov	r5,r2
   4fea4:	e13fff17 	ldw	r4,-4(fp)
   4fea8:	004755c0 	call	4755c <memcpy>
      ptr   += n;
   4feac:	e0ffff17 	ldw	r3,-4(fp)
   4feb0:	e0bffe17 	ldw	r2,-8(fp)
   4feb4:	1885883a 	add	r2,r3,r2
   4feb8:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   4febc:	e0fff617 	ldw	r3,-40(fp)
   4fec0:	e0bffe17 	ldw	r2,-8(fp)
   4fec4:	1885c83a 	sub	r2,r3,r2
   4fec8:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4fecc:	e0fffc17 	ldw	r3,-16(fp)
   4fed0:	e0bffe17 	ldw	r2,-8(fp)
   4fed4:	1885883a 	add	r2,r3,r2
   4fed8:	10c1ffcc 	andi	r3,r2,2047
   4fedc:	e0bff817 	ldw	r2,-32(fp)
   4fee0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4fee4:	e0bff617 	ldw	r2,-40(fp)
   4fee8:	00bfcf16 	blt	zero,r2,4fe28 <altera_avalon_jtag_uart_read+0x2c>
   4feec:	00000106 	br	4fef4 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   4fef0:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   4fef4:	e0ffff17 	ldw	r3,-4(fp)
   4fef8:	e0bff717 	ldw	r2,-36(fp)
   4fefc:	1880141e 	bne	r3,r2,4ff50 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4ff00:	e0bff517 	ldw	r2,-44(fp)
   4ff04:	1090000c 	andi	r2,r2,16384
   4ff08:	1000131e 	bne	r2,zero,4ff58 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4ff0c:	0001883a 	nop
   4ff10:	e0bff817 	ldw	r2,-32(fp)
   4ff14:	10800a17 	ldw	r2,40(r2)
   4ff18:	e0fffd17 	ldw	r3,-12(fp)
   4ff1c:	1880051e 	bne	r3,r2,4ff34 <altera_avalon_jtag_uart_read+0x138>
   4ff20:	e0bff817 	ldw	r2,-32(fp)
   4ff24:	10c00917 	ldw	r3,36(r2)
   4ff28:	e0bff817 	ldw	r2,-32(fp)
   4ff2c:	10800117 	ldw	r2,4(r2)
   4ff30:	18bff736 	bltu	r3,r2,4ff10 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4ff34:	e0bff817 	ldw	r2,-32(fp)
   4ff38:	10800a17 	ldw	r2,40(r2)
   4ff3c:	e0fffd17 	ldw	r3,-12(fp)
   4ff40:	18800726 	beq	r3,r2,4ff60 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   4ff44:	e0bff617 	ldw	r2,-40(fp)
   4ff48:	00bfb716 	blt	zero,r2,4fe28 <altera_avalon_jtag_uart_read+0x2c>
   4ff4c:	00000506 	br	4ff64 <altera_avalon_jtag_uart_read+0x168>
      break;
   4ff50:	0001883a 	nop
   4ff54:	00000306 	br	4ff64 <altera_avalon_jtag_uart_read+0x168>
      break;
   4ff58:	0001883a 	nop
   4ff5c:	00000106 	br	4ff64 <altera_avalon_jtag_uart_read+0x168>
      break;
   4ff60:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4ff64:	e0ffff17 	ldw	r3,-4(fp)
   4ff68:	e0bff717 	ldw	r2,-36(fp)
   4ff6c:	18801926 	beq	r3,r2,4ffd4 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   4ff70:	0005303a 	rdctl	r2,status
   4ff74:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ff78:	e0fff917 	ldw	r3,-28(fp)
   4ff7c:	00bfff84 	movi	r2,-2
   4ff80:	1884703a 	and	r2,r3,r2
   4ff84:	1001703a 	wrctl	status,r2
  return context;
   4ff88:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4ff8c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4ff90:	e0bff817 	ldw	r2,-32(fp)
   4ff94:	10800817 	ldw	r2,32(r2)
   4ff98:	10c00054 	ori	r3,r2,1
   4ff9c:	e0bff817 	ldw	r2,-32(fp)
   4ffa0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4ffa4:	e0bff817 	ldw	r2,-32(fp)
   4ffa8:	10800017 	ldw	r2,0(r2)
   4ffac:	10800104 	addi	r2,r2,4
   4ffb0:	1007883a 	mov	r3,r2
   4ffb4:	e0bff817 	ldw	r2,-32(fp)
   4ffb8:	10800817 	ldw	r2,32(r2)
   4ffbc:	18800035 	stwio	r2,0(r3)
   4ffc0:	e0bffb17 	ldw	r2,-20(fp)
   4ffc4:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   4ffc8:	e0bffa17 	ldw	r2,-24(fp)
   4ffcc:	1001703a 	wrctl	status,r2
}
   4ffd0:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4ffd4:	e0ffff17 	ldw	r3,-4(fp)
   4ffd8:	e0bff717 	ldw	r2,-36(fp)
   4ffdc:	18800426 	beq	r3,r2,4fff0 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   4ffe0:	e0ffff17 	ldw	r3,-4(fp)
   4ffe4:	e0bff717 	ldw	r2,-36(fp)
   4ffe8:	1885c83a 	sub	r2,r3,r2
   4ffec:	00000606 	br	50008 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   4fff0:	e0bff517 	ldw	r2,-44(fp)
   4fff4:	1090000c 	andi	r2,r2,16384
   4fff8:	10000226 	beq	r2,zero,50004 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   4fffc:	00bffd44 	movi	r2,-11
   50000:	00000106 	br	50008 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   50004:	00bffec4 	movi	r2,-5
}
   50008:	e037883a 	mov	sp,fp
   5000c:	dfc00117 	ldw	ra,4(sp)
   50010:	df000017 	ldw	fp,0(sp)
   50014:	dec00204 	addi	sp,sp,8
   50018:	f800283a 	ret

0005001c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   5001c:	defff304 	addi	sp,sp,-52
   50020:	dfc00c15 	stw	ra,48(sp)
   50024:	df000b15 	stw	fp,44(sp)
   50028:	df000b04 	addi	fp,sp,44
   5002c:	e13ff815 	stw	r4,-32(fp)
   50030:	e17ff715 	stw	r5,-36(fp)
   50034:	e1bff615 	stw	r6,-40(fp)
   50038:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   5003c:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   50040:	e0bff717 	ldw	r2,-36(fp)
   50044:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   50048:	00003706 	br	50128 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   5004c:	e0bff817 	ldw	r2,-32(fp)
   50050:	10800c17 	ldw	r2,48(r2)
   50054:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   50058:	e0bff817 	ldw	r2,-32(fp)
   5005c:	10800d17 	ldw	r2,52(r2)
   50060:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   50064:	e0fffc17 	ldw	r3,-16(fp)
   50068:	e0bfff17 	ldw	r2,-4(fp)
   5006c:	1880062e 	bgeu	r3,r2,50088 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   50070:	e0ffff17 	ldw	r3,-4(fp)
   50074:	e0bffc17 	ldw	r2,-16(fp)
   50078:	1885c83a 	sub	r2,r3,r2
   5007c:	10bfffc4 	addi	r2,r2,-1
   50080:	e0bffe15 	stw	r2,-8(fp)
   50084:	00000b06 	br	500b4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   50088:	e0bfff17 	ldw	r2,-4(fp)
   5008c:	10000526 	beq	r2,zero,500a4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   50090:	00c20004 	movi	r3,2048
   50094:	e0bffc17 	ldw	r2,-16(fp)
   50098:	1885c83a 	sub	r2,r3,r2
   5009c:	e0bffe15 	stw	r2,-8(fp)
   500a0:	00000406 	br	500b4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   500a4:	00c1ffc4 	movi	r3,2047
   500a8:	e0bffc17 	ldw	r2,-16(fp)
   500ac:	1885c83a 	sub	r2,r3,r2
   500b0:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   500b4:	e0bffe17 	ldw	r2,-8(fp)
   500b8:	10001e26 	beq	r2,zero,50134 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   500bc:	e0fff617 	ldw	r3,-40(fp)
   500c0:	e0bffe17 	ldw	r2,-8(fp)
   500c4:	1880022e 	bgeu	r3,r2,500d0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   500c8:	e0bff617 	ldw	r2,-40(fp)
   500cc:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   500d0:	e0bff817 	ldw	r2,-32(fp)
   500d4:	10c20e04 	addi	r3,r2,2104
   500d8:	e0bffc17 	ldw	r2,-16(fp)
   500dc:	1885883a 	add	r2,r3,r2
   500e0:	e1bffe17 	ldw	r6,-8(fp)
   500e4:	e17ff717 	ldw	r5,-36(fp)
   500e8:	1009883a 	mov	r4,r2
   500ec:	004755c0 	call	4755c <memcpy>
      ptr   += n;
   500f0:	e0fff717 	ldw	r3,-36(fp)
   500f4:	e0bffe17 	ldw	r2,-8(fp)
   500f8:	1885883a 	add	r2,r3,r2
   500fc:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   50100:	e0fff617 	ldw	r3,-40(fp)
   50104:	e0bffe17 	ldw	r2,-8(fp)
   50108:	1885c83a 	sub	r2,r3,r2
   5010c:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50110:	e0fffc17 	ldw	r3,-16(fp)
   50114:	e0bffe17 	ldw	r2,-8(fp)
   50118:	1885883a 	add	r2,r3,r2
   5011c:	10c1ffcc 	andi	r3,r2,2047
   50120:	e0bff817 	ldw	r2,-32(fp)
   50124:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   50128:	e0bff617 	ldw	r2,-40(fp)
   5012c:	00bfc716 	blt	zero,r2,5004c <altera_avalon_jtag_uart_write+0x30>
   50130:	00000106 	br	50138 <altera_avalon_jtag_uart_write+0x11c>
        break;
   50134:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   50138:	0005303a 	rdctl	r2,status
   5013c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50140:	e0fff917 	ldw	r3,-28(fp)
   50144:	00bfff84 	movi	r2,-2
   50148:	1884703a 	and	r2,r3,r2
   5014c:	1001703a 	wrctl	status,r2
  return context;
   50150:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   50154:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   50158:	e0bff817 	ldw	r2,-32(fp)
   5015c:	10800817 	ldw	r2,32(r2)
   50160:	10c00094 	ori	r3,r2,2
   50164:	e0bff817 	ldw	r2,-32(fp)
   50168:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   5016c:	e0bff817 	ldw	r2,-32(fp)
   50170:	10800017 	ldw	r2,0(r2)
   50174:	10800104 	addi	r2,r2,4
   50178:	1007883a 	mov	r3,r2
   5017c:	e0bff817 	ldw	r2,-32(fp)
   50180:	10800817 	ldw	r2,32(r2)
   50184:	18800035 	stwio	r2,0(r3)
   50188:	e0bffb17 	ldw	r2,-20(fp)
   5018c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   50190:	e0bffa17 	ldw	r2,-24(fp)
   50194:	1001703a 	wrctl	status,r2
}
   50198:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   5019c:	e0bff617 	ldw	r2,-40(fp)
   501a0:	0080100e 	bge	zero,r2,501e4 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   501a4:	e0bff517 	ldw	r2,-44(fp)
   501a8:	1090000c 	andi	r2,r2,16384
   501ac:	1000101e 	bne	r2,zero,501f0 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   501b0:	0001883a 	nop
   501b4:	e0bff817 	ldw	r2,-32(fp)
   501b8:	10800d17 	ldw	r2,52(r2)
   501bc:	e0ffff17 	ldw	r3,-4(fp)
   501c0:	1880051e 	bne	r3,r2,501d8 <altera_avalon_jtag_uart_write+0x1bc>
   501c4:	e0bff817 	ldw	r2,-32(fp)
   501c8:	10c00917 	ldw	r3,36(r2)
   501cc:	e0bff817 	ldw	r2,-32(fp)
   501d0:	10800117 	ldw	r2,4(r2)
   501d4:	18bff736 	bltu	r3,r2,501b4 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   501d8:	e0bff817 	ldw	r2,-32(fp)
   501dc:	10800917 	ldw	r2,36(r2)
   501e0:	1000051e 	bne	r2,zero,501f8 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   501e4:	e0bff617 	ldw	r2,-40(fp)
   501e8:	00bfcf16 	blt	zero,r2,50128 <altera_avalon_jtag_uart_write+0x10c>
   501ec:	00000306 	br	501fc <altera_avalon_jtag_uart_write+0x1e0>
        break;
   501f0:	0001883a 	nop
   501f4:	00000106 	br	501fc <altera_avalon_jtag_uart_write+0x1e0>
         break;
   501f8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   501fc:	e0fff717 	ldw	r3,-36(fp)
   50200:	e0bffd17 	ldw	r2,-12(fp)
   50204:	18800426 	beq	r3,r2,50218 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   50208:	e0fff717 	ldw	r3,-36(fp)
   5020c:	e0bffd17 	ldw	r2,-12(fp)
   50210:	1885c83a 	sub	r2,r3,r2
   50214:	00000606 	br	50230 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   50218:	e0bff517 	ldw	r2,-44(fp)
   5021c:	1090000c 	andi	r2,r2,16384
   50220:	10000226 	beq	r2,zero,5022c <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   50224:	00bffd44 	movi	r2,-11
   50228:	00000106 	br	50230 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   5022c:	00bffec4 	movi	r2,-5
}
   50230:	e037883a 	mov	sp,fp
   50234:	dfc00117 	ldw	ra,4(sp)
   50238:	df000017 	ldw	fp,0(sp)
   5023c:	dec00204 	addi	sp,sp,8
   50240:	f800283a 	ret

00050244 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   50244:	defffa04 	addi	sp,sp,-24
   50248:	dfc00515 	stw	ra,20(sp)
   5024c:	df000415 	stw	fp,16(sp)
   50250:	df000404 	addi	fp,sp,16
   50254:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   50258:	0007883a 	mov	r3,zero
   5025c:	e0bffc17 	ldw	r2,-16(fp)
   50260:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   50264:	e0bffc17 	ldw	r2,-16(fp)
   50268:	10800104 	addi	r2,r2,4
   5026c:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
   50270:	0005303a 	rdctl	r2,status
   50274:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50278:	e0fffd17 	ldw	r3,-12(fp)
   5027c:	00bfff84 	movi	r2,-2
   50280:	1884703a 	and	r2,r3,r2
   50284:	1001703a 	wrctl	status,r2
  return context;
   50288:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   5028c:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
   50290:	0050cb40 	call	50cb4 <alt_tick>
   50294:	e0bfff17 	ldw	r2,-4(fp)
   50298:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   5029c:	e0bffe17 	ldw	r2,-8(fp)
   502a0:	1001703a 	wrctl	status,r2
}
   502a4:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
   502a8:	0001883a 	nop
   502ac:	e037883a 	mov	sp,fp
   502b0:	dfc00117 	ldw	ra,4(sp)
   502b4:	df000017 	ldw	fp,0(sp)
   502b8:	dec00204 	addi	sp,sp,8
   502bc:	f800283a 	ret

000502c0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   502c0:	defff804 	addi	sp,sp,-32
   502c4:	dfc00715 	stw	ra,28(sp)
   502c8:	df000615 	stw	fp,24(sp)
   502cc:	df000604 	addi	fp,sp,24
   502d0:	e13ffe15 	stw	r4,-8(fp)
   502d4:	e17ffd15 	stw	r5,-12(fp)
   502d8:	e1bffc15 	stw	r6,-16(fp)
   502dc:	e1fffb15 	stw	r7,-20(fp)
   502e0:	e0bffb17 	ldw	r2,-20(fp)
   502e4:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   502e8:	d0a71417 	ldw	r2,-25520(gp)
   502ec:	1000031e 	bne	r2,zero,502fc <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
   502f0:	e0bfff17 	ldw	r2,-4(fp)
   502f4:	d0a71415 	stw	r2,-25520(gp)
    return 0;
   502f8:	00000106 	br	50300 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
   502fc:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   50300:	e0bffe17 	ldw	r2,-8(fp)
   50304:	10800104 	addi	r2,r2,4
   50308:	00c001c4 	movi	r3,7
   5030c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   50310:	d8000015 	stw	zero,0(sp)
   50314:	e1fffe17 	ldw	r7,-8(fp)
   50318:	01800174 	movhi	r6,5
   5031c:	31809104 	addi	r6,r6,580
   50320:	e17ffc17 	ldw	r5,-16(fp)
   50324:	e13ffd17 	ldw	r4,-12(fp)
   50328:	004ebe00 	call	4ebe0 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   5032c:	0001883a 	nop
   50330:	e037883a 	mov	sp,fp
   50334:	dfc00117 	ldw	ra,4(sp)
   50338:	df000017 	ldw	fp,0(sp)
   5033c:	dec00204 	addi	sp,sp,8
   50340:	f800283a 	ret

00050344 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   50344:	defff404 	addi	sp,sp,-48
   50348:	df000b15 	stw	fp,44(sp)
   5034c:	df000b04 	addi	fp,sp,44
   50350:	e13ff815 	stw	r4,-32(fp)
   50354:	e17ff715 	stw	r5,-36(fp)
   50358:	e1bff615 	stw	r6,-40(fp)
   5035c:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
   50360:	e03ffe15 	stw	zero,-8(fp)
   50364:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
   50368:	d0a71417 	ldw	r2,-25520(gp)
  
  if (alt_ticks_per_second ())
   5036c:	10004826 	beq	r2,zero,50490 <alt_alarm_start+0x14c>
  {
    if (alarm)
   50370:	e0bff817 	ldw	r2,-32(fp)
   50374:	10004426 	beq	r2,zero,50488 <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
   50378:	e0bff817 	ldw	r2,-32(fp)
   5037c:	e0fff617 	ldw	r3,-40(fp)
   50380:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
   50384:	e0bff817 	ldw	r2,-32(fp)
   50388:	e0fff517 	ldw	r3,-44(fp)
   5038c:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   50390:	0005303a 	rdctl	r2,status
   50394:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50398:	e0fff917 	ldw	r3,-28(fp)
   5039c:	00bfff84 	movi	r2,-2
   503a0:	1884703a 	and	r2,r3,r2
   503a4:	1001703a 	wrctl	status,r2
  return context;
   503a8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   503ac:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   503b0:	d0a71517 	ldw	r2,-25516(gp)
   503b4:	d0e71617 	ldw	r3,-25512(gp)
      
      current_nticks = alt_nticks();
   503b8:	e0bffe15 	stw	r2,-8(fp)
   503bc:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
   503c0:	e0bff717 	ldw	r2,-36(fp)
   503c4:	1011883a 	mov	r8,r2
   503c8:	0013883a 	mov	r9,zero
   503cc:	e13ffe17 	ldw	r4,-8(fp)
   503d0:	e17fff17 	ldw	r5,-4(fp)
   503d4:	4105883a 	add	r2,r8,r4
   503d8:	120d803a 	cmpltu	r6,r2,r8
   503dc:	4947883a 	add	r3,r9,r5
   503e0:	30c9883a 	add	r4,r6,r3
   503e4:	2007883a 	mov	r3,r4
   503e8:	1009883a 	mov	r4,r2
   503ec:	180b883a 	mov	r5,r3
   503f0:	01800044 	movi	r6,1
   503f4:	000f883a 	mov	r7,zero
   503f8:	2185883a 	add	r2,r4,r6
   503fc:	1111803a 	cmpltu	r8,r2,r4
   50400:	29c7883a 	add	r3,r5,r7
   50404:	40c9883a 	add	r4,r8,r3
   50408:	2007883a 	mov	r3,r4
   5040c:	1009883a 	mov	r4,r2
   50410:	180b883a 	mov	r5,r3
   50414:	e0bff817 	ldw	r2,-32(fp)
   50418:	11000215 	stw	r4,8(r2)
   5041c:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   50420:	e0bff817 	ldw	r2,-32(fp)
   50424:	d0e00c04 	addi	r3,gp,-32720
   50428:	e0fffb15 	stw	r3,-20(fp)
   5042c:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   50430:	e0bffa17 	ldw	r2,-24(fp)
   50434:	e0fffb17 	ldw	r3,-20(fp)
   50438:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   5043c:	e0bffb17 	ldw	r2,-20(fp)
   50440:	10c00017 	ldw	r3,0(r2)
   50444:	e0bffa17 	ldw	r2,-24(fp)
   50448:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   5044c:	e0bffb17 	ldw	r2,-20(fp)
   50450:	10800017 	ldw	r2,0(r2)
   50454:	e0fffa17 	ldw	r3,-24(fp)
   50458:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   5045c:	e0bffb17 	ldw	r2,-20(fp)
   50460:	e0fffa17 	ldw	r3,-24(fp)
   50464:	10c00015 	stw	r3,0(r2)
}
   50468:	0001883a 	nop
   5046c:	e0bffd17 	ldw	r2,-12(fp)
   50470:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   50474:	e0bffc17 	ldw	r2,-16(fp)
   50478:	1001703a 	wrctl	status,r2
}
   5047c:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   50480:	0005883a 	mov	r2,zero
   50484:	00000306 	br	50494 <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
   50488:	00bffa84 	movi	r2,-22
   5048c:	00000106 	br	50494 <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
   50490:	00bfde84 	movi	r2,-134
  }
}
   50494:	e037883a 	mov	sp,fp
   50498:	df000017 	ldw	fp,0(sp)
   5049c:	dec00104 	addi	sp,sp,4
   504a0:	f800283a 	ret

000504a4 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   504a4:	defffa04 	addi	sp,sp,-24
   504a8:	dfc00515 	stw	ra,20(sp)
   504ac:	df000415 	stw	fp,16(sp)
   504b0:	df000404 	addi	fp,sp,16
   504b4:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   504b8:	008000c4 	movi	r2,3
   504bc:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   504c0:	e0fffe17 	ldw	r3,-8(fp)
   504c4:	008003f4 	movhi	r2,15
   504c8:	10909004 	addi	r2,r2,16960
   504cc:	1885383a 	mul	r2,r3,r2
   504d0:	100b883a 	mov	r5,r2
   504d4:	0100bef4 	movhi	r4,763
   504d8:	213c2004 	addi	r4,r4,-3968
   504dc:	004c23c0 	call	4c23c <__udivsi3>
  big_loops = us / (INT_MAX/
   504e0:	100b883a 	mov	r5,r2
   504e4:	01200034 	movhi	r4,32768
   504e8:	213fffc4 	addi	r4,r4,-1
   504ec:	004c23c0 	call	4c23c <__udivsi3>
   504f0:	100b883a 	mov	r5,r2
   504f4:	e13ffc17 	ldw	r4,-16(fp)
   504f8:	004c23c0 	call	4c23c <__udivsi3>
   504fc:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
   50500:	e0bffd17 	ldw	r2,-12(fp)
   50504:	10002a26 	beq	r2,zero,505b0 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   50508:	e03fff15 	stw	zero,-4(fp)
   5050c:	00001706 	br	5056c <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   50510:	00a00034 	movhi	r2,32768
   50514:	10bfffc4 	addi	r2,r2,-1
   50518:	10bfffc4 	addi	r2,r2,-1
   5051c:	103ffe1e 	bne	r2,zero,50518 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   50520:	e0fffe17 	ldw	r3,-8(fp)
   50524:	008003f4 	movhi	r2,15
   50528:	10909004 	addi	r2,r2,16960
   5052c:	1885383a 	mul	r2,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
   50530:	100b883a 	mov	r5,r2
   50534:	0100bef4 	movhi	r4,763
   50538:	213c2004 	addi	r4,r4,-3968
   5053c:	004c23c0 	call	4c23c <__udivsi3>
   50540:	100b883a 	mov	r5,r2
   50544:	01200034 	movhi	r4,32768
   50548:	213fffc4 	addi	r4,r4,-1
   5054c:	004c23c0 	call	4c23c <__udivsi3>
   50550:	1007883a 	mov	r3,r2
   50554:	e0bffc17 	ldw	r2,-16(fp)
   50558:	10c5c83a 	sub	r2,r2,r3
   5055c:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
   50560:	e0bfff17 	ldw	r2,-4(fp)
   50564:	10800044 	addi	r2,r2,1
   50568:	e0bfff15 	stw	r2,-4(fp)
   5056c:	e0ffff17 	ldw	r3,-4(fp)
   50570:	e0bffd17 	ldw	r2,-12(fp)
   50574:	18bfe616 	blt	r3,r2,50510 <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   50578:	e0fffe17 	ldw	r3,-8(fp)
   5057c:	008003f4 	movhi	r2,15
   50580:	10909004 	addi	r2,r2,16960
   50584:	1885383a 	mul	r2,r3,r2
   50588:	100b883a 	mov	r5,r2
   5058c:	0100bef4 	movhi	r4,763
   50590:	213c2004 	addi	r4,r4,-3968
   50594:	004c23c0 	call	4c23c <__udivsi3>
   50598:	1007883a 	mov	r3,r2
   5059c:	e0bffc17 	ldw	r2,-16(fp)
   505a0:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   505a4:	10bfffc4 	addi	r2,r2,-1
   505a8:	103ffe1e 	bne	r2,zero,505a4 <alt_busy_sleep+0x100>
   505ac:	00000d06 	br	505e4 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   505b0:	e0fffe17 	ldw	r3,-8(fp)
   505b4:	008003f4 	movhi	r2,15
   505b8:	10909004 	addi	r2,r2,16960
   505bc:	1885383a 	mul	r2,r3,r2
   505c0:	100b883a 	mov	r5,r2
   505c4:	0100bef4 	movhi	r4,763
   505c8:	213c2004 	addi	r4,r4,-3968
   505cc:	004c23c0 	call	4c23c <__udivsi3>
   505d0:	1007883a 	mov	r3,r2
   505d4:	e0bffc17 	ldw	r2,-16(fp)
   505d8:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   505dc:	10bfffc4 	addi	r2,r2,-1
   505e0:	00bffe16 	blt	zero,r2,505dc <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   505e4:	0005883a 	mov	r2,zero
}
   505e8:	e037883a 	mov	sp,fp
   505ec:	dfc00117 	ldw	ra,4(sp)
   505f0:	df000017 	ldw	fp,0(sp)
   505f4:	dec00204 	addi	sp,sp,8
   505f8:	f800283a 	ret

000505fc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   505fc:	defffe04 	addi	sp,sp,-8
   50600:	df000115 	stw	fp,4(sp)
   50604:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   50608:	e03fff15 	stw	zero,-4(fp)
   5060c:	00000506 	br	50624 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   50610:	e0bfff17 	ldw	r2,-4(fp)
   50614:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   50618:	e0bfff17 	ldw	r2,-4(fp)
   5061c:	10800804 	addi	r2,r2,32
   50620:	e0bfff15 	stw	r2,-4(fp)
   50624:	e0bfff17 	ldw	r2,-4(fp)
   50628:	10820030 	cmpltui	r2,r2,2048
   5062c:	103ff81e 	bne	r2,zero,50610 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   50630:	0001883a 	nop
   50634:	0001883a 	nop
   50638:	e037883a 	mov	sp,fp
   5063c:	df000017 	ldw	fp,0(sp)
   50640:	dec00104 	addi	sp,sp,4
   50644:	f800283a 	ret

00050648 <alt_get_errno>:
{
   50648:	defffe04 	addi	sp,sp,-8
   5064c:	dfc00115 	stw	ra,4(sp)
   50650:	df000015 	stw	fp,0(sp)
   50654:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50658:	d0a00917 	ldw	r2,-32732(gp)
   5065c:	10000326 	beq	r2,zero,5066c <alt_get_errno+0x24>
   50660:	d0a00917 	ldw	r2,-32732(gp)
   50664:	103ee83a 	callr	r2
   50668:	00000106 	br	50670 <alt_get_errno+0x28>
   5066c:	d0a70d04 	addi	r2,gp,-25548
}
   50670:	e037883a 	mov	sp,fp
   50674:	dfc00117 	ldw	ra,4(sp)
   50678:	df000017 	ldw	fp,0(sp)
   5067c:	dec00204 	addi	sp,sp,8
   50680:	f800283a 	ret

00050684 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   50684:	defffa04 	addi	sp,sp,-24
   50688:	dfc00515 	stw	ra,20(sp)
   5068c:	df000415 	stw	fp,16(sp)
   50690:	df000404 	addi	fp,sp,16
   50694:	e13ffd15 	stw	r4,-12(fp)
   50698:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   5069c:	e0bffd17 	ldw	r2,-12(fp)
   506a0:	10000326 	beq	r2,zero,506b0 <alt_dev_llist_insert+0x2c>
   506a4:	e0bffd17 	ldw	r2,-12(fp)
   506a8:	10800217 	ldw	r2,8(r2)
   506ac:	1000061e 	bne	r2,zero,506c8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   506b0:	00506480 	call	50648 <alt_get_errno>
   506b4:	1007883a 	mov	r3,r2
   506b8:	00800584 	movi	r2,22
   506bc:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   506c0:	00bffa84 	movi	r2,-22
   506c4:	00001406 	br	50718 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   506c8:	e0bffd17 	ldw	r2,-12(fp)
   506cc:	e0fffc17 	ldw	r3,-16(fp)
   506d0:	e0ffff15 	stw	r3,-4(fp)
   506d4:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   506d8:	e0bffe17 	ldw	r2,-8(fp)
   506dc:	e0ffff17 	ldw	r3,-4(fp)
   506e0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   506e4:	e0bfff17 	ldw	r2,-4(fp)
   506e8:	10c00017 	ldw	r3,0(r2)
   506ec:	e0bffe17 	ldw	r2,-8(fp)
   506f0:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   506f4:	e0bfff17 	ldw	r2,-4(fp)
   506f8:	10800017 	ldw	r2,0(r2)
   506fc:	e0fffe17 	ldw	r3,-8(fp)
   50700:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   50704:	e0bfff17 	ldw	r2,-4(fp)
   50708:	e0fffe17 	ldw	r3,-8(fp)
   5070c:	10c00015 	stw	r3,0(r2)
}
   50710:	0001883a 	nop

  return 0;  
   50714:	0005883a 	mov	r2,zero
}
   50718:	e037883a 	mov	sp,fp
   5071c:	dfc00117 	ldw	ra,4(sp)
   50720:	df000017 	ldw	fp,0(sp)
   50724:	dec00204 	addi	sp,sp,8
   50728:	f800283a 	ret

0005072c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   5072c:	defffd04 	addi	sp,sp,-12
   50730:	dfc00215 	stw	ra,8(sp)
   50734:	df000115 	stw	fp,4(sp)
   50738:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   5073c:	00800174 	movhi	r2,5
   50740:	1084ce04 	addi	r2,r2,4920
   50744:	e0bfff15 	stw	r2,-4(fp)
   50748:	00000606 	br	50764 <_do_ctors+0x38>
        (*ctor) (); 
   5074c:	e0bfff17 	ldw	r2,-4(fp)
   50750:	10800017 	ldw	r2,0(r2)
   50754:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   50758:	e0bfff17 	ldw	r2,-4(fp)
   5075c:	10bfff04 	addi	r2,r2,-4
   50760:	e0bfff15 	stw	r2,-4(fp)
   50764:	e0ffff17 	ldw	r3,-4(fp)
   50768:	00800174 	movhi	r2,5
   5076c:	1084cf04 	addi	r2,r2,4924
   50770:	18bff62e 	bgeu	r3,r2,5074c <_do_ctors+0x20>
}
   50774:	0001883a 	nop
   50778:	0001883a 	nop
   5077c:	e037883a 	mov	sp,fp
   50780:	dfc00117 	ldw	ra,4(sp)
   50784:	df000017 	ldw	fp,0(sp)
   50788:	dec00204 	addi	sp,sp,8
   5078c:	f800283a 	ret

00050790 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   50790:	defffd04 	addi	sp,sp,-12
   50794:	dfc00215 	stw	ra,8(sp)
   50798:	df000115 	stw	fp,4(sp)
   5079c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   507a0:	00800174 	movhi	r2,5
   507a4:	1084ce04 	addi	r2,r2,4920
   507a8:	e0bfff15 	stw	r2,-4(fp)
   507ac:	00000606 	br	507c8 <_do_dtors+0x38>
        (*dtor) (); 
   507b0:	e0bfff17 	ldw	r2,-4(fp)
   507b4:	10800017 	ldw	r2,0(r2)
   507b8:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   507bc:	e0bfff17 	ldw	r2,-4(fp)
   507c0:	10bfff04 	addi	r2,r2,-4
   507c4:	e0bfff15 	stw	r2,-4(fp)
   507c8:	e0ffff17 	ldw	r3,-4(fp)
   507cc:	00800174 	movhi	r2,5
   507d0:	1084cf04 	addi	r2,r2,4924
   507d4:	18bff62e 	bgeu	r3,r2,507b0 <_do_dtors+0x20>
}
   507d8:	0001883a 	nop
   507dc:	0001883a 	nop
   507e0:	e037883a 	mov	sp,fp
   507e4:	dfc00117 	ldw	ra,4(sp)
   507e8:	df000017 	ldw	fp,0(sp)
   507ec:	dec00204 	addi	sp,sp,8
   507f0:	f800283a 	ret

000507f4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   507f4:	defffe04 	addi	sp,sp,-8
   507f8:	dfc00115 	stw	ra,4(sp)
   507fc:	df000015 	stw	fp,0(sp)
   50800:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   50804:	01440004 	movi	r5,4096
   50808:	0009883a 	mov	r4,zero
   5080c:	005103c0 	call	5103c <alt_icache_flush>
#endif
}
   50810:	0001883a 	nop
   50814:	e037883a 	mov	sp,fp
   50818:	dfc00117 	ldw	ra,4(sp)
   5081c:	df000017 	ldw	fp,0(sp)
   50820:	dec00204 	addi	sp,sp,8
   50824:	f800283a 	ret

00050828 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   50828:	defffe04 	addi	sp,sp,-8
   5082c:	df000115 	stw	fp,4(sp)
   50830:	df000104 	addi	fp,sp,4
   50834:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   50838:	e0bfff17 	ldw	r2,-4(fp)
   5083c:	10bffe84 	addi	r2,r2,-6
   50840:	10c00428 	cmpgeui	r3,r2,16
   50844:	18c03fcc 	andi	r3,r3,255
   50848:	18000f1e 	bne	r3,zero,50888 <alt_exception_cause_generated_bad_addr+0x60>
   5084c:	00c00044 	movi	r3,1
   50850:	1884983a 	sll	r2,r3,r2
   50854:	10e2c8cc 	andi	r3,r2,35619
   50858:	1806c03a 	cmpne	r3,r3,zero
   5085c:	18c03fcc 	andi	r3,r3,255
   50860:	1800051e 	bne	r3,zero,50878 <alt_exception_cause_generated_bad_addr+0x50>
   50864:	1084100c 	andi	r2,r2,4160
   50868:	1004c03a 	cmpne	r2,r2,zero
   5086c:	10803fcc 	andi	r2,r2,255
   50870:	1000031e 	bne	r2,zero,50880 <alt_exception_cause_generated_bad_addr+0x58>
   50874:	00000406 	br	50888 <alt_exception_cause_generated_bad_addr+0x60>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   50878:	00800044 	movi	r2,1
   5087c:	00000306 	br	5088c <alt_exception_cause_generated_bad_addr+0x64>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   50880:	0005883a 	mov	r2,zero
   50884:	00000106 	br	5088c <alt_exception_cause_generated_bad_addr+0x64>

  default:
    return 0;
   50888:	0005883a 	mov	r2,zero
  }
}
   5088c:	e037883a 	mov	sp,fp
   50890:	df000017 	ldw	fp,0(sp)
   50894:	dec00104 	addi	sp,sp,4
   50898:	f800283a 	ret

0005089c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   5089c:	defff904 	addi	sp,sp,-28
   508a0:	dfc00615 	stw	ra,24(sp)
   508a4:	df000515 	stw	fp,20(sp)
   508a8:	df000504 	addi	fp,sp,20
   508ac:	e13ffe15 	stw	r4,-8(fp)
   508b0:	e17ffd15 	stw	r5,-12(fp)
   508b4:	e1bffc15 	stw	r6,-16(fp)
   508b8:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   508bc:	e1bffb17 	ldw	r6,-20(fp)
   508c0:	e17ffc17 	ldw	r5,-16(fp)
   508c4:	e13ffd17 	ldw	r4,-12(fp)
   508c8:	0050abc0 	call	50abc <open>
   508cc:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   508d0:	e0bfff17 	ldw	r2,-4(fp)
   508d4:	10001716 	blt	r2,zero,50934 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
   508d8:	e0bfff17 	ldw	r2,-4(fp)
   508dc:	10c00324 	muli	r3,r2,12
   508e0:	00800174 	movhi	r2,5
   508e4:	1885883a 	add	r2,r3,r2
   508e8:	10c8f317 	ldw	r3,9164(r2)
   508ec:	e0bffe17 	ldw	r2,-8(fp)
   508f0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   508f4:	e0bfff17 	ldw	r2,-4(fp)
   508f8:	10c00324 	muli	r3,r2,12
   508fc:	00800174 	movhi	r2,5
   50900:	1885883a 	add	r2,r3,r2
   50904:	10c8f417 	ldw	r3,9168(r2)
   50908:	e0bffe17 	ldw	r2,-8(fp)
   5090c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   50910:	e0bfff17 	ldw	r2,-4(fp)
   50914:	10c00324 	muli	r3,r2,12
   50918:	00800174 	movhi	r2,5
   5091c:	1885883a 	add	r2,r3,r2
   50920:	10c8f517 	ldw	r3,9172(r2)
   50924:	e0bffe17 	ldw	r2,-8(fp)
   50928:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   5092c:	e13fff17 	ldw	r4,-4(fp)
   50930:	004f47c0 	call	4f47c <alt_release_fd>
  }
} 
   50934:	0001883a 	nop
   50938:	e037883a 	mov	sp,fp
   5093c:	dfc00117 	ldw	ra,4(sp)
   50940:	df000017 	ldw	fp,0(sp)
   50944:	dec00204 	addi	sp,sp,8
   50948:	f800283a 	ret

0005094c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   5094c:	defffb04 	addi	sp,sp,-20
   50950:	dfc00415 	stw	ra,16(sp)
   50954:	df000315 	stw	fp,12(sp)
   50958:	df000304 	addi	fp,sp,12
   5095c:	e13fff15 	stw	r4,-4(fp)
   50960:	e17ffe15 	stw	r5,-8(fp)
   50964:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   50968:	01c07fc4 	movi	r7,511
   5096c:	01800044 	movi	r6,1
   50970:	e17fff17 	ldw	r5,-4(fp)
   50974:	01000174 	movhi	r4,5
   50978:	2108f604 	addi	r4,r4,9176
   5097c:	005089c0 	call	5089c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   50980:	01c07fc4 	movi	r7,511
   50984:	000d883a 	mov	r6,zero
   50988:	e17ffe17 	ldw	r5,-8(fp)
   5098c:	01000174 	movhi	r4,5
   50990:	2108f304 	addi	r4,r4,9164
   50994:	005089c0 	call	5089c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   50998:	01c07fc4 	movi	r7,511
   5099c:	01800044 	movi	r6,1
   509a0:	e17ffd17 	ldw	r5,-12(fp)
   509a4:	01000174 	movhi	r4,5
   509a8:	2108f904 	addi	r4,r4,9188
   509ac:	005089c0 	call	5089c <alt_open_fd>
}  
   509b0:	0001883a 	nop
   509b4:	e037883a 	mov	sp,fp
   509b8:	dfc00117 	ldw	ra,4(sp)
   509bc:	df000017 	ldw	fp,0(sp)
   509c0:	dec00204 	addi	sp,sp,8
   509c4:	f800283a 	ret

000509c8 <alt_get_errno>:
{
   509c8:	defffe04 	addi	sp,sp,-8
   509cc:	dfc00115 	stw	ra,4(sp)
   509d0:	df000015 	stw	fp,0(sp)
   509d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   509d8:	d0a00917 	ldw	r2,-32732(gp)
   509dc:	10000326 	beq	r2,zero,509ec <alt_get_errno+0x24>
   509e0:	d0a00917 	ldw	r2,-32732(gp)
   509e4:	103ee83a 	callr	r2
   509e8:	00000106 	br	509f0 <alt_get_errno+0x28>
   509ec:	d0a70d04 	addi	r2,gp,-25548
}
   509f0:	e037883a 	mov	sp,fp
   509f4:	dfc00117 	ldw	ra,4(sp)
   509f8:	df000017 	ldw	fp,0(sp)
   509fc:	dec00204 	addi	sp,sp,8
   50a00:	f800283a 	ret

00050a04 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   50a04:	defffd04 	addi	sp,sp,-12
   50a08:	df000215 	stw	fp,8(sp)
   50a0c:	df000204 	addi	fp,sp,8
   50a10:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   50a14:	e0bffe17 	ldw	r2,-8(fp)
   50a18:	10800217 	ldw	r2,8(r2)
   50a1c:	10d00034 	orhi	r3,r2,16384
   50a20:	e0bffe17 	ldw	r2,-8(fp)
   50a24:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   50a28:	e03fff15 	stw	zero,-4(fp)
   50a2c:	00001a06 	br	50a98 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   50a30:	e0bfff17 	ldw	r2,-4(fp)
   50a34:	10c00324 	muli	r3,r2,12
   50a38:	00800174 	movhi	r2,5
   50a3c:	1885883a 	add	r2,r3,r2
   50a40:	10c8f317 	ldw	r3,9164(r2)
   50a44:	e0bffe17 	ldw	r2,-8(fp)
   50a48:	10800017 	ldw	r2,0(r2)
   50a4c:	18800f1e 	bne	r3,r2,50a8c <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   50a50:	e0bfff17 	ldw	r2,-4(fp)
   50a54:	10c00324 	muli	r3,r2,12
   50a58:	00800174 	movhi	r2,5
   50a5c:	1885883a 	add	r2,r3,r2
   50a60:	1088f517 	ldw	r2,9172(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
   50a64:	1000090e 	bge	r2,zero,50a8c <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
   50a68:	e0bfff17 	ldw	r2,-4(fp)
   50a6c:	10c00324 	muli	r3,r2,12
   50a70:	00800174 	movhi	r2,5
   50a74:	1088f304 	addi	r2,r2,9164
   50a78:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   50a7c:	e0fffe17 	ldw	r3,-8(fp)
   50a80:	18800226 	beq	r3,r2,50a8c <alt_file_locked+0x88>
    {
      return -EACCES;
   50a84:	00bffcc4 	movi	r2,-13
   50a88:	00000806 	br	50aac <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
   50a8c:	e0bfff17 	ldw	r2,-4(fp)
   50a90:	10800044 	addi	r2,r2,1
   50a94:	e0bfff15 	stw	r2,-4(fp)
   50a98:	d0a00817 	ldw	r2,-32736(gp)
   50a9c:	1007883a 	mov	r3,r2
   50aa0:	e0bfff17 	ldw	r2,-4(fp)
   50aa4:	18bfe22e 	bgeu	r3,r2,50a30 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   50aa8:	0005883a 	mov	r2,zero
}
   50aac:	e037883a 	mov	sp,fp
   50ab0:	df000017 	ldw	fp,0(sp)
   50ab4:	dec00104 	addi	sp,sp,4
   50ab8:	f800283a 	ret

00050abc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   50abc:	defff604 	addi	sp,sp,-40
   50ac0:	dfc00915 	stw	ra,36(sp)
   50ac4:	df000815 	stw	fp,32(sp)
   50ac8:	df000804 	addi	fp,sp,32
   50acc:	e13ffa15 	stw	r4,-24(fp)
   50ad0:	e17ff915 	stw	r5,-28(fp)
   50ad4:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   50ad8:	00bfffc4 	movi	r2,-1
   50adc:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   50ae0:	00bffb44 	movi	r2,-19
   50ae4:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   50ae8:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   50aec:	d1600604 	addi	r5,gp,-32744
   50af0:	e13ffa17 	ldw	r4,-24(fp)
   50af4:	0050e040 	call	50e04 <alt_find_dev>
   50af8:	e0bfff15 	stw	r2,-4(fp)
   50afc:	e0bfff17 	ldw	r2,-4(fp)
   50b00:	1000051e 	bne	r2,zero,50b18 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   50b04:	e13ffa17 	ldw	r4,-24(fp)
   50b08:	0050e940 	call	50e94 <alt_find_file>
   50b0c:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   50b10:	00800044 	movi	r2,1
   50b14:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   50b18:	e0bfff17 	ldw	r2,-4(fp)
   50b1c:	10002926 	beq	r2,zero,50bc4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   50b20:	e13fff17 	ldw	r4,-4(fp)
   50b24:	0050f9c0 	call	50f9c <alt_get_fd>
   50b28:	e0bffe15 	stw	r2,-8(fp)
   50b2c:	e0bffe17 	ldw	r2,-8(fp)
   50b30:	1000030e 	bge	r2,zero,50b40 <open+0x84>
    {
      status = index;
   50b34:	e0bffe17 	ldw	r2,-8(fp)
   50b38:	e0bffd15 	stw	r2,-12(fp)
   50b3c:	00002306 	br	50bcc <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   50b40:	e0bffe17 	ldw	r2,-8(fp)
   50b44:	10c00324 	muli	r3,r2,12
   50b48:	00800174 	movhi	r2,5
   50b4c:	1088f304 	addi	r2,r2,9164
   50b50:	1885883a 	add	r2,r3,r2
   50b54:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   50b58:	e0fff917 	ldw	r3,-28(fp)
   50b5c:	00900034 	movhi	r2,16384
   50b60:	10bfffc4 	addi	r2,r2,-1
   50b64:	1886703a 	and	r3,r3,r2
   50b68:	e0bffb17 	ldw	r2,-20(fp)
   50b6c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   50b70:	e0bffc17 	ldw	r2,-16(fp)
   50b74:	1000051e 	bne	r2,zero,50b8c <open+0xd0>
   50b78:	e13ffb17 	ldw	r4,-20(fp)
   50b7c:	0050a040 	call	50a04 <alt_file_locked>
   50b80:	e0bffd15 	stw	r2,-12(fp)
   50b84:	e0bffd17 	ldw	r2,-12(fp)
   50b88:	10001016 	blt	r2,zero,50bcc <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   50b8c:	e0bfff17 	ldw	r2,-4(fp)
   50b90:	10800317 	ldw	r2,12(r2)
   50b94:	10000826 	beq	r2,zero,50bb8 <open+0xfc>
   50b98:	e0bfff17 	ldw	r2,-4(fp)
   50b9c:	10800317 	ldw	r2,12(r2)
   50ba0:	e1fff817 	ldw	r7,-32(fp)
   50ba4:	e1bff917 	ldw	r6,-28(fp)
   50ba8:	e17ffa17 	ldw	r5,-24(fp)
   50bac:	e13ffb17 	ldw	r4,-20(fp)
   50bb0:	103ee83a 	callr	r2
   50bb4:	00000106 	br	50bbc <open+0x100>
   50bb8:	0005883a 	mov	r2,zero
   50bbc:	e0bffd15 	stw	r2,-12(fp)
   50bc0:	00000206 	br	50bcc <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   50bc4:	00bffb44 	movi	r2,-19
   50bc8:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   50bcc:	e0bffd17 	ldw	r2,-12(fp)
   50bd0:	1000090e 	bge	r2,zero,50bf8 <open+0x13c>
  {
    alt_release_fd (index);  
   50bd4:	e13ffe17 	ldw	r4,-8(fp)
   50bd8:	004f47c0 	call	4f47c <alt_release_fd>
    ALT_ERRNO = -status;
   50bdc:	00509c80 	call	509c8 <alt_get_errno>
   50be0:	1007883a 	mov	r3,r2
   50be4:	e0bffd17 	ldw	r2,-12(fp)
   50be8:	0085c83a 	sub	r2,zero,r2
   50bec:	18800015 	stw	r2,0(r3)
    return -1;
   50bf0:	00bfffc4 	movi	r2,-1
   50bf4:	00000106 	br	50bfc <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   50bf8:	e0bffe17 	ldw	r2,-8(fp)
}
   50bfc:	e037883a 	mov	sp,fp
   50c00:	dfc00117 	ldw	ra,4(sp)
   50c04:	df000017 	ldw	fp,0(sp)
   50c08:	dec00204 	addi	sp,sp,8
   50c0c:	f800283a 	ret

00050c10 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   50c10:	defffa04 	addi	sp,sp,-24
   50c14:	df000515 	stw	fp,20(sp)
   50c18:	df000504 	addi	fp,sp,20
   50c1c:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   50c20:	0005303a 	rdctl	r2,status
   50c24:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50c28:	e0fffc17 	ldw	r3,-16(fp)
   50c2c:	00bfff84 	movi	r2,-2
   50c30:	1884703a 	and	r2,r3,r2
   50c34:	1001703a 	wrctl	status,r2
  return context;
   50c38:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   50c3c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   50c40:	e0bffb17 	ldw	r2,-20(fp)
   50c44:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   50c48:	e0bffd17 	ldw	r2,-12(fp)
   50c4c:	10800017 	ldw	r2,0(r2)
   50c50:	e0fffd17 	ldw	r3,-12(fp)
   50c54:	18c00117 	ldw	r3,4(r3)
   50c58:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   50c5c:	e0bffd17 	ldw	r2,-12(fp)
   50c60:	10800117 	ldw	r2,4(r2)
   50c64:	e0fffd17 	ldw	r3,-12(fp)
   50c68:	18c00017 	ldw	r3,0(r3)
   50c6c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   50c70:	e0bffd17 	ldw	r2,-12(fp)
   50c74:	e0fffd17 	ldw	r3,-12(fp)
   50c78:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   50c7c:	e0bffd17 	ldw	r2,-12(fp)
   50c80:	e0fffd17 	ldw	r3,-12(fp)
   50c84:	10c00015 	stw	r3,0(r2)
} 
   50c88:	0001883a 	nop
   50c8c:	e0bfff17 	ldw	r2,-4(fp)
   50c90:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   50c94:	e0bffe17 	ldw	r2,-8(fp)
   50c98:	1001703a 	wrctl	status,r2
}
   50c9c:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   50ca0:	0001883a 	nop
   50ca4:	e037883a 	mov	sp,fp
   50ca8:	df000017 	ldw	fp,0(sp)
   50cac:	dec00104 	addi	sp,sp,4
   50cb0:	f800283a 	ret

00050cb4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   50cb4:	defff904 	addi	sp,sp,-28
   50cb8:	dfc00615 	stw	ra,24(sp)
   50cbc:	df000515 	stw	fp,20(sp)
   50cc0:	dc400415 	stw	r17,16(sp)
   50cc4:	dc000315 	stw	r16,12(sp)
   50cc8:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   50ccc:	d0a00c17 	ldw	r2,-32720(gp)
   50cd0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   50cd4:	d1271517 	ldw	r4,-25516(gp)
   50cd8:	d1671617 	ldw	r5,-25512(gp)
   50cdc:	01800044 	movi	r6,1
   50ce0:	000f883a 	mov	r7,zero
   50ce4:	2185883a 	add	r2,r4,r6
   50ce8:	1111803a 	cmpltu	r8,r2,r4
   50cec:	29c7883a 	add	r3,r5,r7
   50cf0:	40c9883a 	add	r4,r8,r3
   50cf4:	2007883a 	mov	r3,r4
   50cf8:	1009883a 	mov	r4,r2
   50cfc:	180b883a 	mov	r5,r3
   50d00:	d1271515 	stw	r4,-25516(gp)
   50d04:	d1671615 	stw	r5,-25512(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   50d08:	00002906 	br	50db0 <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
   50d0c:	e0bffd17 	ldw	r2,-12(fp)
   50d10:	10800017 	ldw	r2,0(r2)
   50d14:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
   50d18:	e13ffd17 	ldw	r4,-12(fp)
   50d1c:	20800217 	ldw	r2,8(r4)
   50d20:	20c00317 	ldw	r3,12(r4)
   50d24:	d1271517 	ldw	r4,-25516(gp)
   50d28:	d1671617 	ldw	r5,-25512(gp)
   50d2c:	28c01e36 	bltu	r5,r3,50da8 <alt_tick+0xf4>
   50d30:	1940011e 	bne	r3,r5,50d38 <alt_tick+0x84>
   50d34:	20801c36 	bltu	r4,r2,50da8 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
   50d38:	e0bffd17 	ldw	r2,-12(fp)
   50d3c:	10800417 	ldw	r2,16(r2)
   50d40:	e0fffd17 	ldw	r3,-12(fp)
   50d44:	18c00517 	ldw	r3,20(r3)
   50d48:	1809883a 	mov	r4,r3
   50d4c:	103ee83a 	callr	r2
   50d50:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   50d54:	e0bffb17 	ldw	r2,-20(fp)
   50d58:	1000031e 	bne	r2,zero,50d68 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
   50d5c:	e13ffd17 	ldw	r4,-12(fp)
   50d60:	0050c100 	call	50c10 <alt_alarm_stop>
   50d64:	00001006 	br	50da8 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
   50d68:	e0bffd17 	ldw	r2,-12(fp)
   50d6c:	11000217 	ldw	r4,8(r2)
   50d70:	11400317 	ldw	r5,12(r2)
   50d74:	e0bffb17 	ldw	r2,-20(fp)
   50d78:	1021883a 	mov	r16,r2
   50d7c:	0023883a 	mov	r17,zero
   50d80:	2405883a 	add	r2,r4,r16
   50d84:	110d803a 	cmpltu	r6,r2,r4
   50d88:	2c47883a 	add	r3,r5,r17
   50d8c:	30c9883a 	add	r4,r6,r3
   50d90:	2007883a 	mov	r3,r4
   50d94:	1009883a 	mov	r4,r2
   50d98:	180b883a 	mov	r5,r3
   50d9c:	e0bffd17 	ldw	r2,-12(fp)
   50da0:	11000215 	stw	r4,8(r2)
   50da4:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
   50da8:	e0bffc17 	ldw	r2,-16(fp)
   50dac:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   50db0:	e0fffd17 	ldw	r3,-12(fp)
   50db4:	d0a00c04 	addi	r2,gp,-32720
   50db8:	18bfd41e 	bne	r3,r2,50d0c <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   50dbc:	0001883a 	nop
}
   50dc0:	0001883a 	nop
   50dc4:	e6fffe04 	addi	sp,fp,-8
   50dc8:	dfc00317 	ldw	ra,12(sp)
   50dcc:	df000217 	ldw	fp,8(sp)
   50dd0:	dc400117 	ldw	r17,4(sp)
   50dd4:	dc000017 	ldw	r16,0(sp)
   50dd8:	dec00404 	addi	sp,sp,16
   50ddc:	f800283a 	ret

00050de0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   50de0:	deffff04 	addi	sp,sp,-4
   50de4:	df000015 	stw	fp,0(sp)
   50de8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   50dec:	000170fa 	wrctl	ienable,zero
}
   50df0:	0001883a 	nop
   50df4:	e037883a 	mov	sp,fp
   50df8:	df000017 	ldw	fp,0(sp)
   50dfc:	dec00104 	addi	sp,sp,4
   50e00:	f800283a 	ret

00050e04 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   50e04:	defffa04 	addi	sp,sp,-24
   50e08:	dfc00515 	stw	ra,20(sp)
   50e0c:	df000415 	stw	fp,16(sp)
   50e10:	df000404 	addi	fp,sp,16
   50e14:	e13ffd15 	stw	r4,-12(fp)
   50e18:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   50e1c:	e0bffc17 	ldw	r2,-16(fp)
   50e20:	10800017 	ldw	r2,0(r2)
   50e24:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   50e28:	e13ffd17 	ldw	r4,-12(fp)
   50e2c:	00419c40 	call	419c4 <strlen>
   50e30:	10800044 	addi	r2,r2,1
   50e34:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   50e38:	00000d06 	br	50e70 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   50e3c:	e0bfff17 	ldw	r2,-4(fp)
   50e40:	10800217 	ldw	r2,8(r2)
   50e44:	e0fffe17 	ldw	r3,-8(fp)
   50e48:	180d883a 	mov	r6,r3
   50e4c:	e17ffd17 	ldw	r5,-12(fp)
   50e50:	1009883a 	mov	r4,r2
   50e54:	00511140 	call	51114 <memcmp>
   50e58:	1000021e 	bne	r2,zero,50e64 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   50e5c:	e0bfff17 	ldw	r2,-4(fp)
   50e60:	00000706 	br	50e80 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   50e64:	e0bfff17 	ldw	r2,-4(fp)
   50e68:	10800017 	ldw	r2,0(r2)
   50e6c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   50e70:	e0ffff17 	ldw	r3,-4(fp)
   50e74:	e0bffc17 	ldw	r2,-16(fp)
   50e78:	18bff01e 	bne	r3,r2,50e3c <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   50e7c:	0005883a 	mov	r2,zero
}
   50e80:	e037883a 	mov	sp,fp
   50e84:	dfc00117 	ldw	ra,4(sp)
   50e88:	df000017 	ldw	fp,0(sp)
   50e8c:	dec00204 	addi	sp,sp,8
   50e90:	f800283a 	ret

00050e94 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   50e94:	defffb04 	addi	sp,sp,-20
   50e98:	dfc00415 	stw	ra,16(sp)
   50e9c:	df000315 	stw	fp,12(sp)
   50ea0:	df000304 	addi	fp,sp,12
   50ea4:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   50ea8:	d0a00417 	ldw	r2,-32752(gp)
   50eac:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   50eb0:	00003106 	br	50f78 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   50eb4:	e0bfff17 	ldw	r2,-4(fp)
   50eb8:	10800217 	ldw	r2,8(r2)
   50ebc:	1009883a 	mov	r4,r2
   50ec0:	00419c40 	call	419c4 <strlen>
   50ec4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   50ec8:	e0bfff17 	ldw	r2,-4(fp)
   50ecc:	10c00217 	ldw	r3,8(r2)
   50ed0:	e0bffe17 	ldw	r2,-8(fp)
   50ed4:	10bfffc4 	addi	r2,r2,-1
   50ed8:	1885883a 	add	r2,r3,r2
   50edc:	10800003 	ldbu	r2,0(r2)
   50ee0:	10803fcc 	andi	r2,r2,255
   50ee4:	1080201c 	xori	r2,r2,128
   50ee8:	10bfe004 	addi	r2,r2,-128
   50eec:	10800bd8 	cmpnei	r2,r2,47
   50ef0:	1000031e 	bne	r2,zero,50f00 <alt_find_file+0x6c>
    {
      len -= 1;
   50ef4:	e0bffe17 	ldw	r2,-8(fp)
   50ef8:	10bfffc4 	addi	r2,r2,-1
   50efc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   50f00:	e0bffe17 	ldw	r2,-8(fp)
   50f04:	e0fffd17 	ldw	r3,-12(fp)
   50f08:	1885883a 	add	r2,r3,r2
   50f0c:	10800003 	ldbu	r2,0(r2)
   50f10:	10803fcc 	andi	r2,r2,255
   50f14:	1080201c 	xori	r2,r2,128
   50f18:	10bfe004 	addi	r2,r2,-128
   50f1c:	10800be0 	cmpeqi	r2,r2,47
   50f20:	1000081e 	bne	r2,zero,50f44 <alt_find_file+0xb0>
   50f24:	e0bffe17 	ldw	r2,-8(fp)
   50f28:	e0fffd17 	ldw	r3,-12(fp)
   50f2c:	1885883a 	add	r2,r3,r2
   50f30:	10800003 	ldbu	r2,0(r2)
   50f34:	10803fcc 	andi	r2,r2,255
   50f38:	1080201c 	xori	r2,r2,128
   50f3c:	10bfe004 	addi	r2,r2,-128
   50f40:	10000a1e 	bne	r2,zero,50f6c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   50f44:	e0bfff17 	ldw	r2,-4(fp)
   50f48:	10800217 	ldw	r2,8(r2)
   50f4c:	e0fffe17 	ldw	r3,-8(fp)
   50f50:	180d883a 	mov	r6,r3
   50f54:	e17ffd17 	ldw	r5,-12(fp)
   50f58:	1009883a 	mov	r4,r2
   50f5c:	00511140 	call	51114 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   50f60:	1000021e 	bne	r2,zero,50f6c <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   50f64:	e0bfff17 	ldw	r2,-4(fp)
   50f68:	00000706 	br	50f88 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   50f6c:	e0bfff17 	ldw	r2,-4(fp)
   50f70:	10800017 	ldw	r2,0(r2)
   50f74:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   50f78:	e0ffff17 	ldw	r3,-4(fp)
   50f7c:	d0a00404 	addi	r2,gp,-32752
   50f80:	18bfcc1e 	bne	r3,r2,50eb4 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   50f84:	0005883a 	mov	r2,zero
}
   50f88:	e037883a 	mov	sp,fp
   50f8c:	dfc00117 	ldw	ra,4(sp)
   50f90:	df000017 	ldw	fp,0(sp)
   50f94:	dec00204 	addi	sp,sp,8
   50f98:	f800283a 	ret

00050f9c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   50f9c:	defffc04 	addi	sp,sp,-16
   50fa0:	df000315 	stw	fp,12(sp)
   50fa4:	df000304 	addi	fp,sp,12
   50fa8:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   50fac:	00bffa04 	movi	r2,-24
   50fb0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   50fb4:	e03fff15 	stw	zero,-4(fp)
   50fb8:	00001706 	br	51018 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
   50fbc:	e0bfff17 	ldw	r2,-4(fp)
   50fc0:	10c00324 	muli	r3,r2,12
   50fc4:	00800174 	movhi	r2,5
   50fc8:	1885883a 	add	r2,r3,r2
   50fcc:	1088f317 	ldw	r2,9164(r2)
   50fd0:	10000e1e 	bne	r2,zero,5100c <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
   50fd4:	e0bfff17 	ldw	r2,-4(fp)
   50fd8:	11000324 	muli	r4,r2,12
   50fdc:	e0fffd17 	ldw	r3,-12(fp)
   50fe0:	00800174 	movhi	r2,5
   50fe4:	2085883a 	add	r2,r4,r2
   50fe8:	10c8f315 	stw	r3,9164(r2)
      if (i > alt_max_fd)
   50fec:	d0e00817 	ldw	r3,-32736(gp)
   50ff0:	e0bfff17 	ldw	r2,-4(fp)
   50ff4:	1880020e 	bge	r3,r2,51000 <alt_get_fd+0x64>
      {
        alt_max_fd = i;
   50ff8:	e0bfff17 	ldw	r2,-4(fp)
   50ffc:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   51000:	e0bfff17 	ldw	r2,-4(fp)
   51004:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   51008:	00000706 	br	51028 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
   5100c:	e0bfff17 	ldw	r2,-4(fp)
   51010:	10800044 	addi	r2,r2,1
   51014:	e0bfff15 	stw	r2,-4(fp)
   51018:	e0bfff17 	ldw	r2,-4(fp)
   5101c:	10800810 	cmplti	r2,r2,32
   51020:	103fe61e 	bne	r2,zero,50fbc <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   51024:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   51028:	e0bffe17 	ldw	r2,-8(fp)
}
   5102c:	e037883a 	mov	sp,fp
   51030:	df000017 	ldw	fp,0(sp)
   51034:	dec00104 	addi	sp,sp,4
   51038:	f800283a 	ret

0005103c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   5103c:	defffb04 	addi	sp,sp,-20
   51040:	df000415 	stw	fp,16(sp)
   51044:	df000404 	addi	fp,sp,16
   51048:	e13ffd15 	stw	r4,-12(fp)
   5104c:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   51050:	e0bffc17 	ldw	r2,-16(fp)
   51054:	10840070 	cmpltui	r2,r2,4097
   51058:	1000021e 	bne	r2,zero,51064 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   5105c:	00840004 	movi	r2,4096
   51060:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
   51064:	e0fffd17 	ldw	r3,-12(fp)
   51068:	e0bffc17 	ldw	r2,-16(fp)
   5106c:	1885883a 	add	r2,r3,r2
   51070:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   51074:	e0bffd17 	ldw	r2,-12(fp)
   51078:	e0bfff15 	stw	r2,-4(fp)
   5107c:	00000506 	br	51094 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   51080:	e0bfff17 	ldw	r2,-4(fp)
   51084:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   51088:	e0bfff17 	ldw	r2,-4(fp)
   5108c:	10800804 	addi	r2,r2,32
   51090:	e0bfff15 	stw	r2,-4(fp)
   51094:	e0ffff17 	ldw	r3,-4(fp)
   51098:	e0bffe17 	ldw	r2,-8(fp)
   5109c:	18bff836 	bltu	r3,r2,51080 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   510a0:	e0bffd17 	ldw	r2,-12(fp)
   510a4:	108007cc 	andi	r2,r2,31
   510a8:	10000226 	beq	r2,zero,510b4 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   510ac:	e0bfff17 	ldw	r2,-4(fp)
   510b0:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   510b4:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   510b8:	0001883a 	nop
   510bc:	e037883a 	mov	sp,fp
   510c0:	df000017 	ldw	fp,0(sp)
   510c4:	dec00104 	addi	sp,sp,4
   510c8:	f800283a 	ret

000510cc <atexit>:
   510cc:	200b883a 	mov	r5,r4
   510d0:	000f883a 	mov	r7,zero
   510d4:	000d883a 	mov	r6,zero
   510d8:	0009883a 	mov	r4,zero
   510dc:	005118c1 	jmpi	5118c <__register_exitproc>

000510e0 <exit>:
   510e0:	defffe04 	addi	sp,sp,-8
   510e4:	000b883a 	mov	r5,zero
   510e8:	dc000015 	stw	r16,0(sp)
   510ec:	dfc00115 	stw	ra,4(sp)
   510f0:	2021883a 	mov	r16,r4
   510f4:	005121c0 	call	5121c <__call_exitprocs>
   510f8:	00800174 	movhi	r2,5
   510fc:	110d6b17 	ldw	r4,13740(r2)
   51100:	20800f17 	ldw	r2,60(r4)
   51104:	10000126 	beq	r2,zero,5110c <exit+0x2c>
   51108:	103ee83a 	callr	r2
   5110c:	8009883a 	mov	r4,r16
   51110:	004ea980 	call	4ea98 <_exit>

00051114 <memcmp>:
   51114:	30800128 	cmpgeui	r2,r6,4
   51118:	10000d26 	beq	r2,zero,51150 <memcmp+0x3c>
   5111c:	2144b03a 	or	r2,r4,r5
   51120:	108000cc 	andi	r2,r2,3
   51124:	10000726 	beq	r2,zero,51144 <memcmp+0x30>
   51128:	30bfffc4 	addi	r2,r6,-1
   5112c:	00000a06 	br	51158 <memcmp+0x44>
   51130:	31bfff04 	addi	r6,r6,-4
   51134:	30800128 	cmpgeui	r2,r6,4
   51138:	21000104 	addi	r4,r4,4
   5113c:	29400104 	addi	r5,r5,4
   51140:	10000326 	beq	r2,zero,51150 <memcmp+0x3c>
   51144:	20c00017 	ldw	r3,0(r4)
   51148:	28800017 	ldw	r2,0(r5)
   5114c:	18bff826 	beq	r3,r2,51130 <memcmp+0x1c>
   51150:	30bfffc4 	addi	r2,r6,-1
   51154:	30000b26 	beq	r6,zero,51184 <memcmp+0x70>
   51158:	11800044 	addi	r6,r2,1
   5115c:	218d883a 	add	r6,r4,r6
   51160:	00000106 	br	51168 <memcmp+0x54>
   51164:	21800726 	beq	r4,r6,51184 <memcmp+0x70>
   51168:	20800003 	ldbu	r2,0(r4)
   5116c:	28c00003 	ldbu	r3,0(r5)
   51170:	21000044 	addi	r4,r4,1
   51174:	29400044 	addi	r5,r5,1
   51178:	10fffa26 	beq	r2,r3,51164 <memcmp+0x50>
   5117c:	10c5c83a 	sub	r2,r2,r3
   51180:	f800283a 	ret
   51184:	0005883a 	mov	r2,zero
   51188:	f800283a 	ret

0005118c <__register_exitproc>:
   5118c:	00800174 	movhi	r2,5
   51190:	10cd6b17 	ldw	r3,13740(r2)
   51194:	18805217 	ldw	r2,328(r3)
   51198:	10001726 	beq	r2,zero,511f8 <__register_exitproc+0x6c>
   5119c:	10c00117 	ldw	r3,4(r2)
   511a0:	1a000808 	cmpgei	r8,r3,32
   511a4:	40001b1e 	bne	r8,zero,51214 <__register_exitproc+0x88>
   511a8:	20000b26 	beq	r4,zero,511d8 <__register_exitproc+0x4c>
   511ac:	181090ba 	slli	r8,r3,2
   511b0:	02400044 	movi	r9,1
   511b4:	48d2983a 	sll	r9,r9,r3
   511b8:	1211883a 	add	r8,r2,r8
   511bc:	41802215 	stw	r6,136(r8)
   511c0:	11806217 	ldw	r6,392(r2)
   511c4:	21000098 	cmpnei	r4,r4,2
   511c8:	324cb03a 	or	r6,r6,r9
   511cc:	11806215 	stw	r6,392(r2)
   511d0:	41c04215 	stw	r7,264(r8)
   511d4:	20000b26 	beq	r4,zero,51204 <__register_exitproc+0x78>
   511d8:	19000084 	addi	r4,r3,2
   511dc:	200890ba 	slli	r4,r4,2
   511e0:	18c00044 	addi	r3,r3,1
   511e4:	10c00115 	stw	r3,4(r2)
   511e8:	1105883a 	add	r2,r2,r4
   511ec:	11400015 	stw	r5,0(r2)
   511f0:	0005883a 	mov	r2,zero
   511f4:	f800283a 	ret
   511f8:	18805304 	addi	r2,r3,332
   511fc:	18805215 	stw	r2,328(r3)
   51200:	003fe606 	br	5119c <__register_exitproc+0x10>
   51204:	11006317 	ldw	r4,396(r2)
   51208:	2248b03a 	or	r4,r4,r9
   5120c:	11006315 	stw	r4,396(r2)
   51210:	003ff106 	br	511d8 <__register_exitproc+0x4c>
   51214:	00bfffc4 	movi	r2,-1
   51218:	f800283a 	ret

0005121c <__call_exitprocs>:
   5121c:	defff704 	addi	sp,sp,-36
   51220:	00800174 	movhi	r2,5
   51224:	dcc00315 	stw	r19,12(sp)
   51228:	14cd6b17 	ldw	r19,13740(r2)
   5122c:	dc800215 	stw	r18,8(sp)
   51230:	dfc00815 	stw	ra,32(sp)
   51234:	9c805217 	ldw	r18,328(r19)
   51238:	ddc00715 	stw	r23,28(sp)
   5123c:	dd800615 	stw	r22,24(sp)
   51240:	dd400515 	stw	r21,20(sp)
   51244:	dd000415 	stw	r20,16(sp)
   51248:	dc400115 	stw	r17,4(sp)
   5124c:	dc000015 	stw	r16,0(sp)
   51250:	90001026 	beq	r18,zero,51294 <__call_exitprocs+0x78>
   51254:	202b883a 	mov	r21,r4
   51258:	282d883a 	mov	r22,r5
   5125c:	05000044 	movi	r20,1
   51260:	94000117 	ldw	r16,4(r18)
   51264:	847fffc4 	addi	r17,r16,-1
   51268:	88000a16 	blt	r17,zero,51294 <__call_exitprocs+0x78>
   5126c:	84000044 	addi	r16,r16,1
   51270:	802090ba 	slli	r16,r16,2
   51274:	9421883a 	add	r16,r18,r16
   51278:	b0001126 	beq	r22,zero,512c0 <__call_exitprocs+0xa4>
   5127c:	80804017 	ldw	r2,256(r16)
   51280:	15800f26 	beq	r2,r22,512c0 <__call_exitprocs+0xa4>
   51284:	8c7fffc4 	addi	r17,r17,-1
   51288:	88bfffd8 	cmpnei	r2,r17,-1
   5128c:	843fff04 	addi	r16,r16,-4
   51290:	103ff91e 	bne	r2,zero,51278 <__call_exitprocs+0x5c>
   51294:	dfc00817 	ldw	ra,32(sp)
   51298:	ddc00717 	ldw	r23,28(sp)
   5129c:	dd800617 	ldw	r22,24(sp)
   512a0:	dd400517 	ldw	r21,20(sp)
   512a4:	dd000417 	ldw	r20,16(sp)
   512a8:	dcc00317 	ldw	r19,12(sp)
   512ac:	dc800217 	ldw	r18,8(sp)
   512b0:	dc400117 	ldw	r17,4(sp)
   512b4:	dc000017 	ldw	r16,0(sp)
   512b8:	dec00904 	addi	sp,sp,36
   512bc:	f800283a 	ret
   512c0:	90800117 	ldw	r2,4(r18)
   512c4:	81800017 	ldw	r6,0(r16)
   512c8:	10bfffc4 	addi	r2,r2,-1
   512cc:	14401726 	beq	r2,r17,5132c <__call_exitprocs+0x110>
   512d0:	80000015 	stw	zero,0(r16)
   512d4:	303feb26 	beq	r6,zero,51284 <__call_exitprocs+0x68>
   512d8:	a446983a 	sll	r3,r20,r17
   512dc:	90806217 	ldw	r2,392(r18)
   512e0:	95c00117 	ldw	r23,4(r18)
   512e4:	1884703a 	and	r2,r3,r2
   512e8:	1000081e 	bne	r2,zero,5130c <__call_exitprocs+0xf0>
   512ec:	303ee83a 	callr	r6
   512f0:	90c00117 	ldw	r3,4(r18)
   512f4:	98805217 	ldw	r2,328(r19)
   512f8:	1dc0011e 	bne	r3,r23,51300 <__call_exitprocs+0xe4>
   512fc:	14bfe126 	beq	r2,r18,51284 <__call_exitprocs+0x68>
   51300:	103fe426 	beq	r2,zero,51294 <__call_exitprocs+0x78>
   51304:	1025883a 	mov	r18,r2
   51308:	003fd506 	br	51260 <__call_exitprocs+0x44>
   5130c:	90806317 	ldw	r2,396(r18)
   51310:	81002017 	ldw	r4,128(r16)
   51314:	1886703a 	and	r3,r3,r2
   51318:	1800061e 	bne	r3,zero,51334 <__call_exitprocs+0x118>
   5131c:	200b883a 	mov	r5,r4
   51320:	a809883a 	mov	r4,r21
   51324:	303ee83a 	callr	r6
   51328:	003ff106 	br	512f0 <__call_exitprocs+0xd4>
   5132c:	94400115 	stw	r17,4(r18)
   51330:	003fe806 	br	512d4 <__call_exitprocs+0xb8>
   51334:	303ee83a 	callr	r6
   51338:	003fed06 	br	512f0 <__call_exitprocs+0xd4>
