
i2c_test.elf:     file format elf32-littlenios2
i2c_test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040238

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x000118fc memsz 0x000118fc flags r-x
    LOAD off    0x0001291c vaddr 0x0005191c paddr 0x000534f4 align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x000000cc vaddr 0x000550cc paddr 0x000550cc align 2**12
         filesz 0x00000000 memsz 0x00000168 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010ff0  00040238  00040238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006f4  00051228  00051228  00012228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  0005191c  000534f4  0001291c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  000550cc  000550cc  000150cc  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_mem   00000000  00055234  00055234  000144f4  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  000144f4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001190  00000000  00000000  00014528  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002e84f  00000000  00000000  000156b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000c905  00000000  00000000  00043f07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00012201  00000000  00000000  0005080c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002754  00000000  00000000  00062a10  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00002a56  00000000  00000000  00065164  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_alt_sim_info 00000060  00000000  00000000  00067bbc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000070  00000000  00000000  00067c20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line_str 000021d9  00000000  00000000  00067c90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_loclists 00016281  00000000  00000000  00069e69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 00001989  00000000  00000000  000800ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .thread_model 00000003  00000000  00000000  000850fa  2**0
                  CONTENTS, READONLY
 20 .cpu          00000003  00000000  00000000  000850fd  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  00085100  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  00085101  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   0000000b  00000000  00000000  00085102  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    0000000b  00000000  00000000  0008510d  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   0000000b  00000000  00000000  00085118  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 0000000c  00000000  00000000  00085123  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 00000035  00000000  00000000  0008512f  2**0
                  CONTENTS, READONLY
 28 .jdi          00004b4c  00000000  00000000  00085164  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0004a4e3  00000000  00000000  00089cb0  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040238 l    d  .text	00000000 .text
00051228 l    d  .rodata	00000000 .rodata
0005191c l    d  .rwdata	00000000 .rwdata
000550cc l    d  .bss	00000000 .bss
00055234 l    d  .onchip_mem	00000000 .onchip_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 crt0.o
00040280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00040794 l     F .text	00000048 handle_interrupts
000407dc l     F .text	00000064 init_interrupt_pio
00000000 l    df *ABS*	00000000 i2c_avalon_mm_if.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00051414 l     O .rodata	00000010 zeroes.0
00043d0c l     F .text	000000c4 __sbprintf
00051424 l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00043f1c l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00045bec l     F .text	00000008 __fp_lock
00045c00 l     F .text	00000008 __fp_unlock
00045c08 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0005191c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000514d0 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00049048 l     F .text	000000f4 __sprint_r.part.0
000515f4 l     O .rodata	00000010 zeroes.0
0004a3e0 l     F .text	000000c4 __sbprintf
00051604 l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0004e84c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004e958 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004e9c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0004ed64 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0004ee44 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004ef70 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004f05c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004f230 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000534e8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0004f4a8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004f5dc l     F .text	00000034 alt_dev_reg
0005245c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004f8d0 l     F .text	00000214 altera_avalon_jtag_uart_irq
0004fae4 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00050130 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00050534 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00050788 l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
000508b4 l     F .text	0000003c alt_get_errno
000508f0 l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
000550fc g     O .bss	00000004 alt_instruction_exception_handler
00048770 g     F .text	00000070 _mprec_log10
0004885c g     F .text	00000060 __any_on
0004aae8 g     F .text	00000058 _isatty_r
000514dc g     O .rodata	00000028 __mprec_tinytens
0004f16c g     F .text	0000007c alt_main
000417d0 g     F .text	000000d0 _puts_r
00055134 g     O .bss	00000100 alt_irq
0004ac34 g     F .text	00000064 _lseek_r
000534f4 g       *ABS*	00000000 __flash_rwdata_start
0004d334 g     F .text	00000094 .hidden __eqdf2
00055234 g       *ABS*	00000000 __alt_heap_start
0004b570 g     F .text	00000060 _kill_r
00041798 g     F .text	00000038 printf
0004af68 g     F .text	0000006c _wcrtomb_r
0004b10c g     F .text	00000090 _signal_r
00048fe4 g     F .text	0000005c __sseek
00045f20 g     F .text	00000010 __sinit
0004ae08 g     F .text	00000148 __swbuf_r
0004ab40 g     F .text	00000074 _setlocale_r
00045d70 g     F .text	00000068 __sfmoreglue
0004f20c g     F .text	00000024 __malloc_unlock
00040a68 g     F .text	00000180 read_from_i2c_device
00040be8 g     F .text	00000418 .hidden __divsf3
00040990 g     F .text	00000040 check_mm_if_busy
00047548 g     F .text	00000128 memmove
00045f0c g     F .text	00000014 _cleanup
00047768 g     F .text	000000a4 _Balloc
0004d3c8 g     F .text	000000fc .hidden __gtdf2
00050ccc g     F .text	00000024 altera_nios2_gen2_irq_init
0004a71c g     F .text	0000000c __errno
00040000 g     F .entry	0000001c __reset
00046978 g     F .text	00000008 __localeconv_l
000550d4 g     O .bss	00000004 edge_capture
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004aa88 g     F .text	00000060 _fstat_r
000550e4 g     O .bss	00000004 errno
00048f5c g     F .text	00000008 __seofread
000550f4 g     O .bss	00000004 alt_argv
0005b4bc g       *ABS*	00000000 _gp
0004f478 g     F .text	00000030 usleep
0004eaac g     F .text	00000020 getpid
000522dc g     O .rwdata	00000180 alt_fd_list
00050cf0 g     F .text	00000090 alt_find_dev
00047448 g     F .text	00000100 memcpy
00045bf4 g     F .text	0000000c _cleanup_r
0004e704 g     F .text	000000b8 .hidden __floatsidf
00050838 g     F .text	0000007c alt_io_redirect
0004d4c4 g     F .text	000000f8 .hidden __ltdf2
00051228 g       *ABS*	00000000 __DTOR_END__
000418a0 g     F .text	00000010 puts
00050714 g     F .text	00000074 alt_exception_cause_generated_bad_addr
000486c8 g     F .text	000000a8 __ratio
0004a3c4 g     F .text	0000001c __vfiprintf_internal
0004fce8 g     F .text	00000220 altera_avalon_jtag_uart_read
00041768 g     F .text	00000030 _printf_r
0004c128 g     F .text	00000064 .hidden __udivsi3
0004eda0 g     F .text	000000a4 isatty
0004b19c g     F .text	000000b0 _raise_r
0004a560 g     F .text	00000064 __assert_func
0005152c g     O .rodata	000000c8 __mprec_tens
00050f28 g     F .text	00000090 alt_icache_flush
000550e0 g     O .bss	00000004 __malloc_top_pad
0004b5d0 g     F .text	00000004 _getpid_r
00046980 g     F .text	0000000c _localeconv_r
00047bbc g     F .text	000000b0 __i2b
00046394 g     F .text	000004a4 __sfvwrite_r
0004b24c g     F .text	000000bc __sigtramp_r
00048eb0 g     F .text	00000058 _sbrk_r
0004ace8 g     F .text	00000064 _read_r
000534dc g     O .rwdata	00000004 alt_max_fd
0004a728 g     F .text	000000f8 _fclose_r
0004041c g     F .text	00000048 read_device_id
00045b68 g     F .text	00000084 fflush
000550dc g     O .bss	00000004 __malloc_max_sbrked_mem
0004161c g     F .text	000000fc .hidden __extendsfdf2
0004c1e8 g     F .text	00000904 .hidden __adddf3
00048470 g     F .text	00000100 __b2d
0004bb24 g     F .text	00000510 .hidden __umoddi3
0004f098 g     F .text	000000d4 lseek
000534bc g     O .rwdata	00000004 _global_impure_ptr
000488bc g     F .text	000005f4 _realloc_r
00055234 g       *ABS*	00000000 __bss_end
0004ec7c g     F .text	000000e8 alt_iic_isr_register
00050ba0 g     F .text	0000012c alt_tick
0004b5d4 g     F .text	00000550 .hidden __udivdi3
0004a9ec g     F .text	00000024 _fputwc_r
00051504 g     O .rodata	00000028 __mprec_bigtens
00047960 g     F .text	00000138 __s2b
0004b098 g     F .text	00000018 abort
0004e7bc g     F .text	00000090 .hidden __floatunsidf
00048188 g     F .text	00000058 __mcmp
00045f40 g     F .text	00000014 __fp_lock_all
0004ec30 g     F .text	0000004c alt_ic_irq_enabled
00050afc g     F .text	000000a4 alt_alarm_stop
000550ec g     O .bss	00000004 alt_irq_active
00040000 g       *ABS*	00000000 __alt_mem_onchip_mem
000400fc g     F .exceptions	000000c8 alt_irq_handler
000522b4 g     O .rwdata	00000028 alt_dev_null
000504e8 g     F .text	0000004c alt_dcache_flush_all
00047a98 g     F .text	00000074 __hi0bits
0004e684 g     F .text	00000080 .hidden __fixdfsi
000534f4 g       *ABS*	00000000 __ram_rwdata_end
000534d4 g     O .rwdata	00000008 alt_dev_list
000409d0 g     F .text	00000098 write_to_i2c_device
0004f4e4 g     F .text	000000f8 write
0005191c g       *ABS*	00000000 __ram_rodata_end
0004e9fc g     F .text	000000b0 fstat
0004ee80 g     F .text	000000f0 kill
0004d4c4 g     F .text	000000f8 .hidden __ledf2
00047ec0 g     F .text	00000140 __pow5mult
00049154 g     F .text	00001270 ___vfiprintf_internal_r
0004c18c g     F .text	0000005c .hidden __umodsi3
00055234 g       *ABS*	00000000 end
0004f810 g     F .text	000000c0 altera_avalon_jtag_uart_init
000401c4 g     F .exceptions	00000074 alt_instruction_exception_entry
00051228 g       *ABS*	00000000 __CTOR_LIST__
00065800 g       *ABS*	00000000 __alt_stack_pointer
000501ac g     F .text	00000084 alt_avalon_timer_sc_init
00041718 g     F .text	00000050 .hidden __clzsi2
0004ff08 g     F .text	00000228 altera_avalon_jtag_uart_write
00045f30 g     F .text	00000004 __sfp_lock_acquire
00047378 g     F .text	000000d0 memchr
00041948 g     F .text	000023a8 ___vfprintf_internal_r
0004608c g     F .text	00000308 _free_r
00051768 g     O .rodata	00000180 _ctype_b
0004abb4 g     F .text	0000000c __locale_mb_cur_max
00051108 g     F .text	00000120 __call_exitprocs
000534c4 g     O .rwdata	00000004 __malloc_sbrk_base
00040238 g     F .text	0000004c _start
00055100 g     O .bss	00000004 _alt_tick_rate
00048000 g     F .text	00000188 __lshift
00055104 g     O .bss	00000008 _alt_nticks
0004b3bc g     F .text	00000098 signal
0004f26c g     F .text	000000fc read
0004f64c g     F .text	00000060 alt_sys_init
000413e8 g     F .text	00000128 .hidden __floatsisf
00051078 g     F .text	00000090 __register_exitproc
00047c6c g     F .text	00000254 __multiply
0004fb8c g     F .text	00000068 altera_avalon_jtag_uart_close
0005191c g       *ABS*	00000000 __ram_rwdata_start
00051228 g       *ABS*	00000000 __ram_rodata_start
0005510c g     O .bss	00000028 __malloc_current_mallinfo
00048570 g     F .text	00000158 __d2b
00040284 g     F .text	00000198 config_device
0004f6ac g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00050e88 g     F .text	000000a0 alt_get_fd
00050390 g     F .text	00000158 alt_busy_sleep
0004a508 g     F .text	00000058 _close_r
00051000 g     F .text	00000078 memcmp
0004f76c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00055234 g       *ABS*	00000000 __alt_stack_base
0004f7bc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00043dd0 g     F .text	0000014c __swsetup_r
0004caec g     F .text	00000848 .hidden __divdf3
00045dd8 g     F .text	00000134 __sfp
000487e0 g     F .text	0000007c __copybits
00051d40 g     O .rwdata	00000408 __malloc_av_
00045f3c g     F .text	00000004 __sinit_lock_release
0004d5bc g     F .text	000006d8 .hidden __muldf3
00048f08 g     F .text	00000054 __sread
00050d80 g     F .text	00000108 alt_find_file
00050570 g     F .text	000000a8 alt_dev_llist_insert
0004f1e8 g     F .text	00000024 __malloc_lock
0004f3c0 g     F .text	000000b8 sbrk
00045b08 g     F .text	00000060 _fflush_r
0004a5d8 g     F .text	00000144 _calloc_r
000550cc g       *ABS*	00000000 __bss_start
00047670 g     F .text	000000f8 memset
00040840 g     F .text	00000150 main
000550f8 g     O .bss	00000004 alt_envp
000550d8 g     O .bss	00000004 __malloc_max_total_mem
0004f70c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004af50 g     F .text	00000018 __swbuf
00049040 g     F .text	00000008 __sclose
00065800 g       *ABS*	00000000 __alt_heap_limit
0004a820 g     F .text	00000010 fclose
00044118 g     F .text	000017e8 _dtoa_r
00046bc4 g     F .text	000007b4 _malloc_r
0004b068 g     F .text	00000030 __ascii_wctomb
000404c0 g     F .text	00000068 read_adxl345_reg
000534e0 g     O .rwdata	00000004 alt_errno
0004a830 g     F .text	00000020 _fiprintf_r
0004b454 g     F .text	00000060 _init_signal
00046838 g     F .text	00000098 _fwalk
0004ac98 g     F .text	0000000c _mbtowc_r
0004c034 g     F .text	00000080 .hidden __divsi3
00045f68 g     F .text	00000124 _malloc_trim_r
00051228 g       *ABS*	00000000 __CTOR_END__
00041000 g     F .text	000003e8 .hidden __mulsf3
0004ad4c g     F .text	000000b8 strcmp
00051228 g       *ABS*	00000000 __flash_rodata_start
00051228 g       *ABS*	00000000 __DTOR_LIST__
0004d334 g     F .text	00000094 .hidden __nedf2
0004f610 g     F .text	0000003c alt_irq_init
0004f368 g     F .text	00000058 alt_release_fd
000512cc g     O .rodata	00000100 .hidden __clz_tab
000550e8 g     O .bss	00000004 _PathLocale
00050fb8 g     F .text	00000014 atexit
0004a4a4 g     F .text	00000064 _write_r
0004abc0 g     F .text	00000074 setlocale
000534c0 g     O .rwdata	00000004 _impure_ptr
000550f0 g     O .bss	00000004 alt_argc
00045900 g     F .text	00000208 __sflush_r
0005067c g     F .text	00000064 _do_dtors
00040020 g       .exceptions	00000000 alt_irq_entry
0004aca4 g     F .text	00000044 __ascii_mbtowc
00048410 g     F .text	00000060 __ulp
00045f54 g     F .text	00000014 __fp_unlock_all
000534cc g     O .rwdata	00000008 alt_fs_list
00040528 g     F .text	0000026c read_acceleration_data
00040020 g       *ABS*	00000000 __ram_exceptions_start
0004698c g     F .text	0000000c localeconv
00046b38 g     F .text	0000008c __swhatbuf_r
0004eacc g     F .text	00000050 alt_ic_isr_register
000534f4 g       *ABS*	00000000 _edata
00055234 g       *ABS*	00000000 _end
0004a888 g     F .text	00000164 __fputwc
00040238 g       *ABS*	00000000 __ram_exceptions_end
000550cc g     O .bss	00000004 accel_range
0004fbf4 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
000550d0 g     O .bss	00000004 _range_accel
0004eba4 g     F .text	0000008c alt_ic_irq_disable
00048f64 g     F .text	00000080 __swrite
000534c8 g     O .rwdata	00000004 __malloc_trim_threshold
00050fcc g     F .text	00000034 exit
0004a850 g     F .text	00000038 fiprintf
0004ae04 g     F .text	00000004 _vfiprintf_r
000468d0 g     F .text	000000a8 _fwalk_reent
00041510 g     F .text	0000010c .hidden __floatunsisf
000481e0 g     F .text	00000230 __mdiff
0004c0b4 g     F .text	00000074 .hidden __modsi3
00065800 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00045f34 g     F .text	00000004 __sfp_lock_release
00051664 g     O .rodata	00000101 _ctype_
0004e630 g     F .text	00000054 .hidden __unorddf2
0004e984 g     F .text	0000003c _exit
00050230 g     F .text	00000160 alt_alarm_start
00046998 g     F .text	000001a0 __smakebuf_r
000418b0 g     F .text	00000098 strlen
00040464 g     F .text	0000005c read_irq_reg
0004b0b0 g     F .text	0000005c _init_signal_r
000509a8 g     F .text	00000154 open
0004d3c8 g     F .text	000000fc .hidden __gedf2
0004a5c4 g     F .text	00000014 __assert
0004913c g     F .text	00000018 __sprint_r
000506e0 g     F .text	00000034 alt_icache_flush_all
000534e4 g     O .rwdata	00000004 alt_priority_mask
0004eb1c g     F .text	00000088 alt_ic_irq_enable
00043cf0 g     F .text	0000001c __vfprintf_internal
0004b05c g     F .text	0000000c _wctomb_r
0004dc94 g     F .text	0000099c .hidden __subdf3
00047b0c g     F .text	000000b0 __lo0bits
000534ec g     O .rwdata	00000008 alt_alarm_list
00050618 g     F .text	00000064 _do_ctors
0004b4b4 g     F .text	000000bc __sigtramp
0004afd4 g     F .text	00000088 wcrtomb
0004e888 g     F .text	000000d0 close
00052148 g     O .rwdata	0000016c __global_locale
0004efd8 g     F .text	00000084 alt_load
0004aa10 g     F .text	00000078 fputwc
0004b308 g     F .text	000000b4 raise
00045f38 g     F .text	00000004 __sinit_lock_acquire
00047830 g     F .text	00000130 __multadd
0004780c g     F .text	00000024 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08408e14 	ori	at,at,568
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__reset-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
   40094:	e93fff04 	addi	r4,ea,-4
   40098:	00401c40 	call	401c4 <alt_instruction_exception_entry>
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>
   400a0:	ebffff04 	addi	r15,ea,-4
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   40118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0ffff17 	ldw	r3,-4(fp)
   40130:	e0bffe17 	ldw	r2,-8(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001126 	beq	r2,zero,40180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	e0bffd17 	ldw	r2,-12(fp)
   40140:	100690fa 	slli	r3,r2,3
   40144:	00800174 	movhi	r2,5
   40148:	1885883a 	add	r2,r3,r2
   4014c:	10d44d17 	ldw	r3,20788(r2)
   40150:	e0bffd17 	ldw	r2,-12(fp)
   40154:	100890fa 	slli	r4,r2,3
   40158:	00800174 	movhi	r2,5
   4015c:	2085883a 	add	r2,r4,r2
   40160:	10944e17 	ldw	r2,20792(r2)
   40164:	1009883a 	mov	r4,r2
   40168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   4016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   40170:	0005313a 	rdctl	r2,ipending
   40174:	e0bffb15 	stw	r2,-20(fp)
  return active;
   40178:	e0bffb17 	ldw	r2,-20(fp)
   4017c:	00000706 	br	4019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
   40180:	e0bffe17 	ldw	r2,-8(fp)
   40184:	1085883a 	add	r2,r2,r2
   40188:	e0bffe15 	stw	r2,-8(fp)
      i++;
   4018c:	e0bffd17 	ldw	r2,-12(fp)
   40190:	10800044 	addi	r2,r2,1
   40194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   40198:	003fe406 	br	4012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   4019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   401a0:	e0bfff17 	ldw	r2,-4(fp)
   401a4:	103fde1e 	bne	r2,zero,40120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401a8:	0001883a 	nop
}
   401ac:	0001883a 	nop
   401b0:	e037883a 	mov	sp,fp
   401b4:	dfc00117 	ldw	ra,4(sp)
   401b8:	df000017 	ldw	fp,0(sp)
   401bc:	dec00204 	addi	sp,sp,8
   401c0:	f800283a 	ret

000401c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401c4:	defffb04 	addi	sp,sp,-20
   401c8:	dfc00415 	stw	ra,16(sp)
   401cc:	df000315 	stw	fp,12(sp)
   401d0:	df000304 	addi	fp,sp,12
   401d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401d8:	000531fa 	rdctl	r2,exception
   401dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401e0:	e0bfff17 	ldw	r2,-4(fp)
   401e4:	1004d0ba 	srli	r2,r2,2
   401e8:	108007cc 	andi	r2,r2,31
   401ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401f0:	0005333a 	rdctl	r2,badaddr
   401f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401f8:	d0a71017 	ldw	r2,-25536(gp)
   401fc:	10000726 	beq	r2,zero,4021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   40200:	d0a71017 	ldw	r2,-25536(gp)
   40204:	e0ffff17 	ldw	r3,-4(fp)
   40208:	e1bffe17 	ldw	r6,-8(fp)
   4020c:	e17ffd17 	ldw	r5,-12(fp)
   40210:	1809883a 	mov	r4,r3
   40214:	103ee83a 	callr	r2
   40218:	00000206 	br	40224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   4021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   40220:	0005883a 	mov	r2,zero
}
   40224:	e037883a 	mov	sp,fp
   40228:	dfc00117 	ldw	ra,4(sp)
   4022c:	df000017 	ldw	fp,0(sp)
   40230:	dec00204 	addi	sp,sp,8
   40234:	f800283a 	ret

Disassembly of section .text:

00040238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   4023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   40240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40244:	00bffd16 	blt	zero,r2,4023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40248:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   4024c:	ded60014 	ori	sp,sp,22528
    movhi gp, %hi(_gp)
   40250:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40254:	d6ad2f14 	ori	gp,gp,46268
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40258:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   4025c:	10943314 	ori	r2,r2,20684

    movhi r3, %hi(__bss_end)
   40260:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40264:	18d48d14 	ori	r3,r3,21044

    beq r2, r3, 1f
   40268:	10c00326 	beq	r2,r3,40278 <_start+0x40>

0:
    stw zero, (r2)
   4026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   40270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40274:	10fffd36 	bltu	r2,r3,4026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40278:	004efd80 	call	4efd8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   4027c:	004f16c0 	call	4f16c <alt_main>

00040280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40280:	003fff06 	br	40280 <alt_after_alt_main>

00040284 <config_device>:
//read_acceleration_data_raw();
adxl345_accel_range_t accel_range;
float _range_accel;


void config_device(adxl345_accel_range_t accel_range){
   40284:	defffc04 	addi	sp,sp,-16
   40288:	dfc00315 	stw	ra,12(sp)
   4028c:	df000215 	stw	fp,8(sp)
   40290:	df000204 	addi	fp,sp,8
   40294:	e13ffe15 	stw	r4,-8(fp)


    //Set device into measurement mode by making sure that the Measure bit is set to 1 in the
    //POWER_CTL register. Default value is 0xA, thus it is already on by default.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_POWER_CTL_REG,1,0xA);
   40298:	01c00284 	movi	r7,10
   4029c:	01800044 	movi	r6,1
   402a0:	01400b44 	movi	r5,45
   402a4:	010014c4 	movi	r4,83
   402a8:	00409d00 	call	409d0 <write_to_i2c_device>

    //Set device data format
    _range_accel = accel_range;
   402ac:	e13ffe17 	ldw	r4,-8(fp)
   402b0:	00415100 	call	41510 <__floatunsisf>
   402b4:	1007883a 	mov	r3,r2
   402b8:	d0e70515 	stw	r3,-25580(gp)

    // Set bit D3 to full resolution
    // Set INT_INVERT bit to 1 to activate active low interrupt
    // All other values are default 0

    alt_u8 set_accel_config =  0x20 | 0x8;
   402bc:	00800a04 	movi	r2,40
   402c0:	e0bfffc5 	stb	r2,-1(fp)


    // Add settings for g-range
    switch(accel_range) {
   402c4:	e0bffe17 	ldw	r2,-8(fp)
   402c8:	10800420 	cmpeqi	r2,r2,16
   402cc:	1000171e 	bne	r2,zero,4032c <config_device+0xa8>
   402d0:	e0bffe17 	ldw	r2,-8(fp)
   402d4:	10800468 	cmpgeui	r2,r2,17
   402d8:	1000191e 	bne	r2,zero,40340 <config_device+0xbc>
   402dc:	e0bffe17 	ldw	r2,-8(fp)
   402e0:	10800220 	cmpeqi	r2,r2,8
   402e4:	10000d1e 	bne	r2,zero,4031c <config_device+0x98>
   402e8:	e0bffe17 	ldw	r2,-8(fp)
   402ec:	10800268 	cmpgeui	r2,r2,9
   402f0:	1000131e 	bne	r2,zero,40340 <config_device+0xbc>
   402f4:	e0bffe17 	ldw	r2,-8(fp)
   402f8:	108000a0 	cmpeqi	r2,r2,2
   402fc:	10000f1e 	bne	r2,zero,4033c <config_device+0xb8>
   40300:	e0bffe17 	ldw	r2,-8(fp)
   40304:	10800120 	cmpeqi	r2,r2,4
   40308:	10000d26 	beq	r2,zero,40340 <config_device+0xbc>
    case (ACCEL_RANGE_2G):
        set_accel_config = set_accel_config | (0b00);
        break;
    case (ACCEL_RANGE_4G):
        set_accel_config= set_accel_config | (0b01);
   4030c:	e0bfffc3 	ldbu	r2,-1(fp)
   40310:	10800054 	ori	r2,r2,1
   40314:	e0bfffc5 	stb	r2,-1(fp)
        break;
   40318:	00000906 	br	40340 <config_device+0xbc>
    case (ACCEL_RANGE_8G):
        set_accel_config= set_accel_config | (0b10);
   4031c:	e0bfffc3 	ldbu	r2,-1(fp)
   40320:	10800094 	ori	r2,r2,2
   40324:	e0bfffc5 	stb	r2,-1(fp)
        break;
   40328:	00000506 	br	40340 <config_device+0xbc>
    case (ACCEL_RANGE_16G):
        set_accel_config= set_accel_config | (0b11);
   4032c:	e0bfffc3 	ldbu	r2,-1(fp)
   40330:	108000d4 	ori	r2,r2,3
   40334:	e0bfffc5 	stb	r2,-1(fp)
        break;
   40338:	00000106 	br	40340 <config_device+0xbc>
        break;
   4033c:	0001883a 	nop




    //Data format register
    write_to_i2c_device(ADXL345_ADDR,ADXL345_DATA_FORMAT_REG,1,set_accel_config);
   40340:	e0bfffc3 	ldbu	r2,-1(fp)
   40344:	100f883a 	mov	r7,r2
   40348:	01800044 	movi	r6,1
   4034c:	01400c44 	movi	r5,49
   40350:	010014c4 	movi	r4,83
   40354:	00409d00 	call	409d0 <write_to_i2c_device>
    printf("Configuring ADXL345\n");
   40358:	01000174 	movhi	r4,5
   4035c:	21048a04 	addi	r4,r4,4648
   40360:	00418a00 	call	418a0 <puts>

    //Disable FIFO, STREAM and Trigger mode. Not necessary as default is 0x0.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_FIFO_CTL_REG,1,0x00);
   40364:	000f883a 	mov	r7,zero
   40368:	01800044 	movi	r6,1
   4036c:	01400e04 	movi	r5,56
   40370:	010014c4 	movi	r4,83
   40374:	00409d00 	call	409d0 <write_to_i2c_device>

    //set tap thresholds
    // The THRESH_TAP register is eight bits and holds the threshold value for tap interrupts. The data format is unsigned, therefore, the magnitude of the tap event is compared with the value in THRESH_TAP for normal tap detection. The scale factor is 62.5 mg/LSB (that is, 0xFF = 16 g). A value of 0 may result in undesirable behavior if single tap/double tap interrupts are enabled.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_THRESH_TAP_REG,1,0x20); //1000 mg
   40378:	01c00804 	movi	r7,32
   4037c:	01800044 	movi	r6,1
   40380:	01400744 	movi	r5,29
   40384:	010014c4 	movi	r4,83
   40388:	00409d00 	call	409d0 <write_to_i2c_device>
    //The DUR register is eight bits and contains an unsigned time value representing the maximum time that an event must be above the THRESH_TAP threshold to qualify as a tap event. The scale factor is 625 μs/LSB. A value of 0 disables the single tap/ double tap functions.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_DUR_REG,1,0x40); // < 30 ms
   4038c:	01c01004 	movi	r7,64
   40390:	01800044 	movi	r6,1
   40394:	01400844 	movi	r5,33
   40398:	010014c4 	movi	r4,83
   4039c:	00409d00 	call	409d0 <write_to_i2c_device>
    //The latent register is eight bits and contains an unsigned time value representing the wait time from the detection of a tap event to the start of the time window (defined by the window register) during which a possible second tap event can be detected. The scale factor is 1.25 ms/LSB. A value of 0 disables the double tap function.
    write_to_i2c_device(ADXL345_ADDR,ADXL345_LATENT_REG,1,0x60); //40 ms
   403a0:	01c01804 	movi	r7,96
   403a4:	01800044 	movi	r6,1
   403a8:	01400884 	movi	r5,34
   403ac:	010014c4 	movi	r4,83
   403b0:	00409d00 	call	409d0 <write_to_i2c_device>
    //The window register is eight bits and contains an unsigned time value representing the amount of time after the expiration of the latency time (determined by the latent register) during which a second valid tap can begin. The scale factor is 1.25 ms/LSB. A value of 0 disables the double tap function
    write_to_i2c_device(ADXL345_ADDR,ADXL345_WINDOW_REG,1,0xFF); //38.75 ms
   403b4:	01c03fc4 	movi	r7,255
   403b8:	01800044 	movi	r6,1
   403bc:	014008c4 	movi	r5,35
   403c0:	010014c4 	movi	r4,83
   403c4:	00409d00 	call	409d0 <write_to_i2c_device>


    //Initialize interrupts to be used
    write_to_i2c_device(ADXL345_ADDR,ADXL345_INT_MAP_REG,1,0x20); // map double tap to int2 pin and data ready to int1 pin
   403c8:	01c00804 	movi	r7,32
   403cc:	01800044 	movi	r6,1
   403d0:	01400bc4 	movi	r5,47
   403d4:	010014c4 	movi	r4,83
   403d8:	00409d00 	call	409d0 <write_to_i2c_device>
    write_to_i2c_device(ADXL345_ADDR,ADXL345_TAP_AXES_REG,1,0x07); // x,y,z-axis
   403dc:	01c001c4 	movi	r7,7
   403e0:	01800044 	movi	r6,1
   403e4:	01400a84 	movi	r5,42
   403e8:	010014c4 	movi	r4,83
   403ec:	00409d00 	call	409d0 <write_to_i2c_device>
    write_to_i2c_device(ADXL345_ADDR,ADXL345_INT_ENABLE_REG,1,0xa0); // Enable data ready and double tap
   403f0:	01c02804 	movi	r7,160
   403f4:	01800044 	movi	r6,1
   403f8:	01400b84 	movi	r5,46
   403fc:	010014c4 	movi	r4,83
   40400:	00409d00 	call	409d0 <write_to_i2c_device>

}
   40404:	0001883a 	nop
   40408:	e037883a 	mov	sp,fp
   4040c:	dfc00117 	ldw	ra,4(sp)
   40410:	df000017 	ldw	fp,0(sp)
   40414:	dec00204 	addi	sp,sp,8
   40418:	f800283a 	ret

0004041c <read_device_id>:

alt_u8 read_device_id(void){
   4041c:	defffc04 	addi	sp,sp,-16
   40420:	dfc00315 	stw	ra,12(sp)
   40424:	df000215 	stw	fp,8(sp)
   40428:	df000204 	addi	fp,sp,8

    alt_u8 data[8] = {0};
   4042c:	e03ffe15 	stw	zero,-8(fp)
   40430:	e03fff15 	stw	zero,-4(fp)
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DEV_ID_REG,1,&data[0]);
   40434:	e0bffe04 	addi	r2,fp,-8
   40438:	100f883a 	mov	r7,r2
   4043c:	01800044 	movi	r6,1
   40440:	000b883a 	mov	r5,zero
   40444:	010014c4 	movi	r4,83
   40448:	0040a680 	call	40a68 <read_from_i2c_device>

    return ((alt_u8) data[0]) & 0xff;
   4044c:	e0bffe03 	ldbu	r2,-8(fp)
}
   40450:	e037883a 	mov	sp,fp
   40454:	dfc00117 	ldw	ra,4(sp)
   40458:	df000017 	ldw	fp,0(sp)
   4045c:	dec00204 	addi	sp,sp,8
   40460:	f800283a 	ret

00040464 <read_irq_reg>:


alt_u8 read_irq_reg(void){
   40464:	defffd04 	addi	sp,sp,-12
   40468:	dfc00215 	stw	ra,8(sp)
   4046c:	df000115 	stw	fp,4(sp)
   40470:	df000104 	addi	fp,sp,4
    alt_u8 data = 0;
   40474:	e03fffc5 	stb	zero,-1(fp)
    read_from_i2c_device(ADXL345_ADDR,ADXL345_INT_SOURCE_REG,1,&data);
   40478:	e0bfffc4 	addi	r2,fp,-1
   4047c:	100f883a 	mov	r7,r2
   40480:	01800044 	movi	r6,1
   40484:	01400c04 	movi	r5,48
   40488:	010014c4 	movi	r4,83
   4048c:	0040a680 	call	40a68 <read_from_i2c_device>
    printf("IRQREG: 0x%x\n",data);
   40490:	e0bfffc3 	ldbu	r2,-1(fp)
   40494:	10803fcc 	andi	r2,r2,255
   40498:	100b883a 	mov	r5,r2
   4049c:	01000174 	movhi	r4,5
   404a0:	21048f04 	addi	r4,r4,4668
   404a4:	00417980 	call	41798 <printf>
    return data;
   404a8:	e0bfffc3 	ldbu	r2,-1(fp)
}
   404ac:	e037883a 	mov	sp,fp
   404b0:	dfc00117 	ldw	ra,4(sp)
   404b4:	df000017 	ldw	fp,0(sp)
   404b8:	dec00204 	addi	sp,sp,8
   404bc:	f800283a 	ret

000404c0 <read_adxl345_reg>:

alt_u8 read_adxl345_reg(int reg_addr){
   404c0:	defffc04 	addi	sp,sp,-16
   404c4:	dfc00315 	stw	ra,12(sp)
   404c8:	df000215 	stw	fp,8(sp)
   404cc:	df000204 	addi	fp,sp,8
   404d0:	e13ffe15 	stw	r4,-8(fp)
    alt_u8 data = 0;
   404d4:	e03fffc5 	stb	zero,-1(fp)
    read_from_i2c_device(ADXL345_ADDR,reg_addr,1,&data);
   404d8:	e0bffe17 	ldw	r2,-8(fp)
   404dc:	10803fcc 	andi	r2,r2,255
   404e0:	e0ffffc4 	addi	r3,fp,-1
   404e4:	180f883a 	mov	r7,r3
   404e8:	01800044 	movi	r6,1
   404ec:	100b883a 	mov	r5,r2
   404f0:	010014c4 	movi	r4,83
   404f4:	0040a680 	call	40a68 <read_from_i2c_device>
    printf("IRQREG: 0x%x\n",data);
   404f8:	e0bfffc3 	ldbu	r2,-1(fp)
   404fc:	10803fcc 	andi	r2,r2,255
   40500:	100b883a 	mov	r5,r2
   40504:	01000174 	movhi	r4,5
   40508:	21048f04 	addi	r4,r4,4668
   4050c:	00417980 	call	41798 <printf>
    return data;
   40510:	e0bfffc3 	ldbu	r2,-1(fp)
}
   40514:	e037883a 	mov	sp,fp
   40518:	dfc00117 	ldw	ra,4(sp)
   4051c:	df000017 	ldw	fp,0(sp)
   40520:	dec00204 	addi	sp,sp,8
   40524:	f800283a 	ret

00040528 <read_acceleration_data>:


adxl345_data_t read_acceleration_data(){
   40528:	defff204 	addi	sp,sp,-56
   4052c:	dfc00d15 	stw	ra,52(sp)
   40530:	df000c15 	stw	fp,48(sp)
   40534:	df000c04 	addi	fp,sp,48
   40538:	e13ff415 	stw	r4,-48(fp)


    alt_u16 ax = 0, ay = 0, az = 0;
   4053c:	e03ffe8d 	sth	zero,-6(fp)
   40540:	e03ffe0d 	sth	zero,-8(fp)
   40544:	e03ffd8d 	sth	zero,-10(fp)
    float value = 0;
   40548:	e03ffc15 	stw	zero,-16(fp)
    adxl345_data_t accel_data;
    alt_u8 data[8] = {0};
   4054c:	e03ff515 	stw	zero,-44(fp)
   40550:	e03ff615 	stw	zero,-40(fp)
    alt_u8 no_bytes =6;
   40554:	00800184 	movi	r2,6
   40558:	e0bffbc5 	stb	r2,-17(fp)
    //read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAX0_REG,no_bytes,&data[0]);

    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAX0_REG,1,&data[0]);
   4055c:	e0bff504 	addi	r2,fp,-44
   40560:	100f883a 	mov	r7,r2
   40564:	01800044 	movi	r6,1
   40568:	01400c84 	movi	r5,50
   4056c:	010014c4 	movi	r4,83
   40570:	0040a680 	call	40a68 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAX1_REG,1,&data[1]);
   40574:	e0bff504 	addi	r2,fp,-44
   40578:	10800044 	addi	r2,r2,1
   4057c:	100f883a 	mov	r7,r2
   40580:	01800044 	movi	r6,1
   40584:	01400cc4 	movi	r5,51
   40588:	010014c4 	movi	r4,83
   4058c:	0040a680 	call	40a68 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAY0_REG,1,&data[2]);
   40590:	e0bff504 	addi	r2,fp,-44
   40594:	10800084 	addi	r2,r2,2
   40598:	100f883a 	mov	r7,r2
   4059c:	01800044 	movi	r6,1
   405a0:	01400d04 	movi	r5,52
   405a4:	010014c4 	movi	r4,83
   405a8:	0040a680 	call	40a68 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAY1_REG,1,&data[3]);
   405ac:	e0bff504 	addi	r2,fp,-44
   405b0:	108000c4 	addi	r2,r2,3
   405b4:	100f883a 	mov	r7,r2
   405b8:	01800044 	movi	r6,1
   405bc:	01400d44 	movi	r5,53
   405c0:	010014c4 	movi	r4,83
   405c4:	0040a680 	call	40a68 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAZ0_REG,1,&data[4]);
   405c8:	e0bff504 	addi	r2,fp,-44
   405cc:	10800104 	addi	r2,r2,4
   405d0:	100f883a 	mov	r7,r2
   405d4:	01800044 	movi	r6,1
   405d8:	01400d84 	movi	r5,54
   405dc:	010014c4 	movi	r4,83
   405e0:	0040a680 	call	40a68 <read_from_i2c_device>
    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATAZ1_REG,1,&data[5]);
   405e4:	e0bff504 	addi	r2,fp,-44
   405e8:	10800144 	addi	r2,r2,5
   405ec:	100f883a 	mov	r7,r2
   405f0:	01800044 	movi	r6,1
   405f4:	01400dc4 	movi	r5,55
   405f8:	010014c4 	movi	r4,83
   405fc:	0040a680 	call	40a68 <read_from_i2c_device>

    ax = data[1] << 8 | data[0];
   40600:	e0bff543 	ldbu	r2,-43(fp)
   40604:	10803fcc 	andi	r2,r2,255
   40608:	1004923a 	slli	r2,r2,8
   4060c:	1007883a 	mov	r3,r2
   40610:	e0bff503 	ldbu	r2,-44(fp)
   40614:	10803fcc 	andi	r2,r2,255
   40618:	1884b03a 	or	r2,r3,r2
   4061c:	e0bffe8d 	sth	r2,-6(fp)
    ay = data[3] << 8 | data[2];
   40620:	e0bff5c3 	ldbu	r2,-41(fp)
   40624:	10803fcc 	andi	r2,r2,255
   40628:	1004923a 	slli	r2,r2,8
   4062c:	1007883a 	mov	r3,r2
   40630:	e0bff583 	ldbu	r2,-42(fp)
   40634:	10803fcc 	andi	r2,r2,255
   40638:	1884b03a 	or	r2,r3,r2
   4063c:	e0bffe0d 	sth	r2,-8(fp)
    az = data[5] << 8 | data[4];
   40640:	e0bff643 	ldbu	r2,-39(fp)
   40644:	10803fcc 	andi	r2,r2,255
   40648:	1004923a 	slli	r2,r2,8
   4064c:	1007883a 	mov	r3,r2
   40650:	e0bff603 	ldbu	r2,-40(fp)
   40654:	10803fcc 	andi	r2,r2,255
   40658:	1884b03a 	or	r2,r3,r2
   4065c:	e0bffd8d 	sth	r2,-10(fp)


    read_from_i2c_device(ADXL345_ADDR,ADXL345_DATA_FORMAT_REG,1,&data[0]);
   40660:	e0bff504 	addi	r2,fp,-44
   40664:	100f883a 	mov	r7,r2
   40668:	01800044 	movi	r6,1
   4066c:	01400c44 	movi	r5,49
   40670:	010014c4 	movi	r4,83
   40674:	0040a680 	call	40a68 <read_from_i2c_device>

    int full_res_bit = (data[0] >> 3 ) & 0x1;
   40678:	e0bff503 	ldbu	r2,-44(fp)
   4067c:	10803fcc 	andi	r2,r2,255
   40680:	1004d0fa 	srli	r2,r2,3
   40684:	10803fcc 	andi	r2,r2,255
   40688:	1080004c 	andi	r2,r2,1
   4068c:	e0bffa15 	stw	r2,-24(fp)


    float resolution = (float) _range_accel / 512.0;
   40690:	d0a70517 	ldw	r2,-25580(gp)
   40694:	01510034 	movhi	r5,17408
   40698:	1009883a 	mov	r4,r2
   4069c:	0040be80 	call	40be8 <__divsf3>
   406a0:	1007883a 	mov	r3,r2
   406a4:	e0ffff15 	stw	r3,-4(fp)

    if (full_res_bit) {
   406a8:	e0bffa17 	ldw	r2,-24(fp)
   406ac:	10000226 	beq	r2,zero,406b8 <read_acceleration_data+0x190>
        resolution  = (float) 2/512;
   406b0:	008ee034 	movhi	r2,15232
   406b4:	e0bfff15 	stw	r2,-4(fp)
    }



    value = (alt_16)ax;
   406b8:	e0bffe8b 	ldhu	r2,-6(fp)
   406bc:	10bfffcc 	andi	r2,r2,65535
   406c0:	10a0001c 	xori	r2,r2,32768
   406c4:	10a00004 	addi	r2,r2,-32768
   406c8:	1009883a 	mov	r4,r2
   406cc:	00413e80 	call	413e8 <__floatsisf>
   406d0:	1007883a 	mov	r3,r2
   406d4:	e0fffc15 	stw	r3,-16(fp)
    //accel_raw_data.x = ax;
    accel_data.x = value * resolution;
   406d8:	e17fff17 	ldw	r5,-4(fp)
   406dc:	e13ffc17 	ldw	r4,-16(fp)
   406e0:	00410000 	call	41000 <__mulsf3>
   406e4:	1007883a 	mov	r3,r2
   406e8:	1805883a 	mov	r2,r3
   406ec:	e0bff715 	stw	r2,-36(fp)

    value = (alt_16)ay;
   406f0:	e0bffe0b 	ldhu	r2,-8(fp)
   406f4:	10bfffcc 	andi	r2,r2,65535
   406f8:	10a0001c 	xori	r2,r2,32768
   406fc:	10a00004 	addi	r2,r2,-32768
   40700:	1009883a 	mov	r4,r2
   40704:	00413e80 	call	413e8 <__floatsisf>
   40708:	1007883a 	mov	r3,r2
   4070c:	e0fffc15 	stw	r3,-16(fp)
    //accel_raw_data.y = ay;
    accel_data.y = value * resolution;
   40710:	e17fff17 	ldw	r5,-4(fp)
   40714:	e13ffc17 	ldw	r4,-16(fp)
   40718:	00410000 	call	41000 <__mulsf3>
   4071c:	1007883a 	mov	r3,r2
   40720:	1805883a 	mov	r2,r3
   40724:	e0bff815 	stw	r2,-32(fp)

    value = (alt_16)az;
   40728:	e0bffd8b 	ldhu	r2,-10(fp)
   4072c:	10bfffcc 	andi	r2,r2,65535
   40730:	10a0001c 	xori	r2,r2,32768
   40734:	10a00004 	addi	r2,r2,-32768
   40738:	1009883a 	mov	r4,r2
   4073c:	00413e80 	call	413e8 <__floatsisf>
   40740:	1007883a 	mov	r3,r2
   40744:	e0fffc15 	stw	r3,-16(fp)
    //accel_raw_data.z = az;   //accRange * value / 32768;
    accel_data.z = value * resolution;
   40748:	e17fff17 	ldw	r5,-4(fp)
   4074c:	e13ffc17 	ldw	r4,-16(fp)
   40750:	00410000 	call	41000 <__mulsf3>
   40754:	1007883a 	mov	r3,r2
   40758:	1805883a 	mov	r2,r3
   4075c:	e0bff915 	stw	r2,-28(fp)

    return accel_data;
   40760:	e0bff417 	ldw	r2,-48(fp)
   40764:	e0fff717 	ldw	r3,-36(fp)
   40768:	10c00015 	stw	r3,0(r2)
   4076c:	e0fff817 	ldw	r3,-32(fp)
   40770:	10c00115 	stw	r3,4(r2)
   40774:	e0fff917 	ldw	r3,-28(fp)
   40778:	10c00215 	stw	r3,8(r2)

}
   4077c:	e0bff417 	ldw	r2,-48(fp)
   40780:	e037883a 	mov	sp,fp
   40784:	dfc00117 	ldw	ra,4(sp)
   40788:	df000017 	ldw	fp,0(sp)
   4078c:	dec00204 	addi	sp,sp,8
   40790:	f800283a 	ret

00040794 <handle_interrupts>:


/* This is the ISR which will be called when the system signals an interrupt. */

static void handle_interrupts(void* context)
{
   40794:	defffd04 	addi	sp,sp,-12
   40798:	df000215 	stw	fp,8(sp)
   4079c:	df000204 	addi	fp,sp,8
   407a0:	e13ffe15 	stw	r4,-8(fp)
	//Cast context to edge_capture's type
	//Volatile to avoid compiler optimization
  //this will point to the edge_capture variable.
	volatile int* edge_capture_ptr = (volatile int*) context;
   407a4:	e0bffe17 	ldw	r2,-8(fp)
   407a8:	e0bfff15 	stw	r2,-4(fp)

	//Read the edge capture register on the PIO and store the value
  //The value will be stored in the edge_capture variable and accessible
  //from other parts of the code.
	*edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(INTERRUPT_PIO_BASE);
   407ac:	00800234 	movhi	r2,8
   407b0:	10c41337 	ldwio	r3,4172(r2)
   407b4:	e0bfff17 	ldw	r2,-4(fp)
   407b8:	10c00015 	stw	r3,0(r2)

	//Write to edge capture register to reset it
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(INTERRUPT_PIO_BASE,0);
   407bc:	0007883a 	mov	r3,zero
   407c0:	00800234 	movhi	r2,8
   407c4:	10c41335 	stwio	r3,4172(r2)
}
   407c8:	0001883a 	nop
   407cc:	e037883a 	mov	sp,fp
   407d0:	df000017 	ldw	fp,0(sp)
   407d4:	dec00104 	addi	sp,sp,4
   407d8:	f800283a 	ret

000407dc <init_interrupt_pio>:


/* This function is used to initializes and registers the interrupt handler. */
static void init_interrupt_pio()
{
   407dc:	defffc04 	addi	sp,sp,-16
   407e0:	dfc00315 	stw	ra,12(sp)
   407e4:	df000215 	stw	fp,8(sp)
   407e8:	df000204 	addi	fp,sp,8
	//Recast the edge_capture point to match the
	//alt_irq_register() function prototypo
	void* edge_capture_ptr = (void*)&edge_capture;
   407ec:	d0a70604 	addi	r2,gp,-25576
   407f0:	e0bfff15 	stw	r2,-4(fp)

	//Enable all 3 interrupt inputs by writing a one to the corresponding interruptmask bit locations
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(INTERRUPT_PIO_BASE,0x7);
   407f4:	00c001c4 	movi	r3,7
   407f8:	00800234 	movhi	r2,8
   407fc:	10c41235 	stwio	r3,4168(r2)

	//Reset the edge capture register
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(INTERRUPT_PIO_BASE,0);
   40800:	0007883a 	mov	r3,zero
   40804:	00800234 	movhi	r2,8
   40808:	10c41335 	stwio	r3,4172(r2)

	//Register the interrupt handler in the system
  //The ID and PIO_IRQ number is available from the system.h file.
	alt_ic_isr_register(INTERRUPT_PIO_IRQ_INTERRUPT_CONTROLLER_ID,
   4080c:	d8000015 	stw	zero,0(sp)
   40810:	e1ffff17 	ldw	r7,-4(fp)
   40814:	01800134 	movhi	r6,4
   40818:	3181e504 	addi	r6,r6,1940
   4081c:	01400144 	movi	r5,5
   40820:	0009883a 	mov	r4,zero
   40824:	004eacc0 	call	4eacc <alt_ic_isr_register>
			INTERRUPT_PIO_IRQ, handle_interrupts, edge_capture_ptr, 0x0);
}
   40828:	0001883a 	nop
   4082c:	e037883a 	mov	sp,fp
   40830:	dfc00117 	ldw	ra,4(sp)
   40834:	df000017 	ldw	fp,0(sp)
   40838:	dec00204 	addi	sp,sp,8
   4083c:	f800283a 	ret

00040840 <main>:
int main(void)
{
   40840:	deffef04 	addi	sp,sp,-68
   40844:	dfc01015 	stw	ra,64(sp)
   40848:	df000f15 	stw	fp,60(sp)
   4084c:	dcc00e15 	stw	r19,56(sp)
   40850:	dc800d15 	stw	r18,52(sp)
   40854:	dc400c15 	stw	r17,48(sp)
   40858:	dc000b15 	stw	r16,44(sp)
   4085c:	df000f04 	addi	fp,sp,60
  //-----------------------------------
  // Hentet fra fasit

    alt_u8 dev_id =  0;
   40860:	e03ffbc5 	stb	zero,-17(fp)
    adxl345_data_t accel_data;

    alt_u8 adxl345_int_reg;
//-----------------------------------
  //Initialize the interrupts
	init_interrupt_pio();
   40864:	00407dc0 	call	407dc <init_interrupt_pio>

  //Variable to hold values from switches
	int sw_data = 0;
   40868:	e03ffa15 	stw	zero,-24(fp)
	printf("Hello from Nios II!\n");
   4086c:	01000174 	movhi	r4,5
   40870:	21049304 	addi	r4,r4,4684
   40874:	00418a00 	call	418a0 <puts>

//-------------------------------------
// Hentet fra fasit
    dev_id = read_device_id();
   40878:	004041c0 	call	4041c <read_device_id>
   4087c:	e0bffbc5 	stb	r2,-17(fp)
    if(dev_id != ADXL345_DEV_ID){
   40880:	e0bffbc3 	ldbu	r2,-17(fp)
   40884:	10803960 	cmpeqi	r2,r2,229
   40888:	1000081e 	bne	r2,zero,408ac <main+0x6c>
      printf("Wrong device ID: 0x%x!\n",dev_id);
   4088c:	e0bffbc3 	ldbu	r2,-17(fp)
   40890:	100b883a 	mov	r5,r2
   40894:	01000174 	movhi	r4,5
   40898:	21049804 	addi	r4,r4,4704
   4089c:	00417980 	call	41798 <printf>
      usleep(5000000); //Wait for 5 seconds
   408a0:	01001334 	movhi	r4,76
   408a4:	2112d004 	addi	r4,r4,19264
   408a8:	004f4780 	call	4f478 <usleep>
    }
    config_device(ACCEL_RANGE_8G);
   408ac:	01000204 	movi	r4,8
   408b0:	00402840 	call	40284 <config_device>

    //Variable to hold values from switches

    //alt_u64 adxl345_data = 0;
    accel_data = read_acceleration_data();
   408b4:	e0bff704 	addi	r2,fp,-36
   408b8:	1009883a 	mov	r4,r2
   408bc:	00405280 	call	40528 <read_acceleration_data>


	while(1){

    //use the IORD and IOWR functions to read and write from LEDs and SW
	sw_data = IORD(SW_PIO_BASE,0);
   408c0:	00800234 	movhi	r2,8
   408c4:	10841837 	ldwio	r2,4192(r2)
   408c8:	e0bffa15 	stw	r2,-24(fp)
	  IOWR(LED_PIO_BASE,0,sw_data);
   408cc:	e0fffa17 	ldw	r3,-24(fp)
   408d0:	00800234 	movhi	r2,8
   408d4:	10c41435 	stwio	r3,4176(r2)
	             printf("ax: %-.5f, ay: %-.5f, az: %-.5f\n",accel_data.x,accel_data.y,accel_data.z);
	             printf("edge %d", edge_capture);
	             usleep(5000000);*/
    //When an interrupt event has occurred, the edge_capture variable has been updated

	  if (edge_capture == 0x1) //bit position 0 corresponds to button press
   408d8:	d0a70617 	ldw	r2,-25576(gp)
   408dc:	10800058 	cmpnei	r2,r2,1
   408e0:	1000051e 	bne	r2,zero,408f8 <main+0xb8>
	  	  {
		   printf("Hi from interrupt routine, Key1 was pressed!\n");
   408e4:	01000174 	movhi	r4,5
   408e8:	21049e04 	addi	r4,r4,4728
   408ec:	00418a00 	call	418a0 <puts>
		   edge_capture = 0; // reset variable to "unregister" event
   408f0:	d0270615 	stw	zero,-25576(gp)
   408f4:	003ff206 	br	408c0 <main+0x80>
	  	  }
	  else
        {
            //printf("Hi from interrupt routine, ADXL345 IRQ 0 activated, ADXL345_INT_SOURCE_REG: 0x%x!\n",adxl345_int_reg);
            accel_data = read_acceleration_data(); // Reading data registers will clear data related interrupts
   408f8:	e0bff404 	addi	r2,fp,-48
   408fc:	1009883a 	mov	r4,r2
   40900:	00405280 	call	40528 <read_acceleration_data>
   40904:	e0bff417 	ldw	r2,-48(fp)
   40908:	e0bff715 	stw	r2,-36(fp)
   4090c:	e0bff517 	ldw	r2,-44(fp)
   40910:	e0bff815 	stw	r2,-32(fp)
   40914:	e0bff617 	ldw	r2,-40(fp)
   40918:	e0bff915 	stw	r2,-28(fp)
            edge_capture = 0;                     // reset variable to "unregister" event
   4091c:	d0270615 	stw	zero,-25576(gp)
            printf("ax: %-.5f, ay: %-.5f, az: %-.5f\n",accel_data.x,accel_data.y,accel_data.z);
   40920:	e0bff717 	ldw	r2,-36(fp)
   40924:	1009883a 	mov	r4,r2
   40928:	004161c0 	call	4161c <__extendsfdf2>
   4092c:	1025883a 	mov	r18,r2
   40930:	1827883a 	mov	r19,r3
   40934:	e0bff817 	ldw	r2,-32(fp)
   40938:	1009883a 	mov	r4,r2
   4093c:	004161c0 	call	4161c <__extendsfdf2>
   40940:	1021883a 	mov	r16,r2
   40944:	1823883a 	mov	r17,r3
   40948:	e0bff917 	ldw	r2,-28(fp)
   4094c:	1009883a 	mov	r4,r2
   40950:	004161c0 	call	4161c <__extendsfdf2>
   40954:	1009883a 	mov	r4,r2
   40958:	180b883a 	mov	r5,r3
   4095c:	d9000115 	stw	r4,4(sp)
   40960:	d9400215 	stw	r5,8(sp)
   40964:	dc400015 	stw	r17,0(sp)
   40968:	800f883a 	mov	r7,r16
   4096c:	900b883a 	mov	r5,r18
   40970:	980d883a 	mov	r6,r19
   40974:	01000174 	movhi	r4,5
   40978:	2104aa04 	addi	r4,r4,4776
   4097c:	00417980 	call	41798 <printf>
            usleep(5000000);
   40980:	01001334 	movhi	r4,76
   40984:	2112d004 	addi	r4,r4,19264
   40988:	004f4780 	call	4f478 <usleep>
	sw_data = IORD(SW_PIO_BASE,0);
   4098c:	003fcc06 	br	408c0 <main+0x80>

00040990 <check_mm_if_busy>:
#include "unistd.h" //usleep()

// #define DEBUG

int check_mm_if_busy(void)
{
   40990:	defffe04 	addi	sp,sp,-8
   40994:	df000115 	stw	fp,4(sp)
   40998:	df000104 	addi	fp,sp,4
    //Read control register of I2C-mm if
    int res = IORD(I2C_AVALON_MM_IF_0_BASE,CTRL_REG);
   4099c:	00800234 	movhi	r2,8
   409a0:	10840037 	ldwio	r2,4096(r2)
   409a4:	e0bfff15 	stw	r2,-4(fp)
    //check if I2C_AVALON_MM_IF state machine is busy
  #ifdef DEBUG
    printf("CTRL: 0x%x\n",res);
  #endif
    if (check_bit(res,MM_IF_BUSY))
   409a8:	e0bfff17 	ldw	r2,-4(fp)
   409ac:	1080200c 	andi	r2,r2,128
   409b0:	10000226 	beq	r2,zero,409bc <check_mm_if_busy+0x2c>
    {
        return 1;
   409b4:	00800044 	movi	r2,1
   409b8:	00000106 	br	409c0 <check_mm_if_busy+0x30>
    }
    else
    {
        return 0;
   409bc:	0005883a 	mov	r2,zero
    }
}
   409c0:	e037883a 	mov	sp,fp
   409c4:	df000017 	ldw	fp,0(sp)
   409c8:	dec00104 	addi	sp,sp,4
   409cc:	f800283a 	ret

000409d0 <write_to_i2c_device>:

void write_to_i2c_device(alt_u8 i2c_device_addr, alt_u8 i2c_reg_addr,alt_u8 no_bytes,alt_u32 data)
{
   409d0:	defffa04 	addi	sp,sp,-24
   409d4:	dfc00515 	stw	ra,20(sp)
   409d8:	df000415 	stw	fp,16(sp)
   409dc:	df000404 	addi	fp,sp,16
   409e0:	2005883a 	mov	r2,r4
   409e4:	2809883a 	mov	r4,r5
   409e8:	3007883a 	mov	r3,r6
   409ec:	e1fffc15 	stw	r7,-16(fp)
   409f0:	e0bfff05 	stb	r2,-4(fp)
   409f4:	2005883a 	mov	r2,r4
   409f8:	e0bffe05 	stb	r2,-8(fp)
   409fc:	1805883a 	mov	r2,r3
   40a00:	e0bffd05 	stb	r2,-12(fp)
    //write to address register of i2c mm if
    IOWR(I2C_AVALON_MM_IF_0_BASE,ADDR_REG, i2c_reg_addr << 8 | i2c_device_addr);
   40a04:	e0bffe03 	ldbu	r2,-8(fp)
   40a08:	1006923a 	slli	r3,r2,8
   40a0c:	e0bfff03 	ldbu	r2,-4(fp)
   40a10:	1886b03a 	or	r3,r3,r2
   40a14:	00800234 	movhi	r2,8
   40a18:	10c40135 	stwio	r3,4100(r2)
    //write to the data register of the i2c mm if
    IOWR(I2C_AVALON_MM_IF_0_BASE,WRITE_REG,data);
   40a1c:	e0fffc17 	ldw	r3,-16(fp)
   40a20:	00800234 	movhi	r2,8
   40a24:	10c40235 	stwio	r3,4104(r2)
    //Set the corresponding bits of the ctrl register to enable the i2c communication
    IOWR(I2C_AVALON_MM_IF_0_BASE,CTRL_REG,no_bytes << 2 | CMD_ENA_WR);
   40a28:	e0bffd03 	ldbu	r2,-12(fp)
   40a2c:	100490ba 	slli	r2,r2,2
   40a30:	10c00054 	ori	r3,r2,1
   40a34:	00800234 	movhi	r2,8
   40a38:	10c40035 	stwio	r3,4096(r2)
    //Check for busy in the ctrl register (i2c busy or mm if busy), and continue when no longer busy
    while(check_mm_if_busy()) continue;
   40a3c:	00000106 	br	40a44 <write_to_i2c_device+0x74>
   40a40:	0001883a 	nop
   40a44:	00409900 	call	40990 <check_mm_if_busy>
   40a48:	103ffd1e 	bne	r2,zero,40a40 <write_to_i2c_device+0x70>
}
   40a4c:	0001883a 	nop
   40a50:	0001883a 	nop
   40a54:	e037883a 	mov	sp,fp
   40a58:	dfc00117 	ldw	ra,4(sp)
   40a5c:	df000017 	ldw	fp,0(sp)
   40a60:	dec00204 	addi	sp,sp,8
   40a64:	f800283a 	ret

00040a68 <read_from_i2c_device>:

void read_from_i2c_device(alt_u8 i2c_device_addr,alt_u8 i2c_reg_addr,alt_u8 no_bytes, alt_u8* data)
{
   40a68:	defff404 	addi	sp,sp,-48
   40a6c:	dfc00b15 	stw	ra,44(sp)
   40a70:	df000a15 	stw	fp,40(sp)
   40a74:	df000a04 	addi	fp,sp,40
   40a78:	2005883a 	mov	r2,r4
   40a7c:	2809883a 	mov	r4,r5
   40a80:	3007883a 	mov	r3,r6
   40a84:	e1fff615 	stw	r7,-40(fp)
   40a88:	e0bff905 	stb	r2,-28(fp)
   40a8c:	2005883a 	mov	r2,r4
   40a90:	e0bff805 	stb	r2,-32(fp)
   40a94:	1805883a 	mov	r2,r3
   40a98:	e0bff705 	stb	r2,-36(fp)
    alt_u32 read_reg[2] = {0};
   40a9c:	0005883a 	mov	r2,zero
   40aa0:	0007883a 	mov	r3,zero
   40aa4:	e0bffc15 	stw	r2,-16(fp)
   40aa8:	e0fffd15 	stw	r3,-12(fp)
    alt_u8 data_temp[8] = {0};
   40aac:	e03ffa15 	stw	zero,-24(fp)
   40ab0:	e03ffb15 	stw	zero,-20(fp)

    //write to address register of i2c mm if
    //6..0: 7-bits i2c device addres
    //15..8: 8 bits register address of i2c device
    IOWR(I2C_AVALON_MM_IF_0_BASE,ADDR_REG, i2c_reg_addr << 8 | i2c_device_addr);
   40ab4:	e0bff803 	ldbu	r2,-32(fp)
   40ab8:	1006923a 	slli	r3,r2,8
   40abc:	e0bff903 	ldbu	r2,-28(fp)
   40ac0:	1886b03a 	or	r3,r3,r2
   40ac4:	00800234 	movhi	r2,8
   40ac8:	10c40135 	stwio	r3,4100(r2)
    //Write to i2c mm if ctrl register to enable i2c command
    IOWR(I2C_AVALON_MM_IF_0_BASE,CTRL_REG, CMD_ENA_WR);
   40acc:	00c00044 	movi	r3,1
   40ad0:	00800234 	movhi	r2,8
   40ad4:	10c40035 	stwio	r3,4096(r2)
    //Check for busy in the ctrl register (i2c busy or mm if busy), and continue when no longer busy
    while(check_mm_if_busy()) continue;
   40ad8:	00000106 	br	40ae0 <read_from_i2c_device+0x78>
   40adc:	0001883a 	nop
   40ae0:	00409900 	call	40990 <check_mm_if_busy>
   40ae4:	103ffd1e 	bne	r2,zero,40adc <read_from_i2c_device+0x74>

    //no_bytes to be read from the i2c device

    IOWR(I2C_AVALON_MM_IF_0_BASE,CTRL_REG,no_bytes << 2 | CMD_ENA_RD);
   40ae8:	e0bff703 	ldbu	r2,-36(fp)
   40aec:	100490ba 	slli	r2,r2,2
   40af0:	10c000d4 	ori	r3,r2,3
   40af4:	00800234 	movhi	r2,8
   40af8:	10c40035 	stwio	r3,4096(r2)
    while(check_mm_if_busy()) continue;
   40afc:	00000106 	br	40b04 <read_from_i2c_device+0x9c>
   40b00:	0001883a 	nop
   40b04:	00409900 	call	40990 <check_mm_if_busy>
   40b08:	103ffd1e 	bne	r2,zero,40b00 <read_from_i2c_device+0x98>

    read_reg[0] = IORD(I2C_AVALON_MM_IF_0_BASE,READ_REG_LOW);
   40b0c:	00800234 	movhi	r2,8
   40b10:	10840337 	ldwio	r2,4108(r2)
   40b14:	e0bffc15 	stw	r2,-16(fp)
    read_reg[1] = IORD(I2C_AVALON_MM_IF_0_BASE,READ_REG_HIGH);
   40b18:	00800234 	movhi	r2,8
   40b1c:	10840437 	ldwio	r2,4112(r2)
   40b20:	e0bffd15 	stw	r2,-12(fp)

    //Move data in to byte array
    for(int i = 0; i<4; i++) {
   40b24:	e03fff15 	stw	zero,-4(fp)
   40b28:	00001306 	br	40b78 <read_from_i2c_device+0x110>
        data_temp[i] = (read_reg[0] >> i*8) & 0xff;
   40b2c:	e0fffc17 	ldw	r3,-16(fp)
   40b30:	e0bfff17 	ldw	r2,-4(fp)
   40b34:	100490fa 	slli	r2,r2,3
   40b38:	1884d83a 	srl	r2,r3,r2
   40b3c:	1007883a 	mov	r3,r2
   40b40:	e0bfff17 	ldw	r2,-4(fp)
   40b44:	e085883a 	add	r2,fp,r2
   40b48:	10fffa05 	stb	r3,-24(r2)
        data_temp[i+4] = (read_reg[1] >> i*8) & 0xff;
   40b4c:	e0fffd17 	ldw	r3,-12(fp)
   40b50:	e0bfff17 	ldw	r2,-4(fp)
   40b54:	100490fa 	slli	r2,r2,3
   40b58:	1886d83a 	srl	r3,r3,r2
   40b5c:	e0bfff17 	ldw	r2,-4(fp)
   40b60:	10800104 	addi	r2,r2,4
   40b64:	e085883a 	add	r2,fp,r2
   40b68:	10fffa05 	stb	r3,-24(r2)
    for(int i = 0; i<4; i++) {
   40b6c:	e0bfff17 	ldw	r2,-4(fp)
   40b70:	10800044 	addi	r2,r2,1
   40b74:	e0bfff15 	stw	r2,-4(fp)
   40b78:	e0bfff17 	ldw	r2,-4(fp)
   40b7c:	10800110 	cmplti	r2,r2,4
   40b80:	103fea1e 	bne	r2,zero,40b2c <read_from_i2c_device+0xc4>
    }

    //reverse byte array to have first received byte in the lowest array position
    for(int i = 0; i<no_bytes; i++) {
   40b84:	e03ffe15 	stw	zero,-8(fp)
   40b88:	00000d06 	br	40bc0 <read_from_i2c_device+0x158>
        data[i] = data_temp[(no_bytes-1)-i];
   40b8c:	e0bff703 	ldbu	r2,-36(fp)
   40b90:	10ffffc4 	addi	r3,r2,-1
   40b94:	e0bffe17 	ldw	r2,-8(fp)
   40b98:	1887c83a 	sub	r3,r3,r2
   40b9c:	e0bffe17 	ldw	r2,-8(fp)
   40ba0:	e13ff617 	ldw	r4,-40(fp)
   40ba4:	2085883a 	add	r2,r4,r2
   40ba8:	e0c7883a 	add	r3,fp,r3
   40bac:	18fffa03 	ldbu	r3,-24(r3)
   40bb0:	10c00005 	stb	r3,0(r2)
    for(int i = 0; i<no_bytes; i++) {
   40bb4:	e0bffe17 	ldw	r2,-8(fp)
   40bb8:	10800044 	addi	r2,r2,1
   40bbc:	e0bffe15 	stw	r2,-8(fp)
   40bc0:	e0bff703 	ldbu	r2,-36(fp)
   40bc4:	e0fffe17 	ldw	r3,-8(fp)
   40bc8:	18bff016 	blt	r3,r2,40b8c <read_from_i2c_device+0x124>
     // printf("i: %d, no_bytes: %d\n" ,i,(no_bytes-1)-i);
    }

}
   40bcc:	0001883a 	nop
   40bd0:	0001883a 	nop
   40bd4:	e037883a 	mov	sp,fp
   40bd8:	dfc00117 	ldw	ra,4(sp)
   40bdc:	df000017 	ldw	fp,0(sp)
   40be0:	dec00204 	addi	sp,sp,8
   40be4:	f800283a 	ret

00040be8 <__divsf3>:
   40be8:	defff604 	addi	sp,sp,-40
   40bec:	2006d5fa 	srli	r3,r4,23
   40bf0:	dcc00415 	stw	r19,16(sp)
   40bf4:	2026d7fa 	srli	r19,r4,31
   40bf8:	00802034 	movhi	r2,128
   40bfc:	dd000515 	stw	r20,20(sp)
   40c00:	dc400215 	stw	r17,8(sp)
   40c04:	10bfffc4 	addi	r2,r2,-1
   40c08:	dfc00915 	stw	ra,36(sp)
   40c0c:	ddc00815 	stw	r23,32(sp)
   40c10:	dd800715 	stw	r22,28(sp)
   40c14:	dd400615 	stw	r21,24(sp)
   40c18:	dc800315 	stw	r18,12(sp)
   40c1c:	dc000115 	stw	r16,4(sp)
   40c20:	18c03fcc 	andi	r3,r3,255
   40c24:	1128703a 	and	r20,r2,r4
   40c28:	9823883a 	mov	r17,r19
   40c2c:	18004d26 	beq	r3,zero,40d64 <__divsf3+0x17c>
   40c30:	18803fe0 	cmpeqi	r2,r3,255
   40c34:	1000501e 	bne	r2,zero,40d78 <__divsf3+0x190>
   40c38:	a00490fa 	slli	r2,r20,3
   40c3c:	1d7fe044 	addi	r21,r3,-127
   40c40:	0021883a 	mov	r16,zero
   40c44:	15010034 	orhi	r20,r2,1024
   40c48:	002f883a 	mov	r23,zero
   40c4c:	2806d5fa 	srli	r3,r5,23
   40c50:	01002034 	movhi	r4,128
   40c54:	213fffc4 	addi	r4,r4,-1
   40c58:	18c03fcc 	andi	r3,r3,255
   40c5c:	282cd7fa 	srli	r22,r5,31
   40c60:	2164703a 	and	r18,r4,r5
   40c64:	18002426 	beq	r3,zero,40cf8 <__divsf3+0x110>
   40c68:	18803fe0 	cmpeqi	r2,r3,255
   40c6c:	10001e1e 	bne	r2,zero,40ce8 <__divsf3+0x100>
   40c70:	900890fa 	slli	r4,r18,3
   40c74:	18ffe044 	addi	r3,r3,-127
   40c78:	000b883a 	mov	r5,zero
   40c7c:	24810034 	orhi	r18,r4,1024
   40c80:	9da6f03a 	xor	r19,r19,r22
   40c84:	80800428 	cmpgeui	r2,r16,16
   40c88:	9809883a 	mov	r4,r19
   40c8c:	a8ebc83a 	sub	r21,r21,r3
   40c90:	1000b11e 	bne	r2,zero,40f58 <__divsf3+0x370>
   40c94:	802090ba 	slli	r16,r16,2
   40c98:	00800134 	movhi	r2,4
   40c9c:	8085883a 	add	r2,r16,r2
   40ca0:	10832a17 	ldw	r2,3240(r2)
   40ca4:	1000683a 	jmp	r2
   40ca8:	00040f58 	cmpnei	zero,zero,4157
   40cac:	00040df8 	rdprs	zero,zero,4151
   40cb0:	00040e44 	movi	zero,4153
   40cb4:	00040e78 	rdprs	zero,zero,4153
   40cb8:	00040e44 	movi	zero,4153
   40cbc:	00040ed0 	cmplti	zero,zero,4155
   40cc0:	00040e44 	movi	zero,4153
   40cc4:	00040e78 	rdprs	zero,zero,4153
   40cc8:	00040df8 	rdprs	zero,zero,4151
   40ccc:	00040df8 	rdprs	zero,zero,4151
   40cd0:	00040ed0 	cmplti	zero,zero,4155
   40cd4:	00040e78 	rdprs	zero,zero,4153
   40cd8:	00040e54 	movui	zero,4153
   40cdc:	00040e54 	movui	zero,4153
   40ce0:	00040e54 	movui	zero,4153
   40ce4:	00040ee4 	muli	zero,zero,4155
   40ce8:	90003f1e 	bne	r18,zero,40de8 <__divsf3+0x200>
   40cec:	ad7fc044 	addi	r21,r21,-255
   40cf0:	00800084 	movi	r2,2
   40cf4:	00000206 	br	40d00 <__divsf3+0x118>
   40cf8:	9000331e 	bne	r18,zero,40dc8 <__divsf3+0x1e0>
   40cfc:	00800044 	movi	r2,1
   40d00:	1420b03a 	or	r16,r2,r16
   40d04:	9da6f03a 	xor	r19,r19,r22
   40d08:	80c003e8 	cmpgeui	r3,r16,15
   40d0c:	9809883a 	mov	r4,r19
   40d10:	1800391e 	bne	r3,zero,40df8 <__divsf3+0x210>
   40d14:	802090ba 	slli	r16,r16,2
   40d18:	00c00134 	movhi	r3,4
   40d1c:	80c7883a 	add	r3,r16,r3
   40d20:	18c34a17 	ldw	r3,3368(r3)
   40d24:	1800683a 	jmp	r3
   40d28:	00040df8 	rdprs	zero,zero,4151
   40d2c:	00040df8 	rdprs	zero,zero,4151
   40d30:	00040e44 	movi	zero,4153
   40d34:	00040fb4 	movhi	zero,4158
   40d38:	00040e44 	movi	zero,4153
   40d3c:	00040ed0 	cmplti	zero,zero,4155
   40d40:	00040e44 	movi	zero,4153
   40d44:	00040fb4 	movhi	zero,4158
   40d48:	00040df8 	rdprs	zero,zero,4151
   40d4c:	00040df8 	rdprs	zero,zero,4151
   40d50:	00040ed0 	cmplti	zero,zero,4155
   40d54:	00040fb4 	movhi	zero,4158
   40d58:	00040e54 	movui	zero,4153
   40d5c:	00040e54 	movui	zero,4153
   40d60:	00040e54 	movui	zero,4153
   40d64:	a0000d1e 	bne	r20,zero,40d9c <__divsf3+0x1b4>
   40d68:	04000104 	movi	r16,4
   40d6c:	002b883a 	mov	r21,zero
   40d70:	05c00044 	movi	r23,1
   40d74:	003fb506 	br	40c4c <__divsf3+0x64>
   40d78:	a000041e 	bne	r20,zero,40d8c <__divsf3+0x1a4>
   40d7c:	04000204 	movi	r16,8
   40d80:	05403fc4 	movi	r21,255
   40d84:	05c00084 	movi	r23,2
   40d88:	003fb006 	br	40c4c <__divsf3+0x64>
   40d8c:	04000304 	movi	r16,12
   40d90:	05403fc4 	movi	r21,255
   40d94:	05c000c4 	movi	r23,3
   40d98:	003fac06 	br	40c4c <__divsf3+0x64>
   40d9c:	a009883a 	mov	r4,r20
   40da0:	d9400015 	stw	r5,0(sp)
   40da4:	00417180 	call	41718 <__clzsi2>
   40da8:	10fffec4 	addi	r3,r2,-5
   40dac:	a0e8983a 	sll	r20,r20,r3
   40db0:	00ffe284 	movi	r3,-118
   40db4:	d9400017 	ldw	r5,0(sp)
   40db8:	18abc83a 	sub	r21,r3,r2
   40dbc:	0021883a 	mov	r16,zero
   40dc0:	002f883a 	mov	r23,zero
   40dc4:	003fa106 	br	40c4c <__divsf3+0x64>
   40dc8:	9009883a 	mov	r4,r18
   40dcc:	00417180 	call	41718 <__clzsi2>
   40dd0:	10fffec4 	addi	r3,r2,-5
   40dd4:	90e4983a 	sll	r18,r18,r3
   40dd8:	00ffe284 	movi	r3,-118
   40ddc:	1887c83a 	sub	r3,r3,r2
   40de0:	000b883a 	mov	r5,zero
   40de4:	003fa606 	br	40c80 <__divsf3+0x98>
   40de8:	840000d4 	ori	r16,r16,3
   40dec:	00c03fc4 	movi	r3,255
   40df0:	014000c4 	movi	r5,3
   40df4:	003fa206 	br	40c80 <__divsf3+0x98>
   40df8:	9823883a 	mov	r17,r19
   40dfc:	00ffffc4 	movi	r3,-1
   40e00:	0009883a 	mov	r4,zero
   40e04:	18803fcc 	andi	r2,r3,255
   40e08:	100495fa 	slli	r2,r2,23
   40e0c:	882297fa 	slli	r17,r17,31
   40e10:	1104b03a 	or	r2,r2,r4
   40e14:	1444b03a 	or	r2,r2,r17
   40e18:	dfc00917 	ldw	ra,36(sp)
   40e1c:	ddc00817 	ldw	r23,32(sp)
   40e20:	dd800717 	ldw	r22,28(sp)
   40e24:	dd400617 	ldw	r21,24(sp)
   40e28:	dd000517 	ldw	r20,20(sp)
   40e2c:	dcc00417 	ldw	r19,16(sp)
   40e30:	dc800317 	ldw	r18,12(sp)
   40e34:	dc400217 	ldw	r17,8(sp)
   40e38:	dc000117 	ldw	r16,4(sp)
   40e3c:	dec00a04 	addi	sp,sp,40
   40e40:	f800283a 	ret
   40e44:	2023883a 	mov	r17,r4
   40e48:	0007883a 	mov	r3,zero
   40e4c:	0009883a 	mov	r4,zero
   40e50:	003fec06 	br	40e04 <__divsf3+0x21c>
   40e54:	b88000a0 	cmpeqi	r2,r23,2
   40e58:	103fe81e 	bne	r2,zero,40dfc <__divsf3+0x214>
   40e5c:	b88000e0 	cmpeqi	r2,r23,3
   40e60:	1000241e 	bne	r2,zero,40ef4 <__divsf3+0x30c>
   40e64:	bdc00060 	cmpeqi	r23,r23,1
   40e68:	b8006126 	beq	r23,zero,40ff0 <__divsf3+0x408>
   40e6c:	0007883a 	mov	r3,zero
   40e70:	0009883a 	mov	r4,zero
   40e74:	003fe306 	br	40e04 <__divsf3+0x21c>
   40e78:	294000e0 	cmpeqi	r5,r5,3
   40e7c:	b023883a 	mov	r17,r22
   40e80:	28005d1e 	bne	r5,zero,40ff8 <__divsf3+0x410>
   40e84:	a8c01fc4 	addi	r3,r21,127
   40e88:	00c01f0e 	bge	zero,r3,40f08 <__divsf3+0x320>
   40e8c:	908001cc 	andi	r2,r18,7
   40e90:	10000426 	beq	r2,zero,40ea4 <__divsf3+0x2bc>
   40e94:	908003cc 	andi	r2,r18,15
   40e98:	10800120 	cmpeqi	r2,r2,4
   40e9c:	1000011e 	bne	r2,zero,40ea4 <__divsf3+0x2bc>
   40ea0:	94800104 	addi	r18,r18,4
   40ea4:	9082002c 	andhi	r2,r18,2048
   40ea8:	10000426 	beq	r2,zero,40ebc <__divsf3+0x2d4>
   40eac:	00be0034 	movhi	r2,63488
   40eb0:	10bfffc4 	addi	r2,r2,-1
   40eb4:	90a4703a 	and	r18,r18,r2
   40eb8:	a8c02004 	addi	r3,r21,128
   40ebc:	18803fc8 	cmpgei	r2,r3,255
   40ec0:	103fce1e 	bne	r2,zero,40dfc <__divsf3+0x214>
   40ec4:	900891ba 	slli	r4,r18,6
   40ec8:	2008d27a 	srli	r4,r4,9
   40ecc:	003fcd06 	br	40e04 <__divsf3+0x21c>
   40ed0:	01002034 	movhi	r4,128
   40ed4:	0023883a 	mov	r17,zero
   40ed8:	213fffc4 	addi	r4,r4,-1
   40edc:	00ffffc4 	movi	r3,-1
   40ee0:	003fc806 	br	40e04 <__divsf3+0x21c>
   40ee4:	a080102c 	andhi	r2,r20,64
   40ee8:	10000226 	beq	r2,zero,40ef4 <__divsf3+0x30c>
   40eec:	9080102c 	andhi	r2,r18,64
   40ef0:	10003926 	beq	r2,zero,40fd8 <__divsf3+0x3f0>
   40ef4:	00802034 	movhi	r2,128
   40ef8:	a1001034 	orhi	r4,r20,64
   40efc:	10bfffc4 	addi	r2,r2,-1
   40f00:	2088703a 	and	r4,r4,r2
   40f04:	003ff506 	br	40edc <__divsf3+0x2f4>
   40f08:	00800044 	movi	r2,1
   40f0c:	10c5c83a 	sub	r2,r2,r3
   40f10:	10c00710 	cmplti	r3,r2,28
   40f14:	183fd526 	beq	r3,zero,40e6c <__divsf3+0x284>
   40f18:	a8c02784 	addi	r3,r21,158
   40f1c:	90c6983a 	sll	r3,r18,r3
   40f20:	9088d83a 	srl	r4,r18,r2
   40f24:	1806c03a 	cmpne	r3,r3,zero
   40f28:	20c8b03a 	or	r4,r4,r3
   40f2c:	208001cc 	andi	r2,r4,7
   40f30:	10000426 	beq	r2,zero,40f44 <__divsf3+0x35c>
   40f34:	208003cc 	andi	r2,r4,15
   40f38:	10800120 	cmpeqi	r2,r2,4
   40f3c:	1000011e 	bne	r2,zero,40f44 <__divsf3+0x35c>
   40f40:	21000104 	addi	r4,r4,4
   40f44:	2081002c 	andhi	r2,r4,1024
   40f48:	10001f26 	beq	r2,zero,40fc8 <__divsf3+0x3e0>
   40f4c:	00c00044 	movi	r3,1
   40f50:	0009883a 	mov	r4,zero
   40f54:	003fab06 	br	40e04 <__divsf3+0x21c>
   40f58:	a004917a 	slli	r2,r20,5
   40f5c:	900c917a 	slli	r6,r18,5
   40f60:	1180102e 	bgeu	r2,r6,40fa4 <__divsf3+0x3bc>
   40f64:	ad7fffc4 	addi	r21,r21,-1
   40f68:	014006c4 	movi	r5,27
   40f6c:	0009883a 	mov	r4,zero
   40f70:	1007883a 	mov	r3,r2
   40f74:	297fffc4 	addi	r5,r5,-1
   40f78:	1085883a 	add	r2,r2,r2
   40f7c:	2109883a 	add	r4,r4,r4
   40f80:	18000116 	blt	r3,zero,40f88 <__divsf3+0x3a0>
   40f84:	11800236 	bltu	r2,r6,40f90 <__divsf3+0x3a8>
   40f88:	1185c83a 	sub	r2,r2,r6
   40f8c:	21000054 	ori	r4,r4,1
   40f90:	283ff71e 	bne	r5,zero,40f70 <__divsf3+0x388>
   40f94:	1004c03a 	cmpne	r2,r2,zero
   40f98:	1124b03a 	or	r18,r2,r4
   40f9c:	9823883a 	mov	r17,r19
   40fa0:	003fb806 	br	40e84 <__divsf3+0x29c>
   40fa4:	1185c83a 	sub	r2,r2,r6
   40fa8:	01400684 	movi	r5,26
   40fac:	01000044 	movi	r4,1
   40fb0:	003fef06 	br	40f70 <__divsf3+0x388>
   40fb4:	108000a0 	cmpeqi	r2,r2,2
   40fb8:	0087c83a 	sub	r3,zero,r2
   40fbc:	b023883a 	mov	r17,r22
   40fc0:	0009883a 	mov	r4,zero
   40fc4:	003f8f06 	br	40e04 <__divsf3+0x21c>
   40fc8:	200891ba 	slli	r4,r4,6
   40fcc:	0007883a 	mov	r3,zero
   40fd0:	2008d27a 	srli	r4,r4,9
   40fd4:	003f8b06 	br	40e04 <__divsf3+0x21c>
   40fd8:	00802034 	movhi	r2,128
   40fdc:	91001034 	orhi	r4,r18,64
   40fe0:	10bfffc4 	addi	r2,r2,-1
   40fe4:	2088703a 	and	r4,r4,r2
   40fe8:	b023883a 	mov	r17,r22
   40fec:	003fbb06 	br	40edc <__divsf3+0x2f4>
   40ff0:	a025883a 	mov	r18,r20
   40ff4:	003fa306 	br	40e84 <__divsf3+0x29c>
   40ff8:	9029883a 	mov	r20,r18
   40ffc:	003fbd06 	br	40ef4 <__divsf3+0x30c>

00041000 <__mulsf3>:
   41000:	defff604 	addi	sp,sp,-40
   41004:	2004d5fa 	srli	r2,r4,23
   41008:	dd400615 	stw	r21,24(sp)
   4100c:	202ad7fa 	srli	r21,r4,31
   41010:	00c02034 	movhi	r3,128
   41014:	dd000515 	stw	r20,20(sp)
   41018:	dcc00415 	stw	r19,16(sp)
   4101c:	18ffffc4 	addi	r3,r3,-1
   41020:	dfc00915 	stw	ra,36(sp)
   41024:	ddc00815 	stw	r23,32(sp)
   41028:	dd800715 	stw	r22,28(sp)
   4102c:	dc800315 	stw	r18,12(sp)
   41030:	dc400215 	stw	r17,8(sp)
   41034:	dc000115 	stw	r16,4(sp)
   41038:	10803fcc 	andi	r2,r2,255
   4103c:	1928703a 	and	r20,r3,r4
   41040:	a827883a 	mov	r19,r21
   41044:	10006c26 	beq	r2,zero,411f8 <__mulsf3+0x1f8>
   41048:	10c03fe0 	cmpeqi	r3,r2,255
   4104c:	18006f1e 	bne	r3,zero,4120c <__mulsf3+0x20c>
   41050:	a00890fa 	slli	r4,r20,3
   41054:	14bfe044 	addi	r18,r2,-127
   41058:	0023883a 	mov	r17,zero
   4105c:	25010034 	orhi	r20,r4,1024
   41060:	002f883a 	mov	r23,zero
   41064:	2804d5fa 	srli	r2,r5,23
   41068:	04002034 	movhi	r16,128
   4106c:	843fffc4 	addi	r16,r16,-1
   41070:	10803fcc 	andi	r2,r2,255
   41074:	282cd7fa 	srli	r22,r5,31
   41078:	8160703a 	and	r16,r16,r5
   4107c:	10005626 	beq	r2,zero,411d8 <__mulsf3+0x1d8>
   41080:	10c03fe0 	cmpeqi	r3,r2,255
   41084:	1800241e 	bne	r3,zero,41118 <__mulsf3+0x118>
   41088:	802090fa 	slli	r16,r16,3
   4108c:	10bfe044 	addi	r2,r2,-127
   41090:	1485883a 	add	r2,r2,r18
   41094:	88c002c8 	cmpgei	r3,r17,11
   41098:	84010034 	orhi	r16,r16,1024
   4109c:	0009883a 	mov	r4,zero
   410a0:	14800044 	addi	r18,r2,1
   410a4:	1800291e 	bne	r3,zero,4114c <__mulsf3+0x14c>
   410a8:	b566f03a 	xor	r19,r22,r21
   410ac:	88c000c8 	cmpgei	r3,r17,3
   410b0:	1800221e 	bne	r3,zero,4113c <__mulsf3+0x13c>
   410b4:	8c7fffc4 	addi	r17,r17,-1
   410b8:	8c4000a8 	cmpgeui	r17,r17,2
   410bc:	8800951e 	bne	r17,zero,41314 <__mulsf3+0x314>
   410c0:	208000a0 	cmpeqi	r2,r4,2
   410c4:	1000561e 	bne	r2,zero,41220 <__mulsf3+0x220>
   410c8:	21000060 	cmpeqi	r4,r4,1
   410cc:	20002726 	beq	r4,zero,4116c <__mulsf3+0x16c>
   410d0:	0007883a 	mov	r3,zero
   410d4:	0009883a 	mov	r4,zero
   410d8:	18803fcc 	andi	r2,r3,255
   410dc:	100495fa 	slli	r2,r2,23
   410e0:	982697fa 	slli	r19,r19,31
   410e4:	1104b03a 	or	r2,r2,r4
   410e8:	14c4b03a 	or	r2,r2,r19
   410ec:	dfc00917 	ldw	ra,36(sp)
   410f0:	ddc00817 	ldw	r23,32(sp)
   410f4:	dd800717 	ldw	r22,28(sp)
   410f8:	dd400617 	ldw	r21,24(sp)
   410fc:	dd000517 	ldw	r20,20(sp)
   41100:	dcc00417 	ldw	r19,16(sp)
   41104:	dc800317 	ldw	r18,12(sp)
   41108:	dc400217 	ldw	r17,8(sp)
   4110c:	dc000117 	ldw	r16,4(sp)
   41110:	dec00a04 	addi	sp,sp,40
   41114:	f800283a 	ret
   41118:	90803fc4 	addi	r2,r18,255
   4111c:	80004826 	beq	r16,zero,41240 <__mulsf3+0x240>
   41120:	8c4000d4 	ori	r17,r17,3
   41124:	88c002c8 	cmpgei	r3,r17,11
   41128:	b56af03a 	xor	r21,r22,r21
   4112c:	94804004 	addi	r18,r18,256
   41130:	1800a41e 	bne	r3,zero,413c4 <__mulsf3+0x3c4>
   41134:	a827883a 	mov	r19,r21
   41138:	010000c4 	movi	r4,3
   4113c:	00c00044 	movi	r3,1
   41140:	1c46983a 	sll	r3,r3,r17
   41144:	19414c0c 	andi	r5,r3,1328
   41148:	28001b26 	beq	r5,zero,411b8 <__mulsf3+0x1b8>
   4114c:	b88000a0 	cmpeqi	r2,r23,2
   41150:	1000331e 	bne	r2,zero,41220 <__mulsf3+0x220>
   41154:	b88000e0 	cmpeqi	r2,r23,3
   41158:	10008f1e 	bne	r2,zero,41398 <__mulsf3+0x398>
   4115c:	b809883a 	mov	r4,r23
   41160:	21000060 	cmpeqi	r4,r4,1
   41164:	a021883a 	mov	r16,r20
   41168:	203fd91e 	bne	r4,zero,410d0 <__mulsf3+0xd0>
   4116c:	90c01fc4 	addi	r3,r18,127
   41170:	00c0540e 	bge	zero,r3,412c4 <__mulsf3+0x2c4>
   41174:	808001cc 	andi	r2,r16,7
   41178:	10000426 	beq	r2,zero,4118c <__mulsf3+0x18c>
   4117c:	808003cc 	andi	r2,r16,15
   41180:	10800120 	cmpeqi	r2,r2,4
   41184:	1000011e 	bne	r2,zero,4118c <__mulsf3+0x18c>
   41188:	84000104 	addi	r16,r16,4
   4118c:	8082002c 	andhi	r2,r16,2048
   41190:	10000426 	beq	r2,zero,411a4 <__mulsf3+0x1a4>
   41194:	00be0034 	movhi	r2,63488
   41198:	10bfffc4 	addi	r2,r2,-1
   4119c:	80a0703a 	and	r16,r16,r2
   411a0:	90c02004 	addi	r3,r18,128
   411a4:	18803fc8 	cmpgei	r2,r3,255
   411a8:	10001d1e 	bne	r2,zero,41220 <__mulsf3+0x220>
   411ac:	800891ba 	slli	r4,r16,6
   411b0:	2008d27a 	srli	r4,r4,9
   411b4:	003fc806 	br	410d8 <__mulsf3+0xd8>
   411b8:	1940900c 	andi	r5,r3,576
   411bc:	28001b1e 	bne	r5,zero,4122c <__mulsf3+0x22c>
   411c0:	18c0220c 	andi	r3,r3,136
   411c4:	18005326 	beq	r3,zero,41314 <__mulsf3+0x314>
   411c8:	b027883a 	mov	r19,r22
   411cc:	8029883a 	mov	r20,r16
   411d0:	202f883a 	mov	r23,r4
   411d4:	003fdd06 	br	4114c <__mulsf3+0x14c>
   411d8:	80002f1e 	bne	r16,zero,41298 <__mulsf3+0x298>
   411dc:	8c400054 	ori	r17,r17,1
   411e0:	9005883a 	mov	r2,r18
   411e4:	88c002c8 	cmpgei	r3,r17,11
   411e8:	01000044 	movi	r4,1
   411ec:	14800044 	addi	r18,r2,1
   411f0:	183fad26 	beq	r3,zero,410a8 <__mulsf3+0xa8>
   411f4:	003fd506 	br	4114c <__mulsf3+0x14c>
   411f8:	a0001c1e 	bne	r20,zero,4126c <__mulsf3+0x26c>
   411fc:	04400104 	movi	r17,4
   41200:	0025883a 	mov	r18,zero
   41204:	05c00044 	movi	r23,1
   41208:	003f9606 	br	41064 <__mulsf3+0x64>
   4120c:	a000131e 	bne	r20,zero,4125c <__mulsf3+0x25c>
   41210:	04400204 	movi	r17,8
   41214:	04803fc4 	movi	r18,255
   41218:	05c00084 	movi	r23,2
   4121c:	003f9106 	br	41064 <__mulsf3+0x64>
   41220:	00ffffc4 	movi	r3,-1
   41224:	0009883a 	mov	r4,zero
   41228:	003fab06 	br	410d8 <__mulsf3+0xd8>
   4122c:	01002034 	movhi	r4,128
   41230:	0027883a 	mov	r19,zero
   41234:	213fffc4 	addi	r4,r4,-1
   41238:	00ffffc4 	movi	r3,-1
   4123c:	003fa606 	br	410d8 <__mulsf3+0xd8>
   41240:	8c400094 	ori	r17,r17,2
   41244:	88c002c8 	cmpgei	r3,r17,11
   41248:	94804004 	addi	r18,r18,256
   4124c:	183fbf1e 	bne	r3,zero,4114c <__mulsf3+0x14c>
   41250:	b566f03a 	xor	r19,r22,r21
   41254:	01000084 	movi	r4,2
   41258:	003f9406 	br	410ac <__mulsf3+0xac>
   4125c:	04400304 	movi	r17,12
   41260:	04803fc4 	movi	r18,255
   41264:	05c000c4 	movi	r23,3
   41268:	003f7e06 	br	41064 <__mulsf3+0x64>
   4126c:	a009883a 	mov	r4,r20
   41270:	d9400015 	stw	r5,0(sp)
   41274:	00417180 	call	41718 <__clzsi2>
   41278:	10fffec4 	addi	r3,r2,-5
   4127c:	04bfe284 	movi	r18,-118
   41280:	a0e8983a 	sll	r20,r20,r3
   41284:	d9400017 	ldw	r5,0(sp)
   41288:	90a5c83a 	sub	r18,r18,r2
   4128c:	0023883a 	mov	r17,zero
   41290:	002f883a 	mov	r23,zero
   41294:	003f7306 	br	41064 <__mulsf3+0x64>
   41298:	8009883a 	mov	r4,r16
   4129c:	00417180 	call	41718 <__clzsi2>
   412a0:	10fffec4 	addi	r3,r2,-5
   412a4:	9085c83a 	sub	r2,r18,r2
   412a8:	80e0983a 	sll	r16,r16,r3
   412ac:	10bfe284 	addi	r2,r2,-118
   412b0:	88c002c8 	cmpgei	r3,r17,11
   412b4:	0009883a 	mov	r4,zero
   412b8:	14800044 	addi	r18,r2,1
   412bc:	183f7a26 	beq	r3,zero,410a8 <__mulsf3+0xa8>
   412c0:	003fa206 	br	4114c <__mulsf3+0x14c>
   412c4:	01000044 	movi	r4,1
   412c8:	20c7c83a 	sub	r3,r4,r3
   412cc:	18800708 	cmpgei	r2,r3,28
   412d0:	103f7f1e 	bne	r2,zero,410d0 <__mulsf3+0xd0>
   412d4:	94802784 	addi	r18,r18,158
   412d8:	84a4983a 	sll	r18,r16,r18
   412dc:	80c6d83a 	srl	r3,r16,r3
   412e0:	9024c03a 	cmpne	r18,r18,zero
   412e4:	1c86b03a 	or	r3,r3,r18
   412e8:	188001cc 	andi	r2,r3,7
   412ec:	10000426 	beq	r2,zero,41300 <__mulsf3+0x300>
   412f0:	188003cc 	andi	r2,r3,15
   412f4:	10800120 	cmpeqi	r2,r2,4
   412f8:	1000011e 	bne	r2,zero,41300 <__mulsf3+0x300>
   412fc:	18c00104 	addi	r3,r3,4
   41300:	1881002c 	andhi	r2,r3,1024
   41304:	10002b26 	beq	r2,zero,413b4 <__mulsf3+0x3b4>
   41308:	00c00044 	movi	r3,1
   4130c:	0009883a 	mov	r4,zero
   41310:	003f7106 	br	410d8 <__mulsf3+0xd8>
   41314:	a00ad43a 	srli	r5,r20,16
   41318:	8010d43a 	srli	r8,r16,16
   4131c:	a13fffcc 	andi	r4,r20,65535
   41320:	81bfffcc 	andi	r6,r16,65535
   41324:	218f383a 	mul	r7,r4,r6
   41328:	4129383a 	mul	r20,r8,r4
   4132c:	298d383a 	mul	r6,r5,r6
   41330:	3806d43a 	srli	r3,r7,16
   41334:	2a0b383a 	mul	r5,r5,r8
   41338:	a1a9883a 	add	r20,r20,r6
   4133c:	1d07883a 	add	r3,r3,r20
   41340:	1980022e 	bgeu	r3,r6,4134c <__mulsf3+0x34c>
   41344:	01000074 	movhi	r4,1
   41348:	290b883a 	add	r5,r5,r4
   4134c:	1808943a 	slli	r4,r3,16
   41350:	1820d43a 	srli	r16,r3,16
   41354:	39ffffcc 	andi	r7,r7,65535
   41358:	21c7883a 	add	r3,r4,r7
   4135c:	180891ba 	slli	r4,r3,6
   41360:	8161883a 	add	r16,r16,r5
   41364:	802091ba 	slli	r16,r16,6
   41368:	1806d6ba 	srli	r3,r3,26
   4136c:	2008c03a 	cmpne	r4,r4,zero
   41370:	8142002c 	andhi	r5,r16,2048
   41374:	20c6b03a 	or	r3,r4,r3
   41378:	80e0b03a 	or	r16,r16,r3
   4137c:	28000b26 	beq	r5,zero,413ac <__mulsf3+0x3ac>
   41380:	8004d07a 	srli	r2,r16,1
   41384:	8400004c 	andi	r16,r16,1
   41388:	1420b03a 	or	r16,r2,r16
   4138c:	003f7706 	br	4116c <__mulsf3+0x16c>
   41390:	b027883a 	mov	r19,r22
   41394:	8029883a 	mov	r20,r16
   41398:	00802034 	movhi	r2,128
   4139c:	a1001034 	orhi	r4,r20,64
   413a0:	10bfffc4 	addi	r2,r2,-1
   413a4:	2088703a 	and	r4,r4,r2
   413a8:	003fa306 	br	41238 <__mulsf3+0x238>
   413ac:	1025883a 	mov	r18,r2
   413b0:	003f6e06 	br	4116c <__mulsf3+0x16c>
   413b4:	180891ba 	slli	r4,r3,6
   413b8:	0007883a 	mov	r3,zero
   413bc:	2008d27a 	srli	r4,r4,9
   413c0:	003f4506 	br	410d8 <__mulsf3+0xd8>
   413c4:	8c4003e0 	cmpeqi	r17,r17,15
   413c8:	883ff126 	beq	r17,zero,41390 <__mulsf3+0x390>
   413cc:	a080102c 	andhi	r2,r20,64
   413d0:	103ff126 	beq	r2,zero,41398 <__mulsf3+0x398>
   413d4:	2940102c 	andhi	r5,r5,64
   413d8:	283fef1e 	bne	r5,zero,41398 <__mulsf3+0x398>
   413dc:	81001034 	orhi	r4,r16,64
   413e0:	b027883a 	mov	r19,r22
   413e4:	003f9406 	br	41238 <__mulsf3+0x238>

000413e8 <__floatsisf>:
   413e8:	defffd04 	addi	sp,sp,-12
   413ec:	dfc00215 	stw	ra,8(sp)
   413f0:	dc400115 	stw	r17,4(sp)
   413f4:	dc000015 	stw	r16,0(sp)
   413f8:	20001226 	beq	r4,zero,41444 <__floatsisf+0x5c>
   413fc:	2022d7fa 	srli	r17,r4,31
   41400:	2021883a 	mov	r16,r4
   41404:	20003316 	blt	r4,zero,414d4 <__floatsisf+0xec>
   41408:	8009883a 	mov	r4,r16
   4140c:	00417180 	call	41718 <__clzsi2>
   41410:	1009883a 	mov	r4,r2
   41414:	00802784 	movi	r2,158
   41418:	1105c83a 	sub	r2,r2,r4
   4141c:	10c025c8 	cmpgei	r3,r2,151
   41420:	1800151e 	bne	r3,zero,41478 <__floatsisf+0x90>
   41424:	20c00218 	cmpnei	r3,r4,8
   41428:	18003426 	beq	r3,zero,414fc <__floatsisf+0x114>
   4142c:	20fffe04 	addi	r3,r4,-8
   41430:	80c6983a 	sll	r3,r16,r3
   41434:	01002034 	movhi	r4,128
   41438:	213fffc4 	addi	r4,r4,-1
   4143c:	1906703a 	and	r3,r3,r4
   41440:	00000306 	br	41450 <__floatsisf+0x68>
   41444:	0023883a 	mov	r17,zero
   41448:	0005883a 	mov	r2,zero
   4144c:	0007883a 	mov	r3,zero
   41450:	10803fcc 	andi	r2,r2,255
   41454:	100495fa 	slli	r2,r2,23
   41458:	880897fa 	slli	r4,r17,31
   4145c:	10c4b03a 	or	r2,r2,r3
   41460:	1104b03a 	or	r2,r2,r4
   41464:	dfc00217 	ldw	ra,8(sp)
   41468:	dc400117 	ldw	r17,4(sp)
   4146c:	dc000017 	ldw	r16,0(sp)
   41470:	dec00304 	addi	sp,sp,12
   41474:	f800283a 	ret
   41478:	10c02690 	cmplti	r3,r2,154
   4147c:	18001726 	beq	r3,zero,414dc <__floatsisf+0xf4>
   41480:	20c00160 	cmpeqi	r3,r4,5
   41484:	217ffec4 	addi	r5,r4,-5
   41488:	1800011e 	bne	r3,zero,41490 <__floatsisf+0xa8>
   4148c:	8160983a 	sll	r16,r16,r5
   41490:	017f0034 	movhi	r5,64512
   41494:	297fffc4 	addi	r5,r5,-1
   41498:	818001cc 	andi	r6,r16,7
   4149c:	8146703a 	and	r3,r16,r5
   414a0:	30000926 	beq	r6,zero,414c8 <__floatsisf+0xe0>
   414a4:	840003cc 	andi	r16,r16,15
   414a8:	84000120 	cmpeqi	r16,r16,4
   414ac:	8000061e 	bne	r16,zero,414c8 <__floatsisf+0xe0>
   414b0:	18c00104 	addi	r3,r3,4
   414b4:	1981002c 	andhi	r6,r3,1024
   414b8:	30000326 	beq	r6,zero,414c8 <__floatsisf+0xe0>
   414bc:	008027c4 	movi	r2,159
   414c0:	1946703a 	and	r3,r3,r5
   414c4:	1105c83a 	sub	r2,r2,r4
   414c8:	180691ba 	slli	r3,r3,6
   414cc:	1806d27a 	srli	r3,r3,9
   414d0:	003fdf06 	br	41450 <__floatsisf+0x68>
   414d4:	0121c83a 	sub	r16,zero,r4
   414d8:	003fcb06 	br	41408 <__floatsisf+0x20>
   414dc:	20c006c4 	addi	r3,r4,27
   414e0:	01400144 	movi	r5,5
   414e4:	80c6983a 	sll	r3,r16,r3
   414e8:	290bc83a 	sub	r5,r5,r4
   414ec:	8160d83a 	srl	r16,r16,r5
   414f0:	1806c03a 	cmpne	r3,r3,zero
   414f4:	80e0b03a 	or	r16,r16,r3
   414f8:	003fe506 	br	41490 <__floatsisf+0xa8>
   414fc:	00c02034 	movhi	r3,128
   41500:	18ffffc4 	addi	r3,r3,-1
   41504:	80c6703a 	and	r3,r16,r3
   41508:	00bfe584 	movi	r2,-106
   4150c:	003fd006 	br	41450 <__floatsisf+0x68>

00041510 <__floatunsisf>:
   41510:	20001826 	beq	r4,zero,41574 <__floatunsisf+0x64>
   41514:	defffe04 	addi	sp,sp,-8
   41518:	dc000015 	stw	r16,0(sp)
   4151c:	dfc00115 	stw	ra,4(sp)
   41520:	2021883a 	mov	r16,r4
   41524:	00417180 	call	41718 <__clzsi2>
   41528:	1009883a 	mov	r4,r2
   4152c:	00802784 	movi	r2,158
   41530:	1105c83a 	sub	r2,r2,r4
   41534:	10c025c8 	cmpgei	r3,r2,151
   41538:	1800141e 	bne	r3,zero,4158c <__floatunsisf+0x7c>
   4153c:	20c00218 	cmpnei	r3,r4,8
   41540:	18003126 	beq	r3,zero,41608 <__floatunsisf+0xf8>
   41544:	213ffe04 	addi	r4,r4,-8
   41548:	8106983a 	sll	r3,r16,r4
   4154c:	01002034 	movhi	r4,128
   41550:	213fffc4 	addi	r4,r4,-1
   41554:	1906703a 	and	r3,r3,r4
   41558:	10803fcc 	andi	r2,r2,255
   4155c:	100495fa 	slli	r2,r2,23
   41560:	10c4b03a 	or	r2,r2,r3
   41564:	dfc00117 	ldw	ra,4(sp)
   41568:	dc000017 	ldw	r16,0(sp)
   4156c:	dec00204 	addi	sp,sp,8
   41570:	f800283a 	ret
   41574:	0005883a 	mov	r2,zero
   41578:	10803fcc 	andi	r2,r2,255
   4157c:	100495fa 	slli	r2,r2,23
   41580:	0007883a 	mov	r3,zero
   41584:	10c4b03a 	or	r2,r2,r3
   41588:	f800283a 	ret
   4158c:	10c02690 	cmplti	r3,r2,154
   41590:	18001526 	beq	r3,zero,415e8 <__floatunsisf+0xd8>
   41594:	20c00160 	cmpeqi	r3,r4,5
   41598:	217ffec4 	addi	r5,r4,-5
   4159c:	1800011e 	bne	r3,zero,415a4 <__floatunsisf+0x94>
   415a0:	8160983a 	sll	r16,r16,r5
   415a4:	017f0034 	movhi	r5,64512
   415a8:	297fffc4 	addi	r5,r5,-1
   415ac:	818001cc 	andi	r6,r16,7
   415b0:	8146703a 	and	r3,r16,r5
   415b4:	30000926 	beq	r6,zero,415dc <__floatunsisf+0xcc>
   415b8:	840003cc 	andi	r16,r16,15
   415bc:	84000120 	cmpeqi	r16,r16,4
   415c0:	8000061e 	bne	r16,zero,415dc <__floatunsisf+0xcc>
   415c4:	18c00104 	addi	r3,r3,4
   415c8:	1981002c 	andhi	r6,r3,1024
   415cc:	30000326 	beq	r6,zero,415dc <__floatunsisf+0xcc>
   415d0:	008027c4 	movi	r2,159
   415d4:	1946703a 	and	r3,r3,r5
   415d8:	1105c83a 	sub	r2,r2,r4
   415dc:	180691ba 	slli	r3,r3,6
   415e0:	1806d27a 	srli	r3,r3,9
   415e4:	003fdc06 	br	41558 <__floatunsisf+0x48>
   415e8:	20c006c4 	addi	r3,r4,27
   415ec:	01400144 	movi	r5,5
   415f0:	80c6983a 	sll	r3,r16,r3
   415f4:	290bc83a 	sub	r5,r5,r4
   415f8:	8160d83a 	srl	r16,r16,r5
   415fc:	1806c03a 	cmpne	r3,r3,zero
   41600:	1c20b03a 	or	r16,r3,r16
   41604:	003fe706 	br	415a4 <__floatunsisf+0x94>
   41608:	00c02034 	movhi	r3,128
   4160c:	18ffffc4 	addi	r3,r3,-1
   41610:	80c6703a 	and	r3,r16,r3
   41614:	00bfe584 	movi	r2,-106
   41618:	003fcf06 	br	41558 <__floatunsisf+0x48>

0004161c <__extendsfdf2>:
   4161c:	200ad5fa 	srli	r5,r4,23
   41620:	defffd04 	addi	sp,sp,-12
   41624:	dc000015 	stw	r16,0(sp)
   41628:	29403fcc 	andi	r5,r5,255
   4162c:	04002034 	movhi	r16,128
   41630:	28800044 	addi	r2,r5,1
   41634:	dc400115 	stw	r17,4(sp)
   41638:	843fffc4 	addi	r16,r16,-1
   4163c:	dfc00215 	stw	ra,8(sp)
   41640:	10803f8c 	andi	r2,r2,254
   41644:	2022d7fa 	srli	r17,r4,31
   41648:	8120703a 	and	r16,r16,r4
   4164c:	10000d26 	beq	r2,zero,41684 <__extendsfdf2+0x68>
   41650:	8008d0fa 	srli	r4,r16,3
   41654:	8020977a 	slli	r16,r16,29
   41658:	2940e004 	addi	r5,r5,896
   4165c:	280a953a 	slli	r5,r5,20
   41660:	880697fa 	slli	r3,r17,31
   41664:	8005883a 	mov	r2,r16
   41668:	290ab03a 	or	r5,r5,r4
   4166c:	28c6b03a 	or	r3,r5,r3
   41670:	dfc00217 	ldw	ra,8(sp)
   41674:	dc400117 	ldw	r17,4(sp)
   41678:	dc000017 	ldw	r16,0(sp)
   4167c:	dec00304 	addi	sp,sp,12
   41680:	f800283a 	ret
   41684:	2800111e 	bne	r5,zero,416cc <__extendsfdf2+0xb0>
   41688:	80001926 	beq	r16,zero,416f0 <__extendsfdf2+0xd4>
   4168c:	8009883a 	mov	r4,r16
   41690:	00417180 	call	41718 <__clzsi2>
   41694:	10c002c8 	cmpgei	r3,r2,11
   41698:	18001b1e 	bne	r3,zero,41708 <__extendsfdf2+0xec>
   4169c:	010002c4 	movi	r4,11
   416a0:	2089c83a 	sub	r4,r4,r2
   416a4:	10c00544 	addi	r3,r2,21
   416a8:	8108d83a 	srl	r4,r16,r4
   416ac:	80e0983a 	sll	r16,r16,r3
   416b0:	00c00434 	movhi	r3,16
   416b4:	0140e244 	movi	r5,905
   416b8:	18ffffc4 	addi	r3,r3,-1
   416bc:	288bc83a 	sub	r5,r5,r2
   416c0:	20c8703a 	and	r4,r4,r3
   416c4:	2941ffcc 	andi	r5,r5,2047
   416c8:	003fe406 	br	4165c <__extendsfdf2+0x40>
   416cc:	80000b26 	beq	r16,zero,416fc <__extendsfdf2+0xe0>
   416d0:	8008d0fa 	srli	r4,r16,3
   416d4:	00800434 	movhi	r2,16
   416d8:	10bfffc4 	addi	r2,r2,-1
   416dc:	21000234 	orhi	r4,r4,8
   416e0:	8020977a 	slli	r16,r16,29
   416e4:	2088703a 	and	r4,r4,r2
   416e8:	0141ffc4 	movi	r5,2047
   416ec:	003fdb06 	br	4165c <__extendsfdf2+0x40>
   416f0:	000b883a 	mov	r5,zero
   416f4:	0009883a 	mov	r4,zero
   416f8:	003fd806 	br	4165c <__extendsfdf2+0x40>
   416fc:	0141ffc4 	movi	r5,2047
   41700:	0009883a 	mov	r4,zero
   41704:	003fd506 	br	4165c <__extendsfdf2+0x40>
   41708:	113ffd44 	addi	r4,r2,-11
   4170c:	8108983a 	sll	r4,r16,r4
   41710:	0021883a 	mov	r16,zero
   41714:	003fe606 	br	416b0 <__extendsfdf2+0x94>

00041718 <__clzsi2>:
   41718:	00bfffd4 	movui	r2,65535
   4171c:	11000a36 	bltu	r2,r4,41748 <__clzsi2+0x30>
   41720:	20c04028 	cmpgeui	r3,r4,256
   41724:	180690fa 	slli	r3,r3,3
   41728:	00800804 	movi	r2,32
   4172c:	10c5c83a 	sub	r2,r2,r3
   41730:	20c8d83a 	srl	r4,r4,r3
   41734:	00c00174 	movhi	r3,5
   41738:	20c7883a 	add	r3,r4,r3
   4173c:	18c4b303 	ldbu	r3,4812(r3)
   41740:	10c5c83a 	sub	r2,r2,r3
   41744:	f800283a 	ret
   41748:	00804034 	movhi	r2,256
   4174c:	2080032e 	bgeu	r4,r2,4175c <__clzsi2+0x44>
   41750:	00800404 	movi	r2,16
   41754:	00c00404 	movi	r3,16
   41758:	003ff506 	br	41730 <__clzsi2+0x18>
   4175c:	00800204 	movi	r2,8
   41760:	00c00604 	movi	r3,24
   41764:	003ff206 	br	41730 <__clzsi2+0x18>

00041768 <_printf_r>:
   41768:	defffd04 	addi	sp,sp,-12
   4176c:	2805883a 	mov	r2,r5
   41770:	dfc00015 	stw	ra,0(sp)
   41774:	d9800115 	stw	r6,4(sp)
   41778:	d9c00215 	stw	r7,8(sp)
   4177c:	21400217 	ldw	r5,8(r4)
   41780:	d9c00104 	addi	r7,sp,4
   41784:	100d883a 	mov	r6,r2
   41788:	00419480 	call	41948 <___vfprintf_internal_r>
   4178c:	dfc00017 	ldw	ra,0(sp)
   41790:	dec00304 	addi	sp,sp,12
   41794:	f800283a 	ret

00041798 <printf>:
   41798:	defffc04 	addi	sp,sp,-16
   4179c:	dfc00015 	stw	ra,0(sp)
   417a0:	d9400115 	stw	r5,4(sp)
   417a4:	d9800215 	stw	r6,8(sp)
   417a8:	d9c00315 	stw	r7,12(sp)
   417ac:	00800174 	movhi	r2,5
   417b0:	108d3017 	ldw	r2,13504(r2)
   417b4:	200b883a 	mov	r5,r4
   417b8:	d9800104 	addi	r6,sp,4
   417bc:	11000217 	ldw	r4,8(r2)
   417c0:	0043cf00 	call	43cf0 <__vfprintf_internal>
   417c4:	dfc00017 	ldw	ra,0(sp)
   417c8:	dec00404 	addi	sp,sp,16
   417cc:	f800283a 	ret

000417d0 <_puts_r>:
   417d0:	defff504 	addi	sp,sp,-44
   417d4:	dc000815 	stw	r16,32(sp)
   417d8:	2021883a 	mov	r16,r4
   417dc:	2809883a 	mov	r4,r5
   417e0:	dc400915 	stw	r17,36(sp)
   417e4:	dfc00a15 	stw	ra,40(sp)
   417e8:	2823883a 	mov	r17,r5
   417ec:	00418b00 	call	418b0 <strlen>
   417f0:	11000044 	addi	r4,r2,1
   417f4:	d8800515 	stw	r2,20(sp)
   417f8:	00800044 	movi	r2,1
   417fc:	00c00174 	movhi	r3,5
   41800:	d8800715 	stw	r2,28(sp)
   41804:	d8800404 	addi	r2,sp,16
   41808:	18c4f304 	addi	r3,r3,5068
   4180c:	d8800115 	stw	r2,4(sp)
   41810:	00800084 	movi	r2,2
   41814:	dc400415 	stw	r17,16(sp)
   41818:	d8c00615 	stw	r3,24(sp)
   4181c:	d9000315 	stw	r4,12(sp)
   41820:	d8800215 	stw	r2,8(sp)
   41824:	81400217 	ldw	r5,8(r16)
   41828:	80000226 	beq	r16,zero,41834 <_puts_r+0x64>
   4182c:	80800e17 	ldw	r2,56(r16)
   41830:	10001426 	beq	r2,zero,41884 <_puts_r+0xb4>
   41834:	2880030b 	ldhu	r2,12(r5)
   41838:	10c8000c 	andi	r3,r2,8192
   4183c:	1800061e 	bne	r3,zero,41858 <_puts_r+0x88>
   41840:	28c01917 	ldw	r3,100(r5)
   41844:	0137ffc4 	movi	r4,-8193
   41848:	10880014 	ori	r2,r2,8192
   4184c:	1906703a 	and	r3,r3,r4
   41850:	2880030d 	sth	r2,12(r5)
   41854:	28c01915 	stw	r3,100(r5)
   41858:	d9800104 	addi	r6,sp,4
   4185c:	8009883a 	mov	r4,r16
   41860:	00463940 	call	46394 <__sfvwrite_r>
   41864:	1007883a 	mov	r3,r2
   41868:	00800284 	movi	r2,10
   4186c:	18000a1e 	bne	r3,zero,41898 <_puts_r+0xc8>
   41870:	dfc00a17 	ldw	ra,40(sp)
   41874:	dc400917 	ldw	r17,36(sp)
   41878:	dc000817 	ldw	r16,32(sp)
   4187c:	dec00b04 	addi	sp,sp,44
   41880:	f800283a 	ret
   41884:	8009883a 	mov	r4,r16
   41888:	d9400015 	stw	r5,0(sp)
   4188c:	0045f200 	call	45f20 <__sinit>
   41890:	d9400017 	ldw	r5,0(sp)
   41894:	003fe706 	br	41834 <_puts_r+0x64>
   41898:	00bfffc4 	movi	r2,-1
   4189c:	003ff406 	br	41870 <_puts_r+0xa0>

000418a0 <puts>:
   418a0:	00800174 	movhi	r2,5
   418a4:	200b883a 	mov	r5,r4
   418a8:	110d3017 	ldw	r4,13504(r2)
   418ac:	00417d01 	jmpi	417d0 <_puts_r>

000418b0 <strlen>:
   418b0:	208000cc 	andi	r2,r4,3
   418b4:	10000926 	beq	r2,zero,418dc <strlen+0x2c>
   418b8:	2005883a 	mov	r2,r4
   418bc:	00000306 	br	418cc <strlen+0x1c>
   418c0:	10800044 	addi	r2,r2,1
   418c4:	10c000cc 	andi	r3,r2,3
   418c8:	18000526 	beq	r3,zero,418e0 <strlen+0x30>
   418cc:	10c00007 	ldb	r3,0(r2)
   418d0:	183ffb1e 	bne	r3,zero,418c0 <strlen+0x10>
   418d4:	1105c83a 	sub	r2,r2,r4
   418d8:	f800283a 	ret
   418dc:	2005883a 	mov	r2,r4
   418e0:	11400017 	ldw	r5,0(r2)
   418e4:	01ffbff4 	movhi	r7,65279
   418e8:	39ffbfc4 	addi	r7,r7,-257
   418ec:	29c7883a 	add	r3,r5,r7
   418f0:	01a02074 	movhi	r6,32897
   418f4:	014a303a 	nor	r5,zero,r5
   418f8:	1946703a 	and	r3,r3,r5
   418fc:	31a02004 	addi	r6,r6,-32640
   41900:	1986703a 	and	r3,r3,r6
   41904:	1800071e 	bne	r3,zero,41924 <strlen+0x74>
   41908:	11400117 	ldw	r5,4(r2)
   4190c:	10800104 	addi	r2,r2,4
   41910:	29c7883a 	add	r3,r5,r7
   41914:	014a303a 	nor	r5,zero,r5
   41918:	1946703a 	and	r3,r3,r5
   4191c:	1986703a 	and	r3,r3,r6
   41920:	183ff926 	beq	r3,zero,41908 <strlen+0x58>
   41924:	10c00007 	ldb	r3,0(r2)
   41928:	183fea26 	beq	r3,zero,418d4 <strlen+0x24>
   4192c:	10c00047 	ldb	r3,1(r2)
   41930:	10800044 	addi	r2,r2,1
   41934:	183fe726 	beq	r3,zero,418d4 <strlen+0x24>
   41938:	10c00047 	ldb	r3,1(r2)
   4193c:	10800044 	addi	r2,r2,1
   41940:	183ffa1e 	bne	r3,zero,4192c <strlen+0x7c>
   41944:	003fe306 	br	418d4 <strlen+0x24>

00041948 <___vfprintf_internal_r>:
   41948:	deffbc04 	addi	sp,sp,-272
   4194c:	dfc04315 	stw	ra,268(sp)
   41950:	dc803c15 	stw	r18,240(sp)
   41954:	dc003a15 	stw	r16,232(sp)
   41958:	d9000515 	stw	r4,20(sp)
   4195c:	2021883a 	mov	r16,r4
   41960:	d9400415 	stw	r5,16(sp)
   41964:	3025883a 	mov	r18,r6
   41968:	d9c00715 	stw	r7,28(sp)
   4196c:	df004215 	stw	fp,264(sp)
   41970:	ddc04115 	stw	r23,260(sp)
   41974:	dd804015 	stw	r22,256(sp)
   41978:	dd403f15 	stw	r21,252(sp)
   4197c:	dd003e15 	stw	r20,248(sp)
   41980:	dcc03d15 	stw	r19,244(sp)
   41984:	dc403b15 	stw	r17,236(sp)
   41988:	00469800 	call	46980 <_localeconv_r>
   4198c:	10800017 	ldw	r2,0(r2)
   41990:	1009883a 	mov	r4,r2
   41994:	d8800d15 	stw	r2,52(sp)
   41998:	00418b00 	call	418b0 <strlen>
   4199c:	d8800c15 	stw	r2,48(sp)
   419a0:	80000226 	beq	r16,zero,419ac <___vfprintf_internal_r+0x64>
   419a4:	80800e17 	ldw	r2,56(r16)
   419a8:	10022b26 	beq	r2,zero,42258 <___vfprintf_internal_r+0x910>
   419ac:	d9400417 	ldw	r5,16(sp)
   419b0:	2880030b 	ldhu	r2,12(r5)
   419b4:	10c8000c 	andi	r3,r2,8192
   419b8:	1800071e 	bne	r3,zero,419d8 <___vfprintf_internal_r+0x90>
   419bc:	28c01917 	ldw	r3,100(r5)
   419c0:	11080014 	ori	r4,r2,8192
   419c4:	00b7ffc4 	movi	r2,-8193
   419c8:	1886703a 	and	r3,r3,r2
   419cc:	2900030d 	sth	r4,12(r5)
   419d0:	2005883a 	mov	r2,r4
   419d4:	28c01915 	stw	r3,100(r5)
   419d8:	10c0020c 	andi	r3,r2,8
   419dc:	1800f626 	beq	r3,zero,41db8 <___vfprintf_internal_r+0x470>
   419e0:	d8c00417 	ldw	r3,16(sp)
   419e4:	18c00417 	ldw	r3,16(r3)
   419e8:	1800f326 	beq	r3,zero,41db8 <___vfprintf_internal_r+0x470>
   419ec:	1080068c 	andi	r2,r2,26
   419f0:	10800298 	cmpnei	r2,r2,10
   419f4:	1000f926 	beq	r2,zero,41ddc <___vfprintf_internal_r+0x494>
   419f8:	dc402a04 	addi	r17,sp,168
   419fc:	04c00174 	movhi	r19,5
   41a00:	9029883a 	mov	r20,r18
   41a04:	dc401d15 	stw	r17,116(sp)
   41a08:	d8001f15 	stw	zero,124(sp)
   41a0c:	d8001e15 	stw	zero,120(sp)
   41a10:	d8000915 	stw	zero,36(sp)
   41a14:	d8000a15 	stw	zero,40(sp)
   41a18:	d8000b15 	stw	zero,44(sp)
   41a1c:	d8000e15 	stw	zero,56(sp)
   41a20:	d8001115 	stw	zero,68(sp)
   41a24:	d8000615 	stw	zero,24(sp)
   41a28:	9cc50504 	addi	r19,r19,5140
   41a2c:	8825883a 	mov	r18,r17
   41a30:	a0800007 	ldb	r2,0(r20)
   41a34:	1000cd26 	beq	r2,zero,41d6c <___vfprintf_internal_r+0x424>
   41a38:	a021883a 	mov	r16,r20
   41a3c:	00000306 	br	41a4c <___vfprintf_internal_r+0x104>
   41a40:	80800047 	ldb	r2,1(r16)
   41a44:	84000044 	addi	r16,r16,1
   41a48:	10015126 	beq	r2,zero,41f90 <___vfprintf_internal_r+0x648>
   41a4c:	10800958 	cmpnei	r2,r2,37
   41a50:	103ffb1e 	bne	r2,zero,41a40 <___vfprintf_internal_r+0xf8>
   41a54:	852fc83a 	sub	r23,r16,r20
   41a58:	85014f1e 	bne	r16,r20,41f98 <___vfprintf_internal_r+0x650>
   41a5c:	80800003 	ldbu	r2,0(r16)
   41a60:	10803fcc 	andi	r2,r2,255
   41a64:	1080201c 	xori	r2,r2,128
   41a68:	10bfe004 	addi	r2,r2,-128
   41a6c:	1000bf26 	beq	r2,zero,41d6c <___vfprintf_internal_r+0x424>
   41a70:	82c00047 	ldb	r11,1(r16)
   41a74:	85000044 	addi	r20,r16,1
   41a78:	d8001645 	stb	zero,89(sp)
   41a7c:	023fffc4 	movi	r8,-1
   41a80:	0021883a 	mov	r16,zero
   41a84:	001b883a 	mov	r13,zero
   41a88:	a5000044 	addi	r20,r20,1
   41a8c:	5839883a 	mov	fp,r11
   41a90:	e0bff804 	addi	r2,fp,-32
   41a94:	10c01668 	cmpgeui	r3,r2,89
   41a98:	18006a1e 	bne	r3,zero,41c44 <___vfprintf_internal_r+0x2fc>
   41a9c:	100490ba 	slli	r2,r2,2
   41aa0:	00c00134 	movhi	r3,4
   41aa4:	10c7883a 	add	r3,r2,r3
   41aa8:	1886ac17 	ldw	r2,6832(r3)
   41aac:	1000683a 	jmp	r2
   41ab0:	00042328 	cmpgeui	zero,zero,4236
   41ab4:	00041c44 	movi	zero,4209
   41ab8:	00041c44 	movi	zero,4209
   41abc:	0004231c 	xori	zero,zero,4236
   41ac0:	00041c44 	movi	zero,4209
   41ac4:	00041c44 	movi	zero,4209
   41ac8:	00041c44 	movi	zero,4209
   41acc:	00041c44 	movi	zero,4209
   41ad0:	00041c44 	movi	zero,4209
   41ad4:	00041c44 	movi	zero,4209
   41ad8:	00042298 	cmpnei	zero,zero,4234
   41adc:	0004230c 	andi	zero,zero,4236
   41ae0:	00041c44 	movi	zero,4209
   41ae4:	000422b0 	cmpltui	zero,zero,4234
   41ae8:	000422bc 	xorhi	zero,zero,4234
   41aec:	00041c44 	movi	zero,4209
   41af0:	00042300 	call	4230 <__reset-0x3bdd0>
   41af4:	00041c14 	movui	zero,4208
   41af8:	00041c14 	movui	zero,4208
   41afc:	00041c14 	movui	zero,4208
   41b00:	00041c14 	movui	zero,4208
   41b04:	00041c14 	movui	zero,4208
   41b08:	00041c14 	movui	zero,4208
   41b0c:	00041c14 	movui	zero,4208
   41b10:	00041c14 	movui	zero,4208
   41b14:	00041c14 	movui	zero,4208
   41b18:	00041c44 	movi	zero,4209
   41b1c:	00041c44 	movi	zero,4209
   41b20:	00041c44 	movi	zero,4209
   41b24:	00041c44 	movi	zero,4209
   41b28:	00041c44 	movi	zero,4209
   41b2c:	00041c44 	movi	zero,4209
   41b30:	00041c44 	movi	zero,4209
   41b34:	00041c44 	movi	zero,4209
   41b38:	00041c44 	movi	zero,4209
   41b3c:	00041c44 	movi	zero,4209
   41b40:	00041e28 	cmpgeui	zero,zero,4216
   41b44:	000420c4 	movi	zero,4227
   41b48:	00041c44 	movi	zero,4209
   41b4c:	000420c4 	movi	zero,4227
   41b50:	00041c44 	movi	zero,4209
   41b54:	00041c44 	movi	zero,4209
   41b58:	00041c44 	movi	zero,4209
   41b5c:	00041c44 	movi	zero,4209
   41b60:	00042374 	movhi	zero,4237
   41b64:	00041c44 	movi	zero,4209
   41b68:	00041c44 	movi	zero,4209
   41b6c:	00041e90 	cmplti	zero,zero,4218
   41b70:	00041c44 	movi	zero,4209
   41b74:	00041c44 	movi	zero,4209
   41b78:	00041c44 	movi	zero,4209
   41b7c:	00041c44 	movi	zero,4209
   41b80:	00041c44 	movi	zero,4209
   41b84:	00041eb8 	rdprs	zero,zero,4218
   41b88:	00041c44 	movi	zero,4209
   41b8c:	00041c44 	movi	zero,4209
   41b90:	00042f00 	call	42f0 <__reset-0x3bd10>
   41b94:	00041c44 	movi	zero,4209
   41b98:	00041c44 	movi	zero,4209
   41b9c:	00041c44 	movi	zero,4209
   41ba0:	00041c44 	movi	zero,4209
   41ba4:	00041c44 	movi	zero,4209
   41ba8:	00041c44 	movi	zero,4209
   41bac:	00041c44 	movi	zero,4209
   41bb0:	00041c44 	movi	zero,4209
   41bb4:	00041c44 	movi	zero,4209
   41bb8:	00041c44 	movi	zero,4209
   41bbc:	0004238c 	andi	zero,zero,4238
   41bc0:	00041e2c 	andhi	zero,zero,4216
   41bc4:	000420c4 	movi	zero,4227
   41bc8:	000420c4 	movi	zero,4227
   41bcc:	000420c4 	movi	zero,4227
   41bd0:	00042380 	call	4238 <__reset-0x3bdc8>
   41bd4:	00041e2c 	andhi	zero,zero,4216
   41bd8:	00041c44 	movi	zero,4209
   41bdc:	00041c44 	movi	zero,4209
   41be0:	0004234c 	andi	zero,zero,4237
   41be4:	00041c44 	movi	zero,4209
   41be8:	00042448 	cmpgei	zero,zero,4241
   41bec:	00041e94 	movui	zero,4218
   41bf0:	00042410 	cmplti	zero,zero,4240
   41bf4:	00042404 	movi	zero,4240
   41bf8:	00041c44 	movi	zero,4209
   41bfc:	000423b4 	movhi	zero,4238
   41c00:	00041c44 	movi	zero,4209
   41c04:	00041ebc 	xorhi	zero,zero,4218
   41c08:	00041c44 	movi	zero,4209
   41c0c:	00041c44 	movi	zero,4209
   41c10:	00042f70 	cmpltui	zero,zero,4285
   41c14:	0021883a 	mov	r16,zero
   41c18:	e0bff404 	addi	r2,fp,-48
   41c1c:	a7000007 	ldb	fp,0(r20)
   41c20:	840002a4 	muli	r16,r16,10
   41c24:	a5000044 	addi	r20,r20,1
   41c28:	1421883a 	add	r16,r2,r16
   41c2c:	e0bff404 	addi	r2,fp,-48
   41c30:	10c002b0 	cmpltui	r3,r2,10
   41c34:	183ff91e 	bne	r3,zero,41c1c <___vfprintf_internal_r+0x2d4>
   41c38:	e0bff804 	addi	r2,fp,-32
   41c3c:	10c01668 	cmpgeui	r3,r2,89
   41c40:	183f9626 	beq	r3,zero,41a9c <___vfprintf_internal_r+0x154>
   41c44:	e0004926 	beq	fp,zero,41d6c <___vfprintf_internal_r+0x424>
   41c48:	df002005 	stb	fp,128(sp)
   41c4c:	d8001645 	stb	zero,89(sp)
   41c50:	03000044 	movi	r12,1
   41c54:	01c00044 	movi	r7,1
   41c58:	dd402004 	addi	r21,sp,128
   41c5c:	6807883a 	mov	r3,r13
   41c60:	0011883a 	mov	r8,zero
   41c64:	d8000815 	stw	zero,32(sp)
   41c68:	1b80008c 	andi	r14,r3,2
   41c6c:	70000126 	beq	r14,zero,41c74 <___vfprintf_internal_r+0x32c>
   41c70:	63000084 	addi	r12,r12,2
   41c74:	1b40210c 	andi	r13,r3,132
   41c78:	6800021e 	bne	r13,zero,41c84 <___vfprintf_internal_r+0x33c>
   41c7c:	832dc83a 	sub	r22,r16,r12
   41c80:	05832916 	blt	zero,r22,42928 <___vfprintf_internal_r+0xfe0>
   41c84:	d8801647 	ldb	r2,89(sp)
   41c88:	dd801f17 	ldw	r22,124(sp)
   41c8c:	10000c26 	beq	r2,zero,41cc0 <___vfprintf_internal_r+0x378>
   41c90:	d8801e17 	ldw	r2,120(sp)
   41c94:	d9001644 	addi	r4,sp,89
   41c98:	b5800044 	addi	r22,r22,1
   41c9c:	10800044 	addi	r2,r2,1
   41ca0:	91000015 	stw	r4,0(r18)
   41ca4:	01000044 	movi	r4,1
   41ca8:	d8801e15 	stw	r2,120(sp)
   41cac:	91000115 	stw	r4,4(r18)
   41cb0:	dd801f15 	stw	r22,124(sp)
   41cb4:	10800208 	cmpgei	r2,r2,8
   41cb8:	10037b1e 	bne	r2,zero,42aa8 <___vfprintf_internal_r+0x1160>
   41cbc:	94800204 	addi	r18,r18,8
   41cc0:	70000c26 	beq	r14,zero,41cf4 <___vfprintf_internal_r+0x3ac>
   41cc4:	d8801e17 	ldw	r2,120(sp)
   41cc8:	d9001684 	addi	r4,sp,90
   41ccc:	b5800084 	addi	r22,r22,2
   41cd0:	10800044 	addi	r2,r2,1
   41cd4:	91000015 	stw	r4,0(r18)
   41cd8:	01000084 	movi	r4,2
   41cdc:	d8801e15 	stw	r2,120(sp)
   41ce0:	91000115 	stw	r4,4(r18)
   41ce4:	dd801f15 	stw	r22,124(sp)
   41ce8:	10800208 	cmpgei	r2,r2,8
   41cec:	1003821e 	bne	r2,zero,42af8 <___vfprintf_internal_r+0x11b0>
   41cf0:	94800204 	addi	r18,r18,8
   41cf4:	6b402018 	cmpnei	r13,r13,128
   41cf8:	68023426 	beq	r13,zero,425cc <___vfprintf_internal_r+0xc84>
   41cfc:	41efc83a 	sub	r23,r8,r7
   41d00:	05c27416 	blt	zero,r23,426d4 <___vfprintf_internal_r+0xd8c>
   41d04:	1880400c 	andi	r2,r3,256
   41d08:	1001db1e 	bne	r2,zero,42478 <___vfprintf_internal_r+0xb30>
   41d0c:	d8801e17 	ldw	r2,120(sp)
   41d10:	3d89883a 	add	r4,r7,r22
   41d14:	95400015 	stw	r21,0(r18)
   41d18:	10800044 	addi	r2,r2,1
   41d1c:	d8801e15 	stw	r2,120(sp)
   41d20:	91c00115 	stw	r7,4(r18)
   41d24:	d9001f15 	stw	r4,124(sp)
   41d28:	10800208 	cmpgei	r2,r2,8
   41d2c:	1003521e 	bne	r2,zero,42a78 <___vfprintf_internal_r+0x1130>
   41d30:	94800204 	addi	r18,r18,8
   41d34:	18c0010c 	andi	r3,r3,4
   41d38:	18000226 	beq	r3,zero,41d44 <___vfprintf_internal_r+0x3fc>
   41d3c:	8339c83a 	sub	fp,r16,r12
   41d40:	0700ac16 	blt	zero,fp,41ff4 <___vfprintf_internal_r+0x6ac>
   41d44:	8300010e 	bge	r16,r12,41d4c <___vfprintf_internal_r+0x404>
   41d48:	6021883a 	mov	r16,r12
   41d4c:	d8800617 	ldw	r2,24(sp)
   41d50:	1405883a 	add	r2,r2,r16
   41d54:	d8800615 	stw	r2,24(sp)
   41d58:	2002b01e 	bne	r4,zero,4281c <___vfprintf_internal_r+0xed4>
   41d5c:	a0800007 	ldb	r2,0(r20)
   41d60:	d8001e15 	stw	zero,120(sp)
   41d64:	8825883a 	mov	r18,r17
   41d68:	103f331e 	bne	r2,zero,41a38 <___vfprintf_internal_r+0xf0>
   41d6c:	d8801f17 	ldw	r2,124(sp)
   41d70:	10063b1e 	bne	r2,zero,43660 <___vfprintf_internal_r+0x1d18>
   41d74:	d8800417 	ldw	r2,16(sp)
   41d78:	1080030b 	ldhu	r2,12(r2)
   41d7c:	1080100c 	andi	r2,r2,64
   41d80:	10075f1e 	bne	r2,zero,43b00 <___vfprintf_internal_r+0x21b8>
   41d84:	d8800617 	ldw	r2,24(sp)
   41d88:	dfc04317 	ldw	ra,268(sp)
   41d8c:	df004217 	ldw	fp,264(sp)
   41d90:	ddc04117 	ldw	r23,260(sp)
   41d94:	dd804017 	ldw	r22,256(sp)
   41d98:	dd403f17 	ldw	r21,252(sp)
   41d9c:	dd003e17 	ldw	r20,248(sp)
   41da0:	dcc03d17 	ldw	r19,244(sp)
   41da4:	dc803c17 	ldw	r18,240(sp)
   41da8:	dc403b17 	ldw	r17,236(sp)
   41dac:	dc003a17 	ldw	r16,232(sp)
   41db0:	dec04404 	addi	sp,sp,272
   41db4:	f800283a 	ret
   41db8:	d9400417 	ldw	r5,16(sp)
   41dbc:	d9000517 	ldw	r4,20(sp)
   41dc0:	0043dd00 	call	43dd0 <__swsetup_r>
   41dc4:	10074e1e 	bne	r2,zero,43b00 <___vfprintf_internal_r+0x21b8>
   41dc8:	d8800417 	ldw	r2,16(sp)
   41dcc:	1080030b 	ldhu	r2,12(r2)
   41dd0:	1080068c 	andi	r2,r2,26
   41dd4:	10800298 	cmpnei	r2,r2,10
   41dd8:	103f071e 	bne	r2,zero,419f8 <___vfprintf_internal_r+0xb0>
   41ddc:	d8800417 	ldw	r2,16(sp)
   41de0:	1080038f 	ldh	r2,14(r2)
   41de4:	103f0416 	blt	r2,zero,419f8 <___vfprintf_internal_r+0xb0>
   41de8:	d9c00717 	ldw	r7,28(sp)
   41dec:	d9400417 	ldw	r5,16(sp)
   41df0:	d9000517 	ldw	r4,20(sp)
   41df4:	900d883a 	mov	r6,r18
   41df8:	dfc04317 	ldw	ra,268(sp)
   41dfc:	df004217 	ldw	fp,264(sp)
   41e00:	ddc04117 	ldw	r23,260(sp)
   41e04:	dd804017 	ldw	r22,256(sp)
   41e08:	dd403f17 	ldw	r21,252(sp)
   41e0c:	dd003e17 	ldw	r20,248(sp)
   41e10:	dcc03d17 	ldw	r19,244(sp)
   41e14:	dc803c17 	ldw	r18,240(sp)
   41e18:	dc403b17 	ldw	r17,236(sp)
   41e1c:	dc003a17 	ldw	r16,232(sp)
   41e20:	dec04404 	addi	sp,sp,272
   41e24:	0043d0c1 	jmpi	43d0c <__sbprintf>
   41e28:	6b400414 	ori	r13,r13,16
   41e2c:	6880080c 	andi	r2,r13,32
   41e30:	1000dc26 	beq	r2,zero,421a4 <___vfprintf_internal_r+0x85c>
   41e34:	d8c00717 	ldw	r3,28(sp)
   41e38:	18800117 	ldw	r2,4(r3)
   41e3c:	1d800017 	ldw	r22,0(r3)
   41e40:	18c00204 	addi	r3,r3,8
   41e44:	d8c00715 	stw	r3,28(sp)
   41e48:	102f883a 	mov	r23,r2
   41e4c:	1000e316 	blt	r2,zero,421dc <___vfprintf_internal_r+0x894>
   41e50:	40bfffd8 	cmpnei	r2,r8,-1
   41e54:	d9001643 	ldbu	r4,89(sp)
   41e58:	10010626 	beq	r2,zero,42274 <___vfprintf_internal_r+0x92c>
   41e5c:	00ffdfc4 	movi	r3,-129
   41e60:	b5c4b03a 	or	r2,r22,r23
   41e64:	68c6703a 	and	r3,r13,r3
   41e68:	1001011e 	bne	r2,zero,42270 <___vfprintf_internal_r+0x928>
   41e6c:	00800044 	movi	r2,1
   41e70:	4002531e 	bne	r8,zero,427c0 <___vfprintf_internal_r+0xe78>
   41e74:	1003ad1e 	bne	r2,zero,42d2c <___vfprintf_internal_r+0x13e4>
   41e78:	69c0004c 	andi	r7,r13,1
   41e7c:	3803f626 	beq	r7,zero,42e58 <___vfprintf_internal_r+0x1510>
   41e80:	00800c04 	movi	r2,48
   41e84:	d88029c5 	stb	r2,167(sp)
   41e88:	dd4029c4 	addi	r21,sp,167
   41e8c:	00003606 	br	41f68 <___vfprintf_internal_r+0x620>
   41e90:	6b400414 	ori	r13,r13,16
   41e94:	6880080c 	andi	r2,r13,32
   41e98:	1000e326 	beq	r2,zero,42228 <___vfprintf_internal_r+0x8e0>
   41e9c:	d8c00717 	ldw	r3,28(sp)
   41ea0:	0005883a 	mov	r2,zero
   41ea4:	1d800017 	ldw	r22,0(r3)
   41ea8:	1dc00117 	ldw	r23,4(r3)
   41eac:	18c00204 	addi	r3,r3,8
   41eb0:	d8c00715 	stw	r3,28(sp)
   41eb4:	00000906 	br	41edc <___vfprintf_internal_r+0x594>
   41eb8:	6b400414 	ori	r13,r13,16
   41ebc:	6880080c 	andi	r2,r13,32
   41ec0:	1000cd26 	beq	r2,zero,421f8 <___vfprintf_internal_r+0x8b0>
   41ec4:	d8c00717 	ldw	r3,28(sp)
   41ec8:	00800044 	movi	r2,1
   41ecc:	1d800017 	ldw	r22,0(r3)
   41ed0:	1dc00117 	ldw	r23,4(r3)
   41ed4:	18c00204 	addi	r3,r3,8
   41ed8:	d8c00715 	stw	r3,28(sp)
   41edc:	0009883a 	mov	r4,zero
   41ee0:	d9001645 	stb	r4,89(sp)
   41ee4:	40ffffe0 	cmpeqi	r3,r8,-1
   41ee8:	1800051e 	bne	r3,zero,41f00 <___vfprintf_internal_r+0x5b8>
   41eec:	00ffdfc4 	movi	r3,-129
   41ef0:	b5cab03a 	or	r5,r22,r23
   41ef4:	68c6703a 	and	r3,r13,r3
   41ef8:	283fdd26 	beq	r5,zero,41e70 <___vfprintf_internal_r+0x528>
   41efc:	181b883a 	mov	r13,r3
   41f00:	10c00060 	cmpeqi	r3,r2,1
   41f04:	1800db1e 	bne	r3,zero,42274 <___vfprintf_internal_r+0x92c>
   41f08:	108000a0 	cmpeqi	r2,r2,2
   41f0c:	1002331e 	bne	r2,zero,427dc <___vfprintf_internal_r+0xe94>
   41f10:	882b883a 	mov	r21,r17
   41f14:	b006d0fa 	srli	r3,r22,3
   41f18:	b80c977a 	slli	r6,r23,29
   41f1c:	b82ed0fa 	srli	r23,r23,3
   41f20:	b58001cc 	andi	r22,r22,7
   41f24:	b0800c04 	addi	r2,r22,48
   41f28:	30ecb03a 	or	r22,r6,r3
   41f2c:	a8bfffc5 	stb	r2,-1(r21)
   41f30:	b5c6b03a 	or	r3,r22,r23
   41f34:	a80b883a 	mov	r5,r21
   41f38:	ad7fffc4 	addi	r21,r21,-1
   41f3c:	183ff51e 	bne	r3,zero,41f14 <___vfprintf_internal_r+0x5cc>
   41f40:	68c0004c 	andi	r3,r13,1
   41f44:	18023226 	beq	r3,zero,42810 <___vfprintf_internal_r+0xec8>
   41f48:	10800c18 	cmpnei	r2,r2,48
   41f4c:	10023026 	beq	r2,zero,42810 <___vfprintf_internal_r+0xec8>
   41f50:	297fff84 	addi	r5,r5,-2
   41f54:	00800c04 	movi	r2,48
   41f58:	a8bfffc5 	stb	r2,-1(r21)
   41f5c:	894fc83a 	sub	r7,r17,r5
   41f60:	6807883a 	mov	r3,r13
   41f64:	282b883a 	mov	r21,r5
   41f68:	4019883a 	mov	r12,r8
   41f6c:	41c0010e 	bge	r8,r7,41f74 <___vfprintf_internal_r+0x62c>
   41f70:	3819883a 	mov	r12,r7
   41f74:	d8000815 	stw	zero,32(sp)
   41f78:	21003fcc 	andi	r4,r4,255
   41f7c:	2100201c 	xori	r4,r4,128
   41f80:	213fe004 	addi	r4,r4,-128
   41f84:	203f3826 	beq	r4,zero,41c68 <___vfprintf_internal_r+0x320>
   41f88:	63000044 	addi	r12,r12,1
   41f8c:	003f3606 	br	41c68 <___vfprintf_internal_r+0x320>
   41f90:	852fc83a 	sub	r23,r16,r20
   41f94:	853f7526 	beq	r16,r20,41d6c <___vfprintf_internal_r+0x424>
   41f98:	dd801f17 	ldw	r22,124(sp)
   41f9c:	d8801e17 	ldw	r2,120(sp)
   41fa0:	95000015 	stw	r20,0(r18)
   41fa4:	b5ed883a 	add	r22,r22,r23
   41fa8:	10800044 	addi	r2,r2,1
   41fac:	d8801e15 	stw	r2,120(sp)
   41fb0:	95c00115 	stw	r23,4(r18)
   41fb4:	dd801f15 	stw	r22,124(sp)
   41fb8:	10800208 	cmpgei	r2,r2,8
   41fbc:	1000061e 	bne	r2,zero,41fd8 <___vfprintf_internal_r+0x690>
   41fc0:	94800204 	addi	r18,r18,8
   41fc4:	d8c00617 	ldw	r3,24(sp)
   41fc8:	80800003 	ldbu	r2,0(r16)
   41fcc:	1dc7883a 	add	r3,r3,r23
   41fd0:	d8c00615 	stw	r3,24(sp)
   41fd4:	003ea206 	br	41a60 <___vfprintf_internal_r+0x118>
   41fd8:	d9400417 	ldw	r5,16(sp)
   41fdc:	d9000517 	ldw	r4,20(sp)
   41fe0:	d9801d04 	addi	r6,sp,116
   41fe4:	004913c0 	call	4913c <__sprint_r>
   41fe8:	103f621e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   41fec:	8825883a 	mov	r18,r17
   41ff0:	003ff406 	br	41fc4 <___vfprintf_internal_r+0x67c>
   41ff4:	05c00174 	movhi	r23,5
   41ff8:	e0c00450 	cmplti	r3,fp,17
   41ffc:	d8801e17 	ldw	r2,120(sp)
   42000:	bdc50904 	addi	r23,r23,5156
   42004:	18001e1e 	bne	r3,zero,42080 <___vfprintf_internal_r+0x738>
   42008:	9007883a 	mov	r3,r18
   4200c:	dd400517 	ldw	r21,20(sp)
   42010:	05800404 	movi	r22,16
   42014:	6025883a 	mov	r18,r12
   42018:	00000406 	br	4202c <___vfprintf_internal_r+0x6e4>
   4201c:	e73ffc04 	addi	fp,fp,-16
   42020:	e1400448 	cmpgei	r5,fp,17
   42024:	18c00204 	addi	r3,r3,8
   42028:	28001326 	beq	r5,zero,42078 <___vfprintf_internal_r+0x730>
   4202c:	10800044 	addi	r2,r2,1
   42030:	21000404 	addi	r4,r4,16
   42034:	1dc00015 	stw	r23,0(r3)
   42038:	1d800115 	stw	r22,4(r3)
   4203c:	d9001f15 	stw	r4,124(sp)
   42040:	d8801e15 	stw	r2,120(sp)
   42044:	11400208 	cmpgei	r5,r2,8
   42048:	283ff426 	beq	r5,zero,4201c <___vfprintf_internal_r+0x6d4>
   4204c:	d9400417 	ldw	r5,16(sp)
   42050:	d9801d04 	addi	r6,sp,116
   42054:	a809883a 	mov	r4,r21
   42058:	004913c0 	call	4913c <__sprint_r>
   4205c:	103f451e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42060:	e73ffc04 	addi	fp,fp,-16
   42064:	e1400448 	cmpgei	r5,fp,17
   42068:	d9001f17 	ldw	r4,124(sp)
   4206c:	d8801e17 	ldw	r2,120(sp)
   42070:	8807883a 	mov	r3,r17
   42074:	283fed1e 	bne	r5,zero,4202c <___vfprintf_internal_r+0x6e4>
   42078:	9019883a 	mov	r12,r18
   4207c:	1825883a 	mov	r18,r3
   42080:	10800044 	addi	r2,r2,1
   42084:	2709883a 	add	r4,r4,fp
   42088:	d8801e15 	stw	r2,120(sp)
   4208c:	95c00015 	stw	r23,0(r18)
   42090:	97000115 	stw	fp,4(r18)
   42094:	d9001f15 	stw	r4,124(sp)
   42098:	10800210 	cmplti	r2,r2,8
   4209c:	103f291e 	bne	r2,zero,41d44 <___vfprintf_internal_r+0x3fc>
   420a0:	d9400417 	ldw	r5,16(sp)
   420a4:	d9000517 	ldw	r4,20(sp)
   420a8:	d9801d04 	addi	r6,sp,116
   420ac:	db000815 	stw	r12,32(sp)
   420b0:	004913c0 	call	4913c <__sprint_r>
   420b4:	103f2f1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   420b8:	d9001f17 	ldw	r4,124(sp)
   420bc:	db000817 	ldw	r12,32(sp)
   420c0:	003f2006 	br	41d44 <___vfprintf_internal_r+0x3fc>
   420c4:	d8c00717 	ldw	r3,28(sp)
   420c8:	6880020c 	andi	r2,r13,8
   420cc:	19000204 	addi	r4,r3,8
   420d0:	d9000f15 	stw	r4,60(sp)
   420d4:	1003621e 	bne	r2,zero,42e60 <___vfprintf_internal_r+0x1518>
   420d8:	d8800717 	ldw	r2,28(sp)
   420dc:	10c00017 	ldw	r3,0(r2)
   420e0:	10800117 	ldw	r2,4(r2)
   420e4:	d8c00a15 	stw	r3,40(sp)
   420e8:	d8800b15 	stw	r2,44(sp)
   420ec:	ddc00b17 	ldw	r23,44(sp)
   420f0:	dd800a17 	ldw	r22,40(sp)
   420f4:	00a00034 	movhi	r2,32768
   420f8:	10bfffc4 	addi	r2,r2,-1
   420fc:	b8aa703a 	and	r21,r23,r2
   42100:	01dffc34 	movhi	r7,32752
   42104:	01bfffc4 	movi	r6,-1
   42108:	39ffffc4 	addi	r7,r7,-1
   4210c:	b009883a 	mov	r4,r22
   42110:	a80b883a 	mov	r5,r21
   42114:	da000815 	stw	r8,32(sp)
   42118:	db400715 	stw	r13,28(sp)
   4211c:	004e6300 	call	4e630 <__unorddf2>
   42120:	db400717 	ldw	r13,28(sp)
   42124:	da000817 	ldw	r8,32(sp)
   42128:	10044f1e 	bne	r2,zero,43268 <___vfprintf_internal_r+0x1920>
   4212c:	01dffc34 	movhi	r7,32752
   42130:	01bfffc4 	movi	r6,-1
   42134:	39ffffc4 	addi	r7,r7,-1
   42138:	b009883a 	mov	r4,r22
   4213c:	a80b883a 	mov	r5,r21
   42140:	004d4c40 	call	4d4c4 <__ledf2>
   42144:	db400717 	ldw	r13,28(sp)
   42148:	da000817 	ldw	r8,32(sp)
   4214c:	0084460e 	bge	zero,r2,43268 <___vfprintf_internal_r+0x1920>
   42150:	000d883a 	mov	r6,zero
   42154:	000f883a 	mov	r7,zero
   42158:	b009883a 	mov	r4,r22
   4215c:	b80b883a 	mov	r5,r23
   42160:	004d4c40 	call	4d4c4 <__ledf2>
   42164:	db400717 	ldw	r13,28(sp)
   42168:	10052616 	blt	r2,zero,43604 <___vfprintf_internal_r+0x1cbc>
   4216c:	d9001643 	ldbu	r4,89(sp)
   42170:	e0801210 	cmplti	r2,fp,72
   42174:	1005091e 	bne	r2,zero,4359c <___vfprintf_internal_r+0x1c54>
   42178:	05400174 	movhi	r21,5
   4217c:	ad44f504 	addi	r21,r21,5076
   42180:	d8800f17 	ldw	r2,60(sp)
   42184:	00ffdfc4 	movi	r3,-129
   42188:	68c6703a 	and	r3,r13,r3
   4218c:	d8800715 	stw	r2,28(sp)
   42190:	030000c4 	movi	r12,3
   42194:	01c000c4 	movi	r7,3
   42198:	0011883a 	mov	r8,zero
   4219c:	d8000815 	stw	zero,32(sp)
   421a0:	003f7506 	br	41f78 <___vfprintf_internal_r+0x630>
   421a4:	d8c00717 	ldw	r3,28(sp)
   421a8:	6880040c 	andi	r2,r13,16
   421ac:	1d800017 	ldw	r22,0(r3)
   421b0:	18c00104 	addi	r3,r3,4
   421b4:	d8c00715 	stw	r3,28(sp)
   421b8:	10002a1e 	bne	r2,zero,42264 <___vfprintf_internal_r+0x91c>
   421bc:	6880100c 	andi	r2,r13,64
   421c0:	10002826 	beq	r2,zero,42264 <___vfprintf_internal_r+0x91c>
   421c4:	b5bfffcc 	andi	r22,r22,65535
   421c8:	b5a0001c 	xori	r22,r22,32768
   421cc:	b5a00004 	addi	r22,r22,-32768
   421d0:	b02fd7fa 	srai	r23,r22,31
   421d4:	b805883a 	mov	r2,r23
   421d8:	103f1d0e 	bge	r2,zero,41e50 <___vfprintf_internal_r+0x508>
   421dc:	b004c03a 	cmpne	r2,r22,zero
   421e0:	05efc83a 	sub	r23,zero,r23
   421e4:	b8afc83a 	sub	r23,r23,r2
   421e8:	05adc83a 	sub	r22,zero,r22
   421ec:	01000b44 	movi	r4,45
   421f0:	00800044 	movi	r2,1
   421f4:	003f3a06 	br	41ee0 <___vfprintf_internal_r+0x598>
   421f8:	d8c00717 	ldw	r3,28(sp)
   421fc:	6880040c 	andi	r2,r13,16
   42200:	1d800017 	ldw	r22,0(r3)
   42204:	18c00104 	addi	r3,r3,4
   42208:	d8c00715 	stw	r3,28(sp)
   4220c:	1000031e 	bne	r2,zero,4221c <___vfprintf_internal_r+0x8d4>
   42210:	6880100c 	andi	r2,r13,64
   42214:	10000126 	beq	r2,zero,4221c <___vfprintf_internal_r+0x8d4>
   42218:	b5bfffcc 	andi	r22,r22,65535
   4221c:	002f883a 	mov	r23,zero
   42220:	00800044 	movi	r2,1
   42224:	003f2d06 	br	41edc <___vfprintf_internal_r+0x594>
   42228:	d8c00717 	ldw	r3,28(sp)
   4222c:	6880040c 	andi	r2,r13,16
   42230:	1d800017 	ldw	r22,0(r3)
   42234:	18c00104 	addi	r3,r3,4
   42238:	d8c00715 	stw	r3,28(sp)
   4223c:	1000031e 	bne	r2,zero,4224c <___vfprintf_internal_r+0x904>
   42240:	6880100c 	andi	r2,r13,64
   42244:	10000126 	beq	r2,zero,4224c <___vfprintf_internal_r+0x904>
   42248:	b5bfffcc 	andi	r22,r22,65535
   4224c:	002f883a 	mov	r23,zero
   42250:	0005883a 	mov	r2,zero
   42254:	003f2106 	br	41edc <___vfprintf_internal_r+0x594>
   42258:	d9000517 	ldw	r4,20(sp)
   4225c:	0045f200 	call	45f20 <__sinit>
   42260:	003dd206 	br	419ac <___vfprintf_internal_r+0x64>
   42264:	b02fd7fa 	srai	r23,r22,31
   42268:	b805883a 	mov	r2,r23
   4226c:	003ef706 	br	41e4c <___vfprintf_internal_r+0x504>
   42270:	181b883a 	mov	r13,r3
   42274:	b803681e 	bne	r23,zero,43018 <___vfprintf_internal_r+0x16d0>
   42278:	b08002a8 	cmpgeui	r2,r22,10
   4227c:	1003661e 	bne	r2,zero,43018 <___vfprintf_internal_r+0x16d0>
   42280:	b5800c04 	addi	r22,r22,48
   42284:	dd8029c5 	stb	r22,167(sp)
   42288:	6807883a 	mov	r3,r13
   4228c:	01c00044 	movi	r7,1
   42290:	dd4029c4 	addi	r21,sp,167
   42294:	003f3406 	br	41f68 <___vfprintf_internal_r+0x620>
   42298:	d8800717 	ldw	r2,28(sp)
   4229c:	14000017 	ldw	r16,0(r2)
   422a0:	10800104 	addi	r2,r2,4
   422a4:	8002e90e 	bge	r16,zero,42e4c <___vfprintf_internal_r+0x1504>
   422a8:	0421c83a 	sub	r16,zero,r16
   422ac:	d8800715 	stw	r2,28(sp)
   422b0:	a2c00007 	ldb	r11,0(r20)
   422b4:	6b400114 	ori	r13,r13,4
   422b8:	003df306 	br	41a88 <___vfprintf_internal_r+0x140>
   422bc:	a7000007 	ldb	fp,0(r20)
   422c0:	a0c00044 	addi	r3,r20,1
   422c4:	e0800aa0 	cmpeqi	r2,fp,42
   422c8:	10066f1e 	bne	r2,zero,43c88 <___vfprintf_internal_r+0x2340>
   422cc:	e0bff404 	addi	r2,fp,-48
   422d0:	110002b0 	cmpltui	r4,r2,10
   422d4:	1829883a 	mov	r20,r3
   422d8:	0011883a 	mov	r8,zero
   422dc:	203dec26 	beq	r4,zero,41a90 <___vfprintf_internal_r+0x148>
   422e0:	a7000007 	ldb	fp,0(r20)
   422e4:	420002a4 	muli	r8,r8,10
   422e8:	a5000044 	addi	r20,r20,1
   422ec:	4091883a 	add	r8,r8,r2
   422f0:	e0bff404 	addi	r2,fp,-48
   422f4:	10c002b0 	cmpltui	r3,r2,10
   422f8:	183ff91e 	bne	r3,zero,422e0 <___vfprintf_internal_r+0x998>
   422fc:	003de406 	br	41a90 <___vfprintf_internal_r+0x148>
   42300:	a2c00007 	ldb	r11,0(r20)
   42304:	6b402014 	ori	r13,r13,128
   42308:	003ddf06 	br	41a88 <___vfprintf_internal_r+0x140>
   4230c:	00800ac4 	movi	r2,43
   42310:	a2c00007 	ldb	r11,0(r20)
   42314:	d8801645 	stb	r2,89(sp)
   42318:	003ddb06 	br	41a88 <___vfprintf_internal_r+0x140>
   4231c:	a2c00007 	ldb	r11,0(r20)
   42320:	6b400054 	ori	r13,r13,1
   42324:	003dd806 	br	41a88 <___vfprintf_internal_r+0x140>
   42328:	d8801647 	ldb	r2,89(sp)
   4232c:	a7000003 	ldbu	fp,0(r20)
   42330:	10000c1e 	bne	r2,zero,42364 <___vfprintf_internal_r+0xa1c>
   42334:	e2c03fcc 	andi	r11,fp,255
   42338:	00800804 	movi	r2,32
   4233c:	5ac0201c 	xori	r11,r11,128
   42340:	d8801645 	stb	r2,89(sp)
   42344:	5affe004 	addi	r11,r11,-128
   42348:	003dcf06 	br	41a88 <___vfprintf_internal_r+0x140>
   4234c:	a2c00007 	ldb	r11,0(r20)
   42350:	58801b18 	cmpnei	r2,r11,108
   42354:	1002bb1e 	bne	r2,zero,42e44 <___vfprintf_internal_r+0x14fc>
   42358:	a7000043 	ldbu	fp,1(r20)
   4235c:	6b400814 	ori	r13,r13,32
   42360:	a5000044 	addi	r20,r20,1
   42364:	e2c03fcc 	andi	r11,fp,255
   42368:	5ac0201c 	xori	r11,r11,128
   4236c:	5affe004 	addi	r11,r11,-128
   42370:	003dc506 	br	41a88 <___vfprintf_internal_r+0x140>
   42374:	a2c00007 	ldb	r11,0(r20)
   42378:	6b400214 	ori	r13,r13,8
   4237c:	003dc206 	br	41a88 <___vfprintf_internal_r+0x140>
   42380:	a2c00007 	ldb	r11,0(r20)
   42384:	6b401014 	ori	r13,r13,64
   42388:	003dbf06 	br	41a88 <___vfprintf_internal_r+0x140>
   4238c:	d8c00717 	ldw	r3,28(sp)
   42390:	d8001645 	stb	zero,89(sp)
   42394:	03000044 	movi	r12,1
   42398:	18800017 	ldw	r2,0(r3)
   4239c:	18c00104 	addi	r3,r3,4
   423a0:	d8c00715 	stw	r3,28(sp)
   423a4:	d8802005 	stb	r2,128(sp)
   423a8:	01c00044 	movi	r7,1
   423ac:	dd402004 	addi	r21,sp,128
   423b0:	003e2a06 	br	41c5c <___vfprintf_internal_r+0x314>
   423b4:	d8800717 	ldw	r2,28(sp)
   423b8:	d8001645 	stb	zero,89(sp)
   423bc:	15400017 	ldw	r21,0(r2)
   423c0:	15800104 	addi	r22,r2,4
   423c4:	a802e226 	beq	r21,zero,42f50 <___vfprintf_internal_r+0x1608>
   423c8:	db400815 	stw	r13,32(sp)
   423cc:	40bfffe0 	cmpeqi	r2,r8,-1
   423d0:	10046b1e 	bne	r2,zero,43580 <___vfprintf_internal_r+0x1c38>
   423d4:	400d883a 	mov	r6,r8
   423d8:	000b883a 	mov	r5,zero
   423dc:	a809883a 	mov	r4,r21
   423e0:	da000715 	stw	r8,28(sp)
   423e4:	00473780 	call	47378 <memchr>
   423e8:	da000717 	ldw	r8,28(sp)
   423ec:	db400817 	ldw	r13,32(sp)
   423f0:	1005b126 	beq	r2,zero,43ab8 <___vfprintf_internal_r+0x2170>
   423f4:	154fc83a 	sub	r7,r2,r21
   423f8:	3819883a 	mov	r12,r7
   423fc:	dd800715 	stw	r22,28(sp)
   42400:	003e1606 	br	41c5c <___vfprintf_internal_r+0x314>
   42404:	a2c00007 	ldb	r11,0(r20)
   42408:	6b400814 	ori	r13,r13,32
   4240c:	003d9e06 	br	41a88 <___vfprintf_internal_r+0x140>
   42410:	d8c00717 	ldw	r3,28(sp)
   42414:	009e0c04 	movi	r2,30768
   42418:	01000174 	movhi	r4,5
   4241c:	d880168d 	sth	r2,90(sp)
   42420:	18800104 	addi	r2,r3,4
   42424:	d8800715 	stw	r2,28(sp)
   42428:	2084fd04 	addi	r2,r4,5108
   4242c:	d8800e15 	stw	r2,56(sp)
   42430:	1d800017 	ldw	r22,0(r3)
   42434:	002f883a 	mov	r23,zero
   42438:	6b400094 	ori	r13,r13,2
   4243c:	00800084 	movi	r2,2
   42440:	07001e04 	movi	fp,120
   42444:	003ea506 	br	41edc <___vfprintf_internal_r+0x594>
   42448:	6880080c 	andi	r2,r13,32
   4244c:	10028926 	beq	r2,zero,42e74 <___vfprintf_internal_r+0x152c>
   42450:	d9000617 	ldw	r4,24(sp)
   42454:	d8800717 	ldw	r2,28(sp)
   42458:	2007d7fa 	srai	r3,r4,31
   4245c:	10800017 	ldw	r2,0(r2)
   42460:	11000015 	stw	r4,0(r2)
   42464:	10c00115 	stw	r3,4(r2)
   42468:	d8800717 	ldw	r2,28(sp)
   4246c:	10800104 	addi	r2,r2,4
   42470:	d8800715 	stw	r2,28(sp)
   42474:	003d6e06 	br	41a30 <___vfprintf_internal_r+0xe8>
   42478:	e2c01990 	cmplti	r11,fp,102
   4247c:	5800ed1e 	bne	r11,zero,42834 <___vfprintf_internal_r+0xeec>
   42480:	d9000a17 	ldw	r4,40(sp)
   42484:	d9400b17 	ldw	r5,44(sp)
   42488:	000d883a 	mov	r6,zero
   4248c:	000f883a 	mov	r7,zero
   42490:	db001015 	stw	r12,64(sp)
   42494:	d8c00f15 	stw	r3,60(sp)
   42498:	004d3340 	call	4d334 <__eqdf2>
   4249c:	d8c00f17 	ldw	r3,60(sp)
   424a0:	db001017 	ldw	r12,64(sp)
   424a4:	1001a61e 	bne	r2,zero,42b40 <___vfprintf_internal_r+0x11f8>
   424a8:	d8801e17 	ldw	r2,120(sp)
   424ac:	01000174 	movhi	r4,5
   424b0:	21050404 	addi	r4,r4,5136
   424b4:	10800044 	addi	r2,r2,1
   424b8:	b5800044 	addi	r22,r22,1
   424bc:	91000015 	stw	r4,0(r18)
   424c0:	01000044 	movi	r4,1
   424c4:	d8801e15 	stw	r2,120(sp)
   424c8:	91000115 	stw	r4,4(r18)
   424cc:	dd801f15 	stw	r22,124(sp)
   424d0:	10800208 	cmpgei	r2,r2,8
   424d4:	1003c41e 	bne	r2,zero,433e8 <___vfprintf_internal_r+0x1aa0>
   424d8:	94800204 	addi	r18,r18,8
   424dc:	d8801717 	ldw	r2,92(sp)
   424e0:	d9000917 	ldw	r4,36(sp)
   424e4:	11000416 	blt	r2,r4,424f8 <___vfprintf_internal_r+0xbb0>
   424e8:	1880004c 	andi	r2,r3,1
   424ec:	1000021e 	bne	r2,zero,424f8 <___vfprintf_internal_r+0xbb0>
   424f0:	b009883a 	mov	r4,r22
   424f4:	003e0f06 	br	41d34 <___vfprintf_internal_r+0x3ec>
   424f8:	d8800d17 	ldw	r2,52(sp)
   424fc:	d9400c17 	ldw	r5,48(sp)
   42500:	90800015 	stw	r2,0(r18)
   42504:	d8801e17 	ldw	r2,120(sp)
   42508:	2d89883a 	add	r4,r5,r22
   4250c:	91400115 	stw	r5,4(r18)
   42510:	10800044 	addi	r2,r2,1
   42514:	d8801e15 	stw	r2,120(sp)
   42518:	d9001f15 	stw	r4,124(sp)
   4251c:	10800208 	cmpgei	r2,r2,8
   42520:	10026b1e 	bne	r2,zero,42ed0 <___vfprintf_internal_r+0x1588>
   42524:	94800204 	addi	r18,r18,8
   42528:	d8800917 	ldw	r2,36(sp)
   4252c:	15ffffc4 	addi	r23,r2,-1
   42530:	05fe000e 	bge	zero,r23,41d34 <___vfprintf_internal_r+0x3ec>
   42534:	05800174 	movhi	r22,5
   42538:	b9400450 	cmplti	r5,r23,17
   4253c:	d8801e17 	ldw	r2,120(sp)
   42540:	b5850504 	addi	r22,r22,5140
   42544:	2801441e 	bne	r5,zero,42a58 <___vfprintf_internal_r+0x1110>
   42548:	900d883a 	mov	r6,r18
   4254c:	980b883a 	mov	r5,r19
   42550:	1825883a 	mov	r18,r3
   42554:	b02b883a 	mov	r21,r22
   42558:	8027883a 	mov	r19,r16
   4255c:	a02d883a 	mov	r22,r20
   42560:	b821883a 	mov	r16,r23
   42564:	07000404 	movi	fp,16
   42568:	6029883a 	mov	r20,r12
   4256c:	282f883a 	mov	r23,r5
   42570:	3007883a 	mov	r3,r6
   42574:	00000406 	br	42588 <___vfprintf_internal_r+0xc40>
   42578:	18c00204 	addi	r3,r3,8
   4257c:	843ffc04 	addi	r16,r16,-16
   42580:	81400448 	cmpgei	r5,r16,17
   42584:	28012a26 	beq	r5,zero,42a30 <___vfprintf_internal_r+0x10e8>
   42588:	10800044 	addi	r2,r2,1
   4258c:	21000404 	addi	r4,r4,16
   42590:	1d400015 	stw	r21,0(r3)
   42594:	1f000115 	stw	fp,4(r3)
   42598:	d9001f15 	stw	r4,124(sp)
   4259c:	d8801e15 	stw	r2,120(sp)
   425a0:	11400208 	cmpgei	r5,r2,8
   425a4:	283ff426 	beq	r5,zero,42578 <___vfprintf_internal_r+0xc30>
   425a8:	d9400417 	ldw	r5,16(sp)
   425ac:	d9000517 	ldw	r4,20(sp)
   425b0:	d9801d04 	addi	r6,sp,116
   425b4:	004913c0 	call	4913c <__sprint_r>
   425b8:	103dee1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   425bc:	d9001f17 	ldw	r4,124(sp)
   425c0:	d8801e17 	ldw	r2,120(sp)
   425c4:	8807883a 	mov	r3,r17
   425c8:	003fec06 	br	4257c <___vfprintf_internal_r+0xc34>
   425cc:	832fc83a 	sub	r23,r16,r12
   425d0:	05fdca0e 	bge	zero,r23,41cfc <___vfprintf_internal_r+0x3b4>
   425d4:	b009883a 	mov	r4,r22
   425d8:	b9400450 	cmplti	r5,r23,17
   425dc:	05800174 	movhi	r22,5
   425e0:	d8801e17 	ldw	r2,120(sp)
   425e4:	b5850504 	addi	r22,r22,5140
   425e8:	28002e1e 	bne	r5,zero,426a4 <___vfprintf_internal_r+0xd5c>
   425ec:	d8c00f15 	stw	r3,60(sp)
   425f0:	dc001015 	stw	r16,64(sp)
   425f4:	9007883a 	mov	r3,r18
   425f8:	b821883a 	mov	r16,r23
   425fc:	b025883a 	mov	r18,r22
   42600:	982f883a 	mov	r23,r19
   42604:	a02d883a 	mov	r22,r20
   42608:	03400404 	movi	r13,16
   4260c:	da001215 	stw	r8,72(sp)
   42610:	6029883a 	mov	r20,r12
   42614:	3827883a 	mov	r19,r7
   42618:	00000406 	br	4262c <___vfprintf_internal_r+0xce4>
   4261c:	843ffc04 	addi	r16,r16,-16
   42620:	81400448 	cmpgei	r5,r16,17
   42624:	18c00204 	addi	r3,r3,8
   42628:	28001426 	beq	r5,zero,4267c <___vfprintf_internal_r+0xd34>
   4262c:	10800044 	addi	r2,r2,1
   42630:	21000404 	addi	r4,r4,16
   42634:	1c800015 	stw	r18,0(r3)
   42638:	1b400115 	stw	r13,4(r3)
   4263c:	d9001f15 	stw	r4,124(sp)
   42640:	d8801e15 	stw	r2,120(sp)
   42644:	11400208 	cmpgei	r5,r2,8
   42648:	283ff426 	beq	r5,zero,4261c <___vfprintf_internal_r+0xcd4>
   4264c:	d9400417 	ldw	r5,16(sp)
   42650:	d9000517 	ldw	r4,20(sp)
   42654:	d9801d04 	addi	r6,sp,116
   42658:	004913c0 	call	4913c <__sprint_r>
   4265c:	103dc51e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42660:	843ffc04 	addi	r16,r16,-16
   42664:	81400448 	cmpgei	r5,r16,17
   42668:	d9001f17 	ldw	r4,124(sp)
   4266c:	d8801e17 	ldw	r2,120(sp)
   42670:	8807883a 	mov	r3,r17
   42674:	03400404 	movi	r13,16
   42678:	283fec1e 	bne	r5,zero,4262c <___vfprintf_internal_r+0xce4>
   4267c:	980f883a 	mov	r7,r19
   42680:	a019883a 	mov	r12,r20
   42684:	b827883a 	mov	r19,r23
   42688:	b029883a 	mov	r20,r22
   4268c:	802f883a 	mov	r23,r16
   42690:	902d883a 	mov	r22,r18
   42694:	da001217 	ldw	r8,72(sp)
   42698:	1825883a 	mov	r18,r3
   4269c:	dc001017 	ldw	r16,64(sp)
   426a0:	d8c00f17 	ldw	r3,60(sp)
   426a4:	10800044 	addi	r2,r2,1
   426a8:	b909883a 	add	r4,r23,r4
   426ac:	d8801e15 	stw	r2,120(sp)
   426b0:	95800015 	stw	r22,0(r18)
   426b4:	95c00115 	stw	r23,4(r18)
   426b8:	d9001f15 	stw	r4,124(sp)
   426bc:	10800208 	cmpgei	r2,r2,8
   426c0:	1003621e 	bne	r2,zero,4344c <___vfprintf_internal_r+0x1b04>
   426c4:	41efc83a 	sub	r23,r8,r7
   426c8:	94800204 	addi	r18,r18,8
   426cc:	202d883a 	mov	r22,r4
   426d0:	05fd8c0e 	bge	zero,r23,41d04 <___vfprintf_internal_r+0x3bc>
   426d4:	b9400450 	cmplti	r5,r23,17
   426d8:	d8801e17 	ldw	r2,120(sp)
   426dc:	b009883a 	mov	r4,r22
   426e0:	2803b11e 	bne	r5,zero,435a8 <___vfprintf_internal_r+0x1c60>
   426e4:	d8c00f15 	stw	r3,60(sp)
   426e8:	dc001015 	stw	r16,64(sp)
   426ec:	9007883a 	mov	r3,r18
   426f0:	b821883a 	mov	r16,r23
   426f4:	a02d883a 	mov	r22,r20
   426f8:	982f883a 	mov	r23,r19
   426fc:	9825883a 	mov	r18,r19
   42700:	02000404 	movi	r8,16
   42704:	6029883a 	mov	r20,r12
   42708:	3827883a 	mov	r19,r7
   4270c:	00000406 	br	42720 <___vfprintf_internal_r+0xdd8>
   42710:	843ffc04 	addi	r16,r16,-16
   42714:	81400448 	cmpgei	r5,r16,17
   42718:	18c00204 	addi	r3,r3,8
   4271c:	28001426 	beq	r5,zero,42770 <___vfprintf_internal_r+0xe28>
   42720:	10800044 	addi	r2,r2,1
   42724:	21000404 	addi	r4,r4,16
   42728:	1c800015 	stw	r18,0(r3)
   4272c:	1a000115 	stw	r8,4(r3)
   42730:	d9001f15 	stw	r4,124(sp)
   42734:	d8801e15 	stw	r2,120(sp)
   42738:	11400208 	cmpgei	r5,r2,8
   4273c:	283ff426 	beq	r5,zero,42710 <___vfprintf_internal_r+0xdc8>
   42740:	d9400417 	ldw	r5,16(sp)
   42744:	d9000517 	ldw	r4,20(sp)
   42748:	d9801d04 	addi	r6,sp,116
   4274c:	004913c0 	call	4913c <__sprint_r>
   42750:	103d881e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42754:	843ffc04 	addi	r16,r16,-16
   42758:	81400448 	cmpgei	r5,r16,17
   4275c:	d9001f17 	ldw	r4,124(sp)
   42760:	d8801e17 	ldw	r2,120(sp)
   42764:	8807883a 	mov	r3,r17
   42768:	02000404 	movi	r8,16
   4276c:	283fec1e 	bne	r5,zero,42720 <___vfprintf_internal_r+0xdd8>
   42770:	980f883a 	mov	r7,r19
   42774:	a019883a 	mov	r12,r20
   42778:	9027883a 	mov	r19,r18
   4277c:	b029883a 	mov	r20,r22
   42780:	1825883a 	mov	r18,r3
   42784:	b82d883a 	mov	r22,r23
   42788:	d8c00f17 	ldw	r3,60(sp)
   4278c:	802f883a 	mov	r23,r16
   42790:	dc001017 	ldw	r16,64(sp)
   42794:	10800044 	addi	r2,r2,1
   42798:	b909883a 	add	r4,r23,r4
   4279c:	d8801e15 	stw	r2,120(sp)
   427a0:	95800015 	stw	r22,0(r18)
   427a4:	95c00115 	stw	r23,4(r18)
   427a8:	d9001f15 	stw	r4,124(sp)
   427ac:	10800208 	cmpgei	r2,r2,8
   427b0:	10018a1e 	bne	r2,zero,42ddc <___vfprintf_internal_r+0x1494>
   427b4:	94800204 	addi	r18,r18,8
   427b8:	202d883a 	mov	r22,r4
   427bc:	003d5106 	br	41d04 <___vfprintf_internal_r+0x3bc>
   427c0:	11400060 	cmpeqi	r5,r2,1
   427c4:	181b883a 	mov	r13,r3
   427c8:	002d883a 	mov	r22,zero
   427cc:	283eac1e 	bne	r5,zero,42280 <___vfprintf_internal_r+0x938>
   427d0:	108000a0 	cmpeqi	r2,r2,2
   427d4:	002f883a 	mov	r23,zero
   427d8:	103dcd26 	beq	r2,zero,41f10 <___vfprintf_internal_r+0x5c8>
   427dc:	d9400e17 	ldw	r5,56(sp)
   427e0:	882b883a 	mov	r21,r17
   427e4:	b08003cc 	andi	r2,r22,15
   427e8:	b806973a 	slli	r3,r23,28
   427ec:	b02cd13a 	srli	r22,r22,4
   427f0:	2885883a 	add	r2,r5,r2
   427f4:	10800003 	ldbu	r2,0(r2)
   427f8:	b82ed13a 	srli	r23,r23,4
   427fc:	1dacb03a 	or	r22,r3,r22
   42800:	a8bfffc5 	stb	r2,-1(r21)
   42804:	b5c4b03a 	or	r2,r22,r23
   42808:	ad7fffc4 	addi	r21,r21,-1
   4280c:	103ff51e 	bne	r2,zero,427e4 <___vfprintf_internal_r+0xe9c>
   42810:	8d4fc83a 	sub	r7,r17,r21
   42814:	6807883a 	mov	r3,r13
   42818:	003dd306 	br	41f68 <___vfprintf_internal_r+0x620>
   4281c:	d9400417 	ldw	r5,16(sp)
   42820:	d9000517 	ldw	r4,20(sp)
   42824:	d9801d04 	addi	r6,sp,116
   42828:	004913c0 	call	4913c <__sprint_r>
   4282c:	103d4b26 	beq	r2,zero,41d5c <___vfprintf_internal_r+0x414>
   42830:	003d5006 	br	41d74 <___vfprintf_internal_r+0x42c>
   42834:	d8800917 	ldw	r2,36(sp)
   42838:	95c00204 	addi	r23,r18,8
   4283c:	10800088 	cmpgei	r2,r2,2
   42840:	10012126 	beq	r2,zero,42cc8 <___vfprintf_internal_r+0x1380>
   42844:	da001e17 	ldw	r8,120(sp)
   42848:	00800044 	movi	r2,1
   4284c:	b5800044 	addi	r22,r22,1
   42850:	42000044 	addi	r8,r8,1
   42854:	90800115 	stw	r2,4(r18)
   42858:	95400015 	stw	r21,0(r18)
   4285c:	dd801f15 	stw	r22,124(sp)
   42860:	da001e15 	stw	r8,120(sp)
   42864:	40800210 	cmplti	r2,r8,8
   42868:	10022a26 	beq	r2,zero,43114 <___vfprintf_internal_r+0x17cc>
   4286c:	d8800c17 	ldw	r2,48(sp)
   42870:	d9000d17 	ldw	r4,52(sp)
   42874:	42000044 	addi	r8,r8,1
   42878:	15b9883a 	add	fp,r2,r22
   4287c:	b8800115 	stw	r2,4(r23)
   42880:	b9000015 	stw	r4,0(r23)
   42884:	df001f15 	stw	fp,124(sp)
   42888:	da001e15 	stw	r8,120(sp)
   4288c:	40800208 	cmpgei	r2,r8,8
   42890:	10022d1e 	bne	r2,zero,43148 <___vfprintf_internal_r+0x1800>
   42894:	bdc00204 	addi	r23,r23,8
   42898:	d9000a17 	ldw	r4,40(sp)
   4289c:	d9400b17 	ldw	r5,44(sp)
   428a0:	000d883a 	mov	r6,zero
   428a4:	000f883a 	mov	r7,zero
   428a8:	db001015 	stw	r12,64(sp)
   428ac:	d8c00f15 	stw	r3,60(sp)
   428b0:	da000815 	stw	r8,32(sp)
   428b4:	004d3340 	call	4d334 <__eqdf2>
   428b8:	d8c00917 	ldw	r3,36(sp)
   428bc:	da000817 	ldw	r8,32(sp)
   428c0:	db001017 	ldw	r12,64(sp)
   428c4:	1cbfffc4 	addi	r18,r3,-1
   428c8:	d8c00f17 	ldw	r3,60(sp)
   428cc:	10011a26 	beq	r2,zero,42d38 <___vfprintf_internal_r+0x13f0>
   428d0:	aa400044 	addi	r9,r21,1
   428d4:	42000044 	addi	r8,r8,1
   428d8:	e4b9883a 	add	fp,fp,r18
   428dc:	ba400015 	stw	r9,0(r23)
   428e0:	bc800115 	stw	r18,4(r23)
   428e4:	df001f15 	stw	fp,124(sp)
   428e8:	da001e15 	stw	r8,120(sp)
   428ec:	40800208 	cmpgei	r2,r8,8
   428f0:	1002c91e 	bne	r2,zero,43418 <___vfprintf_internal_r+0x1ad0>
   428f4:	bdc00204 	addi	r23,r23,8
   428f8:	d9401117 	ldw	r5,68(sp)
   428fc:	42000044 	addi	r8,r8,1
   42900:	d8801904 	addi	r2,sp,100
   42904:	2f09883a 	add	r4,r5,fp
   42908:	da001e15 	stw	r8,120(sp)
   4290c:	b8800015 	stw	r2,0(r23)
   42910:	b9400115 	stw	r5,4(r23)
   42914:	d9001f15 	stw	r4,124(sp)
   42918:	42000208 	cmpgei	r8,r8,8
   4291c:	40013d1e 	bne	r8,zero,42e14 <___vfprintf_internal_r+0x14cc>
   42920:	bc800204 	addi	r18,r23,8
   42924:	003d0306 	br	41d34 <___vfprintf_internal_r+0x3ec>
   42928:	05c00174 	movhi	r23,5
   4292c:	b1400450 	cmplti	r5,r22,17
   42930:	d9001f17 	ldw	r4,124(sp)
   42934:	d8801e17 	ldw	r2,120(sp)
   42938:	bdc50904 	addi	r23,r23,5156
   4293c:	2800321e 	bne	r5,zero,42a08 <___vfprintf_internal_r+0x10c0>
   42940:	d8c01215 	stw	r3,72(sp)
   42944:	dc001315 	stw	r16,76(sp)
   42948:	9007883a 	mov	r3,r18
   4294c:	b021883a 	mov	r16,r22
   42950:	b825883a 	mov	r18,r23
   42954:	a02d883a 	mov	r22,r20
   42958:	982f883a 	mov	r23,r19
   4295c:	03c00404 	movi	r15,16
   42960:	db800f15 	stw	r14,60(sp)
   42964:	db401015 	stw	r13,64(sp)
   42968:	da001415 	stw	r8,80(sp)
   4296c:	6029883a 	mov	r20,r12
   42970:	3827883a 	mov	r19,r7
   42974:	00000406 	br	42988 <___vfprintf_internal_r+0x1040>
   42978:	843ffc04 	addi	r16,r16,-16
   4297c:	81400448 	cmpgei	r5,r16,17
   42980:	18c00204 	addi	r3,r3,8
   42984:	28001426 	beq	r5,zero,429d8 <___vfprintf_internal_r+0x1090>
   42988:	10800044 	addi	r2,r2,1
   4298c:	21000404 	addi	r4,r4,16
   42990:	1c800015 	stw	r18,0(r3)
   42994:	1bc00115 	stw	r15,4(r3)
   42998:	d9001f15 	stw	r4,124(sp)
   4299c:	d8801e15 	stw	r2,120(sp)
   429a0:	11400208 	cmpgei	r5,r2,8
   429a4:	283ff426 	beq	r5,zero,42978 <___vfprintf_internal_r+0x1030>
   429a8:	d9400417 	ldw	r5,16(sp)
   429ac:	d9000517 	ldw	r4,20(sp)
   429b0:	d9801d04 	addi	r6,sp,116
   429b4:	004913c0 	call	4913c <__sprint_r>
   429b8:	103cee1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   429bc:	843ffc04 	addi	r16,r16,-16
   429c0:	81400448 	cmpgei	r5,r16,17
   429c4:	d9001f17 	ldw	r4,124(sp)
   429c8:	d8801e17 	ldw	r2,120(sp)
   429cc:	8807883a 	mov	r3,r17
   429d0:	03c00404 	movi	r15,16
   429d4:	283fec1e 	bne	r5,zero,42988 <___vfprintf_internal_r+0x1040>
   429d8:	980f883a 	mov	r7,r19
   429dc:	a019883a 	mov	r12,r20
   429e0:	b827883a 	mov	r19,r23
   429e4:	b029883a 	mov	r20,r22
   429e8:	902f883a 	mov	r23,r18
   429ec:	802d883a 	mov	r22,r16
   429f0:	1825883a 	mov	r18,r3
   429f4:	db800f17 	ldw	r14,60(sp)
   429f8:	db401017 	ldw	r13,64(sp)
   429fc:	da001417 	ldw	r8,80(sp)
   42a00:	dc001317 	ldw	r16,76(sp)
   42a04:	d8c01217 	ldw	r3,72(sp)
   42a08:	10800044 	addi	r2,r2,1
   42a0c:	b109883a 	add	r4,r22,r4
   42a10:	d8801e15 	stw	r2,120(sp)
   42a14:	95c00015 	stw	r23,0(r18)
   42a18:	95800115 	stw	r22,4(r18)
   42a1c:	d9001f15 	stw	r4,124(sp)
   42a20:	10800208 	cmpgei	r2,r2,8
   42a24:	1001d51e 	bne	r2,zero,4317c <___vfprintf_internal_r+0x1834>
   42a28:	94800204 	addi	r18,r18,8
   42a2c:	003c9506 	br	41c84 <___vfprintf_internal_r+0x33c>
   42a30:	180d883a 	mov	r6,r3
   42a34:	b80b883a 	mov	r5,r23
   42a38:	9007883a 	mov	r3,r18
   42a3c:	a019883a 	mov	r12,r20
   42a40:	802f883a 	mov	r23,r16
   42a44:	b029883a 	mov	r20,r22
   42a48:	9821883a 	mov	r16,r19
   42a4c:	a82d883a 	mov	r22,r21
   42a50:	2827883a 	mov	r19,r5
   42a54:	3025883a 	mov	r18,r6
   42a58:	10800044 	addi	r2,r2,1
   42a5c:	95800015 	stw	r22,0(r18)
   42a60:	95c00115 	stw	r23,4(r18)
   42a64:	25c9883a 	add	r4,r4,r23
   42a68:	d8801e15 	stw	r2,120(sp)
   42a6c:	d9001f15 	stw	r4,124(sp)
   42a70:	10800208 	cmpgei	r2,r2,8
   42a74:	103cae26 	beq	r2,zero,41d30 <___vfprintf_internal_r+0x3e8>
   42a78:	d9400417 	ldw	r5,16(sp)
   42a7c:	d9000517 	ldw	r4,20(sp)
   42a80:	d9801d04 	addi	r6,sp,116
   42a84:	db000f15 	stw	r12,60(sp)
   42a88:	d8c00815 	stw	r3,32(sp)
   42a8c:	004913c0 	call	4913c <__sprint_r>
   42a90:	103cb81e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42a94:	d9001f17 	ldw	r4,124(sp)
   42a98:	d8c00817 	ldw	r3,32(sp)
   42a9c:	db000f17 	ldw	r12,60(sp)
   42aa0:	8825883a 	mov	r18,r17
   42aa4:	003ca306 	br	41d34 <___vfprintf_internal_r+0x3ec>
   42aa8:	d9400417 	ldw	r5,16(sp)
   42aac:	d9000517 	ldw	r4,20(sp)
   42ab0:	d9801d04 	addi	r6,sp,116
   42ab4:	db001515 	stw	r12,84(sp)
   42ab8:	d9c01415 	stw	r7,80(sp)
   42abc:	da001315 	stw	r8,76(sp)
   42ac0:	d8c01215 	stw	r3,72(sp)
   42ac4:	db401015 	stw	r13,64(sp)
   42ac8:	db800f15 	stw	r14,60(sp)
   42acc:	004913c0 	call	4913c <__sprint_r>
   42ad0:	103ca81e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42ad4:	dd801f17 	ldw	r22,124(sp)
   42ad8:	db001517 	ldw	r12,84(sp)
   42adc:	d9c01417 	ldw	r7,80(sp)
   42ae0:	da001317 	ldw	r8,76(sp)
   42ae4:	d8c01217 	ldw	r3,72(sp)
   42ae8:	db401017 	ldw	r13,64(sp)
   42aec:	db800f17 	ldw	r14,60(sp)
   42af0:	8825883a 	mov	r18,r17
   42af4:	003c7206 	br	41cc0 <___vfprintf_internal_r+0x378>
   42af8:	d9400417 	ldw	r5,16(sp)
   42afc:	d9000517 	ldw	r4,20(sp)
   42b00:	d9801d04 	addi	r6,sp,116
   42b04:	db001415 	stw	r12,80(sp)
   42b08:	d9c01315 	stw	r7,76(sp)
   42b0c:	da001215 	stw	r8,72(sp)
   42b10:	d8c01015 	stw	r3,64(sp)
   42b14:	db400f15 	stw	r13,60(sp)
   42b18:	004913c0 	call	4913c <__sprint_r>
   42b1c:	103c951e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42b20:	dd801f17 	ldw	r22,124(sp)
   42b24:	db001417 	ldw	r12,80(sp)
   42b28:	d9c01317 	ldw	r7,76(sp)
   42b2c:	da001217 	ldw	r8,72(sp)
   42b30:	d8c01017 	ldw	r3,64(sp)
   42b34:	db400f17 	ldw	r13,60(sp)
   42b38:	8825883a 	mov	r18,r17
   42b3c:	003c6d06 	br	41cf4 <___vfprintf_internal_r+0x3ac>
   42b40:	ddc01717 	ldw	r23,92(sp)
   42b44:	05c1a00e 	bge	zero,r23,431c8 <___vfprintf_internal_r+0x1880>
   42b48:	d8800917 	ldw	r2,36(sp)
   42b4c:	d9000817 	ldw	r4,32(sp)
   42b50:	102f883a 	mov	r23,r2
   42b54:	2080d016 	blt	r4,r2,42e98 <___vfprintf_internal_r+0x1550>
   42b58:	05c00a0e 	bge	zero,r23,42b84 <___vfprintf_internal_r+0x123c>
   42b5c:	d8801e17 	ldw	r2,120(sp)
   42b60:	b5ed883a 	add	r22,r22,r23
   42b64:	95400015 	stw	r21,0(r18)
   42b68:	10800044 	addi	r2,r2,1
   42b6c:	d8801e15 	stw	r2,120(sp)
   42b70:	95c00115 	stw	r23,4(r18)
   42b74:	dd801f15 	stw	r22,124(sp)
   42b78:	10800208 	cmpgei	r2,r2,8
   42b7c:	1003921e 	bne	r2,zero,439c8 <___vfprintf_internal_r+0x2080>
   42b80:	94800204 	addi	r18,r18,8
   42b84:	b800d016 	blt	r23,zero,42ec8 <___vfprintf_internal_r+0x1580>
   42b88:	d8800817 	ldw	r2,32(sp)
   42b8c:	15efc83a 	sub	r23,r2,r23
   42b90:	05c0fb16 	blt	zero,r23,42f80 <___vfprintf_internal_r+0x1638>
   42b94:	ddc01717 	ldw	r23,92(sp)
   42b98:	d9000917 	ldw	r4,36(sp)
   42b9c:	b900c10e 	bge	r23,r4,42ea4 <___vfprintf_internal_r+0x155c>
   42ba0:	d8800d17 	ldw	r2,52(sp)
   42ba4:	d9400c17 	ldw	r5,48(sp)
   42ba8:	90800015 	stw	r2,0(r18)
   42bac:	d8801e17 	ldw	r2,120(sp)
   42bb0:	2d89883a 	add	r4,r5,r22
   42bb4:	91400115 	stw	r5,4(r18)
   42bb8:	10800044 	addi	r2,r2,1
   42bbc:	d8801e15 	stw	r2,120(sp)
   42bc0:	d9001f15 	stw	r4,124(sp)
   42bc4:	10800208 	cmpgei	r2,r2,8
   42bc8:	1003651e 	bne	r2,zero,43960 <___vfprintf_internal_r+0x2018>
   42bcc:	94800204 	addi	r18,r18,8
   42bd0:	d8800917 	ldw	r2,36(sp)
   42bd4:	d9400817 	ldw	r5,32(sp)
   42bd8:	15efc83a 	sub	r23,r2,r23
   42bdc:	1179c83a 	sub	fp,r2,r5
   42be0:	bf00010e 	bge	r23,fp,42be8 <___vfprintf_internal_r+0x12a0>
   42be4:	b839883a 	mov	fp,r23
   42be8:	07000c0e 	bge	zero,fp,42c1c <___vfprintf_internal_r+0x12d4>
   42bec:	d8800817 	ldw	r2,32(sp)
   42bf0:	2709883a 	add	r4,r4,fp
   42bf4:	97000115 	stw	fp,4(r18)
   42bf8:	a893883a 	add	r9,r21,r2
   42bfc:	d8801e17 	ldw	r2,120(sp)
   42c00:	92400015 	stw	r9,0(r18)
   42c04:	d9001f15 	stw	r4,124(sp)
   42c08:	10800044 	addi	r2,r2,1
   42c0c:	d8801e15 	stw	r2,120(sp)
   42c10:	10800208 	cmpgei	r2,r2,8
   42c14:	10037b1e 	bne	r2,zero,43a04 <___vfprintf_internal_r+0x20bc>
   42c18:	94800204 	addi	r18,r18,8
   42c1c:	e005883a 	mov	r2,fp
   42c20:	e000010e 	bge	fp,zero,42c28 <___vfprintf_internal_r+0x12e0>
   42c24:	0005883a 	mov	r2,zero
   42c28:	b8afc83a 	sub	r23,r23,r2
   42c2c:	05fc410e 	bge	zero,r23,41d34 <___vfprintf_internal_r+0x3ec>
   42c30:	05800174 	movhi	r22,5
   42c34:	b9400450 	cmplti	r5,r23,17
   42c38:	d8801e17 	ldw	r2,120(sp)
   42c3c:	b5850504 	addi	r22,r22,5140
   42c40:	283f851e 	bne	r5,zero,42a58 <___vfprintf_internal_r+0x1110>
   42c44:	980b883a 	mov	r5,r19
   42c48:	d8c00815 	stw	r3,32(sp)
   42c4c:	8027883a 	mov	r19,r16
   42c50:	9007883a 	mov	r3,r18
   42c54:	b821883a 	mov	r16,r23
   42c58:	b025883a 	mov	r18,r22
   42c5c:	dd400517 	ldw	r21,20(sp)
   42c60:	a02d883a 	mov	r22,r20
   42c64:	07000404 	movi	fp,16
   42c68:	6029883a 	mov	r20,r12
   42c6c:	282f883a 	mov	r23,r5
   42c70:	00000406 	br	42c84 <___vfprintf_internal_r+0x133c>
   42c74:	18c00204 	addi	r3,r3,8
   42c78:	843ffc04 	addi	r16,r16,-16
   42c7c:	81400448 	cmpgei	r5,r16,17
   42c80:	28034426 	beq	r5,zero,43994 <___vfprintf_internal_r+0x204c>
   42c84:	10800044 	addi	r2,r2,1
   42c88:	21000404 	addi	r4,r4,16
   42c8c:	1c800015 	stw	r18,0(r3)
   42c90:	1f000115 	stw	fp,4(r3)
   42c94:	d9001f15 	stw	r4,124(sp)
   42c98:	d8801e15 	stw	r2,120(sp)
   42c9c:	11400208 	cmpgei	r5,r2,8
   42ca0:	283ff426 	beq	r5,zero,42c74 <___vfprintf_internal_r+0x132c>
   42ca4:	d9400417 	ldw	r5,16(sp)
   42ca8:	d9801d04 	addi	r6,sp,116
   42cac:	a809883a 	mov	r4,r21
   42cb0:	004913c0 	call	4913c <__sprint_r>
   42cb4:	103c2f1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42cb8:	d9001f17 	ldw	r4,124(sp)
   42cbc:	d8801e17 	ldw	r2,120(sp)
   42cc0:	8807883a 	mov	r3,r17
   42cc4:	003fec06 	br	42c78 <___vfprintf_internal_r+0x1330>
   42cc8:	1880004c 	andi	r2,r3,1
   42ccc:	103edd1e 	bne	r2,zero,42844 <___vfprintf_internal_r+0xefc>
   42cd0:	da001e17 	ldw	r8,120(sp)
   42cd4:	00800044 	movi	r2,1
   42cd8:	b7000044 	addi	fp,r22,1
   42cdc:	42000044 	addi	r8,r8,1
   42ce0:	90800115 	stw	r2,4(r18)
   42ce4:	95400015 	stw	r21,0(r18)
   42ce8:	df001f15 	stw	fp,124(sp)
   42cec:	da001e15 	stw	r8,120(sp)
   42cf0:	40800210 	cmplti	r2,r8,8
   42cf4:	103f001e 	bne	r2,zero,428f8 <___vfprintf_internal_r+0xfb0>
   42cf8:	d9400417 	ldw	r5,16(sp)
   42cfc:	d9000517 	ldw	r4,20(sp)
   42d00:	d9801d04 	addi	r6,sp,116
   42d04:	db000f15 	stw	r12,60(sp)
   42d08:	d8c00815 	stw	r3,32(sp)
   42d0c:	004913c0 	call	4913c <__sprint_r>
   42d10:	103c181e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42d14:	df001f17 	ldw	fp,124(sp)
   42d18:	da001e17 	ldw	r8,120(sp)
   42d1c:	db000f17 	ldw	r12,60(sp)
   42d20:	d8c00817 	ldw	r3,32(sp)
   42d24:	882f883a 	mov	r23,r17
   42d28:	003ef306 	br	428f8 <___vfprintf_internal_r+0xfb0>
   42d2c:	000f883a 	mov	r7,zero
   42d30:	882b883a 	mov	r21,r17
   42d34:	003c8c06 	br	41f68 <___vfprintf_internal_r+0x620>
   42d38:	d8800917 	ldw	r2,36(sp)
   42d3c:	10800090 	cmplti	r2,r2,2
   42d40:	103eed1e 	bne	r2,zero,428f8 <___vfprintf_internal_r+0xfb0>
   42d44:	d8800917 	ldw	r2,36(sp)
   42d48:	05800174 	movhi	r22,5
   42d4c:	b5850504 	addi	r22,r22,5140
   42d50:	10800490 	cmplti	r2,r2,18
   42d54:	1002061e 	bne	r2,zero,43570 <___vfprintf_internal_r+0x1c28>
   42d58:	9809883a 	mov	r4,r19
   42d5c:	b805883a 	mov	r2,r23
   42d60:	1827883a 	mov	r19,r3
   42d64:	a02f883a 	mov	r23,r20
   42d68:	e007883a 	mov	r3,fp
   42d6c:	8029883a 	mov	r20,r16
   42d70:	05400404 	movi	r21,16
   42d74:	9021883a 	mov	r16,r18
   42d78:	2039883a 	mov	fp,r4
   42d7c:	b025883a 	mov	r18,r22
   42d80:	602d883a 	mov	r22,r12
   42d84:	00000406 	br	42d98 <___vfprintf_internal_r+0x1450>
   42d88:	10800204 	addi	r2,r2,8
   42d8c:	843ffc04 	addi	r16,r16,-16
   42d90:	81000448 	cmpgei	r4,r16,17
   42d94:	2001ec26 	beq	r4,zero,43548 <___vfprintf_internal_r+0x1c00>
   42d98:	42000044 	addi	r8,r8,1
   42d9c:	18c00404 	addi	r3,r3,16
   42da0:	14800015 	stw	r18,0(r2)
   42da4:	15400115 	stw	r21,4(r2)
   42da8:	d8c01f15 	stw	r3,124(sp)
   42dac:	da001e15 	stw	r8,120(sp)
   42db0:	41000208 	cmpgei	r4,r8,8
   42db4:	203ff426 	beq	r4,zero,42d88 <___vfprintf_internal_r+0x1440>
   42db8:	d9400417 	ldw	r5,16(sp)
   42dbc:	d9000517 	ldw	r4,20(sp)
   42dc0:	d9801d04 	addi	r6,sp,116
   42dc4:	004913c0 	call	4913c <__sprint_r>
   42dc8:	103bea1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42dcc:	d8c01f17 	ldw	r3,124(sp)
   42dd0:	da001e17 	ldw	r8,120(sp)
   42dd4:	8805883a 	mov	r2,r17
   42dd8:	003fec06 	br	42d8c <___vfprintf_internal_r+0x1444>
   42ddc:	d9400417 	ldw	r5,16(sp)
   42de0:	d9000517 	ldw	r4,20(sp)
   42de4:	d9801d04 	addi	r6,sp,116
   42de8:	db001215 	stw	r12,72(sp)
   42dec:	d9c01015 	stw	r7,64(sp)
   42df0:	d8c00f15 	stw	r3,60(sp)
   42df4:	004913c0 	call	4913c <__sprint_r>
   42df8:	103bde1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42dfc:	dd801f17 	ldw	r22,124(sp)
   42e00:	db001217 	ldw	r12,72(sp)
   42e04:	d9c01017 	ldw	r7,64(sp)
   42e08:	d8c00f17 	ldw	r3,60(sp)
   42e0c:	8825883a 	mov	r18,r17
   42e10:	003bbc06 	br	41d04 <___vfprintf_internal_r+0x3bc>
   42e14:	d9400417 	ldw	r5,16(sp)
   42e18:	d9000517 	ldw	r4,20(sp)
   42e1c:	d9801d04 	addi	r6,sp,116
   42e20:	db000f15 	stw	r12,60(sp)
   42e24:	d8c00815 	stw	r3,32(sp)
   42e28:	004913c0 	call	4913c <__sprint_r>
   42e2c:	103bd11e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42e30:	d9001f17 	ldw	r4,124(sp)
   42e34:	db000f17 	ldw	r12,60(sp)
   42e38:	d8c00817 	ldw	r3,32(sp)
   42e3c:	8825883a 	mov	r18,r17
   42e40:	003bbc06 	br	41d34 <___vfprintf_internal_r+0x3ec>
   42e44:	6b400414 	ori	r13,r13,16
   42e48:	003b0f06 	br	41a88 <___vfprintf_internal_r+0x140>
   42e4c:	a2c00007 	ldb	r11,0(r20)
   42e50:	d8800715 	stw	r2,28(sp)
   42e54:	003b0c06 	br	41a88 <___vfprintf_internal_r+0x140>
   42e58:	882b883a 	mov	r21,r17
   42e5c:	003c4206 	br	41f68 <___vfprintf_internal_r+0x620>
   42e60:	18800017 	ldw	r2,0(r3)
   42e64:	d8800a15 	stw	r2,40(sp)
   42e68:	18800117 	ldw	r2,4(r3)
   42e6c:	d8800b15 	stw	r2,44(sp)
   42e70:	003c9e06 	br	420ec <___vfprintf_internal_r+0x7a4>
   42e74:	6880040c 	andi	r2,r13,16
   42e78:	1000921e 	bne	r2,zero,430c4 <___vfprintf_internal_r+0x177c>
   42e7c:	6b40100c 	andi	r13,r13,64
   42e80:	68009026 	beq	r13,zero,430c4 <___vfprintf_internal_r+0x177c>
   42e84:	d8800717 	ldw	r2,28(sp)
   42e88:	d8c00617 	ldw	r3,24(sp)
   42e8c:	10800017 	ldw	r2,0(r2)
   42e90:	10c0000d 	sth	r3,0(r2)
   42e94:	003d7406 	br	42468 <___vfprintf_internal_r+0xb20>
   42e98:	202f883a 	mov	r23,r4
   42e9c:	05ff2f16 	blt	zero,r23,42b5c <___vfprintf_internal_r+0x1214>
   42ea0:	003f3806 	br	42b84 <___vfprintf_internal_r+0x123c>
   42ea4:	1880004c 	andi	r2,r3,1
   42ea8:	103f3d1e 	bne	r2,zero,42ba0 <___vfprintf_internal_r+0x1258>
   42eac:	d8800817 	ldw	r2,32(sp)
   42eb0:	25efc83a 	sub	r23,r4,r23
   42eb4:	20b9c83a 	sub	fp,r4,r2
   42eb8:	b009883a 	mov	r4,r22
   42ebc:	bf3f570e 	bge	r23,fp,42c1c <___vfprintf_internal_r+0x12d4>
   42ec0:	b839883a 	mov	fp,r23
   42ec4:	003f5506 	br	42c1c <___vfprintf_internal_r+0x12d4>
   42ec8:	002f883a 	mov	r23,zero
   42ecc:	003f2e06 	br	42b88 <___vfprintf_internal_r+0x1240>
   42ed0:	d9400417 	ldw	r5,16(sp)
   42ed4:	d9000517 	ldw	r4,20(sp)
   42ed8:	d9801d04 	addi	r6,sp,116
   42edc:	db000f15 	stw	r12,60(sp)
   42ee0:	d8c00815 	stw	r3,32(sp)
   42ee4:	004913c0 	call	4913c <__sprint_r>
   42ee8:	103ba21e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   42eec:	d9001f17 	ldw	r4,124(sp)
   42ef0:	db000f17 	ldw	r12,60(sp)
   42ef4:	d8c00817 	ldw	r3,32(sp)
   42ef8:	8825883a 	mov	r18,r17
   42efc:	003d8a06 	br	42528 <___vfprintf_internal_r+0xbe0>
   42f00:	00800174 	movhi	r2,5
   42f04:	1084f804 	addi	r2,r2,5088
   42f08:	d8800e15 	stw	r2,56(sp)
   42f0c:	6880080c 	andi	r2,r13,32
   42f10:	10007326 	beq	r2,zero,430e0 <___vfprintf_internal_r+0x1798>
   42f14:	d8800717 	ldw	r2,28(sp)
   42f18:	15800017 	ldw	r22,0(r2)
   42f1c:	15c00117 	ldw	r23,4(r2)
   42f20:	10800204 	addi	r2,r2,8
   42f24:	d8800715 	stw	r2,28(sp)
   42f28:	6880004c 	andi	r2,r13,1
   42f2c:	10006a26 	beq	r2,zero,430d8 <___vfprintf_internal_r+0x1790>
   42f30:	b5c4b03a 	or	r2,r22,r23
   42f34:	10006826 	beq	r2,zero,430d8 <___vfprintf_internal_r+0x1790>
   42f38:	00800c04 	movi	r2,48
   42f3c:	d8801685 	stb	r2,90(sp)
   42f40:	df0016c5 	stb	fp,91(sp)
   42f44:	6b400094 	ori	r13,r13,2
   42f48:	00800084 	movi	r2,2
   42f4c:	003be306 	br	41edc <___vfprintf_internal_r+0x594>
   42f50:	408001f0 	cmpltui	r2,r8,7
   42f54:	400f883a 	mov	r7,r8
   42f58:	1001bf26 	beq	r2,zero,43658 <___vfprintf_internal_r+0x1d10>
   42f5c:	05400174 	movhi	r21,5
   42f60:	3819883a 	mov	r12,r7
   42f64:	dd800715 	stw	r22,28(sp)
   42f68:	ad450204 	addi	r21,r21,5128
   42f6c:	003b3b06 	br	41c5c <___vfprintf_internal_r+0x314>
   42f70:	00800174 	movhi	r2,5
   42f74:	1084fd04 	addi	r2,r2,5108
   42f78:	d8800e15 	stw	r2,56(sp)
   42f7c:	003fe306 	br	42f0c <___vfprintf_internal_r+0x15c4>
   42f80:	b009883a 	mov	r4,r22
   42f84:	b9400450 	cmplti	r5,r23,17
   42f88:	05800174 	movhi	r22,5
   42f8c:	d8801e17 	ldw	r2,120(sp)
   42f90:	b5850504 	addi	r22,r22,5140
   42f94:	2801901e 	bne	r5,zero,435d8 <___vfprintf_internal_r+0x1c90>
   42f98:	980b883a 	mov	r5,r19
   42f9c:	d8c00f15 	stw	r3,60(sp)
   42fa0:	8027883a 	mov	r19,r16
   42fa4:	9007883a 	mov	r3,r18
   42fa8:	b821883a 	mov	r16,r23
   42fac:	b025883a 	mov	r18,r22
   42fb0:	07000404 	movi	fp,16
   42fb4:	a02d883a 	mov	r22,r20
   42fb8:	282f883a 	mov	r23,r5
   42fbc:	6029883a 	mov	r20,r12
   42fc0:	00000406 	br	42fd4 <___vfprintf_internal_r+0x168c>
   42fc4:	18c00204 	addi	r3,r3,8
   42fc8:	843ffc04 	addi	r16,r16,-16
   42fcc:	81400448 	cmpgei	r5,r16,17
   42fd0:	28017826 	beq	r5,zero,435b4 <___vfprintf_internal_r+0x1c6c>
   42fd4:	10800044 	addi	r2,r2,1
   42fd8:	21000404 	addi	r4,r4,16
   42fdc:	1c800015 	stw	r18,0(r3)
   42fe0:	1f000115 	stw	fp,4(r3)
   42fe4:	d9001f15 	stw	r4,124(sp)
   42fe8:	d8801e15 	stw	r2,120(sp)
   42fec:	11400208 	cmpgei	r5,r2,8
   42ff0:	283ff426 	beq	r5,zero,42fc4 <___vfprintf_internal_r+0x167c>
   42ff4:	d9400417 	ldw	r5,16(sp)
   42ff8:	d9000517 	ldw	r4,20(sp)
   42ffc:	d9801d04 	addi	r6,sp,116
   43000:	004913c0 	call	4913c <__sprint_r>
   43004:	103b5b1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43008:	d9001f17 	ldw	r4,124(sp)
   4300c:	d8801e17 	ldw	r2,120(sp)
   43010:	8807883a 	mov	r3,r17
   43014:	003fec06 	br	42fc8 <___vfprintf_internal_r+0x1680>
   43018:	b007883a 	mov	r3,r22
   4301c:	9805883a 	mov	r2,r19
   43020:	dc000f15 	stw	r16,60(sp)
   43024:	a02d883a 	mov	r22,r20
   43028:	b827883a 	mov	r19,r23
   4302c:	9029883a 	mov	r20,r18
   43030:	db400815 	stw	r13,32(sp)
   43034:	8821883a 	mov	r16,r17
   43038:	da001015 	stw	r8,64(sp)
   4303c:	202b883a 	mov	r21,r4
   43040:	102f883a 	mov	r23,r2
   43044:	1825883a 	mov	r18,r3
   43048:	9009883a 	mov	r4,r18
   4304c:	980b883a 	mov	r5,r19
   43050:	01800284 	movi	r6,10
   43054:	000f883a 	mov	r7,zero
   43058:	004bb240 	call	4bb24 <__umoddi3>
   4305c:	10800c04 	addi	r2,r2,48
   43060:	9009883a 	mov	r4,r18
   43064:	980b883a 	mov	r5,r19
   43068:	01800284 	movi	r6,10
   4306c:	000f883a 	mov	r7,zero
   43070:	80bfffc5 	stb	r2,-1(r16)
   43074:	004b5d40 	call	4b5d4 <__udivdi3>
   43078:	980d883a 	mov	r6,r19
   4307c:	900f883a 	mov	r7,r18
   43080:	843fffc4 	addi	r16,r16,-1
   43084:	1025883a 	mov	r18,r2
   43088:	1827883a 	mov	r19,r3
   4308c:	303fee1e 	bne	r6,zero,43048 <___vfprintf_internal_r+0x1700>
   43090:	39c002a8 	cmpgeui	r7,r7,10
   43094:	383fec1e 	bne	r7,zero,43048 <___vfprintf_internal_r+0x1700>
   43098:	db400817 	ldw	r13,32(sp)
   4309c:	a809883a 	mov	r4,r21
   430a0:	802b883a 	mov	r21,r16
   430a4:	a025883a 	mov	r18,r20
   430a8:	da001017 	ldw	r8,64(sp)
   430ac:	dc000f17 	ldw	r16,60(sp)
   430b0:	b029883a 	mov	r20,r22
   430b4:	b827883a 	mov	r19,r23
   430b8:	8d4fc83a 	sub	r7,r17,r21
   430bc:	6807883a 	mov	r3,r13
   430c0:	003ba906 	br	41f68 <___vfprintf_internal_r+0x620>
   430c4:	d8800717 	ldw	r2,28(sp)
   430c8:	d8c00617 	ldw	r3,24(sp)
   430cc:	10800017 	ldw	r2,0(r2)
   430d0:	10c00015 	stw	r3,0(r2)
   430d4:	003ce406 	br	42468 <___vfprintf_internal_r+0xb20>
   430d8:	00800084 	movi	r2,2
   430dc:	003b7f06 	br	41edc <___vfprintf_internal_r+0x594>
   430e0:	d8c00717 	ldw	r3,28(sp)
   430e4:	6880040c 	andi	r2,r13,16
   430e8:	1d800017 	ldw	r22,0(r3)
   430ec:	18c00104 	addi	r3,r3,4
   430f0:	d8c00715 	stw	r3,28(sp)
   430f4:	1000051e 	bne	r2,zero,4310c <___vfprintf_internal_r+0x17c4>
   430f8:	6880100c 	andi	r2,r13,64
   430fc:	10000326 	beq	r2,zero,4310c <___vfprintf_internal_r+0x17c4>
   43100:	b5bfffcc 	andi	r22,r22,65535
   43104:	002f883a 	mov	r23,zero
   43108:	003f8706 	br	42f28 <___vfprintf_internal_r+0x15e0>
   4310c:	002f883a 	mov	r23,zero
   43110:	003f8506 	br	42f28 <___vfprintf_internal_r+0x15e0>
   43114:	d9400417 	ldw	r5,16(sp)
   43118:	d9000517 	ldw	r4,20(sp)
   4311c:	d9801d04 	addi	r6,sp,116
   43120:	db000f15 	stw	r12,60(sp)
   43124:	d8c00815 	stw	r3,32(sp)
   43128:	004913c0 	call	4913c <__sprint_r>
   4312c:	103b111e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43130:	dd801f17 	ldw	r22,124(sp)
   43134:	da001e17 	ldw	r8,120(sp)
   43138:	db000f17 	ldw	r12,60(sp)
   4313c:	d8c00817 	ldw	r3,32(sp)
   43140:	882f883a 	mov	r23,r17
   43144:	003dc906 	br	4286c <___vfprintf_internal_r+0xf24>
   43148:	d9400417 	ldw	r5,16(sp)
   4314c:	d9000517 	ldw	r4,20(sp)
   43150:	d9801d04 	addi	r6,sp,116
   43154:	db000f15 	stw	r12,60(sp)
   43158:	d8c00815 	stw	r3,32(sp)
   4315c:	004913c0 	call	4913c <__sprint_r>
   43160:	103b041e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43164:	df001f17 	ldw	fp,124(sp)
   43168:	da001e17 	ldw	r8,120(sp)
   4316c:	db000f17 	ldw	r12,60(sp)
   43170:	d8c00817 	ldw	r3,32(sp)
   43174:	882f883a 	mov	r23,r17
   43178:	003dc706 	br	42898 <___vfprintf_internal_r+0xf50>
   4317c:	d9400417 	ldw	r5,16(sp)
   43180:	d9000517 	ldw	r4,20(sp)
   43184:	d9801d04 	addi	r6,sp,116
   43188:	db001515 	stw	r12,84(sp)
   4318c:	d9c01415 	stw	r7,80(sp)
   43190:	da001315 	stw	r8,76(sp)
   43194:	d8c01215 	stw	r3,72(sp)
   43198:	db401015 	stw	r13,64(sp)
   4319c:	db800f15 	stw	r14,60(sp)
   431a0:	004913c0 	call	4913c <__sprint_r>
   431a4:	103af31e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   431a8:	db001517 	ldw	r12,84(sp)
   431ac:	d9c01417 	ldw	r7,80(sp)
   431b0:	da001317 	ldw	r8,76(sp)
   431b4:	d8c01217 	ldw	r3,72(sp)
   431b8:	db401017 	ldw	r13,64(sp)
   431bc:	db800f17 	ldw	r14,60(sp)
   431c0:	8825883a 	mov	r18,r17
   431c4:	003aaf06 	br	41c84 <___vfprintf_internal_r+0x33c>
   431c8:	d8801e17 	ldw	r2,120(sp)
   431cc:	01400174 	movhi	r5,5
   431d0:	29450404 	addi	r5,r5,5136
   431d4:	10800044 	addi	r2,r2,1
   431d8:	b1000044 	addi	r4,r22,1
   431dc:	91400015 	stw	r5,0(r18)
   431e0:	01400044 	movi	r5,1
   431e4:	d8801e15 	stw	r2,120(sp)
   431e8:	91400115 	stw	r5,4(r18)
   431ec:	d9001f15 	stw	r4,124(sp)
   431f0:	10800208 	cmpgei	r2,r2,8
   431f4:	1001071e 	bne	r2,zero,43614 <___vfprintf_internal_r+0x1ccc>
   431f8:	94800204 	addi	r18,r18,8
   431fc:	b800a31e 	bne	r23,zero,4348c <___vfprintf_internal_r+0x1b44>
   43200:	d9400917 	ldw	r5,36(sp)
   43204:	1880004c 	andi	r2,r3,1
   43208:	1144b03a 	or	r2,r2,r5
   4320c:	103ac926 	beq	r2,zero,41d34 <___vfprintf_internal_r+0x3ec>
   43210:	d8800d17 	ldw	r2,52(sp)
   43214:	d9400c17 	ldw	r5,48(sp)
   43218:	90800015 	stw	r2,0(r18)
   4321c:	d8801e17 	ldw	r2,120(sp)
   43220:	2909883a 	add	r4,r5,r4
   43224:	91400115 	stw	r5,4(r18)
   43228:	10800044 	addi	r2,r2,1
   4322c:	d9001f15 	stw	r4,124(sp)
   43230:	d8801e15 	stw	r2,120(sp)
   43234:	11400208 	cmpgei	r5,r2,8
   43238:	28010e1e 	bne	r5,zero,43674 <___vfprintf_internal_r+0x1d2c>
   4323c:	94800204 	addi	r18,r18,8
   43240:	d9400917 	ldw	r5,36(sp)
   43244:	10800044 	addi	r2,r2,1
   43248:	d8801e15 	stw	r2,120(sp)
   4324c:	2909883a 	add	r4,r5,r4
   43250:	95400015 	stw	r21,0(r18)
   43254:	91400115 	stw	r5,4(r18)
   43258:	d9001f15 	stw	r4,124(sp)
   4325c:	10800208 	cmpgei	r2,r2,8
   43260:	103ab326 	beq	r2,zero,41d30 <___vfprintf_internal_r+0x3e8>
   43264:	003e0406 	br	42a78 <___vfprintf_internal_r+0x1130>
   43268:	d9000a17 	ldw	r4,40(sp)
   4326c:	d9400b17 	ldw	r5,44(sp)
   43270:	da000815 	stw	r8,32(sp)
   43274:	200d883a 	mov	r6,r4
   43278:	280f883a 	mov	r7,r5
   4327c:	db400715 	stw	r13,28(sp)
   43280:	004e6300 	call	4e630 <__unorddf2>
   43284:	db400717 	ldw	r13,28(sp)
   43288:	da000817 	ldw	r8,32(sp)
   4328c:	10024c1e 	bne	r2,zero,43bc0 <___vfprintf_internal_r+0x2278>
   43290:	057ff7c4 	movi	r21,-33
   43294:	40bfffe0 	cmpeqi	r2,r8,-1
   43298:	e56c703a 	and	r22,fp,r21
   4329c:	1001d71e 	bne	r2,zero,439fc <___vfprintf_internal_r+0x20b4>
   432a0:	b08011d8 	cmpnei	r2,r22,71
   432a4:	1001c526 	beq	r2,zero,439bc <___vfprintf_internal_r+0x2074>
   432a8:	d8800b17 	ldw	r2,44(sp)
   432ac:	68c04014 	ori	r3,r13,256
   432b0:	1000e516 	blt	r2,zero,43648 <___vfprintf_internal_r+0x1d00>
   432b4:	ddc00b17 	ldw	r23,44(sp)
   432b8:	d8000705 	stb	zero,28(sp)
   432bc:	e08019a0 	cmpeqi	r2,fp,102
   432c0:	d8801015 	stw	r2,64(sp)
   432c4:	10017c1e 	bne	r2,zero,438b8 <___vfprintf_internal_r+0x1f70>
   432c8:	b0801158 	cmpnei	r2,r22,69
   432cc:	1000f826 	beq	r2,zero,436b0 <___vfprintf_internal_r+0x1d68>
   432d0:	d8801b04 	addi	r2,sp,108
   432d4:	d9000517 	ldw	r4,20(sp)
   432d8:	d8800315 	stw	r2,12(sp)
   432dc:	d9400a17 	ldw	r5,40(sp)
   432e0:	d8801804 	addi	r2,sp,96
   432e4:	d8800215 	stw	r2,8(sp)
   432e8:	d8801704 	addi	r2,sp,92
   432ec:	da000015 	stw	r8,0(sp)
   432f0:	d8800115 	stw	r2,4(sp)
   432f4:	01c00084 	movi	r7,2
   432f8:	b80d883a 	mov	r6,r23
   432fc:	d8c01215 	stw	r3,72(sp)
   43300:	db400915 	stw	r13,36(sp)
   43304:	da000815 	stw	r8,32(sp)
   43308:	00441180 	call	44118 <_dtoa_r>
   4330c:	e10019e0 	cmpeqi	r4,fp,103
   43310:	da000817 	ldw	r8,32(sp)
   43314:	db400917 	ldw	r13,36(sp)
   43318:	d8c01217 	ldw	r3,72(sp)
   4331c:	102b883a 	mov	r21,r2
   43320:	20010b26 	beq	r4,zero,43750 <___vfprintf_internal_r+0x1e08>
   43324:	6880004c 	andi	r2,r13,1
   43328:	10010b26 	beq	r2,zero,43758 <___vfprintf_internal_r+0x1e10>
   4332c:	aa19883a 	add	r12,r21,r8
   43330:	d9000a17 	ldw	r4,40(sp)
   43334:	000d883a 	mov	r6,zero
   43338:	000f883a 	mov	r7,zero
   4333c:	b80b883a 	mov	r5,r23
   43340:	db001315 	stw	r12,76(sp)
   43344:	da001215 	stw	r8,72(sp)
   43348:	d8c00915 	stw	r3,36(sp)
   4334c:	db400815 	stw	r13,32(sp)
   43350:	004d3340 	call	4d334 <__eqdf2>
   43354:	db400817 	ldw	r13,32(sp)
   43358:	d8c00917 	ldw	r3,36(sp)
   4335c:	da001217 	ldw	r8,72(sp)
   43360:	db001317 	ldw	r12,76(sp)
   43364:	10023326 	beq	r2,zero,43c34 <___vfprintf_internal_r+0x22ec>
   43368:	d8801b17 	ldw	r2,108(sp)
   4336c:	1300062e 	bgeu	r2,r12,43388 <___vfprintf_internal_r+0x1a40>
   43370:	01400c04 	movi	r5,48
   43374:	11000044 	addi	r4,r2,1
   43378:	d9001b15 	stw	r4,108(sp)
   4337c:	11400005 	stb	r5,0(r2)
   43380:	d8801b17 	ldw	r2,108(sp)
   43384:	133ffb36 	bltu	r2,r12,43374 <___vfprintf_internal_r+0x1a2c>
   43388:	d9c01717 	ldw	r7,92(sp)
   4338c:	1545c83a 	sub	r2,r2,r21
   43390:	b10011d8 	cmpnei	r4,r22,71
   43394:	d8800915 	stw	r2,36(sp)
   43398:	d9c00815 	stw	r7,32(sp)
   4339c:	2000f226 	beq	r4,zero,43768 <___vfprintf_internal_r+0x1e20>
   433a0:	d8801017 	ldw	r2,64(sp)
   433a4:	10021d26 	beq	r2,zero,43c1c <___vfprintf_internal_r+0x22d4>
   433a8:	d9000817 	ldw	r4,32(sp)
   433ac:	6880004c 	andi	r2,r13,1
   433b0:	1204b03a 	or	r2,r2,r8
   433b4:	0102430e 	bge	zero,r4,43cc4 <___vfprintf_internal_r+0x237c>
   433b8:	1002221e 	bne	r2,zero,43c44 <___vfprintf_internal_r+0x22fc>
   433bc:	d9c00817 	ldw	r7,32(sp)
   433c0:	3819883a 	mov	r12,r7
   433c4:	07001984 	movi	fp,102
   433c8:	ddc00707 	ldb	r23,28(sp)
   433cc:	b8013526 	beq	r23,zero,438a4 <___vfprintf_internal_r+0x1f5c>
   433d0:	00800b44 	movi	r2,45
   433d4:	d8801645 	stb	r2,89(sp)
   433d8:	d8800f17 	ldw	r2,60(sp)
   433dc:	0011883a 	mov	r8,zero
   433e0:	d8800715 	stw	r2,28(sp)
   433e4:	003ae806 	br	41f88 <___vfprintf_internal_r+0x640>
   433e8:	d9400417 	ldw	r5,16(sp)
   433ec:	d9000517 	ldw	r4,20(sp)
   433f0:	d9801d04 	addi	r6,sp,116
   433f4:	db000f15 	stw	r12,60(sp)
   433f8:	d8c00815 	stw	r3,32(sp)
   433fc:	004913c0 	call	4913c <__sprint_r>
   43400:	103a5c1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43404:	dd801f17 	ldw	r22,124(sp)
   43408:	db000f17 	ldw	r12,60(sp)
   4340c:	d8c00817 	ldw	r3,32(sp)
   43410:	8825883a 	mov	r18,r17
   43414:	003c3106 	br	424dc <___vfprintf_internal_r+0xb94>
   43418:	d9400417 	ldw	r5,16(sp)
   4341c:	d9000517 	ldw	r4,20(sp)
   43420:	d9801d04 	addi	r6,sp,116
   43424:	db000f15 	stw	r12,60(sp)
   43428:	d8c00815 	stw	r3,32(sp)
   4342c:	004913c0 	call	4913c <__sprint_r>
   43430:	103a501e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43434:	df001f17 	ldw	fp,124(sp)
   43438:	da001e17 	ldw	r8,120(sp)
   4343c:	d8c00817 	ldw	r3,32(sp)
   43440:	db000f17 	ldw	r12,60(sp)
   43444:	882f883a 	mov	r23,r17
   43448:	003d2b06 	br	428f8 <___vfprintf_internal_r+0xfb0>
   4344c:	d9400417 	ldw	r5,16(sp)
   43450:	d9000517 	ldw	r4,20(sp)
   43454:	d9801d04 	addi	r6,sp,116
   43458:	db001315 	stw	r12,76(sp)
   4345c:	d9c01215 	stw	r7,72(sp)
   43460:	da001015 	stw	r8,64(sp)
   43464:	d8c00f15 	stw	r3,60(sp)
   43468:	004913c0 	call	4913c <__sprint_r>
   4346c:	103a411e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43470:	dd801f17 	ldw	r22,124(sp)
   43474:	db001317 	ldw	r12,76(sp)
   43478:	d9c01217 	ldw	r7,72(sp)
   4347c:	da001017 	ldw	r8,64(sp)
   43480:	d8c00f17 	ldw	r3,60(sp)
   43484:	8825883a 	mov	r18,r17
   43488:	003a1c06 	br	41cfc <___vfprintf_internal_r+0x3b4>
   4348c:	d8800d17 	ldw	r2,52(sp)
   43490:	d9400c17 	ldw	r5,48(sp)
   43494:	90800015 	stw	r2,0(r18)
   43498:	d8801e17 	ldw	r2,120(sp)
   4349c:	2909883a 	add	r4,r5,r4
   434a0:	91400115 	stw	r5,4(r18)
   434a4:	10800044 	addi	r2,r2,1
   434a8:	d9001f15 	stw	r4,124(sp)
   434ac:	d8801e15 	stw	r2,120(sp)
   434b0:	11400208 	cmpgei	r5,r2,8
   434b4:	28006f1e 	bne	r5,zero,43674 <___vfprintf_internal_r+0x1d2c>
   434b8:	94800204 	addi	r18,r18,8
   434bc:	b83f600e 	bge	r23,zero,43240 <___vfprintf_internal_r+0x18f8>
   434c0:	05800174 	movhi	r22,5
   434c4:	b97ffc08 	cmpgei	r5,r23,-16
   434c8:	b5850504 	addi	r22,r22,5140
   434cc:	05efc83a 	sub	r23,zero,r23
   434d0:	2801941e 	bne	r5,zero,43b24 <___vfprintf_internal_r+0x21dc>
   434d4:	d8c00815 	stw	r3,32(sp)
   434d8:	07000404 	movi	fp,16
   434dc:	9007883a 	mov	r3,r18
   434e0:	8025883a 	mov	r18,r16
   434e4:	b021883a 	mov	r16,r22
   434e8:	982d883a 	mov	r22,r19
   434ec:	6027883a 	mov	r19,r12
   434f0:	00000406 	br	43504 <___vfprintf_internal_r+0x1bbc>
   434f4:	18c00204 	addi	r3,r3,8
   434f8:	bdfffc04 	addi	r23,r23,-16
   434fc:	b9400448 	cmpgei	r5,r23,17
   43500:	28018226 	beq	r5,zero,43b0c <___vfprintf_internal_r+0x21c4>
   43504:	10800044 	addi	r2,r2,1
   43508:	21000404 	addi	r4,r4,16
   4350c:	1c000015 	stw	r16,0(r3)
   43510:	1f000115 	stw	fp,4(r3)
   43514:	d9001f15 	stw	r4,124(sp)
   43518:	d8801e15 	stw	r2,120(sp)
   4351c:	11400208 	cmpgei	r5,r2,8
   43520:	283ff426 	beq	r5,zero,434f4 <___vfprintf_internal_r+0x1bac>
   43524:	d9400417 	ldw	r5,16(sp)
   43528:	d9000517 	ldw	r4,20(sp)
   4352c:	d9801d04 	addi	r6,sp,116
   43530:	004913c0 	call	4913c <__sprint_r>
   43534:	103a0f1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43538:	d9001f17 	ldw	r4,124(sp)
   4353c:	d8801e17 	ldw	r2,120(sp)
   43540:	8807883a 	mov	r3,r17
   43544:	003fec06 	br	434f8 <___vfprintf_internal_r+0x1bb0>
   43548:	b019883a 	mov	r12,r22
   4354c:	902d883a 	mov	r22,r18
   43550:	8025883a 	mov	r18,r16
   43554:	a021883a 	mov	r16,r20
   43558:	b829883a 	mov	r20,r23
   4355c:	102f883a 	mov	r23,r2
   43560:	e005883a 	mov	r2,fp
   43564:	1839883a 	mov	fp,r3
   43568:	9807883a 	mov	r3,r19
   4356c:	1027883a 	mov	r19,r2
   43570:	42000044 	addi	r8,r8,1
   43574:	e4b9883a 	add	fp,fp,r18
   43578:	bd800015 	stw	r22,0(r23)
   4357c:	003cd806 	br	428e0 <___vfprintf_internal_r+0xf98>
   43580:	a809883a 	mov	r4,r21
   43584:	00418b00 	call	418b0 <strlen>
   43588:	db400817 	ldw	r13,32(sp)
   4358c:	100f883a 	mov	r7,r2
   43590:	1019883a 	mov	r12,r2
   43594:	dd800715 	stw	r22,28(sp)
   43598:	0039b006 	br	41c5c <___vfprintf_internal_r+0x314>
   4359c:	05400174 	movhi	r21,5
   435a0:	ad44f404 	addi	r21,r21,5072
   435a4:	003af606 	br	42180 <___vfprintf_internal_r+0x838>
   435a8:	05800174 	movhi	r22,5
   435ac:	b5850504 	addi	r22,r22,5140
   435b0:	003c7806 	br	42794 <___vfprintf_internal_r+0xe4c>
   435b4:	a019883a 	mov	r12,r20
   435b8:	b029883a 	mov	r20,r22
   435bc:	902d883a 	mov	r22,r18
   435c0:	1825883a 	mov	r18,r3
   435c4:	d8c00f17 	ldw	r3,60(sp)
   435c8:	b80b883a 	mov	r5,r23
   435cc:	802f883a 	mov	r23,r16
   435d0:	9821883a 	mov	r16,r19
   435d4:	2827883a 	mov	r19,r5
   435d8:	10800044 	addi	r2,r2,1
   435dc:	b909883a 	add	r4,r23,r4
   435e0:	d8801e15 	stw	r2,120(sp)
   435e4:	95800015 	stw	r22,0(r18)
   435e8:	95c00115 	stw	r23,4(r18)
   435ec:	d9001f15 	stw	r4,124(sp)
   435f0:	10800208 	cmpgei	r2,r2,8
   435f4:	10004a1e 	bne	r2,zero,43720 <___vfprintf_internal_r+0x1dd8>
   435f8:	94800204 	addi	r18,r18,8
   435fc:	202d883a 	mov	r22,r4
   43600:	003d6406 	br	42b94 <___vfprintf_internal_r+0x124c>
   43604:	00800b44 	movi	r2,45
   43608:	d8801645 	stb	r2,89(sp)
   4360c:	01000b44 	movi	r4,45
   43610:	003ad706 	br	42170 <___vfprintf_internal_r+0x828>
   43614:	d9400417 	ldw	r5,16(sp)
   43618:	d9000517 	ldw	r4,20(sp)
   4361c:	d9801d04 	addi	r6,sp,116
   43620:	db000f15 	stw	r12,60(sp)
   43624:	d8c00815 	stw	r3,32(sp)
   43628:	004913c0 	call	4913c <__sprint_r>
   4362c:	1039d11e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43630:	ddc01717 	ldw	r23,92(sp)
   43634:	d9001f17 	ldw	r4,124(sp)
   43638:	db000f17 	ldw	r12,60(sp)
   4363c:	d8c00817 	ldw	r3,32(sp)
   43640:	8825883a 	mov	r18,r17
   43644:	003eed06 	br	431fc <___vfprintf_internal_r+0x18b4>
   43648:	15e0003c 	xorhi	r23,r2,32768
   4364c:	00800b44 	movi	r2,45
   43650:	d8800705 	stb	r2,28(sp)
   43654:	003f1906 	br	432bc <___vfprintf_internal_r+0x1974>
   43658:	01c00184 	movi	r7,6
   4365c:	003e3f06 	br	42f5c <___vfprintf_internal_r+0x1614>
   43660:	d9400417 	ldw	r5,16(sp)
   43664:	d9000517 	ldw	r4,20(sp)
   43668:	d9801d04 	addi	r6,sp,116
   4366c:	004913c0 	call	4913c <__sprint_r>
   43670:	0039c006 	br	41d74 <___vfprintf_internal_r+0x42c>
   43674:	d9400417 	ldw	r5,16(sp)
   43678:	d9000517 	ldw	r4,20(sp)
   4367c:	d9801d04 	addi	r6,sp,116
   43680:	db000f15 	stw	r12,60(sp)
   43684:	d8c00815 	stw	r3,32(sp)
   43688:	004913c0 	call	4913c <__sprint_r>
   4368c:	1039b91e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43690:	ddc01717 	ldw	r23,92(sp)
   43694:	d9001f17 	ldw	r4,124(sp)
   43698:	d8801e17 	ldw	r2,120(sp)
   4369c:	db000f17 	ldw	r12,60(sp)
   436a0:	d8c00817 	ldw	r3,32(sp)
   436a4:	8825883a 	mov	r18,r17
   436a8:	b83ee50e 	bge	r23,zero,43240 <___vfprintf_internal_r+0x18f8>
   436ac:	003f8406 	br	434c0 <___vfprintf_internal_r+0x1b78>
   436b0:	d8801b04 	addi	r2,sp,108
   436b4:	d8800315 	stw	r2,12(sp)
   436b8:	d9400a17 	ldw	r5,40(sp)
   436bc:	d8801804 	addi	r2,sp,96
   436c0:	d9000517 	ldw	r4,20(sp)
   436c4:	d8c01315 	stw	r3,76(sp)
   436c8:	d8800215 	stw	r2,8(sp)
   436cc:	40c00044 	addi	r3,r8,1
   436d0:	d8801704 	addi	r2,sp,92
   436d4:	d8c00015 	stw	r3,0(sp)
   436d8:	d8800115 	stw	r2,4(sp)
   436dc:	01c00084 	movi	r7,2
   436e0:	b80d883a 	mov	r6,r23
   436e4:	db401215 	stw	r13,72(sp)
   436e8:	da000815 	stw	r8,32(sp)
   436ec:	d8c00915 	stw	r3,36(sp)
   436f0:	00441180 	call	44118 <_dtoa_r>
   436f4:	da000817 	ldw	r8,32(sp)
   436f8:	db401217 	ldw	r13,72(sp)
   436fc:	d8c01317 	ldw	r3,76(sp)
   43700:	102b883a 	mov	r21,r2
   43704:	e08011d8 	cmpnei	r2,fp,71
   43708:	1001351e 	bne	r2,zero,43be0 <___vfprintf_internal_r+0x2298>
   4370c:	6880004c 	andi	r2,r13,1
   43710:	10001126 	beq	r2,zero,43758 <___vfprintf_internal_r+0x1e10>
   43714:	d8800917 	ldw	r2,36(sp)
   43718:	a899883a 	add	r12,r21,r2
   4371c:	003f0406 	br	43330 <___vfprintf_internal_r+0x19e8>
   43720:	d9400417 	ldw	r5,16(sp)
   43724:	d9000517 	ldw	r4,20(sp)
   43728:	d9801d04 	addi	r6,sp,116
   4372c:	db001015 	stw	r12,64(sp)
   43730:	d8c00f15 	stw	r3,60(sp)
   43734:	004913c0 	call	4913c <__sprint_r>
   43738:	10398e1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   4373c:	dd801f17 	ldw	r22,124(sp)
   43740:	db001017 	ldw	r12,64(sp)
   43744:	d8c00f17 	ldw	r3,60(sp)
   43748:	8825883a 	mov	r18,r17
   4374c:	003d1106 	br	42b94 <___vfprintf_internal_r+0x124c>
   43750:	da000915 	stw	r8,36(sp)
   43754:	003feb06 	br	43704 <___vfprintf_internal_r+0x1dbc>
   43758:	d8801b17 	ldw	r2,108(sp)
   4375c:	d9c01717 	ldw	r7,92(sp)
   43760:	1545c83a 	sub	r2,r2,r21
   43764:	d8800915 	stw	r2,36(sp)
   43768:	38bfff48 	cmpgei	r2,r7,-3
   4376c:	d9c00815 	stw	r7,32(sp)
   43770:	1000b31e 	bne	r2,zero,43a40 <___vfprintf_internal_r+0x20f8>
   43774:	e73fff84 	addi	fp,fp,-2
   43778:	397fffc4 	addi	r5,r7,-1
   4377c:	e005883a 	mov	r2,fp
   43780:	01000044 	movi	r4,1
   43784:	21efc83a 	sub	r23,r4,r7
   43788:	01000b44 	movi	r4,45
   4378c:	21003fcc 	andi	r4,r4,255
   43790:	2008923a 	slli	r4,r4,8
   43794:	10803fcc 	andi	r2,r2,255
   43798:	d9401715 	stw	r5,92(sp)
   4379c:	1104b03a 	or	r2,r2,r4
   437a0:	d880190d 	sth	r2,100(sp)
   437a4:	b8800290 	cmplti	r2,r23,10
   437a8:	1000c71e 	bne	r2,zero,43ac8 <___vfprintf_internal_r+0x2180>
   437ac:	dd801cc4 	addi	r22,sp,115
   437b0:	9805883a 	mov	r2,r19
   437b4:	db400815 	stw	r13,32(sp)
   437b8:	b027883a 	mov	r19,r22
   437bc:	d8c01015 	stw	r3,64(sp)
   437c0:	a02d883a 	mov	r22,r20
   437c4:	dc001115 	stw	r16,68(sp)
   437c8:	9029883a 	mov	r20,r18
   437cc:	b825883a 	mov	r18,r23
   437d0:	102f883a 	mov	r23,r2
   437d4:	9009883a 	mov	r4,r18
   437d8:	01400284 	movi	r5,10
   437dc:	004c0b40 	call	4c0b4 <__modsi3>
   437e0:	10800c04 	addi	r2,r2,48
   437e4:	9009883a 	mov	r4,r18
   437e8:	01400284 	movi	r5,10
   437ec:	98bfffc5 	stb	r2,-1(r19)
   437f0:	004c0340 	call	4c034 <__divsi3>
   437f4:	91401908 	cmpgei	r5,r18,100
   437f8:	9821883a 	mov	r16,r19
   437fc:	1025883a 	mov	r18,r2
   43800:	9cffffc4 	addi	r19,r19,-1
   43804:	283ff31e 	bne	r5,zero,437d4 <___vfprintf_internal_r+0x1e8c>
   43808:	b805883a 	mov	r2,r23
   4380c:	902f883a 	mov	r23,r18
   43810:	8009883a 	mov	r4,r16
   43814:	a025883a 	mov	r18,r20
   43818:	b029883a 	mov	r20,r22
   4381c:	982d883a 	mov	r22,r19
   43820:	1027883a 	mov	r19,r2
   43824:	b8800c04 	addi	r2,r23,48
   43828:	b0bfffc5 	stb	r2,-1(r22)
   4382c:	217fff84 	addi	r5,r4,-2
   43830:	d8801cc4 	addi	r2,sp,115
   43834:	db400817 	ldw	r13,32(sp)
   43838:	d8c01017 	ldw	r3,64(sp)
   4383c:	dc001117 	ldw	r16,68(sp)
   43840:	28810e2e 	bgeu	r5,r2,43c7c <___vfprintf_internal_r+0x2334>
   43844:	d8801d44 	addi	r2,sp,117
   43848:	112dc83a 	sub	r22,r2,r4
   4384c:	b00d883a 	mov	r6,r22
   43850:	d9001984 	addi	r4,sp,102
   43854:	00474480 	call	47448 <memcpy>
   43858:	d8801984 	addi	r2,sp,102
   4385c:	1585883a 	add	r2,r2,r22
   43860:	d9001904 	addi	r4,sp,100
   43864:	db400817 	ldw	r13,32(sp)
   43868:	d8c01017 	ldw	r3,64(sp)
   4386c:	1105c83a 	sub	r2,r2,r4
   43870:	d8801115 	stw	r2,68(sp)
   43874:	d9000917 	ldw	r4,36(sp)
   43878:	d9401117 	ldw	r5,68(sp)
   4387c:	20800088 	cmpgei	r2,r4,2
   43880:	214f883a 	add	r7,r4,r5
   43884:	10009726 	beq	r2,zero,43ae4 <___vfprintf_internal_r+0x219c>
   43888:	d8800c17 	ldw	r2,48(sp)
   4388c:	388f883a 	add	r7,r7,r2
   43890:	3819883a 	mov	r12,r7
   43894:	3800010e 	bge	r7,zero,4389c <___vfprintf_internal_r+0x1f54>
   43898:	0019883a 	mov	r12,zero
   4389c:	d8000815 	stw	zero,32(sp)
   438a0:	003ec906 	br	433c8 <___vfprintf_internal_r+0x1a80>
   438a4:	d8800f17 	ldw	r2,60(sp)
   438a8:	d9001643 	ldbu	r4,89(sp)
   438ac:	0011883a 	mov	r8,zero
   438b0:	d8800715 	stw	r2,28(sp)
   438b4:	0039b006 	br	41f78 <___vfprintf_internal_r+0x630>
   438b8:	d8801b04 	addi	r2,sp,108
   438bc:	d8800315 	stw	r2,12(sp)
   438c0:	d9400a17 	ldw	r5,40(sp)
   438c4:	d8801804 	addi	r2,sp,96
   438c8:	d9000517 	ldw	r4,20(sp)
   438cc:	d8800215 	stw	r2,8(sp)
   438d0:	d8801704 	addi	r2,sp,92
   438d4:	da000015 	stw	r8,0(sp)
   438d8:	d8800115 	stw	r2,4(sp)
   438dc:	01c000c4 	movi	r7,3
   438e0:	b80d883a 	mov	r6,r23
   438e4:	d8c01215 	stw	r3,72(sp)
   438e8:	db400915 	stw	r13,36(sp)
   438ec:	da000815 	stw	r8,32(sp)
   438f0:	00441180 	call	44118 <_dtoa_r>
   438f4:	102b883a 	mov	r21,r2
   438f8:	10800007 	ldb	r2,0(r2)
   438fc:	da000817 	ldw	r8,32(sp)
   43900:	db400917 	ldw	r13,36(sp)
   43904:	10800c20 	cmpeqi	r2,r2,48
   43908:	d8c01217 	ldw	r3,72(sp)
   4390c:	10009c1e 	bne	r2,zero,43b80 <___vfprintf_internal_r+0x2238>
   43910:	d8801717 	ldw	r2,92(sp)
   43914:	d9000a17 	ldw	r4,40(sp)
   43918:	1219883a 	add	r12,r2,r8
   4391c:	000d883a 	mov	r6,zero
   43920:	000f883a 	mov	r7,zero
   43924:	b80b883a 	mov	r5,r23
   43928:	d8c01315 	stw	r3,76(sp)
   4392c:	db401215 	stw	r13,72(sp)
   43930:	da000915 	stw	r8,36(sp)
   43934:	db000815 	stw	r12,32(sp)
   43938:	004d3340 	call	4d334 <__eqdf2>
   4393c:	db000817 	ldw	r12,32(sp)
   43940:	da000917 	ldw	r8,36(sp)
   43944:	db401217 	ldw	r13,72(sp)
   43948:	d8c01317 	ldw	r3,76(sp)
   4394c:	10008a1e 	bne	r2,zero,43b78 <___vfprintf_internal_r+0x2230>
   43950:	d8801717 	ldw	r2,92(sp)
   43954:	db000915 	stw	r12,36(sp)
   43958:	d8800815 	stw	r2,32(sp)
   4395c:	003e9206 	br	433a8 <___vfprintf_internal_r+0x1a60>
   43960:	d9400417 	ldw	r5,16(sp)
   43964:	d9000517 	ldw	r4,20(sp)
   43968:	d9801d04 	addi	r6,sp,116
   4396c:	db001015 	stw	r12,64(sp)
   43970:	d8c00f15 	stw	r3,60(sp)
   43974:	004913c0 	call	4913c <__sprint_r>
   43978:	1038fe1e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   4397c:	ddc01717 	ldw	r23,92(sp)
   43980:	d9001f17 	ldw	r4,124(sp)
   43984:	db001017 	ldw	r12,64(sp)
   43988:	d8c00f17 	ldw	r3,60(sp)
   4398c:	8825883a 	mov	r18,r17
   43990:	003c8f06 	br	42bd0 <___vfprintf_internal_r+0x1288>
   43994:	b80b883a 	mov	r5,r23
   43998:	a019883a 	mov	r12,r20
   4399c:	802f883a 	mov	r23,r16
   439a0:	b029883a 	mov	r20,r22
   439a4:	9821883a 	mov	r16,r19
   439a8:	902d883a 	mov	r22,r18
   439ac:	2827883a 	mov	r19,r5
   439b0:	1825883a 	mov	r18,r3
   439b4:	d8c00817 	ldw	r3,32(sp)
   439b8:	003c2706 	br	42a58 <___vfprintf_internal_r+0x1110>
   439bc:	403e3a1e 	bne	r8,zero,432a8 <___vfprintf_internal_r+0x1960>
   439c0:	02000044 	movi	r8,1
   439c4:	003e3806 	br	432a8 <___vfprintf_internal_r+0x1960>
   439c8:	d9400417 	ldw	r5,16(sp)
   439cc:	d9000517 	ldw	r4,20(sp)
   439d0:	d9801d04 	addi	r6,sp,116
   439d4:	db001015 	stw	r12,64(sp)
   439d8:	d8c00f15 	stw	r3,60(sp)
   439dc:	004913c0 	call	4913c <__sprint_r>
   439e0:	1038e41e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   439e4:	dd801f17 	ldw	r22,124(sp)
   439e8:	db001017 	ldw	r12,64(sp)
   439ec:	d8c00f17 	ldw	r3,60(sp)
   439f0:	8825883a 	mov	r18,r17
   439f4:	b83c640e 	bge	r23,zero,42b88 <___vfprintf_internal_r+0x1240>
   439f8:	003d3306 	br	42ec8 <___vfprintf_internal_r+0x1580>
   439fc:	02000184 	movi	r8,6
   43a00:	003e2906 	br	432a8 <___vfprintf_internal_r+0x1960>
   43a04:	d9400417 	ldw	r5,16(sp)
   43a08:	d9000517 	ldw	r4,20(sp)
   43a0c:	d9801d04 	addi	r6,sp,116
   43a10:	db000f15 	stw	r12,60(sp)
   43a14:	d8c00815 	stw	r3,32(sp)
   43a18:	004913c0 	call	4913c <__sprint_r>
   43a1c:	1038d51e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43a20:	ddc01717 	ldw	r23,92(sp)
   43a24:	d8800917 	ldw	r2,36(sp)
   43a28:	d9001f17 	ldw	r4,124(sp)
   43a2c:	db000f17 	ldw	r12,60(sp)
   43a30:	d8c00817 	ldw	r3,32(sp)
   43a34:	8825883a 	mov	r18,r17
   43a38:	15efc83a 	sub	r23,r2,r23
   43a3c:	003c7706 	br	42c1c <___vfprintf_internal_r+0x12d4>
   43a40:	41c0060e 	bge	r8,r7,43a5c <___vfprintf_internal_r+0x2114>
   43a44:	e73fff84 	addi	fp,fp,-2
   43a48:	3dffffc4 	addi	r23,r7,-1
   43a4c:	e005883a 	mov	r2,fp
   43a50:	b80b883a 	mov	r5,r23
   43a54:	01000ac4 	movi	r4,43
   43a58:	003f4c06 	br	4378c <___vfprintf_internal_r+0x1e44>
   43a5c:	d9000917 	ldw	r4,36(sp)
   43a60:	39000916 	blt	r7,r4,43a88 <___vfprintf_internal_r+0x2140>
   43a64:	6b40004c 	andi	r13,r13,1
   43a68:	68000f26 	beq	r13,zero,43aa8 <___vfprintf_internal_r+0x2160>
   43a6c:	d8800817 	ldw	r2,32(sp)
   43a70:	d9000c17 	ldw	r4,48(sp)
   43a74:	110f883a 	add	r7,r2,r4
   43a78:	3819883a 	mov	r12,r7
   43a7c:	38000c16 	blt	r7,zero,43ab0 <___vfprintf_internal_r+0x2168>
   43a80:	070019c4 	movi	fp,103
   43a84:	003e5006 	br	433c8 <___vfprintf_internal_r+0x1a80>
   43a88:	d8800917 	ldw	r2,36(sp)
   43a8c:	d9000c17 	ldw	r4,48(sp)
   43a90:	110f883a 	add	r7,r2,r4
   43a94:	d8800817 	ldw	r2,32(sp)
   43a98:	00800316 	blt	zero,r2,43aa8 <___vfprintf_internal_r+0x2160>
   43a9c:	d8800817 	ldw	r2,32(sp)
   43aa0:	388fc83a 	sub	r7,r7,r2
   43aa4:	39c00044 	addi	r7,r7,1
   43aa8:	3819883a 	mov	r12,r7
   43aac:	383ff40e 	bge	r7,zero,43a80 <___vfprintf_internal_r+0x2138>
   43ab0:	0019883a 	mov	r12,zero
   43ab4:	003ff206 	br	43a80 <___vfprintf_internal_r+0x2138>
   43ab8:	4019883a 	mov	r12,r8
   43abc:	dd800715 	stw	r22,28(sp)
   43ac0:	400f883a 	mov	r7,r8
   43ac4:	00386506 	br	41c5c <___vfprintf_internal_r+0x314>
   43ac8:	b8800c04 	addi	r2,r23,48
   43acc:	01000c04 	movi	r4,48
   43ad0:	d88019c5 	stb	r2,103(sp)
   43ad4:	00800104 	movi	r2,4
   43ad8:	d9001985 	stb	r4,102(sp)
   43adc:	d8801115 	stw	r2,68(sp)
   43ae0:	003f6406 	br	43874 <___vfprintf_internal_r+0x1f2c>
   43ae4:	6880004c 	andi	r2,r13,1
   43ae8:	d8800815 	stw	r2,32(sp)
   43aec:	103f661e 	bne	r2,zero,43888 <___vfprintf_internal_r+0x1f40>
   43af0:	3819883a 	mov	r12,r7
   43af4:	383e340e 	bge	r7,zero,433c8 <___vfprintf_internal_r+0x1a80>
   43af8:	0019883a 	mov	r12,zero
   43afc:	003e3206 	br	433c8 <___vfprintf_internal_r+0x1a80>
   43b00:	00bfffc4 	movi	r2,-1
   43b04:	d8800615 	stw	r2,24(sp)
   43b08:	00389e06 	br	41d84 <___vfprintf_internal_r+0x43c>
   43b0c:	9819883a 	mov	r12,r19
   43b10:	b027883a 	mov	r19,r22
   43b14:	802d883a 	mov	r22,r16
   43b18:	9021883a 	mov	r16,r18
   43b1c:	1825883a 	mov	r18,r3
   43b20:	d8c00817 	ldw	r3,32(sp)
   43b24:	10800044 	addi	r2,r2,1
   43b28:	25c9883a 	add	r4,r4,r23
   43b2c:	95800015 	stw	r22,0(r18)
   43b30:	95c00115 	stw	r23,4(r18)
   43b34:	d9001f15 	stw	r4,124(sp)
   43b38:	d8801e15 	stw	r2,120(sp)
   43b3c:	11400208 	cmpgei	r5,r2,8
   43b40:	283dbe26 	beq	r5,zero,4323c <___vfprintf_internal_r+0x18f4>
   43b44:	d9400417 	ldw	r5,16(sp)
   43b48:	d9000517 	ldw	r4,20(sp)
   43b4c:	d9801d04 	addi	r6,sp,116
   43b50:	db000f15 	stw	r12,60(sp)
   43b54:	d8c00815 	stw	r3,32(sp)
   43b58:	004913c0 	call	4913c <__sprint_r>
   43b5c:	1038851e 	bne	r2,zero,41d74 <___vfprintf_internal_r+0x42c>
   43b60:	d9001f17 	ldw	r4,124(sp)
   43b64:	d8801e17 	ldw	r2,120(sp)
   43b68:	db000f17 	ldw	r12,60(sp)
   43b6c:	d8c00817 	ldw	r3,32(sp)
   43b70:	8825883a 	mov	r18,r17
   43b74:	003db206 	br	43240 <___vfprintf_internal_r+0x18f8>
   43b78:	ab19883a 	add	r12,r21,r12
   43b7c:	003dfa06 	br	43368 <___vfprintf_internal_r+0x1a20>
   43b80:	d9000a17 	ldw	r4,40(sp)
   43b84:	000d883a 	mov	r6,zero
   43b88:	000f883a 	mov	r7,zero
   43b8c:	b80b883a 	mov	r5,r23
   43b90:	da001215 	stw	r8,72(sp)
   43b94:	d8c00915 	stw	r3,36(sp)
   43b98:	db400815 	stw	r13,32(sp)
   43b9c:	004d3340 	call	4d334 <__eqdf2>
   43ba0:	db400817 	ldw	r13,32(sp)
   43ba4:	d8c00917 	ldw	r3,36(sp)
   43ba8:	da001217 	ldw	r8,72(sp)
   43bac:	103f5826 	beq	r2,zero,43910 <___vfprintf_internal_r+0x1fc8>
   43bb0:	00800044 	movi	r2,1
   43bb4:	1205c83a 	sub	r2,r2,r8
   43bb8:	d8801715 	stw	r2,92(sp)
   43bbc:	003f5506 	br	43914 <___vfprintf_internal_r+0x1fcc>
   43bc0:	d8800b17 	ldw	r2,44(sp)
   43bc4:	10002916 	blt	r2,zero,43c6c <___vfprintf_internal_r+0x2324>
   43bc8:	d9001643 	ldbu	r4,89(sp)
   43bcc:	e0801210 	cmplti	r2,fp,72
   43bd0:	1000231e 	bne	r2,zero,43c60 <___vfprintf_internal_r+0x2318>
   43bd4:	05400174 	movhi	r21,5
   43bd8:	ad44f704 	addi	r21,r21,5084
   43bdc:	00396806 	br	42180 <___vfprintf_internal_r+0x838>
   43be0:	d9000a17 	ldw	r4,40(sp)
   43be4:	000d883a 	mov	r6,zero
   43be8:	000f883a 	mov	r7,zero
   43bec:	b80b883a 	mov	r5,r23
   43bf0:	da001315 	stw	r8,76(sp)
   43bf4:	d8c01215 	stw	r3,72(sp)
   43bf8:	db400815 	stw	r13,32(sp)
   43bfc:	004d3340 	call	4d334 <__eqdf2>
   43c00:	db400817 	ldw	r13,32(sp)
   43c04:	d8c01217 	ldw	r3,72(sp)
   43c08:	da001317 	ldw	r8,76(sp)
   43c0c:	10002a1e 	bne	r2,zero,43cb8 <___vfprintf_internal_r+0x2370>
   43c10:	b08011e0 	cmpeqi	r2,r22,71
   43c14:	d9c01717 	ldw	r7,92(sp)
   43c18:	103ed31e 	bne	r2,zero,43768 <___vfprintf_internal_r+0x1e20>
   43c1c:	397fffc4 	addi	r5,r7,-1
   43c20:	e005883a 	mov	r2,fp
   43c24:	283ed616 	blt	r5,zero,43780 <___vfprintf_internal_r+0x1e38>
   43c28:	282f883a 	mov	r23,r5
   43c2c:	01000ac4 	movi	r4,43
   43c30:	003ed606 	br	4378c <___vfprintf_internal_r+0x1e44>
   43c34:	6545c83a 	sub	r2,r12,r21
   43c38:	d9c01717 	ldw	r7,92(sp)
   43c3c:	d8800915 	stw	r2,36(sp)
   43c40:	003ec906 	br	43768 <___vfprintf_internal_r+0x1e20>
   43c44:	d8800c17 	ldw	r2,48(sp)
   43c48:	208f883a 	add	r7,r4,r2
   43c4c:	3a0f883a 	add	r7,r7,r8
   43c50:	3819883a 	mov	r12,r7
   43c54:	383ddb0e 	bge	r7,zero,433c4 <___vfprintf_internal_r+0x1a7c>
   43c58:	0019883a 	mov	r12,zero
   43c5c:	003dd906 	br	433c4 <___vfprintf_internal_r+0x1a7c>
   43c60:	05400174 	movhi	r21,5
   43c64:	ad44f604 	addi	r21,r21,5080
   43c68:	00394506 	br	42180 <___vfprintf_internal_r+0x838>
   43c6c:	00800b44 	movi	r2,45
   43c70:	d8801645 	stb	r2,89(sp)
   43c74:	01000b44 	movi	r4,45
   43c78:	003fd406 	br	43bcc <___vfprintf_internal_r+0x2284>
   43c7c:	00800084 	movi	r2,2
   43c80:	d8801115 	stw	r2,68(sp)
   43c84:	003efb06 	br	43874 <___vfprintf_internal_r+0x1f2c>
   43c88:	d8800717 	ldw	r2,28(sp)
   43c8c:	12000017 	ldw	r8,0(r2)
   43c90:	10800104 	addi	r2,r2,4
   43c94:	4000010e 	bge	r8,zero,43c9c <___vfprintf_internal_r+0x2354>
   43c98:	023fffc4 	movi	r8,-1
   43c9c:	a7000043 	ldbu	fp,1(r20)
   43ca0:	d8800715 	stw	r2,28(sp)
   43ca4:	1829883a 	mov	r20,r3
   43ca8:	e2c03fcc 	andi	r11,fp,255
   43cac:	5ac0201c 	xori	r11,r11,128
   43cb0:	5affe004 	addi	r11,r11,-128
   43cb4:	00377406 	br	41a88 <___vfprintf_internal_r+0x140>
   43cb8:	d8800917 	ldw	r2,36(sp)
   43cbc:	a899883a 	add	r12,r21,r2
   43cc0:	003da906 	br	43368 <___vfprintf_internal_r+0x1a20>
   43cc4:	1000041e 	bne	r2,zero,43cd8 <___vfprintf_internal_r+0x2390>
   43cc8:	03000044 	movi	r12,1
   43ccc:	07001984 	movi	fp,102
   43cd0:	01c00044 	movi	r7,1
   43cd4:	003dbc06 	br	433c8 <___vfprintf_internal_r+0x1a80>
   43cd8:	d8800c17 	ldw	r2,48(sp)
   43cdc:	11c00044 	addi	r7,r2,1
   43ce0:	3a0f883a 	add	r7,r7,r8
   43ce4:	3819883a 	mov	r12,r7
   43ce8:	383db60e 	bge	r7,zero,433c4 <___vfprintf_internal_r+0x1a7c>
   43cec:	003fda06 	br	43c58 <___vfprintf_internal_r+0x2310>

00043cf0 <__vfprintf_internal>:
   43cf0:	00c00174 	movhi	r3,5
   43cf4:	2005883a 	mov	r2,r4
   43cf8:	190d3017 	ldw	r4,13504(r3)
   43cfc:	300f883a 	mov	r7,r6
   43d00:	280d883a 	mov	r6,r5
   43d04:	100b883a 	mov	r5,r2
   43d08:	00419481 	jmpi	41948 <___vfprintf_internal_r>

00043d0c <__sbprintf>:
   43d0c:	28c0038b 	ldhu	r3,14(r5)
   43d10:	2880030b 	ldhu	r2,12(r5)
   43d14:	2ac01917 	ldw	r11,100(r5)
   43d18:	1806943a 	slli	r3,r3,16
   43d1c:	2a800717 	ldw	r10,28(r5)
   43d20:	2a400917 	ldw	r9,36(r5)
   43d24:	defee204 	addi	sp,sp,-1144
   43d28:	10bfff4c 	andi	r2,r2,65533
   43d2c:	10c4b03a 	or	r2,r2,r3
   43d30:	da001a04 	addi	r8,sp,104
   43d34:	00c10004 	movi	r3,1024
   43d38:	dc011a15 	stw	r16,1128(sp)
   43d3c:	2821883a 	mov	r16,r5
   43d40:	d80b883a 	mov	r5,sp
   43d44:	dc811c15 	stw	r18,1136(sp)
   43d48:	dc411b15 	stw	r17,1132(sp)
   43d4c:	dfc11d15 	stw	ra,1140(sp)
   43d50:	2025883a 	mov	r18,r4
   43d54:	dac01915 	stw	r11,100(sp)
   43d58:	d8800315 	stw	r2,12(sp)
   43d5c:	da800715 	stw	r10,28(sp)
   43d60:	da400915 	stw	r9,36(sp)
   43d64:	da000015 	stw	r8,0(sp)
   43d68:	da000415 	stw	r8,16(sp)
   43d6c:	d8c00215 	stw	r3,8(sp)
   43d70:	d8c00515 	stw	r3,20(sp)
   43d74:	d8000615 	stw	zero,24(sp)
   43d78:	00419480 	call	41948 <___vfprintf_internal_r>
   43d7c:	1023883a 	mov	r17,r2
   43d80:	10000d0e 	bge	r2,zero,43db8 <__sbprintf+0xac>
   43d84:	d880030b 	ldhu	r2,12(sp)
   43d88:	1080100c 	andi	r2,r2,64
   43d8c:	10000326 	beq	r2,zero,43d9c <__sbprintf+0x90>
   43d90:	8080030b 	ldhu	r2,12(r16)
   43d94:	10801014 	ori	r2,r2,64
   43d98:	8080030d 	sth	r2,12(r16)
   43d9c:	8805883a 	mov	r2,r17
   43da0:	dfc11d17 	ldw	ra,1140(sp)
   43da4:	dc811c17 	ldw	r18,1136(sp)
   43da8:	dc411b17 	ldw	r17,1132(sp)
   43dac:	dc011a17 	ldw	r16,1128(sp)
   43db0:	dec11e04 	addi	sp,sp,1144
   43db4:	f800283a 	ret
   43db8:	d80b883a 	mov	r5,sp
   43dbc:	9009883a 	mov	r4,r18
   43dc0:	0045b080 	call	45b08 <_fflush_r>
   43dc4:	103fef26 	beq	r2,zero,43d84 <__sbprintf+0x78>
   43dc8:	047fffc4 	movi	r17,-1
   43dcc:	003fed06 	br	43d84 <__sbprintf+0x78>

00043dd0 <__swsetup_r>:
   43dd0:	00800174 	movhi	r2,5
   43dd4:	108d3017 	ldw	r2,13504(r2)
   43dd8:	defffd04 	addi	sp,sp,-12
   43ddc:	dc400115 	stw	r17,4(sp)
   43de0:	dc000015 	stw	r16,0(sp)
   43de4:	dfc00215 	stw	ra,8(sp)
   43de8:	2023883a 	mov	r17,r4
   43dec:	2821883a 	mov	r16,r5
   43df0:	10000226 	beq	r2,zero,43dfc <__swsetup_r+0x2c>
   43df4:	10c00e17 	ldw	r3,56(r2)
   43df8:	18001d26 	beq	r3,zero,43e70 <__swsetup_r+0xa0>
   43dfc:	80c0030b 	ldhu	r3,12(r16)
   43e00:	1880020c 	andi	r2,r3,8
   43e04:	10001f26 	beq	r2,zero,43e84 <__swsetup_r+0xb4>
   43e08:	80800417 	ldw	r2,16(r16)
   43e0c:	10002626 	beq	r2,zero,43ea8 <__swsetup_r+0xd8>
   43e10:	1900004c 	andi	r4,r3,1
   43e14:	20000b1e 	bne	r4,zero,43e44 <__swsetup_r+0x74>
   43e18:	1900008c 	andi	r4,r3,2
   43e1c:	20002b1e 	bne	r4,zero,43ecc <__swsetup_r+0xfc>
   43e20:	81000517 	ldw	r4,20(r16)
   43e24:	81000215 	stw	r4,8(r16)
   43e28:	10000b26 	beq	r2,zero,43e58 <__swsetup_r+0x88>
   43e2c:	0005883a 	mov	r2,zero
   43e30:	dfc00217 	ldw	ra,8(sp)
   43e34:	dc400117 	ldw	r17,4(sp)
   43e38:	dc000017 	ldw	r16,0(sp)
   43e3c:	dec00304 	addi	sp,sp,12
   43e40:	f800283a 	ret
   43e44:	81000517 	ldw	r4,20(r16)
   43e48:	80000215 	stw	zero,8(r16)
   43e4c:	0109c83a 	sub	r4,zero,r4
   43e50:	81000615 	stw	r4,24(r16)
   43e54:	103ff51e 	bne	r2,zero,43e2c <__swsetup_r+0x5c>
   43e58:	1900200c 	andi	r4,r3,128
   43e5c:	203ff426 	beq	r4,zero,43e30 <__swsetup_r+0x60>
   43e60:	18c01014 	ori	r3,r3,64
   43e64:	80c0030d 	sth	r3,12(r16)
   43e68:	00bfffc4 	movi	r2,-1
   43e6c:	003ff006 	br	43e30 <__swsetup_r+0x60>
   43e70:	1009883a 	mov	r4,r2
   43e74:	0045f200 	call	45f20 <__sinit>
   43e78:	80c0030b 	ldhu	r3,12(r16)
   43e7c:	1880020c 	andi	r2,r3,8
   43e80:	103fe11e 	bne	r2,zero,43e08 <__swsetup_r+0x38>
   43e84:	1880040c 	andi	r2,r3,16
   43e88:	10002026 	beq	r2,zero,43f0c <__swsetup_r+0x13c>
   43e8c:	1880010c 	andi	r2,r3,4
   43e90:	1000101e 	bne	r2,zero,43ed4 <__swsetup_r+0x104>
   43e94:	80800417 	ldw	r2,16(r16)
   43e98:	19000214 	ori	r4,r3,8
   43e9c:	8100030d 	sth	r4,12(r16)
   43ea0:	2007883a 	mov	r3,r4
   43ea4:	103fda1e 	bne	r2,zero,43e10 <__swsetup_r+0x40>
   43ea8:	1900a00c 	andi	r4,r3,640
   43eac:	21008020 	cmpeqi	r4,r4,512
   43eb0:	203fd71e 	bne	r4,zero,43e10 <__swsetup_r+0x40>
   43eb4:	800b883a 	mov	r5,r16
   43eb8:	8809883a 	mov	r4,r17
   43ebc:	00469980 	call	46998 <__smakebuf_r>
   43ec0:	80c0030b 	ldhu	r3,12(r16)
   43ec4:	80800417 	ldw	r2,16(r16)
   43ec8:	003fd106 	br	43e10 <__swsetup_r+0x40>
   43ecc:	0009883a 	mov	r4,zero
   43ed0:	003fd406 	br	43e24 <__swsetup_r+0x54>
   43ed4:	81400c17 	ldw	r5,48(r16)
   43ed8:	28000626 	beq	r5,zero,43ef4 <__swsetup_r+0x124>
   43edc:	80801004 	addi	r2,r16,64
   43ee0:	28800326 	beq	r5,r2,43ef0 <__swsetup_r+0x120>
   43ee4:	8809883a 	mov	r4,r17
   43ee8:	004608c0 	call	4608c <_free_r>
   43eec:	80c0030b 	ldhu	r3,12(r16)
   43ef0:	80000c15 	stw	zero,48(r16)
   43ef4:	80800417 	ldw	r2,16(r16)
   43ef8:	013ff6c4 	movi	r4,-37
   43efc:	20c6703a 	and	r3,r4,r3
   43f00:	80000115 	stw	zero,4(r16)
   43f04:	80800015 	stw	r2,0(r16)
   43f08:	003fe306 	br	43e98 <__swsetup_r+0xc8>
   43f0c:	00800244 	movi	r2,9
   43f10:	88800015 	stw	r2,0(r17)
   43f14:	18c01014 	ori	r3,r3,64
   43f18:	003fd206 	br	43e64 <__swsetup_r+0x94>

00043f1c <quorem>:
   43f1c:	defff504 	addi	sp,sp,-44
   43f20:	dc800315 	stw	r18,12(sp)
   43f24:	20800417 	ldw	r2,16(r4)
   43f28:	2c800417 	ldw	r18,16(r5)
   43f2c:	dfc00a15 	stw	ra,40(sp)
   43f30:	df000915 	stw	fp,36(sp)
   43f34:	ddc00815 	stw	r23,32(sp)
   43f38:	dd800715 	stw	r22,28(sp)
   43f3c:	dd400615 	stw	r21,24(sp)
   43f40:	dd000515 	stw	r20,20(sp)
   43f44:	dcc00415 	stw	r19,16(sp)
   43f48:	dc400215 	stw	r17,8(sp)
   43f4c:	dc000115 	stw	r16,4(sp)
   43f50:	14806f16 	blt	r2,r18,44110 <quorem+0x1f4>
   43f54:	94bfffc4 	addi	r18,r18,-1
   43f58:	902c90ba 	slli	r22,r18,2
   43f5c:	2c000504 	addi	r16,r5,20
   43f60:	25000504 	addi	r20,r4,20
   43f64:	85a7883a 	add	r19,r16,r22
   43f68:	9f000017 	ldw	fp,0(r19)
   43f6c:	a5ad883a 	add	r22,r20,r22
   43f70:	202b883a 	mov	r21,r4
   43f74:	b1000017 	ldw	r4,0(r22)
   43f78:	e7000044 	addi	fp,fp,1
   43f7c:	282f883a 	mov	r23,r5
   43f80:	e00b883a 	mov	r5,fp
   43f84:	d9000015 	stw	r4,0(sp)
   43f88:	004c1280 	call	4c128 <__udivsi3>
   43f8c:	d9000017 	ldw	r4,0(sp)
   43f90:	1023883a 	mov	r17,r2
   43f94:	27002a36 	bltu	r4,fp,44040 <quorem+0x124>
   43f98:	800f883a 	mov	r7,r16
   43f9c:	a00d883a 	mov	r6,r20
   43fa0:	0013883a 	mov	r9,zero
   43fa4:	0009883a 	mov	r4,zero
   43fa8:	38800017 	ldw	r2,0(r7)
   43fac:	32000017 	ldw	r8,0(r6)
   43fb0:	31800104 	addi	r6,r6,4
   43fb4:	117fffcc 	andi	r5,r2,65535
   43fb8:	2c4b383a 	mul	r5,r5,r17
   43fbc:	1004d43a 	srli	r2,r2,16
   43fc0:	40ffffcc 	andi	r3,r8,65535
   43fc4:	2a4b883a 	add	r5,r5,r9
   43fc8:	2a7fffcc 	andi	r9,r5,65535
   43fcc:	1a47c83a 	sub	r3,r3,r9
   43fd0:	280ad43a 	srli	r5,r5,16
   43fd4:	1445383a 	mul	r2,r2,r17
   43fd8:	1907883a 	add	r3,r3,r4
   43fdc:	1809d43a 	srai	r4,r3,16
   43fe0:	1145883a 	add	r2,r2,r5
   43fe4:	4010d43a 	srli	r8,r8,16
   43fe8:	117fffcc 	andi	r5,r2,65535
   43fec:	2149c83a 	sub	r4,r4,r5
   43ff0:	2209883a 	add	r4,r4,r8
   43ff4:	200a943a 	slli	r5,r4,16
   43ff8:	18ffffcc 	andi	r3,r3,65535
   43ffc:	39c00104 	addi	r7,r7,4
   44000:	1946b03a 	or	r3,r3,r5
   44004:	30ffff15 	stw	r3,-4(r6)
   44008:	1012d43a 	srli	r9,r2,16
   4400c:	2009d43a 	srai	r4,r4,16
   44010:	99ffe52e 	bgeu	r19,r7,43fa8 <quorem+0x8c>
   44014:	b0800017 	ldw	r2,0(r22)
   44018:	1000091e 	bne	r2,zero,44040 <quorem+0x124>
   4401c:	b5bfff04 	addi	r22,r22,-4
   44020:	a5800336 	bltu	r20,r22,44030 <quorem+0x114>
   44024:	00000506 	br	4403c <quorem+0x120>
   44028:	94bfffc4 	addi	r18,r18,-1
   4402c:	a580032e 	bgeu	r20,r22,4403c <quorem+0x120>
   44030:	b0800017 	ldw	r2,0(r22)
   44034:	b5bfff04 	addi	r22,r22,-4
   44038:	103ffb26 	beq	r2,zero,44028 <quorem+0x10c>
   4403c:	ac800415 	stw	r18,16(r21)
   44040:	b80b883a 	mov	r5,r23
   44044:	a809883a 	mov	r4,r21
   44048:	00481880 	call	48188 <__mcmp>
   4404c:	10002316 	blt	r2,zero,440dc <quorem+0x1c0>
   44050:	a00d883a 	mov	r6,r20
   44054:	000b883a 	mov	r5,zero
   44058:	30800017 	ldw	r2,0(r6)
   4405c:	81000017 	ldw	r4,0(r16)
   44060:	31800104 	addi	r6,r6,4
   44064:	10ffffcc 	andi	r3,r2,65535
   44068:	21ffffcc 	andi	r7,r4,65535
   4406c:	19c7c83a 	sub	r3,r3,r7
   44070:	1947883a 	add	r3,r3,r5
   44074:	180bd43a 	srai	r5,r3,16
   44078:	2008d43a 	srli	r4,r4,16
   4407c:	1004d43a 	srli	r2,r2,16
   44080:	18ffffcc 	andi	r3,r3,65535
   44084:	290bc83a 	sub	r5,r5,r4
   44088:	288b883a 	add	r5,r5,r2
   4408c:	2804943a 	slli	r2,r5,16
   44090:	84000104 	addi	r16,r16,4
   44094:	280bd43a 	srai	r5,r5,16
   44098:	1886b03a 	or	r3,r3,r2
   4409c:	30ffff15 	stw	r3,-4(r6)
   440a0:	9c3fed2e 	bgeu	r19,r16,44058 <quorem+0x13c>
   440a4:	900490ba 	slli	r2,r18,2
   440a8:	a085883a 	add	r2,r20,r2
   440ac:	10c00017 	ldw	r3,0(r2)
   440b0:	1800091e 	bne	r3,zero,440d8 <quorem+0x1bc>
   440b4:	10bfff04 	addi	r2,r2,-4
   440b8:	a0800336 	bltu	r20,r2,440c8 <quorem+0x1ac>
   440bc:	00000506 	br	440d4 <quorem+0x1b8>
   440c0:	94bfffc4 	addi	r18,r18,-1
   440c4:	a080032e 	bgeu	r20,r2,440d4 <quorem+0x1b8>
   440c8:	10c00017 	ldw	r3,0(r2)
   440cc:	10bfff04 	addi	r2,r2,-4
   440d0:	183ffb26 	beq	r3,zero,440c0 <quorem+0x1a4>
   440d4:	ac800415 	stw	r18,16(r21)
   440d8:	8c400044 	addi	r17,r17,1
   440dc:	8805883a 	mov	r2,r17
   440e0:	dfc00a17 	ldw	ra,40(sp)
   440e4:	df000917 	ldw	fp,36(sp)
   440e8:	ddc00817 	ldw	r23,32(sp)
   440ec:	dd800717 	ldw	r22,28(sp)
   440f0:	dd400617 	ldw	r21,24(sp)
   440f4:	dd000517 	ldw	r20,20(sp)
   440f8:	dcc00417 	ldw	r19,16(sp)
   440fc:	dc800317 	ldw	r18,12(sp)
   44100:	dc400217 	ldw	r17,8(sp)
   44104:	dc000117 	ldw	r16,4(sp)
   44108:	dec00b04 	addi	sp,sp,44
   4410c:	f800283a 	ret
   44110:	0005883a 	mov	r2,zero
   44114:	003ff206 	br	440e0 <quorem+0x1c4>

00044118 <_dtoa_r>:
   44118:	20801017 	ldw	r2,64(r4)
   4411c:	deffe104 	addi	sp,sp,-124
   44120:	dd401a15 	stw	r21,104(sp)
   44124:	dc801715 	stw	r18,92(sp)
   44128:	dc401615 	stw	r17,88(sp)
   4412c:	dc001515 	stw	r16,84(sp)
   44130:	dfc01e15 	stw	ra,120(sp)
   44134:	df001d15 	stw	fp,116(sp)
   44138:	ddc01c15 	stw	r23,112(sp)
   4413c:	dd801b15 	stw	r22,108(sp)
   44140:	dd001915 	stw	r20,100(sp)
   44144:	dcc01815 	stw	r19,96(sp)
   44148:	d9400215 	stw	r5,8(sp)
   4414c:	d9c00115 	stw	r7,4(sp)
   44150:	dc402117 	ldw	r17,132(sp)
   44154:	2021883a 	mov	r16,r4
   44158:	3025883a 	mov	r18,r6
   4415c:	302b883a 	mov	r21,r6
   44160:	10000826 	beq	r2,zero,44184 <_dtoa_r+0x6c>
   44164:	21801117 	ldw	r6,68(r4)
   44168:	00c00044 	movi	r3,1
   4416c:	100b883a 	mov	r5,r2
   44170:	1986983a 	sll	r3,r3,r6
   44174:	11800115 	stw	r6,4(r2)
   44178:	10c00215 	stw	r3,8(r2)
   4417c:	004780c0 	call	4780c <_Bfree>
   44180:	80001015 	stw	zero,64(r16)
   44184:	90019316 	blt	r18,zero,447d4 <_dtoa_r+0x6bc>
   44188:	88000015 	stw	zero,0(r17)
   4418c:	909ffc2c 	andhi	r2,r18,32752
   44190:	00dffc34 	movhi	r3,32752
   44194:	10c19826 	beq	r2,r3,447f8 <_dtoa_r+0x6e0>
   44198:	d9000217 	ldw	r4,8(sp)
   4419c:	000d883a 	mov	r6,zero
   441a0:	000f883a 	mov	r7,zero
   441a4:	a80b883a 	mov	r5,r21
   441a8:	004d3340 	call	4d334 <__eqdf2>
   441ac:	1000181e 	bne	r2,zero,44210 <_dtoa_r+0xf8>
   441b0:	d8c02017 	ldw	r3,128(sp)
   441b4:	00800044 	movi	r2,1
   441b8:	18800015 	stw	r2,0(r3)
   441bc:	d8802217 	ldw	r2,136(sp)
   441c0:	10000426 	beq	r2,zero,441d4 <_dtoa_r+0xbc>
   441c4:	d8c02217 	ldw	r3,136(sp)
   441c8:	00800174 	movhi	r2,5
   441cc:	10850444 	addi	r2,r2,5137
   441d0:	18800015 	stw	r2,0(r3)
   441d4:	07000174 	movhi	fp,5
   441d8:	e7050404 	addi	fp,fp,5136
   441dc:	e005883a 	mov	r2,fp
   441e0:	dfc01e17 	ldw	ra,120(sp)
   441e4:	df001d17 	ldw	fp,116(sp)
   441e8:	ddc01c17 	ldw	r23,112(sp)
   441ec:	dd801b17 	ldw	r22,108(sp)
   441f0:	dd401a17 	ldw	r21,104(sp)
   441f4:	dd001917 	ldw	r20,100(sp)
   441f8:	dcc01817 	ldw	r19,96(sp)
   441fc:	dc801717 	ldw	r18,92(sp)
   44200:	dc401617 	ldw	r17,88(sp)
   44204:	dc001517 	ldw	r16,84(sp)
   44208:	dec01f04 	addi	sp,sp,124
   4420c:	f800283a 	ret
   44210:	dcc00217 	ldw	r19,8(sp)
   44214:	d8801304 	addi	r2,sp,76
   44218:	9022d53a 	srli	r17,r18,20
   4421c:	d8800015 	stw	r2,0(sp)
   44220:	d9c01404 	addi	r7,sp,80
   44224:	980b883a 	mov	r5,r19
   44228:	a80d883a 	mov	r6,r21
   4422c:	8009883a 	mov	r4,r16
   44230:	00485700 	call	48570 <__d2b>
   44234:	102f883a 	mov	r23,r2
   44238:	8801811e 	bne	r17,zero,44840 <_dtoa_r+0x728>
   4423c:	dd001317 	ldw	r20,76(sp)
   44240:	dc401417 	ldw	r17,80(sp)
   44244:	a463883a 	add	r17,r20,r17
   44248:	88810c84 	addi	r2,r17,1074
   4424c:	10c00850 	cmplti	r3,r2,33
   44250:	1803101e 	bne	r3,zero,44e94 <_dtoa_r+0xd7c>
   44254:	00c01004 	movi	r3,64
   44258:	1887c83a 	sub	r3,r3,r2
   4425c:	90c8983a 	sll	r4,r18,r3
   44260:	d8c00217 	ldw	r3,8(sp)
   44264:	88810484 	addi	r2,r17,1042
   44268:	1884d83a 	srl	r2,r3,r2
   4426c:	2088b03a 	or	r4,r4,r2
   44270:	004e7bc0 	call	4e7bc <__floatunsidf>
   44274:	1009883a 	mov	r4,r2
   44278:	00bf8434 	movhi	r2,65040
   4427c:	188b883a 	add	r5,r3,r2
   44280:	00800044 	movi	r2,1
   44284:	8c7fffc4 	addi	r17,r17,-1
   44288:	d8800915 	stw	r2,36(sp)
   4428c:	000d883a 	mov	r6,zero
   44290:	01cffe34 	movhi	r7,16376
   44294:	004dc940 	call	4dc94 <__subdf3>
   44298:	0198dbf4 	movhi	r6,25455
   4429c:	01cff4f4 	movhi	r7,16339
   442a0:	3190d844 	addi	r6,r6,17249
   442a4:	39e1e9c4 	addi	r7,r7,-30809
   442a8:	1009883a 	mov	r4,r2
   442ac:	180b883a 	mov	r5,r3
   442b0:	004d5bc0 	call	4d5bc <__muldf3>
   442b4:	01a2d874 	movhi	r6,35681
   442b8:	01cff1f4 	movhi	r7,16327
   442bc:	31b22cc4 	addi	r6,r6,-14157
   442c0:	39e28a04 	addi	r7,r7,-30168
   442c4:	180b883a 	mov	r5,r3
   442c8:	1009883a 	mov	r4,r2
   442cc:	004c1e80 	call	4c1e8 <__adddf3>
   442d0:	8809883a 	mov	r4,r17
   442d4:	1027883a 	mov	r19,r2
   442d8:	1825883a 	mov	r18,r3
   442dc:	004e7040 	call	4e704 <__floatsidf>
   442e0:	019427f4 	movhi	r6,20639
   442e4:	01cff4f4 	movhi	r7,16339
   442e8:	319e7ec4 	addi	r6,r6,31227
   442ec:	39d104c4 	addi	r7,r7,17427
   442f0:	1009883a 	mov	r4,r2
   442f4:	180b883a 	mov	r5,r3
   442f8:	004d5bc0 	call	4d5bc <__muldf3>
   442fc:	100d883a 	mov	r6,r2
   44300:	180f883a 	mov	r7,r3
   44304:	9809883a 	mov	r4,r19
   44308:	900b883a 	mov	r5,r18
   4430c:	004c1e80 	call	4c1e8 <__adddf3>
   44310:	1009883a 	mov	r4,r2
   44314:	180b883a 	mov	r5,r3
   44318:	1027883a 	mov	r19,r2
   4431c:	1825883a 	mov	r18,r3
   44320:	004e6840 	call	4e684 <__fixdfsi>
   44324:	000d883a 	mov	r6,zero
   44328:	000f883a 	mov	r7,zero
   4432c:	9809883a 	mov	r4,r19
   44330:	900b883a 	mov	r5,r18
   44334:	102d883a 	mov	r22,r2
   44338:	004d4c40 	call	4d4c4 <__ledf2>
   4433c:	1002a616 	blt	r2,zero,44dd8 <_dtoa_r+0xcc0>
   44340:	a469c83a 	sub	r20,r20,r17
   44344:	a0ffffc4 	addi	r3,r20,-1
   44348:	b08005e8 	cmpgeui	r2,r22,23
   4434c:	d8c00415 	stw	r3,16(sp)
   44350:	1002981e 	bne	r2,zero,44db4 <_dtoa_r+0xc9c>
   44354:	b00490fa 	slli	r2,r22,3
   44358:	02c00174 	movhi	r11,5
   4435c:	5ac54b04 	addi	r11,r11,5420
   44360:	5885883a 	add	r2,r11,r2
   44364:	11800017 	ldw	r6,0(r2)
   44368:	11c00117 	ldw	r7,4(r2)
   4436c:	d9000217 	ldw	r4,8(sp)
   44370:	a80b883a 	mov	r5,r21
   44374:	004d4c40 	call	4d4c4 <__ledf2>
   44378:	1001d60e 	bge	r2,zero,44ad4 <_dtoa_r+0x9bc>
   4437c:	d8000815 	stw	zero,32(sp)
   44380:	a0bfffc4 	addi	r2,r20,-1
   44384:	b5bfffc4 	addi	r22,r22,-1
   44388:	10028e16 	blt	r2,zero,44dc4 <_dtoa_r+0xcac>
   4438c:	d8000515 	stw	zero,20(sp)
   44390:	b001d30e 	bge	r22,zero,44ae0 <_dtoa_r+0x9c8>
   44394:	d8800517 	ldw	r2,20(sp)
   44398:	d8c00117 	ldw	r3,4(sp)
   4439c:	dd800615 	stw	r22,24(sp)
   443a0:	1585c83a 	sub	r2,r2,r22
   443a4:	d8800515 	stw	r2,20(sp)
   443a8:	0585c83a 	sub	r2,zero,r22
   443ac:	d8800315 	stw	r2,12(sp)
   443b0:	188002a8 	cmpgeui	r2,r3,10
   443b4:	002d883a 	mov	r22,zero
   443b8:	1001d11e 	bne	r2,zero,44b00 <_dtoa_r+0x9e8>
   443bc:	18800190 	cmplti	r2,r3,6
   443c0:	1002a31e 	bne	r2,zero,44e50 <_dtoa_r+0xd38>
   443c4:	18ffff04 	addi	r3,r3,-4
   443c8:	d8c00115 	stw	r3,4(sp)
   443cc:	188000e0 	cmpeqi	r2,r3,3
   443d0:	0023883a 	mov	r17,zero
   443d4:	1003b71e 	bne	r2,zero,452b4 <_dtoa_r+0x119c>
   443d8:	18800108 	cmpgei	r2,r3,4
   443dc:	1003a626 	beq	r2,zero,45278 <_dtoa_r+0x1160>
   443e0:	d8800117 	ldw	r2,4(sp)
   443e4:	10800120 	cmpeqi	r2,r2,4
   443e8:	1003611e 	bne	r2,zero,45170 <_dtoa_r+0x1058>
   443ec:	00800144 	movi	r2,5
   443f0:	d8800115 	stw	r2,4(sp)
   443f4:	00800044 	movi	r2,1
   443f8:	d8800715 	stw	r2,28(sp)
   443fc:	d8801f17 	ldw	r2,124(sp)
   44400:	d8c00617 	ldw	r3,24(sp)
   44404:	10c5883a 	add	r2,r2,r3
   44408:	14800044 	addi	r18,r2,1
   4440c:	d8800a15 	stw	r2,40(sp)
   44410:	900d883a 	mov	r6,r18
   44414:	0485320e 	bge	zero,r18,458e0 <_dtoa_r+0x17c8>
   44418:	30800608 	cmpgei	r2,r6,24
   4441c:	10053026 	beq	r2,zero,458e0 <_dtoa_r+0x17c8>
   44420:	00c00044 	movi	r3,1
   44424:	00800104 	movi	r2,4
   44428:	1085883a 	add	r2,r2,r2
   4442c:	11000504 	addi	r4,r2,20
   44430:	180b883a 	mov	r5,r3
   44434:	18c00044 	addi	r3,r3,1
   44438:	313ffb2e 	bgeu	r6,r4,44428 <_dtoa_r+0x310>
   4443c:	81401115 	stw	r5,68(r16)
   44440:	8009883a 	mov	r4,r16
   44444:	00477680 	call	47768 <_Balloc>
   44448:	1039883a 	mov	fp,r2
   4444c:	10050d26 	beq	r2,zero,45884 <_dtoa_r+0x176c>
   44450:	80801015 	stw	r2,64(r16)
   44454:	908003e8 	cmpgeui	r2,r18,15
   44458:	1001291e 	bne	r2,zero,44900 <_dtoa_r+0x7e8>
   4445c:	88012826 	beq	r17,zero,44900 <_dtoa_r+0x7e8>
   44460:	d8c00617 	ldw	r3,24(sp)
   44464:	00c3b40e 	bge	zero,r3,45338 <_dtoa_r+0x1220>
   44468:	188003cc 	andi	r2,r3,15
   4446c:	100490fa 	slli	r2,r2,3
   44470:	1823d13a 	srai	r17,r3,4
   44474:	02c00174 	movhi	r11,5
   44478:	5ac54b04 	addi	r11,r11,5420
   4447c:	5885883a 	add	r2,r11,r2
   44480:	88c0040c 	andi	r3,r17,16
   44484:	12400017 	ldw	r9,0(r2)
   44488:	12000117 	ldw	r8,4(r2)
   4448c:	18037626 	beq	r3,zero,45268 <_dtoa_r+0x1150>
   44490:	00800174 	movhi	r2,5
   44494:	10854104 	addi	r2,r2,5380
   44498:	d9000217 	ldw	r4,8(sp)
   4449c:	11800817 	ldw	r6,32(r2)
   444a0:	11c00917 	ldw	r7,36(r2)
   444a4:	a80b883a 	mov	r5,r21
   444a8:	da000c15 	stw	r8,48(sp)
   444ac:	da400b15 	stw	r9,44(sp)
   444b0:	004caec0 	call	4caec <__divdf3>
   444b4:	da400b17 	ldw	r9,44(sp)
   444b8:	da000c17 	ldw	r8,48(sp)
   444bc:	8c4003cc 	andi	r17,r17,15
   444c0:	1009883a 	mov	r4,r2
   444c4:	180b883a 	mov	r5,r3
   444c8:	04c000c4 	movi	r19,3
   444cc:	88001c26 	beq	r17,zero,44540 <_dtoa_r+0x428>
   444d0:	05000174 	movhi	r20,5
   444d4:	a5054104 	addi	r20,r20,5380
   444d8:	dc800b15 	stw	r18,44(sp)
   444dc:	dc000c15 	stw	r16,48(sp)
   444e0:	9825883a 	mov	r18,r19
   444e4:	a021883a 	mov	r16,r20
   444e8:	2827883a 	mov	r19,r5
   444ec:	2029883a 	mov	r20,r4
   444f0:	400b883a 	mov	r5,r8
   444f4:	4809883a 	mov	r4,r9
   444f8:	8980004c 	andi	r6,r17,1
   444fc:	30000626 	beq	r6,zero,44518 <_dtoa_r+0x400>
   44500:	81800017 	ldw	r6,0(r16)
   44504:	81c00117 	ldw	r7,4(r16)
   44508:	94800044 	addi	r18,r18,1
   4450c:	004d5bc0 	call	4d5bc <__muldf3>
   44510:	1009883a 	mov	r4,r2
   44514:	180b883a 	mov	r5,r3
   44518:	8823d07a 	srai	r17,r17,1
   4451c:	84000204 	addi	r16,r16,8
   44520:	883ff51e 	bne	r17,zero,444f8 <_dtoa_r+0x3e0>
   44524:	2811883a 	mov	r8,r5
   44528:	dc000c17 	ldw	r16,48(sp)
   4452c:	980b883a 	mov	r5,r19
   44530:	9027883a 	mov	r19,r18
   44534:	dc800b17 	ldw	r18,44(sp)
   44538:	2013883a 	mov	r9,r4
   4453c:	a009883a 	mov	r4,r20
   44540:	480d883a 	mov	r6,r9
   44544:	400f883a 	mov	r7,r8
   44548:	004caec0 	call	4caec <__divdf3>
   4454c:	1023883a 	mov	r17,r2
   44550:	1829883a 	mov	r20,r3
   44554:	d8800817 	ldw	r2,32(sp)
   44558:	10000626 	beq	r2,zero,44574 <_dtoa_r+0x45c>
   4455c:	000d883a 	mov	r6,zero
   44560:	01cffc34 	movhi	r7,16368
   44564:	8809883a 	mov	r4,r17
   44568:	a00b883a 	mov	r5,r20
   4456c:	004d4c40 	call	4d4c4 <__ledf2>
   44570:	10045a16 	blt	r2,zero,456dc <_dtoa_r+0x15c4>
   44574:	9809883a 	mov	r4,r19
   44578:	004e7040 	call	4e704 <__floatsidf>
   4457c:	880d883a 	mov	r6,r17
   44580:	a00f883a 	mov	r7,r20
   44584:	1009883a 	mov	r4,r2
   44588:	180b883a 	mov	r5,r3
   4458c:	004d5bc0 	call	4d5bc <__muldf3>
   44590:	000d883a 	mov	r6,zero
   44594:	01d00734 	movhi	r7,16412
   44598:	1009883a 	mov	r4,r2
   4459c:	180b883a 	mov	r5,r3
   445a0:	004c1e80 	call	4c1e8 <__adddf3>
   445a4:	d8800b15 	stw	r2,44(sp)
   445a8:	00bf3034 	movhi	r2,64704
   445ac:	18a7883a 	add	r19,r3,r2
   445b0:	9000c026 	beq	r18,zero,448b4 <_dtoa_r+0x79c>
   445b4:	d8800617 	ldw	r2,24(sp)
   445b8:	dc800c15 	stw	r18,48(sp)
   445bc:	d8801115 	stw	r2,68(sp)
   445c0:	d8800c17 	ldw	r2,48(sp)
   445c4:	02c00174 	movhi	r11,5
   445c8:	5ac54b04 	addi	r11,r11,5420
   445cc:	10bfffc4 	addi	r2,r2,-1
   445d0:	100490fa 	slli	r2,r2,3
   445d4:	8809883a 	mov	r4,r17
   445d8:	a00b883a 	mov	r5,r20
   445dc:	5885883a 	add	r2,r11,r2
   445e0:	10c00017 	ldw	r3,0(r2)
   445e4:	10800117 	ldw	r2,4(r2)
   445e8:	dac00d15 	stw	r11,52(sp)
   445ec:	d8c00f15 	stw	r3,60(sp)
   445f0:	d8801015 	stw	r2,64(sp)
   445f4:	004e6840 	call	4e684 <__fixdfsi>
   445f8:	11400c04 	addi	r5,r2,48
   445fc:	1009883a 	mov	r4,r2
   44600:	d9400e15 	stw	r5,56(sp)
   44604:	004e7040 	call	4e704 <__floatsidf>
   44608:	8809883a 	mov	r4,r17
   4460c:	a00b883a 	mov	r5,r20
   44610:	100d883a 	mov	r6,r2
   44614:	180f883a 	mov	r7,r3
   44618:	004dc940 	call	4dc94 <__subdf3>
   4461c:	d9000717 	ldw	r4,28(sp)
   44620:	dac00d17 	ldw	r11,52(sp)
   44624:	e2000044 	addi	r8,fp,1
   44628:	1029883a 	mov	r20,r2
   4462c:	1823883a 	mov	r17,r3
   44630:	2003ce26 	beq	r4,zero,4556c <_dtoa_r+0x1454>
   44634:	d9800f17 	ldw	r6,60(sp)
   44638:	d9c01017 	ldw	r7,64(sp)
   4463c:	0009883a 	mov	r4,zero
   44640:	014ff834 	movhi	r5,16352
   44644:	da001215 	stw	r8,72(sp)
   44648:	004caec0 	call	4caec <__divdf3>
   4464c:	d9800b17 	ldw	r6,44(sp)
   44650:	980f883a 	mov	r7,r19
   44654:	1009883a 	mov	r4,r2
   44658:	180b883a 	mov	r5,r3
   4465c:	004dc940 	call	4dc94 <__subdf3>
   44660:	1009883a 	mov	r4,r2
   44664:	d8800e17 	ldw	r2,56(sp)
   44668:	180b883a 	mov	r5,r3
   4466c:	a00d883a 	mov	r6,r20
   44670:	e0800005 	stb	r2,0(fp)
   44674:	880f883a 	mov	r7,r17
   44678:	d9000d15 	stw	r4,52(sp)
   4467c:	d8c00b15 	stw	r3,44(sp)
   44680:	004d3c80 	call	4d3c8 <__gedf2>
   44684:	d9400b17 	ldw	r5,44(sp)
   44688:	d9000d17 	ldw	r4,52(sp)
   4468c:	da001217 	ldw	r8,72(sp)
   44690:	00840b16 	blt	zero,r2,456c0 <_dtoa_r+0x15a8>
   44694:	0005883a 	mov	r2,zero
   44698:	dc800d15 	stw	r18,52(sp)
   4469c:	dd800e15 	stw	r22,56(sp)
   446a0:	ddc00b15 	stw	r23,44(sp)
   446a4:	dd400f15 	stw	r21,60(sp)
   446a8:	ddc00c17 	ldw	r23,48(sp)
   446ac:	402d883a 	mov	r22,r8
   446b0:	dc000c15 	stw	r16,48(sp)
   446b4:	2025883a 	mov	r18,r4
   446b8:	2827883a 	mov	r19,r5
   446bc:	102b883a 	mov	r21,r2
   446c0:	00002606 	br	4475c <_dtoa_r+0x644>
   446c4:	ad400044 	addi	r21,r21,1
   446c8:	adc4460e 	bge	r21,r23,457e4 <_dtoa_r+0x16cc>
   446cc:	9009883a 	mov	r4,r18
   446d0:	980b883a 	mov	r5,r19
   446d4:	000d883a 	mov	r6,zero
   446d8:	01d00934 	movhi	r7,16420
   446dc:	004d5bc0 	call	4d5bc <__muldf3>
   446e0:	000d883a 	mov	r6,zero
   446e4:	01d00934 	movhi	r7,16420
   446e8:	a009883a 	mov	r4,r20
   446ec:	880b883a 	mov	r5,r17
   446f0:	1025883a 	mov	r18,r2
   446f4:	1827883a 	mov	r19,r3
   446f8:	004d5bc0 	call	4d5bc <__muldf3>
   446fc:	180b883a 	mov	r5,r3
   44700:	1009883a 	mov	r4,r2
   44704:	1823883a 	mov	r17,r3
   44708:	1029883a 	mov	r20,r2
   4470c:	004e6840 	call	4e684 <__fixdfsi>
   44710:	1009883a 	mov	r4,r2
   44714:	1021883a 	mov	r16,r2
   44718:	004e7040 	call	4e704 <__floatsidf>
   4471c:	a009883a 	mov	r4,r20
   44720:	880b883a 	mov	r5,r17
   44724:	100d883a 	mov	r6,r2
   44728:	180f883a 	mov	r7,r3
   4472c:	004dc940 	call	4dc94 <__subdf3>
   44730:	b5800044 	addi	r22,r22,1
   44734:	82000c04 	addi	r8,r16,48
   44738:	b23fffc5 	stb	r8,-1(r22)
   4473c:	900d883a 	mov	r6,r18
   44740:	980f883a 	mov	r7,r19
   44744:	1009883a 	mov	r4,r2
   44748:	180b883a 	mov	r5,r3
   4474c:	1029883a 	mov	r20,r2
   44750:	1823883a 	mov	r17,r3
   44754:	004d4c40 	call	4d4c4 <__ledf2>
   44758:	10041e16 	blt	r2,zero,457d4 <_dtoa_r+0x16bc>
   4475c:	a00d883a 	mov	r6,r20
   44760:	880f883a 	mov	r7,r17
   44764:	0009883a 	mov	r4,zero
   44768:	014ffc34 	movhi	r5,16368
   4476c:	004dc940 	call	4dc94 <__subdf3>
   44770:	900d883a 	mov	r6,r18
   44774:	980f883a 	mov	r7,r19
   44778:	1009883a 	mov	r4,r2
   4477c:	180b883a 	mov	r5,r3
   44780:	004d4c40 	call	4d4c4 <__ledf2>
   44784:	103fcf0e 	bge	r2,zero,446c4 <_dtoa_r+0x5ac>
   44788:	d8801117 	ldw	r2,68(sp)
   4478c:	b027883a 	mov	r19,r22
   44790:	ddc00b17 	ldw	r23,44(sp)
   44794:	dc000c17 	ldw	r16,48(sp)
   44798:	15800044 	addi	r22,r2,1
   4479c:	00000106 	br	447a4 <_dtoa_r+0x68c>
   447a0:	e4c3ed26 	beq	fp,r19,45758 <_dtoa_r+0x1640>
   447a4:	98ffffc3 	ldbu	r3,-1(r19)
   447a8:	9811883a 	mov	r8,r19
   447ac:	9cffffc4 	addi	r19,r19,-1
   447b0:	18803fcc 	andi	r2,r3,255
   447b4:	1080201c 	xori	r2,r2,128
   447b8:	10bfe004 	addi	r2,r2,-128
   447bc:	10800e60 	cmpeqi	r2,r2,57
   447c0:	103ff71e 	bne	r2,zero,447a0 <_dtoa_r+0x688>
   447c4:	18c00044 	addi	r3,r3,1
   447c8:	98c00005 	stb	r3,0(r19)
   447cc:	b02b883a 	mov	r21,r22
   447d0:	00015a06 	br	44d3c <_dtoa_r+0xc24>
   447d4:	00a00034 	movhi	r2,32768
   447d8:	10bfffc4 	addi	r2,r2,-1
   447dc:	90aa703a 	and	r21,r18,r2
   447e0:	a825883a 	mov	r18,r21
   447e4:	00800044 	movi	r2,1
   447e8:	88800015 	stw	r2,0(r17)
   447ec:	00dffc34 	movhi	r3,32752
   447f0:	909ffc2c 	andhi	r2,r18,32752
   447f4:	10fe681e 	bne	r2,r3,44198 <_dtoa_r+0x80>
   447f8:	d9002017 	ldw	r4,128(sp)
   447fc:	00c9c3c4 	movi	r3,9999
   44800:	00800434 	movhi	r2,16
   44804:	20c00015 	stw	r3,0(r4)
   44808:	d8c00217 	ldw	r3,8(sp)
   4480c:	10bfffc4 	addi	r2,r2,-1
   44810:	9084703a 	and	r2,r18,r2
   44814:	10c4b03a 	or	r2,r2,r3
   44818:	1000121e 	bne	r2,zero,44864 <_dtoa_r+0x74c>
   4481c:	d8802217 	ldw	r2,136(sp)
   44820:	07000174 	movhi	fp,5
   44824:	10041e26 	beq	r2,zero,458a0 <_dtoa_r+0x1788>
   44828:	00800174 	movhi	r2,5
   4482c:	e7050d04 	addi	fp,fp,5172
   44830:	10850f04 	addi	r2,r2,5180
   44834:	d8c02217 	ldw	r3,136(sp)
   44838:	18800015 	stw	r2,0(r3)
   4483c:	003e6706 	br	441dc <_dtoa_r+0xc4>
   44840:	01400434 	movhi	r5,16
   44844:	297fffc4 	addi	r5,r5,-1
   44848:	a94a703a 	and	r5,r21,r5
   4484c:	dd001317 	ldw	r20,76(sp)
   44850:	9809883a 	mov	r4,r19
   44854:	294ffc34 	orhi	r5,r5,16368
   44858:	8c7f0044 	addi	r17,r17,-1023
   4485c:	d8000915 	stw	zero,36(sp)
   44860:	003e8a06 	br	4428c <_dtoa_r+0x174>
   44864:	d8802217 	ldw	r2,136(sp)
   44868:	07000174 	movhi	fp,5
   4486c:	10023c1e 	bne	r2,zero,45160 <_dtoa_r+0x1048>
   44870:	e7051004 	addi	fp,fp,5184
   44874:	003e5906 	br	441dc <_dtoa_r+0xc4>
   44878:	9809883a 	mov	r4,r19
   4487c:	004e7040 	call	4e704 <__floatsidf>
   44880:	880d883a 	mov	r6,r17
   44884:	a00f883a 	mov	r7,r20
   44888:	1009883a 	mov	r4,r2
   4488c:	180b883a 	mov	r5,r3
   44890:	004d5bc0 	call	4d5bc <__muldf3>
   44894:	000d883a 	mov	r6,zero
   44898:	01d00734 	movhi	r7,16412
   4489c:	1009883a 	mov	r4,r2
   448a0:	180b883a 	mov	r5,r3
   448a4:	004c1e80 	call	4c1e8 <__adddf3>
   448a8:	d8800b15 	stw	r2,44(sp)
   448ac:	00bf3034 	movhi	r2,64704
   448b0:	18a7883a 	add	r19,r3,r2
   448b4:	8809883a 	mov	r4,r17
   448b8:	a00b883a 	mov	r5,r20
   448bc:	000d883a 	mov	r6,zero
   448c0:	01d00534 	movhi	r7,16404
   448c4:	004dc940 	call	4dc94 <__subdf3>
   448c8:	d9800b17 	ldw	r6,44(sp)
   448cc:	980f883a 	mov	r7,r19
   448d0:	1009883a 	mov	r4,r2
   448d4:	180b883a 	mov	r5,r3
   448d8:	1029883a 	mov	r20,r2
   448dc:	1823883a 	mov	r17,r3
   448e0:	004d3c80 	call	4d3c8 <__gedf2>
   448e4:	0083a716 	blt	zero,r2,45784 <_dtoa_r+0x166c>
   448e8:	d9800b17 	ldw	r6,44(sp)
   448ec:	99e0003c 	xorhi	r7,r19,32768
   448f0:	a009883a 	mov	r4,r20
   448f4:	880b883a 	mov	r5,r17
   448f8:	004d4c40 	call	4d4c4 <__ledf2>
   448fc:	10001d16 	blt	r2,zero,44974 <_dtoa_r+0x85c>
   44900:	d8801417 	ldw	r2,80(sp)
   44904:	10008816 	blt	r2,zero,44b28 <_dtoa_r+0xa10>
   44908:	d8c00617 	ldw	r3,24(sp)
   4490c:	18c003d0 	cmplti	r3,r3,15
   44910:	18008526 	beq	r3,zero,44b28 <_dtoa_r+0xa10>
   44914:	02c00174 	movhi	r11,5
   44918:	5ac54b04 	addi	r11,r11,5420
   4491c:	d8800617 	ldw	r2,24(sp)
   44920:	100490fa 	slli	r2,r2,3
   44924:	5885883a 	add	r2,r11,r2
   44928:	10c00017 	ldw	r3,0(r2)
   4492c:	10800117 	ldw	r2,4(r2)
   44930:	d8c00115 	stw	r3,4(sp)
   44934:	d8800315 	stw	r2,12(sp)
   44938:	d8801f17 	ldw	r2,124(sp)
   4493c:	1000130e 	bge	r2,zero,4498c <_dtoa_r+0x874>
   44940:	04801216 	blt	zero,r18,4498c <_dtoa_r+0x874>
   44944:	90000b1e 	bne	r18,zero,44974 <_dtoa_r+0x85c>
   44948:	d9000117 	ldw	r4,4(sp)
   4494c:	d9400317 	ldw	r5,12(sp)
   44950:	000d883a 	mov	r6,zero
   44954:	01d00534 	movhi	r7,16404
   44958:	004d5bc0 	call	4d5bc <__muldf3>
   4495c:	d9000217 	ldw	r4,8(sp)
   44960:	100d883a 	mov	r6,r2
   44964:	180f883a 	mov	r7,r3
   44968:	a80b883a 	mov	r5,r21
   4496c:	004d4c40 	call	4d4c4 <__ledf2>
   44970:	00838416 	blt	zero,r2,45784 <_dtoa_r+0x166c>
   44974:	e011883a 	mov	r8,fp
   44978:	d8000315 	stw	zero,12(sp)
   4497c:	0023883a 	mov	r17,zero
   44980:	d8801f17 	ldw	r2,124(sp)
   44984:	00a4303a 	nor	r18,zero,r2
   44988:	0001da06 	br	450f4 <_dtoa_r+0xfdc>
   4498c:	dcc00117 	ldw	r19,4(sp)
   44990:	dd000317 	ldw	r20,12(sp)
   44994:	dd800217 	ldw	r22,8(sp)
   44998:	980d883a 	mov	r6,r19
   4499c:	a00f883a 	mov	r7,r20
   449a0:	b009883a 	mov	r4,r22
   449a4:	a80b883a 	mov	r5,r21
   449a8:	004caec0 	call	4caec <__divdf3>
   449ac:	180b883a 	mov	r5,r3
   449b0:	1009883a 	mov	r4,r2
   449b4:	004e6840 	call	4e684 <__fixdfsi>
   449b8:	1009883a 	mov	r4,r2
   449bc:	1023883a 	mov	r17,r2
   449c0:	004e7040 	call	4e704 <__floatsidf>
   449c4:	980d883a 	mov	r6,r19
   449c8:	a00f883a 	mov	r7,r20
   449cc:	1009883a 	mov	r4,r2
   449d0:	180b883a 	mov	r5,r3
   449d4:	004d5bc0 	call	4d5bc <__muldf3>
   449d8:	100d883a 	mov	r6,r2
   449dc:	b009883a 	mov	r4,r22
   449e0:	a80b883a 	mov	r5,r21
   449e4:	180f883a 	mov	r7,r3
   449e8:	004dc940 	call	4dc94 <__subdf3>
   449ec:	89000c04 	addi	r4,r17,48
   449f0:	e1000005 	stb	r4,0(fp)
   449f4:	91800060 	cmpeqi	r6,r18,1
   449f8:	1009883a 	mov	r4,r2
   449fc:	180b883a 	mov	r5,r3
   44a00:	e4c00044 	addi	r19,fp,1
   44a04:	3002891e 	bne	r6,zero,4542c <_dtoa_r+0x1314>
   44a08:	ddc00215 	stw	r23,8(sp)
   44a0c:	05800044 	movi	r22,1
   44a10:	ddc00117 	ldw	r23,4(sp)
   44a14:	dc000415 	stw	r16,16(sp)
   44a18:	a023883a 	mov	r17,r20
   44a1c:	00001c06 	br	44a90 <_dtoa_r+0x978>
   44a20:	b80d883a 	mov	r6,r23
   44a24:	880f883a 	mov	r7,r17
   44a28:	a809883a 	mov	r4,r21
   44a2c:	a00b883a 	mov	r5,r20
   44a30:	004caec0 	call	4caec <__divdf3>
   44a34:	180b883a 	mov	r5,r3
   44a38:	1009883a 	mov	r4,r2
   44a3c:	004e6840 	call	4e684 <__fixdfsi>
   44a40:	1009883a 	mov	r4,r2
   44a44:	1021883a 	mov	r16,r2
   44a48:	004e7040 	call	4e704 <__floatsidf>
   44a4c:	b80d883a 	mov	r6,r23
   44a50:	880f883a 	mov	r7,r17
   44a54:	1009883a 	mov	r4,r2
   44a58:	180b883a 	mov	r5,r3
   44a5c:	004d5bc0 	call	4d5bc <__muldf3>
   44a60:	a809883a 	mov	r4,r21
   44a64:	a00b883a 	mov	r5,r20
   44a68:	100d883a 	mov	r6,r2
   44a6c:	180f883a 	mov	r7,r3
   44a70:	004dc940 	call	4dc94 <__subdf3>
   44a74:	81000c04 	addi	r4,r16,48
   44a78:	99000005 	stb	r4,0(r19)
   44a7c:	b5800044 	addi	r22,r22,1
   44a80:	9cc00044 	addi	r19,r19,1
   44a84:	1009883a 	mov	r4,r2
   44a88:	180b883a 	mov	r5,r3
   44a8c:	b4826426 	beq	r22,r18,45420 <_dtoa_r+0x1308>
   44a90:	000d883a 	mov	r6,zero
   44a94:	01d00934 	movhi	r7,16420
   44a98:	004d5bc0 	call	4d5bc <__muldf3>
   44a9c:	000d883a 	mov	r6,zero
   44aa0:	000f883a 	mov	r7,zero
   44aa4:	1009883a 	mov	r4,r2
   44aa8:	180b883a 	mov	r5,r3
   44aac:	102b883a 	mov	r21,r2
   44ab0:	1829883a 	mov	r20,r3
   44ab4:	004d3340 	call	4d334 <__eqdf2>
   44ab8:	103fd91e 	bne	r2,zero,44a20 <_dtoa_r+0x908>
   44abc:	d8800617 	ldw	r2,24(sp)
   44ac0:	ddc00217 	ldw	r23,8(sp)
   44ac4:	dc000417 	ldw	r16,16(sp)
   44ac8:	15400044 	addi	r21,r2,1
   44acc:	9811883a 	mov	r8,r19
   44ad0:	00009a06 	br	44d3c <_dtoa_r+0xc24>
   44ad4:	0502120e 	bge	zero,r20,45320 <_dtoa_r+0x1208>
   44ad8:	d8000815 	stw	zero,32(sp)
   44adc:	d8000515 	stw	zero,20(sp)
   44ae0:	d8800417 	ldw	r2,16(sp)
   44ae4:	d8c00117 	ldw	r3,4(sp)
   44ae8:	dd800615 	stw	r22,24(sp)
   44aec:	1585883a 	add	r2,r2,r22
   44af0:	d8800415 	stw	r2,16(sp)
   44af4:	d8000315 	stw	zero,12(sp)
   44af8:	188002a8 	cmpgeui	r2,r3,10
   44afc:	103e2f26 	beq	r2,zero,443bc <_dtoa_r+0x2a4>
   44b00:	00800044 	movi	r2,1
   44b04:	04400044 	movi	r17,1
   44b08:	d8000115 	stw	zero,4(sp)
   44b0c:	d8800715 	stw	r2,28(sp)
   44b10:	04bfffc4 	movi	r18,-1
   44b14:	d8001f15 	stw	zero,124(sp)
   44b18:	80001115 	stw	zero,68(r16)
   44b1c:	dc800a15 	stw	r18,40(sp)
   44b20:	000b883a 	mov	r5,zero
   44b24:	003e4606 	br	44440 <_dtoa_r+0x328>
   44b28:	d8c00717 	ldw	r3,28(sp)
   44b2c:	1800b41e 	bne	r3,zero,44e00 <_dtoa_r+0xce8>
   44b30:	dd000317 	ldw	r20,12(sp)
   44b34:	dcc00517 	ldw	r19,20(sp)
   44b38:	d8000715 	stw	zero,28(sp)
   44b3c:	0023883a 	mov	r17,zero
   44b40:	98000b26 	beq	r19,zero,44b70 <_dtoa_r+0xa58>
   44b44:	d8c00417 	ldw	r3,16(sp)
   44b48:	00c0090e 	bge	zero,r3,44b70 <_dtoa_r+0xa58>
   44b4c:	9805883a 	mov	r2,r19
   44b50:	1cc1ab16 	blt	r3,r19,45200 <_dtoa_r+0x10e8>
   44b54:	d8c00517 	ldw	r3,20(sp)
   44b58:	98a7c83a 	sub	r19,r19,r2
   44b5c:	1887c83a 	sub	r3,r3,r2
   44b60:	d8c00515 	stw	r3,20(sp)
   44b64:	d8c00417 	ldw	r3,16(sp)
   44b68:	1885c83a 	sub	r2,r3,r2
   44b6c:	d8800415 	stw	r2,16(sp)
   44b70:	d8800317 	ldw	r2,12(sp)
   44b74:	10000826 	beq	r2,zero,44b98 <_dtoa_r+0xa80>
   44b78:	d8800717 	ldw	r2,28(sp)
   44b7c:	10000126 	beq	r2,zero,44b84 <_dtoa_r+0xa6c>
   44b80:	a0025a1e 	bne	r20,zero,454ec <_dtoa_r+0x13d4>
   44b84:	d9800317 	ldw	r6,12(sp)
   44b88:	b80b883a 	mov	r5,r23
   44b8c:	8009883a 	mov	r4,r16
   44b90:	0047ec00 	call	47ec0 <__pow5mult>
   44b94:	102f883a 	mov	r23,r2
   44b98:	01400044 	movi	r5,1
   44b9c:	8009883a 	mov	r4,r16
   44ba0:	0047bbc0 	call	47bbc <__i2b>
   44ba4:	d8800315 	stw	r2,12(sp)
   44ba8:	b0015a1e 	bne	r22,zero,45114 <_dtoa_r+0xffc>
   44bac:	d8800117 	ldw	r2,4(sp)
   44bb0:	10800090 	cmplti	r2,r2,2
   44bb4:	1001751e 	bne	r2,zero,4518c <_dtoa_r+0x1074>
   44bb8:	00800044 	movi	r2,1
   44bbc:	d9400417 	ldw	r5,16(sp)
   44bc0:	1145883a 	add	r2,r2,r5
   44bc4:	108007cc 	andi	r2,r2,31
   44bc8:	10009826 	beq	r2,zero,44e2c <_dtoa_r+0xd14>
   44bcc:	00c00804 	movi	r3,32
   44bd0:	1887c83a 	sub	r3,r3,r2
   44bd4:	19000150 	cmplti	r4,r3,5
   44bd8:	20017e1e 	bne	r4,zero,451d4 <_dtoa_r+0x10bc>
   44bdc:	00c00704 	movi	r3,28
   44be0:	1885c83a 	sub	r2,r3,r2
   44be4:	d8c00517 	ldw	r3,20(sp)
   44be8:	98a7883a 	add	r19,r19,r2
   44bec:	1887883a 	add	r3,r3,r2
   44bf0:	2885883a 	add	r2,r5,r2
   44bf4:	d8c00515 	stw	r3,20(sp)
   44bf8:	d8800415 	stw	r2,16(sp)
   44bfc:	d8800517 	ldw	r2,20(sp)
   44c00:	0080050e 	bge	zero,r2,44c18 <_dtoa_r+0xb00>
   44c04:	b80b883a 	mov	r5,r23
   44c08:	100d883a 	mov	r6,r2
   44c0c:	8009883a 	mov	r4,r16
   44c10:	00480000 	call	48000 <__lshift>
   44c14:	102f883a 	mov	r23,r2
   44c18:	d8800417 	ldw	r2,16(sp)
   44c1c:	0080050e 	bge	zero,r2,44c34 <_dtoa_r+0xb1c>
   44c20:	d9400317 	ldw	r5,12(sp)
   44c24:	100d883a 	mov	r6,r2
   44c28:	8009883a 	mov	r4,r16
   44c2c:	00480000 	call	48000 <__lshift>
   44c30:	d8800315 	stw	r2,12(sp)
   44c34:	d8800817 	ldw	r2,32(sp)
   44c38:	10004c1e 	bne	r2,zero,44d6c <_dtoa_r+0xc54>
   44c3c:	04811a0e 	bge	zero,r18,450a8 <_dtoa_r+0xf90>
   44c40:	d8800717 	ldw	r2,28(sp)
   44c44:	1000a11e 	bne	r2,zero,44ecc <_dtoa_r+0xdb4>
   44c48:	d8800617 	ldw	r2,24(sp)
   44c4c:	15400044 	addi	r21,r2,1
   44c50:	dd800317 	ldw	r22,12(sp)
   44c54:	04c00044 	movi	r19,1
   44c58:	00000706 	br	44c78 <_dtoa_r+0xb60>
   44c5c:	b80b883a 	mov	r5,r23
   44c60:	000f883a 	mov	r7,zero
   44c64:	01800284 	movi	r6,10
   44c68:	8009883a 	mov	r4,r16
   44c6c:	00478300 	call	47830 <__multadd>
   44c70:	102f883a 	mov	r23,r2
   44c74:	9cc00044 	addi	r19,r19,1
   44c78:	b00b883a 	mov	r5,r22
   44c7c:	b809883a 	mov	r4,r23
   44c80:	0043f1c0 	call	43f1c <quorem>
   44c84:	15000c04 	addi	r20,r2,48
   44c88:	e4c5883a 	add	r2,fp,r19
   44c8c:	153fffc5 	stb	r20,-1(r2)
   44c90:	9cbff216 	blt	r19,r18,44c5c <_dtoa_r+0xb44>
   44c94:	04800116 	blt	zero,r18,44c9c <_dtoa_r+0xb84>
   44c98:	04800044 	movi	r18,1
   44c9c:	e4a5883a 	add	r18,fp,r18
   44ca0:	d8000215 	stw	zero,8(sp)
   44ca4:	b80b883a 	mov	r5,r23
   44ca8:	8009883a 	mov	r4,r16
   44cac:	01800044 	movi	r6,1
   44cb0:	00480000 	call	48000 <__lshift>
   44cb4:	d9400317 	ldw	r5,12(sp)
   44cb8:	1009883a 	mov	r4,r2
   44cbc:	102f883a 	mov	r23,r2
   44cc0:	00481880 	call	48188 <__mcmp>
   44cc4:	00800216 	blt	zero,r2,44cd0 <_dtoa_r+0xbb8>
   44cc8:	00017c06 	br	452bc <_dtoa_r+0x11a4>
   44ccc:	e4819026 	beq	fp,r18,45310 <_dtoa_r+0x11f8>
   44cd0:	90ffffc3 	ldbu	r3,-1(r18)
   44cd4:	9011883a 	mov	r8,r18
   44cd8:	94bfffc4 	addi	r18,r18,-1
   44cdc:	18803fcc 	andi	r2,r3,255
   44ce0:	1080201c 	xori	r2,r2,128
   44ce4:	10bfe004 	addi	r2,r2,-128
   44ce8:	10800e60 	cmpeqi	r2,r2,57
   44cec:	103ff71e 	bne	r2,zero,44ccc <_dtoa_r+0xbb4>
   44cf0:	18c00044 	addi	r3,r3,1
   44cf4:	90c00005 	stb	r3,0(r18)
   44cf8:	d9400317 	ldw	r5,12(sp)
   44cfc:	8009883a 	mov	r4,r16
   44d00:	da000115 	stw	r8,4(sp)
   44d04:	004780c0 	call	4780c <_Bfree>
   44d08:	da000117 	ldw	r8,4(sp)
   44d0c:	88000b26 	beq	r17,zero,44d3c <_dtoa_r+0xc24>
   44d10:	d9400217 	ldw	r5,8(sp)
   44d14:	28000426 	beq	r5,zero,44d28 <_dtoa_r+0xc10>
   44d18:	2c400326 	beq	r5,r17,44d28 <_dtoa_r+0xc10>
   44d1c:	8009883a 	mov	r4,r16
   44d20:	004780c0 	call	4780c <_Bfree>
   44d24:	da000117 	ldw	r8,4(sp)
   44d28:	880b883a 	mov	r5,r17
   44d2c:	8009883a 	mov	r4,r16
   44d30:	da000115 	stw	r8,4(sp)
   44d34:	004780c0 	call	4780c <_Bfree>
   44d38:	da000117 	ldw	r8,4(sp)
   44d3c:	b80b883a 	mov	r5,r23
   44d40:	8009883a 	mov	r4,r16
   44d44:	da000115 	stw	r8,4(sp)
   44d48:	004780c0 	call	4780c <_Bfree>
   44d4c:	da000117 	ldw	r8,4(sp)
   44d50:	d8802017 	ldw	r2,128(sp)
   44d54:	40000005 	stb	zero,0(r8)
   44d58:	15400015 	stw	r21,0(r2)
   44d5c:	d8802217 	ldw	r2,136(sp)
   44d60:	103d1e26 	beq	r2,zero,441dc <_dtoa_r+0xc4>
   44d64:	12000015 	stw	r8,0(r2)
   44d68:	003d1c06 	br	441dc <_dtoa_r+0xc4>
   44d6c:	d9400317 	ldw	r5,12(sp)
   44d70:	b809883a 	mov	r4,r23
   44d74:	00481880 	call	48188 <__mcmp>
   44d78:	103fb00e 	bge	r2,zero,44c3c <_dtoa_r+0xb24>
   44d7c:	b80b883a 	mov	r5,r23
   44d80:	000f883a 	mov	r7,zero
   44d84:	01800284 	movi	r6,10
   44d88:	8009883a 	mov	r4,r16
   44d8c:	00478300 	call	47830 <__multadd>
   44d90:	d8c00617 	ldw	r3,24(sp)
   44d94:	102f883a 	mov	r23,r2
   44d98:	d8800717 	ldw	r2,28(sp)
   44d9c:	1d7fffc4 	addi	r21,r3,-1
   44da0:	1000411e 	bne	r2,zero,44ea8 <_dtoa_r+0xd90>
   44da4:	dc800a17 	ldw	r18,40(sp)
   44da8:	0482940e 	bge	zero,r18,457fc <_dtoa_r+0x16e4>
   44dac:	dd400617 	ldw	r21,24(sp)
   44db0:	003fa706 	br	44c50 <_dtoa_r+0xb38>
   44db4:	00800044 	movi	r2,1
   44db8:	d8800815 	stw	r2,32(sp)
   44dbc:	a0bfffc4 	addi	r2,r20,-1
   44dc0:	103d720e 	bge	r2,zero,4438c <_dtoa_r+0x274>
   44dc4:	00800044 	movi	r2,1
   44dc8:	1505c83a 	sub	r2,r2,r20
   44dcc:	d8800515 	stw	r2,20(sp)
   44dd0:	d8000415 	stw	zero,16(sp)
   44dd4:	003d6e06 	br	44390 <_dtoa_r+0x278>
   44dd8:	b009883a 	mov	r4,r22
   44ddc:	004e7040 	call	4e704 <__floatsidf>
   44de0:	980d883a 	mov	r6,r19
   44de4:	900f883a 	mov	r7,r18
   44de8:	1009883a 	mov	r4,r2
   44dec:	180b883a 	mov	r5,r3
   44df0:	004d3340 	call	4d334 <__eqdf2>
   44df4:	103d5226 	beq	r2,zero,44340 <_dtoa_r+0x228>
   44df8:	b5bfffc4 	addi	r22,r22,-1
   44dfc:	003d5006 	br	44340 <_dtoa_r+0x228>
   44e00:	d8c00117 	ldw	r3,4(sp)
   44e04:	18c00088 	cmpgei	r3,r3,2
   44e08:	18013526 	beq	r3,zero,452e0 <_dtoa_r+0x11c8>
   44e0c:	d8800317 	ldw	r2,12(sp)
   44e10:	953fffc4 	addi	r20,r18,-1
   44e14:	1500fc16 	blt	r2,r20,45208 <_dtoa_r+0x10f0>
   44e18:	1529c83a 	sub	r20,r2,r20
   44e1c:	d8800517 	ldw	r2,20(sp)
   44e20:	9002620e 	bge	r18,zero,457ac <_dtoa_r+0x1694>
   44e24:	14a7c83a 	sub	r19,r2,r18
   44e28:	00010306 	br	45238 <_dtoa_r+0x1120>
   44e2c:	00800704 	movi	r2,28
   44e30:	d8c00517 	ldw	r3,20(sp)
   44e34:	98a7883a 	add	r19,r19,r2
   44e38:	1887883a 	add	r3,r3,r2
   44e3c:	d8c00515 	stw	r3,20(sp)
   44e40:	d8c00417 	ldw	r3,16(sp)
   44e44:	1885883a 	add	r2,r3,r2
   44e48:	d8800415 	stw	r2,16(sp)
   44e4c:	003f6b06 	br	44bfc <_dtoa_r+0xae4>
   44e50:	d8c00117 	ldw	r3,4(sp)
   44e54:	188000e0 	cmpeqi	r2,r3,3
   44e58:	1001151e 	bne	r2,zero,452b0 <_dtoa_r+0x1198>
   44e5c:	18800108 	cmpgei	r2,r3,4
   44e60:	10000226 	beq	r2,zero,44e6c <_dtoa_r+0xd54>
   44e64:	04400044 	movi	r17,1
   44e68:	003d5d06 	br	443e0 <_dtoa_r+0x2c8>
   44e6c:	188000a0 	cmpeqi	r2,r3,2
   44e70:	10028d26 	beq	r2,zero,458a8 <_dtoa_r+0x1790>
   44e74:	04400044 	movi	r17,1
   44e78:	d8000715 	stw	zero,28(sp)
   44e7c:	d8801f17 	ldw	r2,124(sp)
   44e80:	0080be0e 	bge	zero,r2,4517c <_dtoa_r+0x1064>
   44e84:	d8800a15 	stw	r2,40(sp)
   44e88:	1025883a 	mov	r18,r2
   44e8c:	100d883a 	mov	r6,r2
   44e90:	003d6106 	br	44418 <_dtoa_r+0x300>
   44e94:	01000804 	movi	r4,32
   44e98:	2089c83a 	sub	r4,r4,r2
   44e9c:	d8800217 	ldw	r2,8(sp)
   44ea0:	1108983a 	sll	r4,r2,r4
   44ea4:	003cf206 	br	44270 <_dtoa_r+0x158>
   44ea8:	880b883a 	mov	r5,r17
   44eac:	000f883a 	mov	r7,zero
   44eb0:	01800284 	movi	r6,10
   44eb4:	8009883a 	mov	r4,r16
   44eb8:	00478300 	call	47830 <__multadd>
   44ebc:	dc800a17 	ldw	r18,40(sp)
   44ec0:	1023883a 	mov	r17,r2
   44ec4:	04825d0e 	bge	zero,r18,4583c <_dtoa_r+0x1724>
   44ec8:	dd400615 	stw	r21,24(sp)
   44ecc:	04c0c616 	blt	zero,r19,451e8 <_dtoa_r+0x10d0>
   44ed0:	b0016e1e 	bne	r22,zero,4548c <_dtoa_r+0x1374>
   44ed4:	8827883a 	mov	r19,r17
   44ed8:	e0bfffc4 	addi	r2,fp,-1
   44edc:	1485883a 	add	r2,r2,r18
   44ee0:	d8800515 	stw	r2,20(sp)
   44ee4:	d8800217 	ldw	r2,8(sp)
   44ee8:	e02d883a 	mov	r22,fp
   44eec:	df000815 	stw	fp,32(sp)
   44ef0:	1080004c 	andi	r2,r2,1
   44ef4:	d8800715 	stw	r2,28(sp)
   44ef8:	dc800317 	ldw	r18,12(sp)
   44efc:	b809883a 	mov	r4,r23
   44f00:	900b883a 	mov	r5,r18
   44f04:	0043f1c0 	call	43f1c <quorem>
   44f08:	880b883a 	mov	r5,r17
   44f0c:	b809883a 	mov	r4,r23
   44f10:	102b883a 	mov	r21,r2
   44f14:	00481880 	call	48188 <__mcmp>
   44f18:	900b883a 	mov	r5,r18
   44f1c:	980d883a 	mov	r6,r19
   44f20:	8009883a 	mov	r4,r16
   44f24:	1025883a 	mov	r18,r2
   44f28:	00481e00 	call	481e0 <__mdiff>
   44f2c:	100b883a 	mov	r5,r2
   44f30:	10800317 	ldw	r2,12(r2)
   44f34:	af000c04 	addi	fp,r21,48
   44f38:	1000261e 	bne	r2,zero,44fd4 <_dtoa_r+0xebc>
   44f3c:	b809883a 	mov	r4,r23
   44f40:	d9400415 	stw	r5,16(sp)
   44f44:	00481880 	call	48188 <__mcmp>
   44f48:	d9400417 	ldw	r5,16(sp)
   44f4c:	1029883a 	mov	r20,r2
   44f50:	8009883a 	mov	r4,r16
   44f54:	004780c0 	call	4780c <_Bfree>
   44f58:	a000401e 	bne	r20,zero,4505c <_dtoa_r+0xf44>
   44f5c:	d8800117 	ldw	r2,4(sp)
   44f60:	1000021e 	bne	r2,zero,44f6c <_dtoa_r+0xe54>
   44f64:	d8800717 	ldw	r2,28(sp)
   44f68:	1000cb26 	beq	r2,zero,45298 <_dtoa_r+0x1180>
   44f6c:	90020816 	blt	r18,zero,45790 <_dtoa_r+0x1678>
   44f70:	d8800517 	ldw	r2,20(sp)
   44f74:	b7000005 	stb	fp,0(r22)
   44f78:	b4800044 	addi	r18,r22,1
   44f7c:	15815426 	beq	r2,r22,454d0 <_dtoa_r+0x13b8>
   44f80:	b80b883a 	mov	r5,r23
   44f84:	000f883a 	mov	r7,zero
   44f88:	01800284 	movi	r6,10
   44f8c:	8009883a 	mov	r4,r16
   44f90:	00478300 	call	47830 <__multadd>
   44f94:	102f883a 	mov	r23,r2
   44f98:	880b883a 	mov	r5,r17
   44f9c:	000f883a 	mov	r7,zero
   44fa0:	01800284 	movi	r6,10
   44fa4:	8009883a 	mov	r4,r16
   44fa8:	8cc02826 	beq	r17,r19,4504c <_dtoa_r+0xf34>
   44fac:	00478300 	call	47830 <__multadd>
   44fb0:	980b883a 	mov	r5,r19
   44fb4:	000f883a 	mov	r7,zero
   44fb8:	01800284 	movi	r6,10
   44fbc:	8009883a 	mov	r4,r16
   44fc0:	1023883a 	mov	r17,r2
   44fc4:	00478300 	call	47830 <__multadd>
   44fc8:	1027883a 	mov	r19,r2
   44fcc:	902d883a 	mov	r22,r18
   44fd0:	003fc906 	br	44ef8 <_dtoa_r+0xde0>
   44fd4:	8009883a 	mov	r4,r16
   44fd8:	e029883a 	mov	r20,fp
   44fdc:	df000817 	ldw	fp,32(sp)
   44fe0:	004780c0 	call	4780c <_Bfree>
   44fe4:	90000616 	blt	r18,zero,45000 <_dtoa_r+0xee8>
   44fe8:	d8800217 	ldw	r2,8(sp)
   44fec:	d8c00117 	ldw	r3,4(sp)
   44ff0:	1080004c 	andi	r2,r2,1
   44ff4:	1ca4b03a 	or	r18,r3,r18
   44ff8:	1484b03a 	or	r2,r2,r18
   44ffc:	1000201e 	bne	r2,zero,45080 <_dtoa_r+0xf68>
   45000:	b80b883a 	mov	r5,r23
   45004:	8009883a 	mov	r4,r16
   45008:	01800044 	movi	r6,1
   4500c:	00480000 	call	48000 <__lshift>
   45010:	d9400317 	ldw	r5,12(sp)
   45014:	1009883a 	mov	r4,r2
   45018:	102f883a 	mov	r23,r2
   4501c:	00481880 	call	48188 <__mcmp>
   45020:	0080990e 	bge	zero,r2,45288 <_dtoa_r+0x1170>
   45024:	a0c00e60 	cmpeqi	r3,r20,57
   45028:	1801ce1e 	bne	r3,zero,45764 <_dtoa_r+0x164c>
   4502c:	ad000c44 	addi	r20,r21,49
   45030:	d8800617 	ldw	r2,24(sp)
   45034:	dc400215 	stw	r17,8(sp)
   45038:	b2000044 	addi	r8,r22,1
   4503c:	b5000005 	stb	r20,0(r22)
   45040:	15400044 	addi	r21,r2,1
   45044:	9823883a 	mov	r17,r19
   45048:	003f2b06 	br	44cf8 <_dtoa_r+0xbe0>
   4504c:	00478300 	call	47830 <__multadd>
   45050:	1023883a 	mov	r17,r2
   45054:	1027883a 	mov	r19,r2
   45058:	003fdc06 	br	44fcc <_dtoa_r+0xeb4>
   4505c:	90022316 	blt	r18,zero,458ec <_dtoa_r+0x17d4>
   45060:	d8800117 	ldw	r2,4(sp)
   45064:	14a4b03a 	or	r18,r2,r18
   45068:	d8800717 	ldw	r2,28(sp)
   4506c:	14a4b03a 	or	r18,r2,r18
   45070:	90021e26 	beq	r18,zero,458ec <_dtoa_r+0x17d4>
   45074:	053fbe0e 	bge	zero,r20,44f70 <_dtoa_r+0xe58>
   45078:	e029883a 	mov	r20,fp
   4507c:	df000817 	ldw	fp,32(sp)
   45080:	a0800e60 	cmpeqi	r2,r20,57
   45084:	1001b71e 	bne	r2,zero,45764 <_dtoa_r+0x164c>
   45088:	d8800617 	ldw	r2,24(sp)
   4508c:	a0c00044 	addi	r3,r20,1
   45090:	dc400215 	stw	r17,8(sp)
   45094:	b2000044 	addi	r8,r22,1
   45098:	15400044 	addi	r21,r2,1
   4509c:	b0c00005 	stb	r3,0(r22)
   450a0:	9823883a 	mov	r17,r19
   450a4:	003f1406 	br	44cf8 <_dtoa_r+0xbe0>
   450a8:	d8800117 	ldw	r2,4(sp)
   450ac:	108000d0 	cmplti	r2,r2,3
   450b0:	103ee31e 	bne	r2,zero,44c40 <_dtoa_r+0xb28>
   450b4:	9000d81e 	bne	r18,zero,45418 <_dtoa_r+0x1300>
   450b8:	d9400317 	ldw	r5,12(sp)
   450bc:	8009883a 	mov	r4,r16
   450c0:	000f883a 	mov	r7,zero
   450c4:	01800144 	movi	r6,5
   450c8:	00478300 	call	47830 <__multadd>
   450cc:	100b883a 	mov	r5,r2
   450d0:	b809883a 	mov	r4,r23
   450d4:	d8800315 	stw	r2,12(sp)
   450d8:	00481880 	call	48188 <__mcmp>
   450dc:	0080ce0e 	bge	zero,r2,45418 <_dtoa_r+0x1300>
   450e0:	00800c44 	movi	r2,49
   450e4:	e0800005 	stb	r2,0(fp)
   450e8:	d8800617 	ldw	r2,24(sp)
   450ec:	e2000044 	addi	r8,fp,1
   450f0:	14800044 	addi	r18,r2,1
   450f4:	d9400317 	ldw	r5,12(sp)
   450f8:	8009883a 	mov	r4,r16
   450fc:	da000115 	stw	r8,4(sp)
   45100:	004780c0 	call	4780c <_Bfree>
   45104:	da000117 	ldw	r8,4(sp)
   45108:	95400044 	addi	r21,r18,1
   4510c:	883f061e 	bne	r17,zero,44d28 <_dtoa_r+0xc10>
   45110:	003f0a06 	br	44d3c <_dtoa_r+0xc24>
   45114:	100b883a 	mov	r5,r2
   45118:	b00d883a 	mov	r6,r22
   4511c:	8009883a 	mov	r4,r16
   45120:	0047ec00 	call	47ec0 <__pow5mult>
   45124:	d8c00117 	ldw	r3,4(sp)
   45128:	d8800315 	stw	r2,12(sp)
   4512c:	18c00090 	cmplti	r3,r3,2
   45130:	1800461e 	bne	r3,zero,4524c <_dtoa_r+0x1134>
   45134:	002d883a 	mov	r22,zero
   45138:	d8c00317 	ldw	r3,12(sp)
   4513c:	18800417 	ldw	r2,16(r3)
   45140:	10800104 	addi	r2,r2,4
   45144:	100490ba 	slli	r2,r2,2
   45148:	1885883a 	add	r2,r3,r2
   4514c:	11000017 	ldw	r4,0(r2)
   45150:	0047a980 	call	47a98 <__hi0bits>
   45154:	00c00804 	movi	r3,32
   45158:	1885c83a 	sub	r2,r3,r2
   4515c:	003e9706 	br	44bbc <_dtoa_r+0xaa4>
   45160:	00800174 	movhi	r2,5
   45164:	e7051004 	addi	fp,fp,5184
   45168:	108510c4 	addi	r2,r2,5187
   4516c:	003db106 	br	44834 <_dtoa_r+0x71c>
   45170:	00800044 	movi	r2,1
   45174:	d8800715 	stw	r2,28(sp)
   45178:	003f4006 	br	44e7c <_dtoa_r+0xd64>
   4517c:	00800044 	movi	r2,1
   45180:	04800044 	movi	r18,1
   45184:	d8801f15 	stw	r2,124(sp)
   45188:	003e6306 	br	44b18 <_dtoa_r+0xa00>
   4518c:	d8800217 	ldw	r2,8(sp)
   45190:	103e891e 	bne	r2,zero,44bb8 <_dtoa_r+0xaa0>
   45194:	00800434 	movhi	r2,16
   45198:	10bfffc4 	addi	r2,r2,-1
   4519c:	a884703a 	and	r2,r21,r2
   451a0:	103e851e 	bne	r2,zero,44bb8 <_dtoa_r+0xaa0>
   451a4:	a89ffc2c 	andhi	r2,r21,32752
   451a8:	10017c26 	beq	r2,zero,4579c <_dtoa_r+0x1684>
   451ac:	d8800517 	ldw	r2,20(sp)
   451b0:	10800044 	addi	r2,r2,1
   451b4:	d8800515 	stw	r2,20(sp)
   451b8:	d8800417 	ldw	r2,16(sp)
   451bc:	10800044 	addi	r2,r2,1
   451c0:	d8800415 	stw	r2,16(sp)
   451c4:	00800044 	movi	r2,1
   451c8:	b001761e 	bne	r22,zero,457a4 <_dtoa_r+0x168c>
   451cc:	102d883a 	mov	r22,r2
   451d0:	003e7906 	br	44bb8 <_dtoa_r+0xaa0>
   451d4:	18c00120 	cmpeqi	r3,r3,4
   451d8:	183e881e 	bne	r3,zero,44bfc <_dtoa_r+0xae4>
   451dc:	00c00f04 	movi	r3,60
   451e0:	1885c83a 	sub	r2,r3,r2
   451e4:	003f1206 	br	44e30 <_dtoa_r+0xd18>
   451e8:	880b883a 	mov	r5,r17
   451ec:	980d883a 	mov	r6,r19
   451f0:	8009883a 	mov	r4,r16
   451f4:	00480000 	call	48000 <__lshift>
   451f8:	1023883a 	mov	r17,r2
   451fc:	003f3406 	br	44ed0 <_dtoa_r+0xdb8>
   45200:	1805883a 	mov	r2,r3
   45204:	003e5306 	br	44b54 <_dtoa_r+0xa3c>
   45208:	d8800317 	ldw	r2,12(sp)
   4520c:	d8c00517 	ldw	r3,20(sp)
   45210:	dd000315 	stw	r20,12(sp)
   45214:	a085c83a 	sub	r2,r20,r2
   45218:	b0ad883a 	add	r22,r22,r2
   4521c:	d8800417 	ldw	r2,16(sp)
   45220:	1827883a 	mov	r19,r3
   45224:	0029883a 	mov	r20,zero
   45228:	1485883a 	add	r2,r2,r18
   4522c:	d8800415 	stw	r2,16(sp)
   45230:	1c85883a 	add	r2,r3,r18
   45234:	d8800515 	stw	r2,20(sp)
   45238:	01400044 	movi	r5,1
   4523c:	8009883a 	mov	r4,r16
   45240:	0047bbc0 	call	47bbc <__i2b>
   45244:	1023883a 	mov	r17,r2
   45248:	003e3d06 	br	44b40 <_dtoa_r+0xa28>
   4524c:	d8800217 	ldw	r2,8(sp)
   45250:	103fb81e 	bne	r2,zero,45134 <_dtoa_r+0x101c>
   45254:	00800434 	movhi	r2,16
   45258:	10bfffc4 	addi	r2,r2,-1
   4525c:	a884703a 	and	r2,r21,r2
   45260:	103fb41e 	bne	r2,zero,45134 <_dtoa_r+0x101c>
   45264:	003fcf06 	br	451a4 <_dtoa_r+0x108c>
   45268:	d9000217 	ldw	r4,8(sp)
   4526c:	a80b883a 	mov	r5,r21
   45270:	04c00084 	movi	r19,2
   45274:	003c9506 	br	444cc <_dtoa_r+0x3b4>
   45278:	00800084 	movi	r2,2
   4527c:	d8800115 	stw	r2,4(sp)
   45280:	d8000715 	stw	zero,28(sp)
   45284:	003efd06 	br	44e7c <_dtoa_r+0xd64>
   45288:	103f691e 	bne	r2,zero,45030 <_dtoa_r+0xf18>
   4528c:	a080004c 	andi	r2,r20,1
   45290:	103f641e 	bne	r2,zero,45024 <_dtoa_r+0xf0c>
   45294:	003f6606 	br	45030 <_dtoa_r+0xf18>
   45298:	e029883a 	mov	r20,fp
   4529c:	a0800e60 	cmpeqi	r2,r20,57
   452a0:	df000817 	ldw	fp,32(sp)
   452a4:	10012f1e 	bne	r2,zero,45764 <_dtoa_r+0x164c>
   452a8:	04bf6016 	blt	zero,r18,4502c <_dtoa_r+0xf14>
   452ac:	003f6006 	br	45030 <_dtoa_r+0xf18>
   452b0:	04400044 	movi	r17,1
   452b4:	d8000715 	stw	zero,28(sp)
   452b8:	003c5006 	br	443fc <_dtoa_r+0x2e4>
   452bc:	1000021e 	bne	r2,zero,452c8 <_dtoa_r+0x11b0>
   452c0:	a0c0004c 	andi	r3,r20,1
   452c4:	183e821e 	bne	r3,zero,44cd0 <_dtoa_r+0xbb8>
   452c8:	90bfffc7 	ldb	r2,-1(r18)
   452cc:	9011883a 	mov	r8,r18
   452d0:	94bfffc4 	addi	r18,r18,-1
   452d4:	10800c20 	cmpeqi	r2,r2,48
   452d8:	103ffb1e 	bne	r2,zero,452c8 <_dtoa_r+0x11b0>
   452dc:	003e8606 	br	44cf8 <_dtoa_r+0xbe0>
   452e0:	d8c00917 	ldw	r3,36(sp)
   452e4:	18009526 	beq	r3,zero,4553c <_dtoa_r+0x1424>
   452e8:	d8c00517 	ldw	r3,20(sp)
   452ec:	d9000417 	ldw	r4,16(sp)
   452f0:	10810cc4 	addi	r2,r2,1075
   452f4:	dd000317 	ldw	r20,12(sp)
   452f8:	2089883a 	add	r4,r4,r2
   452fc:	1885883a 	add	r2,r3,r2
   45300:	1827883a 	mov	r19,r3
   45304:	d9000415 	stw	r4,16(sp)
   45308:	d8800515 	stw	r2,20(sp)
   4530c:	003fca06 	br	45238 <_dtoa_r+0x1120>
   45310:	00800c44 	movi	r2,49
   45314:	e0800005 	stb	r2,0(fp)
   45318:	ad400044 	addi	r21,r21,1
   4531c:	003e7606 	br	44cf8 <_dtoa_r+0xbe0>
   45320:	00800044 	movi	r2,1
   45324:	1505c83a 	sub	r2,r2,r20
   45328:	d8800515 	stw	r2,20(sp)
   4532c:	d8000415 	stw	zero,16(sp)
   45330:	d8000815 	stw	zero,32(sp)
   45334:	003dea06 	br	44ae0 <_dtoa_r+0x9c8>
   45338:	d8800617 	ldw	r2,24(sp)
   4533c:	1000e326 	beq	r2,zero,456cc <_dtoa_r+0x15b4>
   45340:	0091c83a 	sub	r8,zero,r2
   45344:	408003cc 	andi	r2,r8,15
   45348:	100490fa 	slli	r2,r2,3
   4534c:	02c00174 	movhi	r11,5
   45350:	5ac54b04 	addi	r11,r11,5420
   45354:	5885883a 	add	r2,r11,r2
   45358:	4011d13a 	srai	r8,r8,4
   4535c:	11800017 	ldw	r6,0(r2)
   45360:	11c00117 	ldw	r7,4(r2)
   45364:	d9000217 	ldw	r4,8(sp)
   45368:	a80b883a 	mov	r5,r21
   4536c:	da000b15 	stw	r8,44(sp)
   45370:	004d5bc0 	call	4d5bc <__muldf3>
   45374:	da000b17 	ldw	r8,44(sp)
   45378:	40013726 	beq	r8,zero,45858 <_dtoa_r+0x1740>
   4537c:	02400174 	movhi	r9,5
   45380:	000b883a 	mov	r5,zero
   45384:	04c00084 	movi	r19,2
   45388:	4a454104 	addi	r9,r9,5380
   4538c:	dc800b15 	stw	r18,44(sp)
   45390:	1009883a 	mov	r4,r2
   45394:	9825883a 	mov	r18,r19
   45398:	d8800c15 	stw	r2,48(sp)
   4539c:	8027883a 	mov	r19,r16
   453a0:	2805883a 	mov	r2,r5
   453a4:	1829883a 	mov	r20,r3
   453a8:	4021883a 	mov	r16,r8
   453ac:	4823883a 	mov	r17,r9
   453b0:	180b883a 	mov	r5,r3
   453b4:	8180004c 	andi	r6,r16,1
   453b8:	30000726 	beq	r6,zero,453d8 <_dtoa_r+0x12c0>
   453bc:	89800017 	ldw	r6,0(r17)
   453c0:	89c00117 	ldw	r7,4(r17)
   453c4:	94800044 	addi	r18,r18,1
   453c8:	004d5bc0 	call	4d5bc <__muldf3>
   453cc:	1009883a 	mov	r4,r2
   453d0:	180b883a 	mov	r5,r3
   453d4:	00800044 	movi	r2,1
   453d8:	8021d07a 	srai	r16,r16,1
   453dc:	8c400204 	addi	r17,r17,8
   453e0:	803ff41e 	bne	r16,zero,453b4 <_dtoa_r+0x129c>
   453e4:	a007883a 	mov	r3,r20
   453e8:	2829883a 	mov	r20,r5
   453ec:	100b883a 	mov	r5,r2
   453f0:	29403fcc 	andi	r5,r5,255
   453f4:	9821883a 	mov	r16,r19
   453f8:	d8800c17 	ldw	r2,48(sp)
   453fc:	9027883a 	mov	r19,r18
   45400:	2023883a 	mov	r17,r4
   45404:	dc800b17 	ldw	r18,44(sp)
   45408:	283c521e 	bne	r5,zero,44554 <_dtoa_r+0x43c>
   4540c:	1023883a 	mov	r17,r2
   45410:	1829883a 	mov	r20,r3
   45414:	003c4f06 	br	44554 <_dtoa_r+0x43c>
   45418:	e011883a 	mov	r8,fp
   4541c:	003d5806 	br	44980 <_dtoa_r+0x868>
   45420:	8023883a 	mov	r17,r16
   45424:	ddc00217 	ldw	r23,8(sp)
   45428:	dc000417 	ldw	r16,16(sp)
   4542c:	200d883a 	mov	r6,r4
   45430:	280f883a 	mov	r7,r5
   45434:	004c1e80 	call	4c1e8 <__adddf3>
   45438:	1009883a 	mov	r4,r2
   4543c:	d9800117 	ldw	r6,4(sp)
   45440:	d9c00317 	ldw	r7,12(sp)
   45444:	1029883a 	mov	r20,r2
   45448:	d8800617 	ldw	r2,24(sp)
   4544c:	180b883a 	mov	r5,r3
   45450:	1825883a 	mov	r18,r3
   45454:	15400044 	addi	r21,r2,1
   45458:	004d3c80 	call	4d3c8 <__gedf2>
   4545c:	a82d883a 	mov	r22,r21
   45460:	00bcd016 	blt	zero,r2,447a4 <_dtoa_r+0x68c>
   45464:	d9800117 	ldw	r6,4(sp)
   45468:	d9c00317 	ldw	r7,12(sp)
   4546c:	a009883a 	mov	r4,r20
   45470:	900b883a 	mov	r5,r18
   45474:	004d3340 	call	4d334 <__eqdf2>
   45478:	1000021e 	bne	r2,zero,45484 <_dtoa_r+0x136c>
   4547c:	8880004c 	andi	r2,r17,1
   45480:	103cc81e 	bne	r2,zero,447a4 <_dtoa_r+0x68c>
   45484:	9811883a 	mov	r8,r19
   45488:	003e2c06 	br	44d3c <_dtoa_r+0xc24>
   4548c:	89400117 	ldw	r5,4(r17)
   45490:	8009883a 	mov	r4,r16
   45494:	00477680 	call	47768 <_Balloc>
   45498:	1027883a 	mov	r19,r2
   4549c:	1000f226 	beq	r2,zero,45868 <_dtoa_r+0x1750>
   454a0:	89800417 	ldw	r6,16(r17)
   454a4:	89400304 	addi	r5,r17,12
   454a8:	11000304 	addi	r4,r2,12
   454ac:	31800084 	addi	r6,r6,2
   454b0:	300c90ba 	slli	r6,r6,2
   454b4:	00474480 	call	47448 <memcpy>
   454b8:	980b883a 	mov	r5,r19
   454bc:	01800044 	movi	r6,1
   454c0:	8009883a 	mov	r4,r16
   454c4:	00480000 	call	48000 <__lshift>
   454c8:	1027883a 	mov	r19,r2
   454cc:	003e8206 	br	44ed8 <_dtoa_r+0xdc0>
   454d0:	d8800617 	ldw	r2,24(sp)
   454d4:	e029883a 	mov	r20,fp
   454d8:	dc400215 	stw	r17,8(sp)
   454dc:	df000817 	ldw	fp,32(sp)
   454e0:	15400044 	addi	r21,r2,1
   454e4:	9823883a 	mov	r17,r19
   454e8:	003dee06 	br	44ca4 <_dtoa_r+0xb8c>
   454ec:	880b883a 	mov	r5,r17
   454f0:	a00d883a 	mov	r6,r20
   454f4:	8009883a 	mov	r4,r16
   454f8:	0047ec00 	call	47ec0 <__pow5mult>
   454fc:	b80d883a 	mov	r6,r23
   45500:	100b883a 	mov	r5,r2
   45504:	8009883a 	mov	r4,r16
   45508:	1023883a 	mov	r17,r2
   4550c:	0047c6c0 	call	47c6c <__multiply>
   45510:	d8800915 	stw	r2,36(sp)
   45514:	d8800317 	ldw	r2,12(sp)
   45518:	b80b883a 	mov	r5,r23
   4551c:	8009883a 	mov	r4,r16
   45520:	1529c83a 	sub	r20,r2,r20
   45524:	dd000315 	stw	r20,12(sp)
   45528:	004780c0 	call	4780c <_Bfree>
   4552c:	d8800917 	ldw	r2,36(sp)
   45530:	102f883a 	mov	r23,r2
   45534:	a03d9826 	beq	r20,zero,44b98 <_dtoa_r+0xa80>
   45538:	003d9206 	br	44b84 <_dtoa_r+0xa6c>
   4553c:	d8c01317 	ldw	r3,76(sp)
   45540:	00800d84 	movi	r2,54
   45544:	d9000517 	ldw	r4,20(sp)
   45548:	10c5c83a 	sub	r2,r2,r3
   4554c:	d8c00417 	ldw	r3,16(sp)
   45550:	dd000317 	ldw	r20,12(sp)
   45554:	2027883a 	mov	r19,r4
   45558:	1887883a 	add	r3,r3,r2
   4555c:	2085883a 	add	r2,r4,r2
   45560:	d8c00415 	stw	r3,16(sp)
   45564:	d8800515 	stw	r2,20(sp)
   45568:	003f3306 	br	45238 <_dtoa_r+0x1120>
   4556c:	d9000b17 	ldw	r4,44(sp)
   45570:	d9800f17 	ldw	r6,60(sp)
   45574:	d9c01017 	ldw	r7,64(sp)
   45578:	980b883a 	mov	r5,r19
   4557c:	dac01215 	stw	r11,72(sp)
   45580:	da000d15 	stw	r8,52(sp)
   45584:	004d5bc0 	call	4d5bc <__muldf3>
   45588:	d9000e17 	ldw	r4,56(sp)
   4558c:	d9400c17 	ldw	r5,48(sp)
   45590:	d8800715 	stw	r2,28(sp)
   45594:	e1000005 	stb	r4,0(fp)
   45598:	d8c00915 	stw	r3,36(sp)
   4559c:	29000058 	cmpnei	r4,r5,1
   455a0:	da000d17 	ldw	r8,52(sp)
   455a4:	dac01217 	ldw	r11,72(sp)
   455a8:	e167883a 	add	r19,fp,r5
   455ac:	2000a126 	beq	r4,zero,45834 <_dtoa_r+0x171c>
   455b0:	dc000c15 	stw	r16,48(sp)
   455b4:	dc800b15 	stw	r18,44(sp)
   455b8:	4021883a 	mov	r16,r8
   455bc:	a009883a 	mov	r4,r20
   455c0:	880b883a 	mov	r5,r17
   455c4:	dac00d15 	stw	r11,52(sp)
   455c8:	000d883a 	mov	r6,zero
   455cc:	01d00934 	movhi	r7,16420
   455d0:	004d5bc0 	call	4d5bc <__muldf3>
   455d4:	180b883a 	mov	r5,r3
   455d8:	1009883a 	mov	r4,r2
   455dc:	1825883a 	mov	r18,r3
   455e0:	1029883a 	mov	r20,r2
   455e4:	004e6840 	call	4e684 <__fixdfsi>
   455e8:	1009883a 	mov	r4,r2
   455ec:	1023883a 	mov	r17,r2
   455f0:	004e7040 	call	4e704 <__floatsidf>
   455f4:	a009883a 	mov	r4,r20
   455f8:	900b883a 	mov	r5,r18
   455fc:	100d883a 	mov	r6,r2
   45600:	180f883a 	mov	r7,r3
   45604:	84000044 	addi	r16,r16,1
   45608:	8c400c04 	addi	r17,r17,48
   4560c:	004dc940 	call	4dc94 <__subdf3>
   45610:	847fffc5 	stb	r17,-1(r16)
   45614:	1009883a 	mov	r4,r2
   45618:	180b883a 	mov	r5,r3
   4561c:	9c3fea1e 	bne	r19,r16,455c8 <_dtoa_r+0x14b0>
   45620:	dc800b17 	ldw	r18,44(sp)
   45624:	dc000c17 	ldw	r16,48(sp)
   45628:	dac00d17 	ldw	r11,52(sp)
   4562c:	1029883a 	mov	r20,r2
   45630:	1823883a 	mov	r17,r3
   45634:	d9000717 	ldw	r4,28(sp)
   45638:	d9400917 	ldw	r5,36(sp)
   4563c:	000d883a 	mov	r6,zero
   45640:	01cff834 	movhi	r7,16352
   45644:	dac00b15 	stw	r11,44(sp)
   45648:	004c1e80 	call	4c1e8 <__adddf3>
   4564c:	100d883a 	mov	r6,r2
   45650:	180f883a 	mov	r7,r3
   45654:	a009883a 	mov	r4,r20
   45658:	880b883a 	mov	r5,r17
   4565c:	004d3c80 	call	4d3c8 <__gedf2>
   45660:	00805916 	blt	zero,r2,457c8 <_dtoa_r+0x16b0>
   45664:	d9800717 	ldw	r6,28(sp)
   45668:	d9c00917 	ldw	r7,36(sp)
   4566c:	0009883a 	mov	r4,zero
   45670:	014ff834 	movhi	r5,16352
   45674:	004dc940 	call	4dc94 <__subdf3>
   45678:	100d883a 	mov	r6,r2
   4567c:	180f883a 	mov	r7,r3
   45680:	a009883a 	mov	r4,r20
   45684:	880b883a 	mov	r5,r17
   45688:	004d4c40 	call	4d4c4 <__ledf2>
   4568c:	dac00b17 	ldw	r11,44(sp)
   45690:	10000616 	blt	r2,zero,456ac <_dtoa_r+0x1594>
   45694:	d8801417 	ldw	r2,80(sp)
   45698:	103d2516 	blt	r2,zero,44b30 <_dtoa_r+0xa18>
   4569c:	d8800617 	ldw	r2,24(sp)
   456a0:	108003c8 	cmpgei	r2,r2,15
   456a4:	103d221e 	bne	r2,zero,44b30 <_dtoa_r+0xa18>
   456a8:	003c9c06 	br	4491c <_dtoa_r+0x804>
   456ac:	98bfffc7 	ldb	r2,-1(r19)
   456b0:	9811883a 	mov	r8,r19
   456b4:	9cffffc4 	addi	r19,r19,-1
   456b8:	10800c20 	cmpeqi	r2,r2,48
   456bc:	103ffb1e 	bne	r2,zero,456ac <_dtoa_r+0x1594>
   456c0:	d8801117 	ldw	r2,68(sp)
   456c4:	15400044 	addi	r21,r2,1
   456c8:	003d9c06 	br	44d3c <_dtoa_r+0xc24>
   456cc:	dc400217 	ldw	r17,8(sp)
   456d0:	a829883a 	mov	r20,r21
   456d4:	04c00084 	movi	r19,2
   456d8:	003b9e06 	br	44554 <_dtoa_r+0x43c>
   456dc:	903c6626 	beq	r18,zero,44878 <_dtoa_r+0x760>
   456e0:	d8800a17 	ldw	r2,40(sp)
   456e4:	00bc860e 	bge	zero,r2,44900 <_dtoa_r+0x7e8>
   456e8:	a00b883a 	mov	r5,r20
   456ec:	8809883a 	mov	r4,r17
   456f0:	000d883a 	mov	r6,zero
   456f4:	01d00934 	movhi	r7,16420
   456f8:	004d5bc0 	call	4d5bc <__muldf3>
   456fc:	99000044 	addi	r4,r19,1
   45700:	1023883a 	mov	r17,r2
   45704:	1829883a 	mov	r20,r3
   45708:	004e7040 	call	4e704 <__floatsidf>
   4570c:	880d883a 	mov	r6,r17
   45710:	a00f883a 	mov	r7,r20
   45714:	1009883a 	mov	r4,r2
   45718:	180b883a 	mov	r5,r3
   4571c:	004d5bc0 	call	4d5bc <__muldf3>
   45720:	1009883a 	mov	r4,r2
   45724:	000d883a 	mov	r6,zero
   45728:	01d00734 	movhi	r7,16412
   4572c:	180b883a 	mov	r5,r3
   45730:	004c1e80 	call	4c1e8 <__adddf3>
   45734:	d9000617 	ldw	r4,24(sp)
   45738:	d8800b15 	stw	r2,44(sp)
   4573c:	00bf3034 	movhi	r2,64704
   45740:	18a7883a 	add	r19,r3,r2
   45744:	d8800a17 	ldw	r2,40(sp)
   45748:	213fffc4 	addi	r4,r4,-1
   4574c:	d9001115 	stw	r4,68(sp)
   45750:	d8800c15 	stw	r2,48(sp)
   45754:	003b9a06 	br	445c0 <_dtoa_r+0x4a8>
   45758:	00c00c44 	movi	r3,49
   4575c:	b5800044 	addi	r22,r22,1
   45760:	003c1906 	br	447c8 <_dtoa_r+0x6b0>
   45764:	00800e44 	movi	r2,57
   45768:	b0800005 	stb	r2,0(r22)
   4576c:	d8800617 	ldw	r2,24(sp)
   45770:	dc400215 	stw	r17,8(sp)
   45774:	b4800044 	addi	r18,r22,1
   45778:	15400044 	addi	r21,r2,1
   4577c:	9823883a 	mov	r17,r19
   45780:	003d5306 	br	44cd0 <_dtoa_r+0xbb8>
   45784:	d8000315 	stw	zero,12(sp)
   45788:	0023883a 	mov	r17,zero
   4578c:	003e5406 	br	450e0 <_dtoa_r+0xfc8>
   45790:	e029883a 	mov	r20,fp
   45794:	df000817 	ldw	fp,32(sp)
   45798:	003e2506 	br	45030 <_dtoa_r+0xf18>
   4579c:	0005883a 	mov	r2,zero
   457a0:	003e8906 	br	451c8 <_dtoa_r+0x10b0>
   457a4:	102d883a 	mov	r22,r2
   457a8:	003e6306 	br	45138 <_dtoa_r+0x1020>
   457ac:	d8c00417 	ldw	r3,16(sp)
   457b0:	1027883a 	mov	r19,r2
   457b4:	1485883a 	add	r2,r2,r18
   457b8:	1c87883a 	add	r3,r3,r18
   457bc:	d8c00415 	stw	r3,16(sp)
   457c0:	d8800515 	stw	r2,20(sp)
   457c4:	003e9c06 	br	45238 <_dtoa_r+0x1120>
   457c8:	d8801117 	ldw	r2,68(sp)
   457cc:	15800044 	addi	r22,r2,1
   457d0:	003bf406 	br	447a4 <_dtoa_r+0x68c>
   457d4:	ddc00b17 	ldw	r23,44(sp)
   457d8:	dc000c17 	ldw	r16,48(sp)
   457dc:	b011883a 	mov	r8,r22
   457e0:	003fb706 	br	456c0 <_dtoa_r+0x15a8>
   457e4:	dc800d17 	ldw	r18,52(sp)
   457e8:	dd800e17 	ldw	r22,56(sp)
   457ec:	ddc00b17 	ldw	r23,44(sp)
   457f0:	dc000c17 	ldw	r16,48(sp)
   457f4:	dd400f17 	ldw	r21,60(sp)
   457f8:	003c4106 	br	44900 <_dtoa_r+0x7e8>
   457fc:	d8800117 	ldw	r2,4(sp)
   45800:	108000c8 	cmpgei	r2,r2,3
   45804:	1000081e 	bne	r2,zero,45828 <_dtoa_r+0x1710>
   45808:	d9400317 	ldw	r5,12(sp)
   4580c:	b809883a 	mov	r4,r23
   45810:	0043f1c0 	call	43f1c <quorem>
   45814:	15000c04 	addi	r20,r2,48
   45818:	dd400617 	ldw	r21,24(sp)
   4581c:	dc800a17 	ldw	r18,40(sp)
   45820:	e5000005 	stb	r20,0(fp)
   45824:	003d1b06 	br	44c94 <_dtoa_r+0xb7c>
   45828:	dc800a17 	ldw	r18,40(sp)
   4582c:	dd400615 	stw	r21,24(sp)
   45830:	003e2006 	br	450b4 <_dtoa_r+0xf9c>
   45834:	4027883a 	mov	r19,r8
   45838:	003f7e06 	br	45634 <_dtoa_r+0x151c>
   4583c:	d8800117 	ldw	r2,4(sp)
   45840:	108000c8 	cmpgei	r2,r2,3
   45844:	103ff81e 	bne	r2,zero,45828 <_dtoa_r+0x1710>
   45848:	dd400615 	stw	r21,24(sp)
   4584c:	dc800a17 	ldw	r18,40(sp)
   45850:	04fd9f0e 	bge	zero,r19,44ed0 <_dtoa_r+0xdb8>
   45854:	003e6406 	br	451e8 <_dtoa_r+0x10d0>
   45858:	1023883a 	mov	r17,r2
   4585c:	1829883a 	mov	r20,r3
   45860:	04c00084 	movi	r19,2
   45864:	003b3b06 	br	44554 <_dtoa_r+0x43c>
   45868:	01c00174 	movhi	r7,5
   4586c:	01000174 	movhi	r4,5
   45870:	39c51104 	addi	r7,r7,5188
   45874:	000d883a 	mov	r6,zero
   45878:	0140ba84 	movi	r5,746
   4587c:	21051604 	addi	r4,r4,5208
   45880:	004a5600 	call	4a560 <__assert_func>
   45884:	01c00174 	movhi	r7,5
   45888:	01000174 	movhi	r4,5
   4588c:	39c51104 	addi	r7,r7,5188
   45890:	000d883a 	mov	r6,zero
   45894:	01406a84 	movi	r5,426
   45898:	21051604 	addi	r4,r4,5208
   4589c:	004a5600 	call	4a560 <__assert_func>
   458a0:	e7050d04 	addi	fp,fp,5172
   458a4:	003a4d06 	br	441dc <_dtoa_r+0xc4>
   458a8:	80001115 	stw	zero,68(r16)
   458ac:	000b883a 	mov	r5,zero
   458b0:	8009883a 	mov	r4,r16
   458b4:	00477680 	call	47768 <_Balloc>
   458b8:	1039883a 	mov	fp,r2
   458bc:	103ff126 	beq	r2,zero,45884 <_dtoa_r+0x176c>
   458c0:	80801015 	stw	r2,64(r16)
   458c4:	00bfffc4 	movi	r2,-1
   458c8:	d8800a15 	stw	r2,40(sp)
   458cc:	00800044 	movi	r2,1
   458d0:	04bfffc4 	movi	r18,-1
   458d4:	d8800715 	stw	r2,28(sp)
   458d8:	d8001f15 	stw	zero,124(sp)
   458dc:	003c0806 	br	44900 <_dtoa_r+0x7e8>
   458e0:	80001115 	stw	zero,68(r16)
   458e4:	000b883a 	mov	r5,zero
   458e8:	003ad506 	br	44440 <_dtoa_r+0x328>
   458ec:	a005883a 	mov	r2,r20
   458f0:	e029883a 	mov	r20,fp
   458f4:	df000817 	ldw	fp,32(sp)
   458f8:	00bdcd0e 	bge	zero,r2,45030 <_dtoa_r+0xf18>
   458fc:	003dc006 	br	45000 <_dtoa_r+0xee8>

00045900 <__sflush_r>:
   45900:	2880030b 	ldhu	r2,12(r5)
   45904:	defffb04 	addi	sp,sp,-20
   45908:	dcc00315 	stw	r19,12(sp)
   4590c:	dc000015 	stw	r16,0(sp)
   45910:	dfc00415 	stw	ra,16(sp)
   45914:	dc800215 	stw	r18,8(sp)
   45918:	dc400115 	stw	r17,4(sp)
   4591c:	10c0020c 	andi	r3,r2,8
   45920:	2821883a 	mov	r16,r5
   45924:	2027883a 	mov	r19,r4
   45928:	18003c1e 	bne	r3,zero,45a1c <__sflush_r+0x11c>
   4592c:	29000117 	ldw	r4,4(r5)
   45930:	10c20014 	ori	r3,r2,2048
   45934:	28c0030d 	sth	r3,12(r5)
   45938:	0100580e 	bge	zero,r4,45a9c <__sflush_r+0x19c>
   4593c:	82000a17 	ldw	r8,40(r16)
   45940:	40003426 	beq	r8,zero,45a14 <__sflush_r+0x114>
   45944:	9c400017 	ldw	r17,0(r19)
   45948:	1084000c 	andi	r2,r2,4096
   4594c:	98000015 	stw	zero,0(r19)
   45950:	81400717 	ldw	r5,28(r16)
   45954:	1000561e 	bne	r2,zero,45ab0 <__sflush_r+0x1b0>
   45958:	000d883a 	mov	r6,zero
   4595c:	01c00044 	movi	r7,1
   45960:	9809883a 	mov	r4,r19
   45964:	403ee83a 	callr	r8
   45968:	100d883a 	mov	r6,r2
   4596c:	10bfffd8 	cmpnei	r2,r2,-1
   45970:	10005b26 	beq	r2,zero,45ae0 <__sflush_r+0x1e0>
   45974:	80c0030b 	ldhu	r3,12(r16)
   45978:	82000a17 	ldw	r8,40(r16)
   4597c:	18c0010c 	andi	r3,r3,4
   45980:	18000626 	beq	r3,zero,4599c <__sflush_r+0x9c>
   45984:	80c00117 	ldw	r3,4(r16)
   45988:	80800c17 	ldw	r2,48(r16)
   4598c:	30cdc83a 	sub	r6,r6,r3
   45990:	10000226 	beq	r2,zero,4599c <__sflush_r+0x9c>
   45994:	80800f17 	ldw	r2,60(r16)
   45998:	308dc83a 	sub	r6,r6,r2
   4599c:	81400717 	ldw	r5,28(r16)
   459a0:	000f883a 	mov	r7,zero
   459a4:	9809883a 	mov	r4,r19
   459a8:	403ee83a 	callr	r8
   459ac:	10ffffd8 	cmpnei	r3,r2,-1
   459b0:	1800411e 	bne	r3,zero,45ab8 <__sflush_r+0x1b8>
   459b4:	99400017 	ldw	r5,0(r19)
   459b8:	28c007b0 	cmpltui	r3,r5,30
   459bc:	18002c26 	beq	r3,zero,45a70 <__sflush_r+0x170>
   459c0:	00f7f034 	movhi	r3,57280
   459c4:	18ffff84 	addi	r3,r3,-2
   459c8:	1949d83a 	sra	r4,r3,r5
   459cc:	80c0030b 	ldhu	r3,12(r16)
   459d0:	2100004c 	andi	r4,r4,1
   459d4:	2000271e 	bne	r4,zero,45a74 <__sflush_r+0x174>
   459d8:	81000417 	ldw	r4,16(r16)
   459dc:	19bdffcc 	andi	r6,r3,63487
   459e0:	8180030d 	sth	r6,12(r16)
   459e4:	80000115 	stw	zero,4(r16)
   459e8:	81000015 	stw	r4,0(r16)
   459ec:	18c4000c 	andi	r3,r3,4096
   459f0:	1800431e 	bne	r3,zero,45b00 <__sflush_r+0x200>
   459f4:	81400c17 	ldw	r5,48(r16)
   459f8:	9c400015 	stw	r17,0(r19)
   459fc:	28000526 	beq	r5,zero,45a14 <__sflush_r+0x114>
   45a00:	80801004 	addi	r2,r16,64
   45a04:	28800226 	beq	r5,r2,45a10 <__sflush_r+0x110>
   45a08:	9809883a 	mov	r4,r19
   45a0c:	004608c0 	call	4608c <_free_r>
   45a10:	80000c15 	stw	zero,48(r16)
   45a14:	0005883a 	mov	r2,zero
   45a18:	00001906 	br	45a80 <__sflush_r+0x180>
   45a1c:	2c800417 	ldw	r18,16(r5)
   45a20:	903ffc26 	beq	r18,zero,45a14 <__sflush_r+0x114>
   45a24:	2c400017 	ldw	r17,0(r5)
   45a28:	108000cc 	andi	r2,r2,3
   45a2c:	2c800015 	stw	r18,0(r5)
   45a30:	8ca3c83a 	sub	r17,r17,r18
   45a34:	10001c1e 	bne	r2,zero,45aa8 <__sflush_r+0x1a8>
   45a38:	28800517 	ldw	r2,20(r5)
   45a3c:	80800215 	stw	r2,8(r16)
   45a40:	04400316 	blt	zero,r17,45a50 <__sflush_r+0x150>
   45a44:	003ff306 	br	45a14 <__sflush_r+0x114>
   45a48:	90a5883a 	add	r18,r18,r2
   45a4c:	047ff10e 	bge	zero,r17,45a14 <__sflush_r+0x114>
   45a50:	80800917 	ldw	r2,36(r16)
   45a54:	81400717 	ldw	r5,28(r16)
   45a58:	880f883a 	mov	r7,r17
   45a5c:	900d883a 	mov	r6,r18
   45a60:	9809883a 	mov	r4,r19
   45a64:	103ee83a 	callr	r2
   45a68:	88a3c83a 	sub	r17,r17,r2
   45a6c:	00bff616 	blt	zero,r2,45a48 <__sflush_r+0x148>
   45a70:	80c0030b 	ldhu	r3,12(r16)
   45a74:	18c01014 	ori	r3,r3,64
   45a78:	80c0030d 	sth	r3,12(r16)
   45a7c:	00bfffc4 	movi	r2,-1
   45a80:	dfc00417 	ldw	ra,16(sp)
   45a84:	dcc00317 	ldw	r19,12(sp)
   45a88:	dc800217 	ldw	r18,8(sp)
   45a8c:	dc400117 	ldw	r17,4(sp)
   45a90:	dc000017 	ldw	r16,0(sp)
   45a94:	dec00504 	addi	sp,sp,20
   45a98:	f800283a 	ret
   45a9c:	29000f17 	ldw	r4,60(r5)
   45aa0:	013fa616 	blt	zero,r4,4593c <__sflush_r+0x3c>
   45aa4:	003fdb06 	br	45a14 <__sflush_r+0x114>
   45aa8:	0005883a 	mov	r2,zero
   45aac:	003fe306 	br	45a3c <__sflush_r+0x13c>
   45ab0:	81801417 	ldw	r6,80(r16)
   45ab4:	003fb106 	br	4597c <__sflush_r+0x7c>
   45ab8:	80c0030b 	ldhu	r3,12(r16)
   45abc:	81000417 	ldw	r4,16(r16)
   45ac0:	80000115 	stw	zero,4(r16)
   45ac4:	197dffcc 	andi	r5,r3,63487
   45ac8:	8140030d 	sth	r5,12(r16)
   45acc:	81000015 	stw	r4,0(r16)
   45ad0:	18c4000c 	andi	r3,r3,4096
   45ad4:	183fc726 	beq	r3,zero,459f4 <__sflush_r+0xf4>
   45ad8:	80801415 	stw	r2,80(r16)
   45adc:	003fc506 	br	459f4 <__sflush_r+0xf4>
   45ae0:	98800017 	ldw	r2,0(r19)
   45ae4:	103fa326 	beq	r2,zero,45974 <__sflush_r+0x74>
   45ae8:	10c00760 	cmpeqi	r3,r2,29
   45aec:	1800021e 	bne	r3,zero,45af8 <__sflush_r+0x1f8>
   45af0:	10800598 	cmpnei	r2,r2,22
   45af4:	103fde1e 	bne	r2,zero,45a70 <__sflush_r+0x170>
   45af8:	9c400015 	stw	r17,0(r19)
   45afc:	003fc506 	br	45a14 <__sflush_r+0x114>
   45b00:	283fbc1e 	bne	r5,zero,459f4 <__sflush_r+0xf4>
   45b04:	003ff406 	br	45ad8 <__sflush_r+0x1d8>

00045b08 <_fflush_r>:
   45b08:	defffd04 	addi	sp,sp,-12
   45b0c:	dc000115 	stw	r16,4(sp)
   45b10:	dfc00215 	stw	ra,8(sp)
   45b14:	2021883a 	mov	r16,r4
   45b18:	20000226 	beq	r4,zero,45b24 <_fflush_r+0x1c>
   45b1c:	20800e17 	ldw	r2,56(r4)
   45b20:	10000726 	beq	r2,zero,45b40 <_fflush_r+0x38>
   45b24:	2880030f 	ldh	r2,12(r5)
   45b28:	10000a1e 	bne	r2,zero,45b54 <_fflush_r+0x4c>
   45b2c:	0005883a 	mov	r2,zero
   45b30:	dfc00217 	ldw	ra,8(sp)
   45b34:	dc000117 	ldw	r16,4(sp)
   45b38:	dec00304 	addi	sp,sp,12
   45b3c:	f800283a 	ret
   45b40:	d9400015 	stw	r5,0(sp)
   45b44:	0045f200 	call	45f20 <__sinit>
   45b48:	d9400017 	ldw	r5,0(sp)
   45b4c:	2880030f 	ldh	r2,12(r5)
   45b50:	103ff626 	beq	r2,zero,45b2c <_fflush_r+0x24>
   45b54:	8009883a 	mov	r4,r16
   45b58:	dfc00217 	ldw	ra,8(sp)
   45b5c:	dc000117 	ldw	r16,4(sp)
   45b60:	dec00304 	addi	sp,sp,12
   45b64:	00459001 	jmpi	45900 <__sflush_r>

00045b68 <fflush>:
   45b68:	20001726 	beq	r4,zero,45bc8 <fflush+0x60>
   45b6c:	00800174 	movhi	r2,5
   45b70:	200b883a 	mov	r5,r4
   45b74:	110d3017 	ldw	r4,13504(r2)
   45b78:	20000226 	beq	r4,zero,45b84 <fflush+0x1c>
   45b7c:	20800e17 	ldw	r2,56(r4)
   45b80:	10000526 	beq	r2,zero,45b98 <fflush+0x30>
   45b84:	2880030f 	ldh	r2,12(r5)
   45b88:	1000021e 	bne	r2,zero,45b94 <fflush+0x2c>
   45b8c:	0005883a 	mov	r2,zero
   45b90:	f800283a 	ret
   45b94:	00459001 	jmpi	45900 <__sflush_r>
   45b98:	defffd04 	addi	sp,sp,-12
   45b9c:	d9400115 	stw	r5,4(sp)
   45ba0:	d9000015 	stw	r4,0(sp)
   45ba4:	dfc00215 	stw	ra,8(sp)
   45ba8:	0045f200 	call	45f20 <__sinit>
   45bac:	d9400117 	ldw	r5,4(sp)
   45bb0:	d9000017 	ldw	r4,0(sp)
   45bb4:	2880030f 	ldh	r2,12(r5)
   45bb8:	10000826 	beq	r2,zero,45bdc <fflush+0x74>
   45bbc:	dfc00217 	ldw	ra,8(sp)
   45bc0:	dec00304 	addi	sp,sp,12
   45bc4:	00459001 	jmpi	45900 <__sflush_r>
   45bc8:	00800174 	movhi	r2,5
   45bcc:	110d2f17 	ldw	r4,13500(r2)
   45bd0:	01400134 	movhi	r5,4
   45bd4:	2956c204 	addi	r5,r5,23304
   45bd8:	00468d01 	jmpi	468d0 <_fwalk_reent>
   45bdc:	0005883a 	mov	r2,zero
   45be0:	dfc00217 	ldw	ra,8(sp)
   45be4:	dec00304 	addi	sp,sp,12
   45be8:	f800283a 	ret

00045bec <__fp_lock>:
   45bec:	0005883a 	mov	r2,zero
   45bf0:	f800283a 	ret

00045bf4 <_cleanup_r>:
   45bf4:	01400174 	movhi	r5,5
   45bf8:	2969ca04 	addi	r5,r5,-22744
   45bfc:	00468d01 	jmpi	468d0 <_fwalk_reent>

00045c00 <__fp_unlock>:
   45c00:	0005883a 	mov	r2,zero
   45c04:	f800283a 	ret

00045c08 <__sinit.part.0>:
   45c08:	00c00134 	movhi	r3,4
   45c0c:	20800117 	ldw	r2,4(r4)
   45c10:	18d6fd04 	addi	r3,r3,23540
   45c14:	20c00f15 	stw	r3,60(r4)
   45c18:	2140bb04 	addi	r5,r4,748
   45c1c:	00c000c4 	movi	r3,3
   45c20:	20c0b915 	stw	r3,740(r4)
   45c24:	2140ba15 	stw	r5,744(r4)
   45c28:	2000b815 	stw	zero,736(r4)
   45c2c:	10001705 	stb	zero,92(r2)
   45c30:	10001745 	stb	zero,93(r2)
   45c34:	10001785 	stb	zero,94(r2)
   45c38:	100017c5 	stb	zero,95(r2)
   45c3c:	10001805 	stb	zero,96(r2)
   45c40:	10001845 	stb	zero,97(r2)
   45c44:	10001885 	stb	zero,98(r2)
   45c48:	100018c5 	stb	zero,99(r2)
   45c4c:	00c00104 	movi	r3,4
   45c50:	10c00315 	stw	r3,12(r2)
   45c54:	02000174 	movhi	r8,5
   45c58:	20c00217 	ldw	r3,8(r4)
   45c5c:	01c00174 	movhi	r7,5
   45c60:	01800174 	movhi	r6,5
   45c64:	01400174 	movhi	r5,5
   45c68:	4223c204 	addi	r8,r8,-28920
   45c6c:	39e3d904 	addi	r7,r7,-28828
   45c70:	31a3f904 	addi	r6,r6,-28700
   45c74:	29641004 	addi	r5,r5,-28608
   45c78:	02400074 	movhi	r9,1
   45c7c:	10000015 	stw	zero,0(r2)
   45c80:	10000115 	stw	zero,4(r2)
   45c84:	10000215 	stw	zero,8(r2)
   45c88:	10001915 	stw	zero,100(r2)
   45c8c:	10000415 	stw	zero,16(r2)
   45c90:	10000515 	stw	zero,20(r2)
   45c94:	10000615 	stw	zero,24(r2)
   45c98:	10800715 	stw	r2,28(r2)
   45c9c:	12000815 	stw	r8,32(r2)
   45ca0:	11c00915 	stw	r7,36(r2)
   45ca4:	11800a15 	stw	r6,40(r2)
   45ca8:	11400b15 	stw	r5,44(r2)
   45cac:	4a400284 	addi	r9,r9,10
   45cb0:	1a400315 	stw	r9,12(r3)
   45cb4:	18000015 	stw	zero,0(r3)
   45cb8:	18000115 	stw	zero,4(r3)
   45cbc:	18000215 	stw	zero,8(r3)
   45cc0:	18001915 	stw	zero,100(r3)
   45cc4:	18000415 	stw	zero,16(r3)
   45cc8:	18001705 	stb	zero,92(r3)
   45ccc:	18001745 	stb	zero,93(r3)
   45cd0:	18001785 	stb	zero,94(r3)
   45cd4:	180017c5 	stb	zero,95(r3)
   45cd8:	18001805 	stb	zero,96(r3)
   45cdc:	18001845 	stb	zero,97(r3)
   45ce0:	18001885 	stb	zero,98(r3)
   45ce4:	180018c5 	stb	zero,99(r3)
   45ce8:	20800317 	ldw	r2,12(r4)
   45cec:	024000b4 	movhi	r9,2
   45cf0:	18000515 	stw	zero,20(r3)
   45cf4:	18000615 	stw	zero,24(r3)
   45cf8:	18c00715 	stw	r3,28(r3)
   45cfc:	1a000815 	stw	r8,32(r3)
   45d00:	19c00915 	stw	r7,36(r3)
   45d04:	19800a15 	stw	r6,40(r3)
   45d08:	19400b15 	stw	r5,44(r3)
   45d0c:	4a400484 	addi	r9,r9,18
   45d10:	10000015 	stw	zero,0(r2)
   45d14:	10000115 	stw	zero,4(r2)
   45d18:	10000215 	stw	zero,8(r2)
   45d1c:	10001915 	stw	zero,100(r2)
   45d20:	12400315 	stw	r9,12(r2)
   45d24:	10000415 	stw	zero,16(r2)
   45d28:	10000515 	stw	zero,20(r2)
   45d2c:	10000615 	stw	zero,24(r2)
   45d30:	10001705 	stb	zero,92(r2)
   45d34:	10001745 	stb	zero,93(r2)
   45d38:	10001785 	stb	zero,94(r2)
   45d3c:	100017c5 	stb	zero,95(r2)
   45d40:	10001805 	stb	zero,96(r2)
   45d44:	10001845 	stb	zero,97(r2)
   45d48:	10001885 	stb	zero,98(r2)
   45d4c:	100018c5 	stb	zero,99(r2)
   45d50:	10800715 	stw	r2,28(r2)
   45d54:	12000815 	stw	r8,32(r2)
   45d58:	11c00915 	stw	r7,36(r2)
   45d5c:	11800a15 	stw	r6,40(r2)
   45d60:	11400b15 	stw	r5,44(r2)
   45d64:	00800044 	movi	r2,1
   45d68:	20800e15 	stw	r2,56(r4)
   45d6c:	f800283a 	ret

00045d70 <__sfmoreglue>:
   45d70:	defffc04 	addi	sp,sp,-16
   45d74:	dc400115 	stw	r17,4(sp)
   45d78:	2c7fffc4 	addi	r17,r5,-1
   45d7c:	8c401a24 	muli	r17,r17,104
   45d80:	dc800215 	stw	r18,8(sp)
   45d84:	2825883a 	mov	r18,r5
   45d88:	89401d04 	addi	r5,r17,116
   45d8c:	dc000015 	stw	r16,0(sp)
   45d90:	dfc00315 	stw	ra,12(sp)
   45d94:	0046bc40 	call	46bc4 <_malloc_r>
   45d98:	1021883a 	mov	r16,r2
   45d9c:	10000726 	beq	r2,zero,45dbc <__sfmoreglue+0x4c>
   45da0:	11000304 	addi	r4,r2,12
   45da4:	10000015 	stw	zero,0(r2)
   45da8:	14800115 	stw	r18,4(r2)
   45dac:	11000215 	stw	r4,8(r2)
   45db0:	89801a04 	addi	r6,r17,104
   45db4:	000b883a 	mov	r5,zero
   45db8:	00476700 	call	47670 <memset>
   45dbc:	8005883a 	mov	r2,r16
   45dc0:	dfc00317 	ldw	ra,12(sp)
   45dc4:	dc800217 	ldw	r18,8(sp)
   45dc8:	dc400117 	ldw	r17,4(sp)
   45dcc:	dc000017 	ldw	r16,0(sp)
   45dd0:	dec00404 	addi	sp,sp,16
   45dd4:	f800283a 	ret

00045dd8 <__sfp>:
   45dd8:	defffc04 	addi	sp,sp,-16
   45ddc:	00800174 	movhi	r2,5
   45de0:	dc400115 	stw	r17,4(sp)
   45de4:	144d2f17 	ldw	r17,13500(r2)
   45de8:	dc800215 	stw	r18,8(sp)
   45dec:	dfc00315 	stw	ra,12(sp)
   45df0:	88800e17 	ldw	r2,56(r17)
   45df4:	dc000015 	stw	r16,0(sp)
   45df8:	2025883a 	mov	r18,r4
   45dfc:	10002d26 	beq	r2,zero,45eb4 <__sfp+0xdc>
   45e00:	8c40b804 	addi	r17,r17,736
   45e04:	88800117 	ldw	r2,4(r17)
   45e08:	8c000217 	ldw	r16,8(r17)
   45e0c:	10bfffc4 	addi	r2,r2,-1
   45e10:	1000030e 	bge	r2,zero,45e20 <__sfp+0x48>
   45e14:	00002306 	br	45ea4 <__sfp+0xcc>
   45e18:	84001a04 	addi	r16,r16,104
   45e1c:	28002126 	beq	r5,zero,45ea4 <__sfp+0xcc>
   45e20:	80c0030f 	ldh	r3,12(r16)
   45e24:	10bfffc4 	addi	r2,r2,-1
   45e28:	117fffd8 	cmpnei	r5,r2,-1
   45e2c:	183ffa1e 	bne	r3,zero,45e18 <__sfp+0x40>
   45e30:	00bffff4 	movhi	r2,65535
   45e34:	10800044 	addi	r2,r2,1
   45e38:	80800315 	stw	r2,12(r16)
   45e3c:	80001915 	stw	zero,100(r16)
   45e40:	80000015 	stw	zero,0(r16)
   45e44:	80000215 	stw	zero,8(r16)
   45e48:	80000115 	stw	zero,4(r16)
   45e4c:	80000415 	stw	zero,16(r16)
   45e50:	80000515 	stw	zero,20(r16)
   45e54:	80000615 	stw	zero,24(r16)
   45e58:	80001705 	stb	zero,92(r16)
   45e5c:	80001745 	stb	zero,93(r16)
   45e60:	80001785 	stb	zero,94(r16)
   45e64:	800017c5 	stb	zero,95(r16)
   45e68:	80001805 	stb	zero,96(r16)
   45e6c:	80001845 	stb	zero,97(r16)
   45e70:	80001885 	stb	zero,98(r16)
   45e74:	800018c5 	stb	zero,99(r16)
   45e78:	80000c15 	stw	zero,48(r16)
   45e7c:	80000d15 	stw	zero,52(r16)
   45e80:	80001115 	stw	zero,68(r16)
   45e84:	80001215 	stw	zero,72(r16)
   45e88:	8005883a 	mov	r2,r16
   45e8c:	dfc00317 	ldw	ra,12(sp)
   45e90:	dc800217 	ldw	r18,8(sp)
   45e94:	dc400117 	ldw	r17,4(sp)
   45e98:	dc000017 	ldw	r16,0(sp)
   45e9c:	dec00404 	addi	sp,sp,16
   45ea0:	f800283a 	ret
   45ea4:	8c000017 	ldw	r16,0(r17)
   45ea8:	80000526 	beq	r16,zero,45ec0 <__sfp+0xe8>
   45eac:	8023883a 	mov	r17,r16
   45eb0:	003fd406 	br	45e04 <__sfp+0x2c>
   45eb4:	8809883a 	mov	r4,r17
   45eb8:	0045c080 	call	45c08 <__sinit.part.0>
   45ebc:	003fd006 	br	45e00 <__sfp+0x28>
   45ec0:	01406b04 	movi	r5,428
   45ec4:	9009883a 	mov	r4,r18
   45ec8:	0046bc40 	call	46bc4 <_malloc_r>
   45ecc:	1021883a 	mov	r16,r2
   45ed0:	10000a26 	beq	r2,zero,45efc <__sfp+0x124>
   45ed4:	10000015 	stw	zero,0(r2)
   45ed8:	11000304 	addi	r4,r2,12
   45edc:	00800104 	movi	r2,4
   45ee0:	80800115 	stw	r2,4(r16)
   45ee4:	81000215 	stw	r4,8(r16)
   45ee8:	01806804 	movi	r6,416
   45eec:	000b883a 	mov	r5,zero
   45ef0:	00476700 	call	47670 <memset>
   45ef4:	8c000015 	stw	r16,0(r17)
   45ef8:	003fec06 	br	45eac <__sfp+0xd4>
   45efc:	88000015 	stw	zero,0(r17)
   45f00:	00800304 	movi	r2,12
   45f04:	90800015 	stw	r2,0(r18)
   45f08:	003fdf06 	br	45e88 <__sfp+0xb0>

00045f0c <_cleanup>:
   45f0c:	00800174 	movhi	r2,5
   45f10:	110d2f17 	ldw	r4,13500(r2)
   45f14:	01400174 	movhi	r5,5
   45f18:	2969ca04 	addi	r5,r5,-22744
   45f1c:	00468d01 	jmpi	468d0 <_fwalk_reent>

00045f20 <__sinit>:
   45f20:	20800e17 	ldw	r2,56(r4)
   45f24:	10000126 	beq	r2,zero,45f2c <__sinit+0xc>
   45f28:	f800283a 	ret
   45f2c:	0045c081 	jmpi	45c08 <__sinit.part.0>

00045f30 <__sfp_lock_acquire>:
   45f30:	f800283a 	ret

00045f34 <__sfp_lock_release>:
   45f34:	f800283a 	ret

00045f38 <__sinit_lock_acquire>:
   45f38:	f800283a 	ret

00045f3c <__sinit_lock_release>:
   45f3c:	f800283a 	ret

00045f40 <__fp_lock_all>:
   45f40:	00800174 	movhi	r2,5
   45f44:	110d3017 	ldw	r4,13504(r2)
   45f48:	01400134 	movhi	r5,4
   45f4c:	2956fb04 	addi	r5,r5,23532
   45f50:	00468381 	jmpi	46838 <_fwalk>

00045f54 <__fp_unlock_all>:
   45f54:	00800174 	movhi	r2,5
   45f58:	110d3017 	ldw	r4,13504(r2)
   45f5c:	01400134 	movhi	r5,4
   45f60:	29570004 	addi	r5,r5,23552
   45f64:	00468381 	jmpi	46838 <_fwalk>

00045f68 <_malloc_trim_r>:
   45f68:	defffa04 	addi	sp,sp,-24
   45f6c:	dcc00315 	stw	r19,12(sp)
   45f70:	04c00174 	movhi	r19,5
   45f74:	dd000415 	stw	r20,16(sp)
   45f78:	dc800215 	stw	r18,8(sp)
   45f7c:	dc400115 	stw	r17,4(sp)
   45f80:	dc000015 	stw	r16,0(sp)
   45f84:	2829883a 	mov	r20,r5
   45f88:	dfc00515 	stw	ra,20(sp)
   45f8c:	9cc75004 	addi	r19,r19,7488
   45f90:	2025883a 	mov	r18,r4
   45f94:	004f1e80 	call	4f1e8 <__malloc_lock>
   45f98:	98800217 	ldw	r2,8(r19)
   45f9c:	14400117 	ldw	r17,4(r2)
   45fa0:	00bfff04 	movi	r2,-4
   45fa4:	88a2703a 	and	r17,r17,r2
   45fa8:	8c03fbc4 	addi	r16,r17,4079
   45fac:	8521c83a 	sub	r16,r16,r20
   45fb0:	8020d33a 	srli	r16,r16,12
   45fb4:	843fffc4 	addi	r16,r16,-1
   45fb8:	8020933a 	slli	r16,r16,12
   45fbc:	80840008 	cmpgei	r2,r16,4096
   45fc0:	10000626 	beq	r2,zero,45fdc <_malloc_trim_r+0x74>
   45fc4:	000b883a 	mov	r5,zero
   45fc8:	9009883a 	mov	r4,r18
   45fcc:	0048eb00 	call	48eb0 <_sbrk_r>
   45fd0:	98c00217 	ldw	r3,8(r19)
   45fd4:	1c47883a 	add	r3,r3,r17
   45fd8:	10c00b26 	beq	r2,r3,46008 <_malloc_trim_r+0xa0>
   45fdc:	9009883a 	mov	r4,r18
   45fe0:	004f20c0 	call	4f20c <__malloc_unlock>
   45fe4:	0005883a 	mov	r2,zero
   45fe8:	dfc00517 	ldw	ra,20(sp)
   45fec:	dd000417 	ldw	r20,16(sp)
   45ff0:	dcc00317 	ldw	r19,12(sp)
   45ff4:	dc800217 	ldw	r18,8(sp)
   45ff8:	dc400117 	ldw	r17,4(sp)
   45ffc:	dc000017 	ldw	r16,0(sp)
   46000:	dec00604 	addi	sp,sp,24
   46004:	f800283a 	ret
   46008:	040bc83a 	sub	r5,zero,r16
   4600c:	9009883a 	mov	r4,r18
   46010:	0048eb00 	call	48eb0 <_sbrk_r>
   46014:	10bfffd8 	cmpnei	r2,r2,-1
   46018:	10000d26 	beq	r2,zero,46050 <_malloc_trim_r+0xe8>
   4601c:	00800174 	movhi	r2,5
   46020:	10944317 	ldw	r2,20748(r2)
   46024:	98c00217 	ldw	r3,8(r19)
   46028:	8c23c83a 	sub	r17,r17,r16
   4602c:	8c400054 	ori	r17,r17,1
   46030:	1405c83a 	sub	r2,r2,r16
   46034:	1c400115 	stw	r17,4(r3)
   46038:	9009883a 	mov	r4,r18
   4603c:	00c00174 	movhi	r3,5
   46040:	18944315 	stw	r2,20748(r3)
   46044:	004f20c0 	call	4f20c <__malloc_unlock>
   46048:	00800044 	movi	r2,1
   4604c:	003fe606 	br	45fe8 <_malloc_trim_r+0x80>
   46050:	000b883a 	mov	r5,zero
   46054:	9009883a 	mov	r4,r18
   46058:	0048eb00 	call	48eb0 <_sbrk_r>
   4605c:	99000217 	ldw	r4,8(r19)
   46060:	1107c83a 	sub	r3,r2,r4
   46064:	19400410 	cmplti	r5,r3,16
   46068:	283fdc1e 	bne	r5,zero,45fdc <_malloc_trim_r+0x74>
   4606c:	01400174 	movhi	r5,5
   46070:	294d3117 	ldw	r5,13508(r5)
   46074:	18c00054 	ori	r3,r3,1
   46078:	20c00115 	stw	r3,4(r4)
   4607c:	1145c83a 	sub	r2,r2,r5
   46080:	01400174 	movhi	r5,5
   46084:	28944315 	stw	r2,20748(r5)
   46088:	003fd406 	br	45fdc <_malloc_trim_r+0x74>

0004608c <_free_r>:
   4608c:	28005f26 	beq	r5,zero,4620c <_free_r+0x180>
   46090:	defffd04 	addi	sp,sp,-12
   46094:	dc400115 	stw	r17,4(sp)
   46098:	dc000015 	stw	r16,0(sp)
   4609c:	2023883a 	mov	r17,r4
   460a0:	2821883a 	mov	r16,r5
   460a4:	dfc00215 	stw	ra,8(sp)
   460a8:	004f1e80 	call	4f1e8 <__malloc_lock>
   460ac:	81ffff17 	ldw	r7,-4(r16)
   460b0:	00bfff84 	movi	r2,-2
   460b4:	80fffe04 	addi	r3,r16,-8
   460b8:	3884703a 	and	r2,r7,r2
   460bc:	01800174 	movhi	r6,5
   460c0:	1889883a 	add	r4,r3,r2
   460c4:	31875004 	addi	r6,r6,7488
   460c8:	21400117 	ldw	r5,4(r4)
   460cc:	32000217 	ldw	r8,8(r6)
   460d0:	027fff04 	movi	r9,-4
   460d4:	2a4a703a 	and	r5,r5,r9
   460d8:	41006526 	beq	r8,r4,46270 <_free_r+0x1e4>
   460dc:	21400115 	stw	r5,4(r4)
   460e0:	39c0004c 	andi	r7,r7,1
   460e4:	2151883a 	add	r8,r4,r5
   460e8:	3800281e 	bne	r7,zero,4618c <_free_r+0x100>
   460ec:	82bffe17 	ldw	r10,-8(r16)
   460f0:	42000117 	ldw	r8,4(r8)
   460f4:	01c00174 	movhi	r7,5
   460f8:	1a87c83a 	sub	r3,r3,r10
   460fc:	1a400217 	ldw	r9,8(r3)
   46100:	39c75204 	addi	r7,r7,7496
   46104:	1285883a 	add	r2,r2,r10
   46108:	4200004c 	andi	r8,r8,1
   4610c:	49c04d26 	beq	r9,r7,46244 <_free_r+0x1b8>
   46110:	1a800317 	ldw	r10,12(r3)
   46114:	4a800315 	stw	r10,12(r9)
   46118:	52400215 	stw	r9,8(r10)
   4611c:	40006926 	beq	r8,zero,462c4 <_free_r+0x238>
   46120:	11400054 	ori	r5,r2,1
   46124:	19400115 	stw	r5,4(r3)
   46128:	20800015 	stw	r2,0(r4)
   4612c:	11008028 	cmpgeui	r4,r2,512
   46130:	20001e1e 	bne	r4,zero,461ac <_free_r+0x120>
   46134:	1008d0fa 	srli	r4,r2,3
   46138:	100ad17a 	srli	r5,r2,5
   4613c:	31c00117 	ldw	r7,4(r6)
   46140:	20800044 	addi	r2,r4,1
   46144:	100490fa 	slli	r2,r2,3
   46148:	01000044 	movi	r4,1
   4614c:	2148983a 	sll	r4,r4,r5
   46150:	3085883a 	add	r2,r6,r2
   46154:	11400017 	ldw	r5,0(r2)
   46158:	21c8b03a 	or	r4,r4,r7
   4615c:	11fffe04 	addi	r7,r2,-8
   46160:	19c00315 	stw	r7,12(r3)
   46164:	19400215 	stw	r5,8(r3)
   46168:	31000115 	stw	r4,4(r6)
   4616c:	10c00015 	stw	r3,0(r2)
   46170:	28c00315 	stw	r3,12(r5)
   46174:	8809883a 	mov	r4,r17
   46178:	dfc00217 	ldw	ra,8(sp)
   4617c:	dc400117 	ldw	r17,4(sp)
   46180:	dc000017 	ldw	r16,0(sp)
   46184:	dec00304 	addi	sp,sp,12
   46188:	004f20c1 	jmpi	4f20c <__malloc_unlock>
   4618c:	41c00117 	ldw	r7,4(r8)
   46190:	39c0004c 	andi	r7,r7,1
   46194:	38001e26 	beq	r7,zero,46210 <_free_r+0x184>
   46198:	11400054 	ori	r5,r2,1
   4619c:	817fff15 	stw	r5,-4(r16)
   461a0:	20800015 	stw	r2,0(r4)
   461a4:	11008028 	cmpgeui	r4,r2,512
   461a8:	203fe226 	beq	r4,zero,46134 <_free_r+0xa8>
   461ac:	1008d27a 	srli	r4,r2,9
   461b0:	21400168 	cmpgeui	r5,r4,5
   461b4:	2800451e 	bne	r5,zero,462cc <_free_r+0x240>
   461b8:	1008d1ba 	srli	r4,r2,6
   461bc:	21c00e44 	addi	r7,r4,57
   461c0:	380e90fa 	slli	r7,r7,3
   461c4:	21000e04 	addi	r4,r4,56
   461c8:	31cf883a 	add	r7,r6,r7
   461cc:	39400017 	ldw	r5,0(r7)
   461d0:	39fffe04 	addi	r7,r7,-8
   461d4:	39405326 	beq	r7,r5,46324 <_free_r+0x298>
   461d8:	01bfff04 	movi	r6,-4
   461dc:	00000206 	br	461e8 <_free_r+0x15c>
   461e0:	29400217 	ldw	r5,8(r5)
   461e4:	39400326 	beq	r7,r5,461f4 <_free_r+0x168>
   461e8:	29000117 	ldw	r4,4(r5)
   461ec:	2188703a 	and	r4,r4,r6
   461f0:	113ffb36 	bltu	r2,r4,461e0 <_free_r+0x154>
   461f4:	29c00317 	ldw	r7,12(r5)
   461f8:	19c00315 	stw	r7,12(r3)
   461fc:	19400215 	stw	r5,8(r3)
   46200:	38c00215 	stw	r3,8(r7)
   46204:	28c00315 	stw	r3,12(r5)
   46208:	003fda06 	br	46174 <_free_r+0xe8>
   4620c:	f800283a 	ret
   46210:	01c00174 	movhi	r7,5
   46214:	1145883a 	add	r2,r2,r5
   46218:	39c75204 	addi	r7,r7,7496
   4621c:	21400217 	ldw	r5,8(r4)
   46220:	29c03726 	beq	r5,r7,46300 <_free_r+0x274>
   46224:	22000317 	ldw	r8,12(r4)
   46228:	11c00054 	ori	r7,r2,1
   4622c:	1889883a 	add	r4,r3,r2
   46230:	2a000315 	stw	r8,12(r5)
   46234:	41400215 	stw	r5,8(r8)
   46238:	19c00115 	stw	r7,4(r3)
   4623c:	20800015 	stw	r2,0(r4)
   46240:	003fba06 	br	4612c <_free_r+0xa0>
   46244:	40004f1e 	bne	r8,zero,46384 <_free_r+0x2f8>
   46248:	21800217 	ldw	r6,8(r4)
   4624c:	21000317 	ldw	r4,12(r4)
   46250:	288b883a 	add	r5,r5,r2
   46254:	28800054 	ori	r2,r5,1
   46258:	31000315 	stw	r4,12(r6)
   4625c:	21800215 	stw	r6,8(r4)
   46260:	18800115 	stw	r2,4(r3)
   46264:	1947883a 	add	r3,r3,r5
   46268:	19400015 	stw	r5,0(r3)
   4626c:	003fc106 	br	46174 <_free_r+0xe8>
   46270:	39c0004c 	andi	r7,r7,1
   46274:	114b883a 	add	r5,r2,r5
   46278:	3800071e 	bne	r7,zero,46298 <_free_r+0x20c>
   4627c:	81fffe17 	ldw	r7,-8(r16)
   46280:	19c7c83a 	sub	r3,r3,r7
   46284:	18800317 	ldw	r2,12(r3)
   46288:	19000217 	ldw	r4,8(r3)
   4628c:	29cb883a 	add	r5,r5,r7
   46290:	20800315 	stw	r2,12(r4)
   46294:	11000215 	stw	r4,8(r2)
   46298:	00800174 	movhi	r2,5
   4629c:	29000054 	ori	r4,r5,1
   462a0:	108d3217 	ldw	r2,13512(r2)
   462a4:	19000115 	stw	r4,4(r3)
   462a8:	30c00215 	stw	r3,8(r6)
   462ac:	28bfb136 	bltu	r5,r2,46174 <_free_r+0xe8>
   462b0:	00800174 	movhi	r2,5
   462b4:	11543817 	ldw	r5,20704(r2)
   462b8:	8809883a 	mov	r4,r17
   462bc:	0045f680 	call	45f68 <_malloc_trim_r>
   462c0:	003fac06 	br	46174 <_free_r+0xe8>
   462c4:	1145883a 	add	r2,r2,r5
   462c8:	003fd406 	br	4621c <_free_r+0x190>
   462cc:	21400568 	cmpgeui	r5,r4,21
   462d0:	28000726 	beq	r5,zero,462f0 <_free_r+0x264>
   462d4:	21401568 	cmpgeui	r5,r4,85
   462d8:	2800191e 	bne	r5,zero,46340 <_free_r+0x2b4>
   462dc:	1008d33a 	srli	r4,r2,12
   462e0:	21c01bc4 	addi	r7,r4,111
   462e4:	380e90fa 	slli	r7,r7,3
   462e8:	21001b84 	addi	r4,r4,110
   462ec:	003fb606 	br	461c8 <_free_r+0x13c>
   462f0:	21c01704 	addi	r7,r4,92
   462f4:	380e90fa 	slli	r7,r7,3
   462f8:	210016c4 	addi	r4,r4,91
   462fc:	003fb206 	br	461c8 <_free_r+0x13c>
   46300:	30c00515 	stw	r3,20(r6)
   46304:	30c00415 	stw	r3,16(r6)
   46308:	11000054 	ori	r4,r2,1
   4630c:	19c00315 	stw	r7,12(r3)
   46310:	19c00215 	stw	r7,8(r3)
   46314:	19000115 	stw	r4,4(r3)
   46318:	1887883a 	add	r3,r3,r2
   4631c:	18800015 	stw	r2,0(r3)
   46320:	003f9406 	br	46174 <_free_r+0xe8>
   46324:	2009d0ba 	srai	r4,r4,2
   46328:	00800044 	movi	r2,1
   4632c:	32000117 	ldw	r8,4(r6)
   46330:	1104983a 	sll	r2,r2,r4
   46334:	1204b03a 	or	r2,r2,r8
   46338:	30800115 	stw	r2,4(r6)
   4633c:	003fae06 	br	461f8 <_free_r+0x16c>
   46340:	21405568 	cmpgeui	r5,r4,341
   46344:	2800051e 	bne	r5,zero,4635c <_free_r+0x2d0>
   46348:	1008d3fa 	srli	r4,r2,15
   4634c:	21c01e04 	addi	r7,r4,120
   46350:	380e90fa 	slli	r7,r7,3
   46354:	21001dc4 	addi	r4,r4,119
   46358:	003f9b06 	br	461c8 <_free_r+0x13c>
   4635c:	21015568 	cmpgeui	r4,r4,1365
   46360:	2000051e 	bne	r4,zero,46378 <_free_r+0x2ec>
   46364:	1008d4ba 	srli	r4,r2,18
   46368:	21c01f44 	addi	r7,r4,125
   4636c:	380e90fa 	slli	r7,r7,3
   46370:	21001f04 	addi	r4,r4,124
   46374:	003f9406 	br	461c8 <_free_r+0x13c>
   46378:	01c0fe04 	movi	r7,1016
   4637c:	01001f84 	movi	r4,126
   46380:	003f9106 	br	461c8 <_free_r+0x13c>
   46384:	11400054 	ori	r5,r2,1
   46388:	19400115 	stw	r5,4(r3)
   4638c:	20800015 	stw	r2,0(r4)
   46390:	003f7806 	br	46174 <_free_r+0xe8>

00046394 <__sfvwrite_r>:
   46394:	30800217 	ldw	r2,8(r6)
   46398:	1000c326 	beq	r2,zero,466a8 <__sfvwrite_r+0x314>
   4639c:	2a80030b 	ldhu	r10,12(r5)
   463a0:	defff504 	addi	sp,sp,-44
   463a4:	df000915 	stw	fp,36(sp)
   463a8:	dcc00415 	stw	r19,16(sp)
   463ac:	dc000115 	stw	r16,4(sp)
   463b0:	dfc00a15 	stw	ra,40(sp)
   463b4:	ddc00815 	stw	r23,32(sp)
   463b8:	dd800715 	stw	r22,28(sp)
   463bc:	dd400615 	stw	r21,24(sp)
   463c0:	dd000515 	stw	r20,20(sp)
   463c4:	dc800315 	stw	r18,12(sp)
   463c8:	dc400215 	stw	r17,8(sp)
   463cc:	5080020c 	andi	r2,r10,8
   463d0:	3039883a 	mov	fp,r6
   463d4:	2027883a 	mov	r19,r4
   463d8:	2821883a 	mov	r16,r5
   463dc:	10002226 	beq	r2,zero,46468 <__sfvwrite_r+0xd4>
   463e0:	28800417 	ldw	r2,16(r5)
   463e4:	10002026 	beq	r2,zero,46468 <__sfvwrite_r+0xd4>
   463e8:	5080008c 	andi	r2,r10,2
   463ec:	e4400017 	ldw	r17,0(fp)
   463f0:	10002526 	beq	r2,zero,46488 <__sfvwrite_r+0xf4>
   463f4:	80800917 	ldw	r2,36(r16)
   463f8:	81400717 	ldw	r5,28(r16)
   463fc:	05600034 	movhi	r21,32768
   46400:	0029883a 	mov	r20,zero
   46404:	0025883a 	mov	r18,zero
   46408:	ad7f0004 	addi	r21,r21,-1024
   4640c:	a00d883a 	mov	r6,r20
   46410:	9809883a 	mov	r4,r19
   46414:	90001026 	beq	r18,zero,46458 <__sfvwrite_r+0xc4>
   46418:	900f883a 	mov	r7,r18
   4641c:	ac80012e 	bgeu	r21,r18,46424 <__sfvwrite_r+0x90>
   46420:	a80f883a 	mov	r7,r21
   46424:	103ee83a 	callr	r2
   46428:	00809a0e 	bge	zero,r2,46694 <__sfvwrite_r+0x300>
   4642c:	e0c00217 	ldw	r3,8(fp)
   46430:	a0a9883a 	add	r20,r20,r2
   46434:	90a5c83a 	sub	r18,r18,r2
   46438:	1885c83a 	sub	r2,r3,r2
   4643c:	e0800215 	stw	r2,8(fp)
   46440:	10008326 	beq	r2,zero,46650 <__sfvwrite_r+0x2bc>
   46444:	80800917 	ldw	r2,36(r16)
   46448:	81400717 	ldw	r5,28(r16)
   4644c:	a00d883a 	mov	r6,r20
   46450:	9809883a 	mov	r4,r19
   46454:	903ff01e 	bne	r18,zero,46418 <__sfvwrite_r+0x84>
   46458:	8d000017 	ldw	r20,0(r17)
   4645c:	8c800117 	ldw	r18,4(r17)
   46460:	8c400204 	addi	r17,r17,8
   46464:	003fe906 	br	4640c <__sfvwrite_r+0x78>
   46468:	800b883a 	mov	r5,r16
   4646c:	9809883a 	mov	r4,r19
   46470:	0043dd00 	call	43dd0 <__swsetup_r>
   46474:	10008a1e 	bne	r2,zero,466a0 <__sfvwrite_r+0x30c>
   46478:	8280030b 	ldhu	r10,12(r16)
   4647c:	e4400017 	ldw	r17,0(fp)
   46480:	5080008c 	andi	r2,r10,2
   46484:	103fdb1e 	bne	r2,zero,463f4 <__sfvwrite_r+0x60>
   46488:	5080004c 	andi	r2,r10,1
   4648c:	10004e1e 	bne	r2,zero,465c8 <__sfvwrite_r+0x234>
   46490:	00a00034 	movhi	r2,32768
   46494:	81c00017 	ldw	r7,0(r16)
   46498:	80c00217 	ldw	r3,8(r16)
   4649c:	10bfffc4 	addi	r2,r2,-1
   464a0:	002d883a 	mov	r22,zero
   464a4:	0025883a 	mov	r18,zero
   464a8:	d8800015 	stw	r2,0(sp)
   464ac:	3809883a 	mov	r4,r7
   464b0:	1829883a 	mov	r20,r3
   464b4:	90004026 	beq	r18,zero,465b8 <__sfvwrite_r+0x224>
   464b8:	5080800c 	andi	r2,r10,512
   464bc:	10009426 	beq	r2,zero,46710 <__sfvwrite_r+0x37c>
   464c0:	182b883a 	mov	r21,r3
   464c4:	90c0b936 	bltu	r18,r3,467ac <__sfvwrite_r+0x418>
   464c8:	5081200c 	andi	r2,r10,1152
   464cc:	10002426 	beq	r2,zero,46560 <__sfvwrite_r+0x1cc>
   464d0:	80800517 	ldw	r2,20(r16)
   464d4:	81000417 	ldw	r4,16(r16)
   464d8:	108000e4 	muli	r2,r2,3
   464dc:	392fc83a 	sub	r23,r7,r4
   464e0:	b8c00044 	addi	r3,r23,1
   464e4:	1012d7fa 	srli	r9,r2,31
   464e8:	1c87883a 	add	r3,r3,r18
   464ec:	4893883a 	add	r9,r9,r2
   464f0:	4829d07a 	srai	r20,r9,1
   464f4:	a00b883a 	mov	r5,r20
   464f8:	a0c0022e 	bgeu	r20,r3,46504 <__sfvwrite_r+0x170>
   464fc:	1829883a 	mov	r20,r3
   46500:	180b883a 	mov	r5,r3
   46504:	5281000c 	andi	r10,r10,1024
   46508:	5000b926 	beq	r10,zero,467f0 <__sfvwrite_r+0x45c>
   4650c:	9809883a 	mov	r4,r19
   46510:	0046bc40 	call	46bc4 <_malloc_r>
   46514:	1000c426 	beq	r2,zero,46828 <__sfvwrite_r+0x494>
   46518:	81400417 	ldw	r5,16(r16)
   4651c:	1009883a 	mov	r4,r2
   46520:	b80d883a 	mov	r6,r23
   46524:	00474480 	call	47448 <memcpy>
   46528:	1007883a 	mov	r3,r2
   4652c:	8080030b 	ldhu	r2,12(r16)
   46530:	013edfc4 	movi	r4,-1153
   46534:	1104703a 	and	r2,r2,r4
   46538:	10802014 	ori	r2,r2,128
   4653c:	8080030d 	sth	r2,12(r16)
   46540:	a5cfc83a 	sub	r7,r20,r23
   46544:	1dc9883a 	add	r4,r3,r23
   46548:	85000515 	stw	r20,20(r16)
   4654c:	80c00415 	stw	r3,16(r16)
   46550:	81000015 	stw	r4,0(r16)
   46554:	9029883a 	mov	r20,r18
   46558:	81c00215 	stw	r7,8(r16)
   4655c:	902b883a 	mov	r21,r18
   46560:	a80d883a 	mov	r6,r21
   46564:	b00b883a 	mov	r5,r22
   46568:	00475480 	call	47548 <memmove>
   4656c:	80c00217 	ldw	r3,8(r16)
   46570:	81c00017 	ldw	r7,0(r16)
   46574:	902f883a 	mov	r23,r18
   46578:	1d07c83a 	sub	r3,r3,r20
   4657c:	3d4d883a 	add	r6,r7,r21
   46580:	80c00215 	stw	r3,8(r16)
   46584:	81800015 	stw	r6,0(r16)
   46588:	0025883a 	mov	r18,zero
   4658c:	e0800217 	ldw	r2,8(fp)
   46590:	b5ed883a 	add	r22,r22,r23
   46594:	15c5c83a 	sub	r2,r2,r23
   46598:	e0800215 	stw	r2,8(fp)
   4659c:	10002c26 	beq	r2,zero,46650 <__sfvwrite_r+0x2bc>
   465a0:	81c00017 	ldw	r7,0(r16)
   465a4:	80c00217 	ldw	r3,8(r16)
   465a8:	8280030b 	ldhu	r10,12(r16)
   465ac:	3809883a 	mov	r4,r7
   465b0:	1829883a 	mov	r20,r3
   465b4:	903fc01e 	bne	r18,zero,464b8 <__sfvwrite_r+0x124>
   465b8:	8d800017 	ldw	r22,0(r17)
   465bc:	8c800117 	ldw	r18,4(r17)
   465c0:	8c400204 	addi	r17,r17,8
   465c4:	003fb906 	br	464ac <__sfvwrite_r+0x118>
   465c8:	002f883a 	mov	r23,zero
   465cc:	0005883a 	mov	r2,zero
   465d0:	002b883a 	mov	r21,zero
   465d4:	0029883a 	mov	r20,zero
   465d8:	a0003526 	beq	r20,zero,466b0 <__sfvwrite_r+0x31c>
   465dc:	10003926 	beq	r2,zero,466c4 <__sfvwrite_r+0x330>
   465e0:	b805883a 	mov	r2,r23
   465e4:	a02d883a 	mov	r22,r20
   465e8:	1500012e 	bgeu	r2,r20,465f0 <__sfvwrite_r+0x25c>
   465ec:	102d883a 	mov	r22,r2
   465f0:	81000017 	ldw	r4,0(r16)
   465f4:	80800417 	ldw	r2,16(r16)
   465f8:	84800217 	ldw	r18,8(r16)
   465fc:	81c00517 	ldw	r7,20(r16)
   46600:	1100022e 	bgeu	r2,r4,4660c <__sfvwrite_r+0x278>
   46604:	91e5883a 	add	r18,r18,r7
   46608:	95803616 	blt	r18,r22,466e4 <__sfvwrite_r+0x350>
   4660c:	b1c06a16 	blt	r22,r7,467b8 <__sfvwrite_r+0x424>
   46610:	80800917 	ldw	r2,36(r16)
   46614:	81400717 	ldw	r5,28(r16)
   46618:	a80d883a 	mov	r6,r21
   4661c:	9809883a 	mov	r4,r19
   46620:	103ee83a 	callr	r2
   46624:	1025883a 	mov	r18,r2
   46628:	00801a0e 	bge	zero,r2,46694 <__sfvwrite_r+0x300>
   4662c:	bcafc83a 	sub	r23,r23,r18
   46630:	b8001426 	beq	r23,zero,46684 <__sfvwrite_r+0x2f0>
   46634:	00800044 	movi	r2,1
   46638:	e0c00217 	ldw	r3,8(fp)
   4663c:	acab883a 	add	r21,r21,r18
   46640:	a4a9c83a 	sub	r20,r20,r18
   46644:	1c87c83a 	sub	r3,r3,r18
   46648:	e0c00215 	stw	r3,8(fp)
   4664c:	183fe21e 	bne	r3,zero,465d8 <__sfvwrite_r+0x244>
   46650:	0005883a 	mov	r2,zero
   46654:	dfc00a17 	ldw	ra,40(sp)
   46658:	df000917 	ldw	fp,36(sp)
   4665c:	ddc00817 	ldw	r23,32(sp)
   46660:	dd800717 	ldw	r22,28(sp)
   46664:	dd400617 	ldw	r21,24(sp)
   46668:	dd000517 	ldw	r20,20(sp)
   4666c:	dcc00417 	ldw	r19,16(sp)
   46670:	dc800317 	ldw	r18,12(sp)
   46674:	dc400217 	ldw	r17,8(sp)
   46678:	dc000117 	ldw	r16,4(sp)
   4667c:	dec00b04 	addi	sp,sp,44
   46680:	f800283a 	ret
   46684:	800b883a 	mov	r5,r16
   46688:	9809883a 	mov	r4,r19
   4668c:	0045b080 	call	45b08 <_fflush_r>
   46690:	103fe926 	beq	r2,zero,46638 <__sfvwrite_r+0x2a4>
   46694:	8080030b 	ldhu	r2,12(r16)
   46698:	10801014 	ori	r2,r2,64
   4669c:	8080030d 	sth	r2,12(r16)
   466a0:	00bfffc4 	movi	r2,-1
   466a4:	003feb06 	br	46654 <__sfvwrite_r+0x2c0>
   466a8:	0005883a 	mov	r2,zero
   466ac:	f800283a 	ret
   466b0:	8d000117 	ldw	r20,4(r17)
   466b4:	8805883a 	mov	r2,r17
   466b8:	8c400204 	addi	r17,r17,8
   466bc:	a03ffc26 	beq	r20,zero,466b0 <__sfvwrite_r+0x31c>
   466c0:	15400017 	ldw	r21,0(r2)
   466c4:	a00d883a 	mov	r6,r20
   466c8:	01400284 	movi	r5,10
   466cc:	a809883a 	mov	r4,r21
   466d0:	00473780 	call	47378 <memchr>
   466d4:	10004326 	beq	r2,zero,467e4 <__sfvwrite_r+0x450>
   466d8:	10800044 	addi	r2,r2,1
   466dc:	156fc83a 	sub	r23,r2,r21
   466e0:	003fbf06 	br	465e0 <__sfvwrite_r+0x24c>
   466e4:	a80b883a 	mov	r5,r21
   466e8:	900d883a 	mov	r6,r18
   466ec:	00475480 	call	47548 <memmove>
   466f0:	80800017 	ldw	r2,0(r16)
   466f4:	800b883a 	mov	r5,r16
   466f8:	9809883a 	mov	r4,r19
   466fc:	1485883a 	add	r2,r2,r18
   46700:	80800015 	stw	r2,0(r16)
   46704:	0045b080 	call	45b08 <_fflush_r>
   46708:	103fc826 	beq	r2,zero,4662c <__sfvwrite_r+0x298>
   4670c:	003fe106 	br	46694 <__sfvwrite_r+0x300>
   46710:	80800417 	ldw	r2,16(r16)
   46714:	11c01236 	bltu	r2,r7,46760 <__sfvwrite_r+0x3cc>
   46718:	81400517 	ldw	r5,20(r16)
   4671c:	91401036 	bltu	r18,r5,46760 <__sfvwrite_r+0x3cc>
   46720:	00a00034 	movhi	r2,32768
   46724:	902f883a 	mov	r23,r18
   46728:	90800136 	bltu	r18,r2,46730 <__sfvwrite_r+0x39c>
   4672c:	ddc00017 	ldw	r23,0(sp)
   46730:	b809883a 	mov	r4,r23
   46734:	004c0b40 	call	4c0b4 <__modsi3>
   46738:	80c00917 	ldw	r3,36(r16)
   4673c:	81400717 	ldw	r5,28(r16)
   46740:	b88fc83a 	sub	r7,r23,r2
   46744:	b00d883a 	mov	r6,r22
   46748:	9809883a 	mov	r4,r19
   4674c:	183ee83a 	callr	r3
   46750:	102f883a 	mov	r23,r2
   46754:	00bfcf0e 	bge	zero,r2,46694 <__sfvwrite_r+0x300>
   46758:	95e5c83a 	sub	r18,r18,r23
   4675c:	003f8b06 	br	4658c <__sfvwrite_r+0x1f8>
   46760:	182f883a 	mov	r23,r3
   46764:	90c0012e 	bgeu	r18,r3,4676c <__sfvwrite_r+0x3d8>
   46768:	902f883a 	mov	r23,r18
   4676c:	3809883a 	mov	r4,r7
   46770:	b80d883a 	mov	r6,r23
   46774:	b00b883a 	mov	r5,r22
   46778:	00475480 	call	47548 <memmove>
   4677c:	80c00217 	ldw	r3,8(r16)
   46780:	81c00017 	ldw	r7,0(r16)
   46784:	1dc7c83a 	sub	r3,r3,r23
   46788:	3dcf883a 	add	r7,r7,r23
   4678c:	80c00215 	stw	r3,8(r16)
   46790:	81c00015 	stw	r7,0(r16)
   46794:	183ff01e 	bne	r3,zero,46758 <__sfvwrite_r+0x3c4>
   46798:	800b883a 	mov	r5,r16
   4679c:	9809883a 	mov	r4,r19
   467a0:	0045b080 	call	45b08 <_fflush_r>
   467a4:	103fec26 	beq	r2,zero,46758 <__sfvwrite_r+0x3c4>
   467a8:	003fba06 	br	46694 <__sfvwrite_r+0x300>
   467ac:	9029883a 	mov	r20,r18
   467b0:	902b883a 	mov	r21,r18
   467b4:	003f6a06 	br	46560 <__sfvwrite_r+0x1cc>
   467b8:	b00d883a 	mov	r6,r22
   467bc:	a80b883a 	mov	r5,r21
   467c0:	00475480 	call	47548 <memmove>
   467c4:	80c00217 	ldw	r3,8(r16)
   467c8:	80800017 	ldw	r2,0(r16)
   467cc:	b025883a 	mov	r18,r22
   467d0:	1d87c83a 	sub	r3,r3,r22
   467d4:	1585883a 	add	r2,r2,r22
   467d8:	80c00215 	stw	r3,8(r16)
   467dc:	80800015 	stw	r2,0(r16)
   467e0:	003f9206 	br	4662c <__sfvwrite_r+0x298>
   467e4:	a0800044 	addi	r2,r20,1
   467e8:	102f883a 	mov	r23,r2
   467ec:	003f7d06 	br	465e4 <__sfvwrite_r+0x250>
   467f0:	280d883a 	mov	r6,r5
   467f4:	200b883a 	mov	r5,r4
   467f8:	9809883a 	mov	r4,r19
   467fc:	00488bc0 	call	488bc <_realloc_r>
   46800:	1007883a 	mov	r3,r2
   46804:	103f4e1e 	bne	r2,zero,46540 <__sfvwrite_r+0x1ac>
   46808:	81400417 	ldw	r5,16(r16)
   4680c:	9809883a 	mov	r4,r19
   46810:	004608c0 	call	4608c <_free_r>
   46814:	8080030b 	ldhu	r2,12(r16)
   46818:	00c00304 	movi	r3,12
   4681c:	98c00015 	stw	r3,0(r19)
   46820:	10bfdfcc 	andi	r2,r2,65407
   46824:	003f9c06 	br	46698 <__sfvwrite_r+0x304>
   46828:	00c00304 	movi	r3,12
   4682c:	8080030b 	ldhu	r2,12(r16)
   46830:	98c00015 	stw	r3,0(r19)
   46834:	003f9806 	br	46698 <__sfvwrite_r+0x304>

00046838 <_fwalk>:
   46838:	defffa04 	addi	sp,sp,-24
   4683c:	dd000415 	stw	r20,16(sp)
   46840:	dcc00315 	stw	r19,12(sp)
   46844:	dc800215 	stw	r18,8(sp)
   46848:	dfc00515 	stw	ra,20(sp)
   4684c:	dc400115 	stw	r17,4(sp)
   46850:	dc000015 	stw	r16,0(sp)
   46854:	2827883a 	mov	r19,r5
   46858:	2480b804 	addi	r18,r4,736
   4685c:	0029883a 	mov	r20,zero
   46860:	94400117 	ldw	r17,4(r18)
   46864:	94000217 	ldw	r16,8(r18)
   46868:	8c7fffc4 	addi	r17,r17,-1
   4686c:	88000d16 	blt	r17,zero,468a4 <_fwalk+0x6c>
   46870:	8080030b 	ldhu	r2,12(r16)
   46874:	8c7fffc4 	addi	r17,r17,-1
   46878:	108000b0 	cmpltui	r2,r2,2
   4687c:	1000061e 	bne	r2,zero,46898 <_fwalk+0x60>
   46880:	8080038f 	ldh	r2,14(r16)
   46884:	8009883a 	mov	r4,r16
   46888:	10bfffe0 	cmpeqi	r2,r2,-1
   4688c:	1000021e 	bne	r2,zero,46898 <_fwalk+0x60>
   46890:	983ee83a 	callr	r19
   46894:	a0a8b03a 	or	r20,r20,r2
   46898:	88bfffd8 	cmpnei	r2,r17,-1
   4689c:	84001a04 	addi	r16,r16,104
   468a0:	103ff31e 	bne	r2,zero,46870 <_fwalk+0x38>
   468a4:	94800017 	ldw	r18,0(r18)
   468a8:	903fed1e 	bne	r18,zero,46860 <_fwalk+0x28>
   468ac:	a005883a 	mov	r2,r20
   468b0:	dfc00517 	ldw	ra,20(sp)
   468b4:	dd000417 	ldw	r20,16(sp)
   468b8:	dcc00317 	ldw	r19,12(sp)
   468bc:	dc800217 	ldw	r18,8(sp)
   468c0:	dc400117 	ldw	r17,4(sp)
   468c4:	dc000017 	ldw	r16,0(sp)
   468c8:	dec00604 	addi	sp,sp,24
   468cc:	f800283a 	ret

000468d0 <_fwalk_reent>:
   468d0:	defff904 	addi	sp,sp,-28
   468d4:	dd400515 	stw	r21,20(sp)
   468d8:	dd000415 	stw	r20,16(sp)
   468dc:	dcc00315 	stw	r19,12(sp)
   468e0:	dc800215 	stw	r18,8(sp)
   468e4:	dfc00615 	stw	ra,24(sp)
   468e8:	dc400115 	stw	r17,4(sp)
   468ec:	dc000015 	stw	r16,0(sp)
   468f0:	2025883a 	mov	r18,r4
   468f4:	2829883a 	mov	r20,r5
   468f8:	24c0b804 	addi	r19,r4,736
   468fc:	002b883a 	mov	r21,zero
   46900:	9c400117 	ldw	r17,4(r19)
   46904:	9c000217 	ldw	r16,8(r19)
   46908:	8c7fffc4 	addi	r17,r17,-1
   4690c:	88000e16 	blt	r17,zero,46948 <_fwalk_reent+0x78>
   46910:	8080030b 	ldhu	r2,12(r16)
   46914:	8c7fffc4 	addi	r17,r17,-1
   46918:	108000b0 	cmpltui	r2,r2,2
   4691c:	1000071e 	bne	r2,zero,4693c <_fwalk_reent+0x6c>
   46920:	8080038f 	ldh	r2,14(r16)
   46924:	800b883a 	mov	r5,r16
   46928:	9009883a 	mov	r4,r18
   4692c:	10bfffe0 	cmpeqi	r2,r2,-1
   46930:	1000021e 	bne	r2,zero,4693c <_fwalk_reent+0x6c>
   46934:	a03ee83a 	callr	r20
   46938:	a8aab03a 	or	r21,r21,r2
   4693c:	88bfffd8 	cmpnei	r2,r17,-1
   46940:	84001a04 	addi	r16,r16,104
   46944:	103ff21e 	bne	r2,zero,46910 <_fwalk_reent+0x40>
   46948:	9cc00017 	ldw	r19,0(r19)
   4694c:	983fec1e 	bne	r19,zero,46900 <_fwalk_reent+0x30>
   46950:	a805883a 	mov	r2,r21
   46954:	dfc00617 	ldw	ra,24(sp)
   46958:	dd400517 	ldw	r21,20(sp)
   4695c:	dd000417 	ldw	r20,16(sp)
   46960:	dcc00317 	ldw	r19,12(sp)
   46964:	dc800217 	ldw	r18,8(sp)
   46968:	dc400117 	ldw	r17,4(sp)
   4696c:	dc000017 	ldw	r16,0(sp)
   46970:	dec00704 	addi	sp,sp,28
   46974:	f800283a 	ret

00046978 <__localeconv_l>:
   46978:	20803c04 	addi	r2,r4,240
   4697c:	f800283a 	ret

00046980 <_localeconv_r>:
   46980:	00800174 	movhi	r2,5
   46984:	10888e04 	addi	r2,r2,8760
   46988:	f800283a 	ret

0004698c <localeconv>:
   4698c:	00800174 	movhi	r2,5
   46990:	10888e04 	addi	r2,r2,8760
   46994:	f800283a 	ret

00046998 <__smakebuf_r>:
   46998:	2880030b 	ldhu	r2,12(r5)
   4699c:	deffe804 	addi	sp,sp,-96
   469a0:	dc001215 	stw	r16,72(sp)
   469a4:	dfc01715 	stw	ra,92(sp)
   469a8:	dd001615 	stw	r20,88(sp)
   469ac:	dcc01515 	stw	r19,84(sp)
   469b0:	dc801415 	stw	r18,80(sp)
   469b4:	dc401315 	stw	r17,76(sp)
   469b8:	10c0008c 	andi	r3,r2,2
   469bc:	2821883a 	mov	r16,r5
   469c0:	18000d26 	beq	r3,zero,469f8 <__smakebuf_r+0x60>
   469c4:	288010c4 	addi	r2,r5,67
   469c8:	28800015 	stw	r2,0(r5)
   469cc:	28800415 	stw	r2,16(r5)
   469d0:	00800044 	movi	r2,1
   469d4:	28800515 	stw	r2,20(r5)
   469d8:	dfc01717 	ldw	ra,92(sp)
   469dc:	dd001617 	ldw	r20,88(sp)
   469e0:	dcc01517 	ldw	r19,84(sp)
   469e4:	dc801417 	ldw	r18,80(sp)
   469e8:	dc401317 	ldw	r17,76(sp)
   469ec:	dc001217 	ldw	r16,72(sp)
   469f0:	dec01804 	addi	sp,sp,96
   469f4:	f800283a 	ret
   469f8:	2940038f 	ldh	r5,14(r5)
   469fc:	2023883a 	mov	r17,r4
   46a00:	28002816 	blt	r5,zero,46aa4 <__smakebuf_r+0x10c>
   46a04:	d80d883a 	mov	r6,sp
   46a08:	004aa880 	call	4aa88 <_fstat_r>
   46a0c:	10002416 	blt	r2,zero,46aa0 <__smakebuf_r+0x108>
   46a10:	d8800117 	ldw	r2,4(sp)
   46a14:	10bc000c 	andi	r2,r2,61440
   46a18:	10880018 	cmpnei	r2,r2,8192
   46a1c:	1000421e 	bne	r2,zero,46b28 <__smakebuf_r+0x190>
   46a20:	8140038f 	ldh	r5,14(r16)
   46a24:	8809883a 	mov	r4,r17
   46a28:	004aae80 	call	4aae8 <_isatty_r>
   46a2c:	10000826 	beq	r2,zero,46a50 <__smakebuf_r+0xb8>
   46a30:	8080030b 	ldhu	r2,12(r16)
   46a34:	80c010c4 	addi	r3,r16,67
   46a38:	80c00015 	stw	r3,0(r16)
   46a3c:	10800054 	ori	r2,r2,1
   46a40:	8080030d 	sth	r2,12(r16)
   46a44:	00800044 	movi	r2,1
   46a48:	80c00415 	stw	r3,16(r16)
   46a4c:	80800515 	stw	r2,20(r16)
   46a50:	04c00044 	movi	r19,1
   46a54:	05010004 	movi	r20,1024
   46a58:	04820004 	movi	r18,2048
   46a5c:	a00b883a 	mov	r5,r20
   46a60:	8809883a 	mov	r4,r17
   46a64:	0046bc40 	call	46bc4 <_malloc_r>
   46a68:	10001726 	beq	r2,zero,46ac8 <__smakebuf_r+0x130>
   46a6c:	80c0030b 	ldhu	r3,12(r16)
   46a70:	01000134 	movhi	r4,4
   46a74:	2116fd04 	addi	r4,r4,23540
   46a78:	89000f15 	stw	r4,60(r17)
   46a7c:	18c02014 	ori	r3,r3,128
   46a80:	80c0030d 	sth	r3,12(r16)
   46a84:	80800015 	stw	r2,0(r16)
   46a88:	80800415 	stw	r2,16(r16)
   46a8c:	85000515 	stw	r20,20(r16)
   46a90:	98001d1e 	bne	r19,zero,46b08 <__smakebuf_r+0x170>
   46a94:	90e4b03a 	or	r18,r18,r3
   46a98:	8480030d 	sth	r18,12(r16)
   46a9c:	003fce06 	br	469d8 <__smakebuf_r+0x40>
   46aa0:	8080030b 	ldhu	r2,12(r16)
   46aa4:	1080200c 	andi	r2,r2,128
   46aa8:	0027883a 	mov	r19,zero
   46aac:	10001326 	beq	r2,zero,46afc <__smakebuf_r+0x164>
   46ab0:	05001004 	movi	r20,64
   46ab4:	a00b883a 	mov	r5,r20
   46ab8:	8809883a 	mov	r4,r17
   46abc:	0025883a 	mov	r18,zero
   46ac0:	0046bc40 	call	46bc4 <_malloc_r>
   46ac4:	103fe91e 	bne	r2,zero,46a6c <__smakebuf_r+0xd4>
   46ac8:	8080030b 	ldhu	r2,12(r16)
   46acc:	10c0800c 	andi	r3,r2,512
   46ad0:	183fc11e 	bne	r3,zero,469d8 <__smakebuf_r+0x40>
   46ad4:	00ffff04 	movi	r3,-4
   46ad8:	10c4703a 	and	r2,r2,r3
   46adc:	10800094 	ori	r2,r2,2
   46ae0:	80c010c4 	addi	r3,r16,67
   46ae4:	8080030d 	sth	r2,12(r16)
   46ae8:	00800044 	movi	r2,1
   46aec:	80c00015 	stw	r3,0(r16)
   46af0:	80c00415 	stw	r3,16(r16)
   46af4:	80800515 	stw	r2,20(r16)
   46af8:	003fb706 	br	469d8 <__smakebuf_r+0x40>
   46afc:	05010004 	movi	r20,1024
   46b00:	0025883a 	mov	r18,zero
   46b04:	003fd506 	br	46a5c <__smakebuf_r+0xc4>
   46b08:	8140038f 	ldh	r5,14(r16)
   46b0c:	8809883a 	mov	r4,r17
   46b10:	004aae80 	call	4aae8 <_isatty_r>
   46b14:	80c0030b 	ldhu	r3,12(r16)
   46b18:	103fde26 	beq	r2,zero,46a94 <__smakebuf_r+0xfc>
   46b1c:	18ffff0c 	andi	r3,r3,65532
   46b20:	18c00054 	ori	r3,r3,1
   46b24:	003fdb06 	br	46a94 <__smakebuf_r+0xfc>
   46b28:	0027883a 	mov	r19,zero
   46b2c:	05010004 	movi	r20,1024
   46b30:	04820004 	movi	r18,2048
   46b34:	003fc906 	br	46a5c <__smakebuf_r+0xc4>

00046b38 <__swhatbuf_r>:
   46b38:	deffea04 	addi	sp,sp,-88
   46b3c:	dc001215 	stw	r16,72(sp)
   46b40:	2821883a 	mov	r16,r5
   46b44:	2940038f 	ldh	r5,14(r5)
   46b48:	dc801415 	stw	r18,80(sp)
   46b4c:	dc401315 	stw	r17,76(sp)
   46b50:	dfc01515 	stw	ra,84(sp)
   46b54:	3023883a 	mov	r17,r6
   46b58:	3825883a 	mov	r18,r7
   46b5c:	28001016 	blt	r5,zero,46ba0 <__swhatbuf_r+0x68>
   46b60:	d80d883a 	mov	r6,sp
   46b64:	004aa880 	call	4aa88 <_fstat_r>
   46b68:	10000d16 	blt	r2,zero,46ba0 <__swhatbuf_r+0x68>
   46b6c:	d8c00117 	ldw	r3,4(sp)
   46b70:	01010004 	movi	r4,1024
   46b74:	00820004 	movi	r2,2048
   46b78:	18fc000c 	andi	r3,r3,61440
   46b7c:	18c80020 	cmpeqi	r3,r3,8192
   46b80:	90c00015 	stw	r3,0(r18)
   46b84:	89000015 	stw	r4,0(r17)
   46b88:	dfc01517 	ldw	ra,84(sp)
   46b8c:	dc801417 	ldw	r18,80(sp)
   46b90:	dc401317 	ldw	r17,76(sp)
   46b94:	dc001217 	ldw	r16,72(sp)
   46b98:	dec01604 	addi	sp,sp,88
   46b9c:	f800283a 	ret
   46ba0:	8080030b 	ldhu	r2,12(r16)
   46ba4:	0007883a 	mov	r3,zero
   46ba8:	1080200c 	andi	r2,r2,128
   46bac:	10000326 	beq	r2,zero,46bbc <__swhatbuf_r+0x84>
   46bb0:	01001004 	movi	r4,64
   46bb4:	0005883a 	mov	r2,zero
   46bb8:	003ff106 	br	46b80 <__swhatbuf_r+0x48>
   46bbc:	01010004 	movi	r4,1024
   46bc0:	003fef06 	br	46b80 <__swhatbuf_r+0x48>

00046bc4 <_malloc_r>:
   46bc4:	defff604 	addi	sp,sp,-40
   46bc8:	dc400115 	stw	r17,4(sp)
   46bcc:	2c4002c4 	addi	r17,r5,11
   46bd0:	dc800215 	stw	r18,8(sp)
   46bd4:	dfc00915 	stw	ra,36(sp)
   46bd8:	df000815 	stw	fp,32(sp)
   46bdc:	ddc00715 	stw	r23,28(sp)
   46be0:	dd800615 	stw	r22,24(sp)
   46be4:	dd400515 	stw	r21,20(sp)
   46be8:	dd000415 	stw	r20,16(sp)
   46bec:	dcc00315 	stw	r19,12(sp)
   46bf0:	dc000015 	stw	r16,0(sp)
   46bf4:	888005e8 	cmpgeui	r2,r17,23
   46bf8:	2025883a 	mov	r18,r4
   46bfc:	1000261e 	bne	r2,zero,46c98 <_malloc_r+0xd4>
   46c00:	29400468 	cmpgeui	r5,r5,17
   46c04:	28008d1e 	bne	r5,zero,46e3c <_malloc_r+0x278>
   46c08:	004f1e80 	call	4f1e8 <__malloc_lock>
   46c0c:	04400404 	movi	r17,16
   46c10:	00800604 	movi	r2,24
   46c14:	01c00084 	movi	r7,2
   46c18:	04c00174 	movhi	r19,5
   46c1c:	9cc75004 	addi	r19,r19,7488
   46c20:	9885883a 	add	r2,r19,r2
   46c24:	14000117 	ldw	r16,4(r2)
   46c28:	10fffe04 	addi	r3,r2,-8
   46c2c:	80c0cb26 	beq	r16,r3,46f5c <_malloc_r+0x398>
   46c30:	80800117 	ldw	r2,4(r16)
   46c34:	81000317 	ldw	r4,12(r16)
   46c38:	00ffff04 	movi	r3,-4
   46c3c:	10c4703a 	and	r2,r2,r3
   46c40:	81400217 	ldw	r5,8(r16)
   46c44:	8085883a 	add	r2,r16,r2
   46c48:	10c00117 	ldw	r3,4(r2)
   46c4c:	29000315 	stw	r4,12(r5)
   46c50:	21400215 	stw	r5,8(r4)
   46c54:	18c00054 	ori	r3,r3,1
   46c58:	10c00115 	stw	r3,4(r2)
   46c5c:	9009883a 	mov	r4,r18
   46c60:	004f20c0 	call	4f20c <__malloc_unlock>
   46c64:	80800204 	addi	r2,r16,8
   46c68:	dfc00917 	ldw	ra,36(sp)
   46c6c:	df000817 	ldw	fp,32(sp)
   46c70:	ddc00717 	ldw	r23,28(sp)
   46c74:	dd800617 	ldw	r22,24(sp)
   46c78:	dd400517 	ldw	r21,20(sp)
   46c7c:	dd000417 	ldw	r20,16(sp)
   46c80:	dcc00317 	ldw	r19,12(sp)
   46c84:	dc800217 	ldw	r18,8(sp)
   46c88:	dc400117 	ldw	r17,4(sp)
   46c8c:	dc000017 	ldw	r16,0(sp)
   46c90:	dec00a04 	addi	sp,sp,40
   46c94:	f800283a 	ret
   46c98:	00bffe04 	movi	r2,-8
   46c9c:	88a2703a 	and	r17,r17,r2
   46ca0:	88006616 	blt	r17,zero,46e3c <_malloc_r+0x278>
   46ca4:	89406536 	bltu	r17,r5,46e3c <_malloc_r+0x278>
   46ca8:	004f1e80 	call	4f1e8 <__malloc_lock>
   46cac:	88807e28 	cmpgeui	r2,r17,504
   46cb0:	1000ef26 	beq	r2,zero,47070 <_malloc_r+0x4ac>
   46cb4:	8804d27a 	srli	r2,r17,9
   46cb8:	10006426 	beq	r2,zero,46e4c <_malloc_r+0x288>
   46cbc:	10c00168 	cmpgeui	r3,r2,5
   46cc0:	1800c31e 	bne	r3,zero,46fd0 <_malloc_r+0x40c>
   46cc4:	8804d1ba 	srli	r2,r17,6
   46cc8:	11c00e44 	addi	r7,r2,57
   46ccc:	380890fa 	slli	r4,r7,3
   46cd0:	12000e04 	addi	r8,r2,56
   46cd4:	04c00174 	movhi	r19,5
   46cd8:	9cc75004 	addi	r19,r19,7488
   46cdc:	9909883a 	add	r4,r19,r4
   46ce0:	24000117 	ldw	r16,4(r4)
   46ce4:	213ffe04 	addi	r4,r4,-8
   46ce8:	24000b26 	beq	r4,r16,46d18 <_malloc_r+0x154>
   46cec:	01bfff04 	movi	r6,-4
   46cf0:	00000306 	br	46d00 <_malloc_r+0x13c>
   46cf4:	1800970e 	bge	r3,zero,46f54 <_malloc_r+0x390>
   46cf8:	84000317 	ldw	r16,12(r16)
   46cfc:	24000626 	beq	r4,r16,46d18 <_malloc_r+0x154>
   46d00:	80800117 	ldw	r2,4(r16)
   46d04:	1184703a 	and	r2,r2,r6
   46d08:	1447c83a 	sub	r3,r2,r17
   46d0c:	19400408 	cmpgei	r5,r3,16
   46d10:	283ff826 	beq	r5,zero,46cf4 <_malloc_r+0x130>
   46d14:	400f883a 	mov	r7,r8
   46d18:	9c000417 	ldw	r16,16(r19)
   46d1c:	02400174 	movhi	r9,5
   46d20:	4a475204 	addi	r9,r9,7496
   46d24:	82407f26 	beq	r16,r9,46f24 <_malloc_r+0x360>
   46d28:	80800117 	ldw	r2,4(r16)
   46d2c:	00ffff04 	movi	r3,-4
   46d30:	10c4703a 	and	r2,r2,r3
   46d34:	1447c83a 	sub	r3,r2,r17
   46d38:	19000410 	cmplti	r4,r3,16
   46d3c:	2000cf26 	beq	r4,zero,4707c <_malloc_r+0x4b8>
   46d40:	9a400515 	stw	r9,20(r19)
   46d44:	9a400415 	stw	r9,16(r19)
   46d48:	1800c10e 	bge	r3,zero,47050 <_malloc_r+0x48c>
   46d4c:	10c08028 	cmpgeui	r3,r2,512
   46d50:	99400117 	ldw	r5,4(r19)
   46d54:	1800851e 	bne	r3,zero,46f6c <_malloc_r+0x3a8>
   46d58:	1006d0fa 	srli	r3,r2,3
   46d5c:	1008d17a 	srli	r4,r2,5
   46d60:	18800044 	addi	r2,r3,1
   46d64:	100490fa 	slli	r2,r2,3
   46d68:	00c00044 	movi	r3,1
   46d6c:	1906983a 	sll	r3,r3,r4
   46d70:	9885883a 	add	r2,r19,r2
   46d74:	11000017 	ldw	r4,0(r2)
   46d78:	28cab03a 	or	r5,r5,r3
   46d7c:	10fffe04 	addi	r3,r2,-8
   46d80:	80c00315 	stw	r3,12(r16)
   46d84:	81000215 	stw	r4,8(r16)
   46d88:	99400115 	stw	r5,4(r19)
   46d8c:	14000015 	stw	r16,0(r2)
   46d90:	24000315 	stw	r16,12(r4)
   46d94:	3805d0ba 	srai	r2,r7,2
   46d98:	01000044 	movi	r4,1
   46d9c:	2088983a 	sll	r4,r4,r2
   46da0:	29002e36 	bltu	r5,r4,46e5c <_malloc_r+0x298>
   46da4:	2144703a 	and	r2,r4,r5
   46da8:	10000a1e 	bne	r2,zero,46dd4 <_malloc_r+0x210>
   46dac:	2109883a 	add	r4,r4,r4
   46db0:	00bfff04 	movi	r2,-4
   46db4:	3884703a 	and	r2,r7,r2
   46db8:	2146703a 	and	r3,r4,r5
   46dbc:	11c00104 	addi	r7,r2,4
   46dc0:	1800041e 	bne	r3,zero,46dd4 <_malloc_r+0x210>
   46dc4:	2109883a 	add	r4,r4,r4
   46dc8:	2144703a 	and	r2,r4,r5
   46dcc:	39c00104 	addi	r7,r7,4
   46dd0:	103ffc26 	beq	r2,zero,46dc4 <_malloc_r+0x200>
   46dd4:	02bfff04 	movi	r10,-4
   46dd8:	381690fa 	slli	r11,r7,3
   46ddc:	3819883a 	mov	r12,r7
   46de0:	9ad7883a 	add	r11,r19,r11
   46de4:	5811883a 	mov	r8,r11
   46de8:	40800317 	ldw	r2,12(r8)
   46dec:	40808126 	beq	r8,r2,46ff4 <_malloc_r+0x430>
   46df0:	10c00117 	ldw	r3,4(r2)
   46df4:	1021883a 	mov	r16,r2
   46df8:	10800317 	ldw	r2,12(r2)
   46dfc:	1a86703a 	and	r3,r3,r10
   46e00:	1c4bc83a 	sub	r5,r3,r17
   46e04:	29800410 	cmplti	r6,r5,16
   46e08:	30007f26 	beq	r6,zero,47008 <_malloc_r+0x444>
   46e0c:	283ff716 	blt	r5,zero,46dec <_malloc_r+0x228>
   46e10:	80c7883a 	add	r3,r16,r3
   46e14:	19400117 	ldw	r5,4(r3)
   46e18:	81800217 	ldw	r6,8(r16)
   46e1c:	9009883a 	mov	r4,r18
   46e20:	29400054 	ori	r5,r5,1
   46e24:	19400115 	stw	r5,4(r3)
   46e28:	30800315 	stw	r2,12(r6)
   46e2c:	11800215 	stw	r6,8(r2)
   46e30:	004f20c0 	call	4f20c <__malloc_unlock>
   46e34:	80800204 	addi	r2,r16,8
   46e38:	003f8b06 	br	46c68 <_malloc_r+0xa4>
   46e3c:	00800304 	movi	r2,12
   46e40:	90800015 	stw	r2,0(r18)
   46e44:	0005883a 	mov	r2,zero
   46e48:	003f8706 	br	46c68 <_malloc_r+0xa4>
   46e4c:	01008004 	movi	r4,512
   46e50:	01c01004 	movi	r7,64
   46e54:	02000fc4 	movi	r8,63
   46e58:	003f9e06 	br	46cd4 <_malloc_r+0x110>
   46e5c:	9c000217 	ldw	r16,8(r19)
   46e60:	00bfff04 	movi	r2,-4
   46e64:	80c00117 	ldw	r3,4(r16)
   46e68:	18aa703a 	and	r21,r3,r2
   46e6c:	ac400336 	bltu	r21,r17,46e7c <_malloc_r+0x2b8>
   46e70:	ac47c83a 	sub	r3,r21,r17
   46e74:	18800408 	cmpgei	r2,r3,16
   46e78:	10002c1e 	bne	r2,zero,46f2c <_malloc_r+0x368>
   46e7c:	00800174 	movhi	r2,5
   46e80:	108d3117 	ldw	r2,13508(r2)
   46e84:	00c00174 	movhi	r3,5
   46e88:	1d143817 	ldw	r20,20704(r3)
   46e8c:	10bfffd8 	cmpnei	r2,r2,-1
   46e90:	856f883a 	add	r23,r16,r21
   46e94:	8d29883a 	add	r20,r17,r20
   46e98:	1000e726 	beq	r2,zero,47238 <_malloc_r+0x674>
   46e9c:	a50403c4 	addi	r20,r20,4111
   46ea0:	00bc0004 	movi	r2,-4096
   46ea4:	a0a8703a 	and	r20,r20,r2
   46ea8:	a00b883a 	mov	r5,r20
   46eac:	9009883a 	mov	r4,r18
   46eb0:	0048eb00 	call	48eb0 <_sbrk_r>
   46eb4:	102d883a 	mov	r22,r2
   46eb8:	10bfffd8 	cmpnei	r2,r2,-1
   46ebc:	10008426 	beq	r2,zero,470d0 <_malloc_r+0x50c>
   46ec0:	b5c08236 	bltu	r22,r23,470cc <_malloc_r+0x508>
   46ec4:	00800174 	movhi	r2,5
   46ec8:	11144317 	ldw	r4,20748(r2)
   46ecc:	a109883a 	add	r4,r20,r4
   46ed0:	11144315 	stw	r4,20748(r2)
   46ed4:	2007883a 	mov	r3,r4
   46ed8:	bd80a51e 	bne	r23,r22,47170 <_malloc_r+0x5ac>
   46edc:	b083ffcc 	andi	r2,r22,4095
   46ee0:	1000a31e 	bne	r2,zero,47170 <_malloc_r+0x5ac>
   46ee4:	9d800217 	ldw	r22,8(r19)
   46ee8:	ad07883a 	add	r3,r21,r20
   46eec:	18c00054 	ori	r3,r3,1
   46ef0:	b0c00115 	stw	r3,4(r22)
   46ef4:	00800174 	movhi	r2,5
   46ef8:	10943717 	ldw	r2,20700(r2)
   46efc:	1100022e 	bgeu	r2,r4,46f08 <_malloc_r+0x344>
   46f00:	00800174 	movhi	r2,5
   46f04:	11143715 	stw	r4,20700(r2)
   46f08:	00800174 	movhi	r2,5
   46f0c:	10943617 	ldw	r2,20696(r2)
   46f10:	1100022e 	bgeu	r2,r4,46f1c <_malloc_r+0x358>
   46f14:	00800174 	movhi	r2,5
   46f18:	11143615 	stw	r4,20696(r2)
   46f1c:	b021883a 	mov	r16,r22
   46f20:	00006d06 	br	470d8 <_malloc_r+0x514>
   46f24:	99400117 	ldw	r5,4(r19)
   46f28:	003f9a06 	br	46d94 <_malloc_r+0x1d0>
   46f2c:	88800054 	ori	r2,r17,1
   46f30:	80800115 	stw	r2,4(r16)
   46f34:	8463883a 	add	r17,r16,r17
   46f38:	9c400215 	stw	r17,8(r19)
   46f3c:	18c00054 	ori	r3,r3,1
   46f40:	88c00115 	stw	r3,4(r17)
   46f44:	9009883a 	mov	r4,r18
   46f48:	004f20c0 	call	4f20c <__malloc_unlock>
   46f4c:	80800204 	addi	r2,r16,8
   46f50:	003f4506 	br	46c68 <_malloc_r+0xa4>
   46f54:	81000317 	ldw	r4,12(r16)
   46f58:	003f3906 	br	46c40 <_malloc_r+0x7c>
   46f5c:	14000317 	ldw	r16,12(r2)
   46f60:	143f331e 	bne	r2,r16,46c30 <_malloc_r+0x6c>
   46f64:	39c00084 	addi	r7,r7,2
   46f68:	003f6b06 	br	46d18 <_malloc_r+0x154>
   46f6c:	1006d27a 	srli	r3,r2,9
   46f70:	19000168 	cmpgeui	r4,r3,5
   46f74:	20005026 	beq	r4,zero,470b8 <_malloc_r+0x4f4>
   46f78:	19000568 	cmpgeui	r4,r3,21
   46f7c:	2000c01e 	bne	r4,zero,47280 <_malloc_r+0x6bc>
   46f80:	19801704 	addi	r6,r3,92
   46f84:	300c90fa 	slli	r6,r6,3
   46f88:	190016c4 	addi	r4,r3,91
   46f8c:	998d883a 	add	r6,r19,r6
   46f90:	30c00017 	ldw	r3,0(r6)
   46f94:	31bffe04 	addi	r6,r6,-8
   46f98:	30c0a926 	beq	r6,r3,47240 <_malloc_r+0x67c>
   46f9c:	023fff04 	movi	r8,-4
   46fa0:	00000206 	br	46fac <_malloc_r+0x3e8>
   46fa4:	18c00217 	ldw	r3,8(r3)
   46fa8:	30c00326 	beq	r6,r3,46fb8 <_malloc_r+0x3f4>
   46fac:	19000117 	ldw	r4,4(r3)
   46fb0:	2208703a 	and	r4,r4,r8
   46fb4:	113ffb36 	bltu	r2,r4,46fa4 <_malloc_r+0x3e0>
   46fb8:	19800317 	ldw	r6,12(r3)
   46fbc:	81800315 	stw	r6,12(r16)
   46fc0:	80c00215 	stw	r3,8(r16)
   46fc4:	34000215 	stw	r16,8(r6)
   46fc8:	1c000315 	stw	r16,12(r3)
   46fcc:	003f7106 	br	46d94 <_malloc_r+0x1d0>
   46fd0:	10c00568 	cmpgeui	r3,r2,21
   46fd4:	18004926 	beq	r3,zero,470fc <_malloc_r+0x538>
   46fd8:	10c01568 	cmpgeui	r3,r2,85
   46fdc:	1800af1e 	bne	r3,zero,4729c <_malloc_r+0x6d8>
   46fe0:	8804d33a 	srli	r2,r17,12
   46fe4:	11c01bc4 	addi	r7,r2,111
   46fe8:	380890fa 	slli	r4,r7,3
   46fec:	12001b84 	addi	r8,r2,110
   46ff0:	003f3806 	br	46cd4 <_malloc_r+0x110>
   46ff4:	63000044 	addi	r12,r12,1
   46ff8:	608000cc 	andi	r2,r12,3
   46ffc:	42000204 	addi	r8,r8,8
   47000:	103f791e 	bne	r2,zero,46de8 <_malloc_r+0x224>
   47004:	00004406 	br	47118 <_malloc_r+0x554>
   47008:	81000217 	ldw	r4,8(r16)
   4700c:	89800054 	ori	r6,r17,1
   47010:	81800115 	stw	r6,4(r16)
   47014:	20800315 	stw	r2,12(r4)
   47018:	11000215 	stw	r4,8(r2)
   4701c:	8463883a 	add	r17,r16,r17
   47020:	9c400515 	stw	r17,20(r19)
   47024:	9c400415 	stw	r17,16(r19)
   47028:	28800054 	ori	r2,r5,1
   4702c:	88800115 	stw	r2,4(r17)
   47030:	8a400315 	stw	r9,12(r17)
   47034:	8a400215 	stw	r9,8(r17)
   47038:	80c7883a 	add	r3,r16,r3
   4703c:	19400015 	stw	r5,0(r3)
   47040:	9009883a 	mov	r4,r18
   47044:	004f20c0 	call	4f20c <__malloc_unlock>
   47048:	80800204 	addi	r2,r16,8
   4704c:	003f0606 	br	46c68 <_malloc_r+0xa4>
   47050:	8085883a 	add	r2,r16,r2
   47054:	10c00117 	ldw	r3,4(r2)
   47058:	9009883a 	mov	r4,r18
   4705c:	18c00054 	ori	r3,r3,1
   47060:	10c00115 	stw	r3,4(r2)
   47064:	004f20c0 	call	4f20c <__malloc_unlock>
   47068:	80800204 	addi	r2,r16,8
   4706c:	003efe06 	br	46c68 <_malloc_r+0xa4>
   47070:	880ed0fa 	srli	r7,r17,3
   47074:	88800204 	addi	r2,r17,8
   47078:	003ee706 	br	46c18 <_malloc_r+0x54>
   4707c:	89000054 	ori	r4,r17,1
   47080:	81000115 	stw	r4,4(r16)
   47084:	8463883a 	add	r17,r16,r17
   47088:	9c400515 	stw	r17,20(r19)
   4708c:	9c400415 	stw	r17,16(r19)
   47090:	19000054 	ori	r4,r3,1
   47094:	89000115 	stw	r4,4(r17)
   47098:	8085883a 	add	r2,r16,r2
   4709c:	8a400315 	stw	r9,12(r17)
   470a0:	8a400215 	stw	r9,8(r17)
   470a4:	10c00015 	stw	r3,0(r2)
   470a8:	9009883a 	mov	r4,r18
   470ac:	004f20c0 	call	4f20c <__malloc_unlock>
   470b0:	80800204 	addi	r2,r16,8
   470b4:	003eec06 	br	46c68 <_malloc_r+0xa4>
   470b8:	1006d1ba 	srli	r3,r2,6
   470bc:	19800e44 	addi	r6,r3,57
   470c0:	300c90fa 	slli	r6,r6,3
   470c4:	19000e04 	addi	r4,r3,56
   470c8:	003fb006 	br	46f8c <_malloc_r+0x3c8>
   470cc:	84c02426 	beq	r16,r19,47160 <_malloc_r+0x59c>
   470d0:	9c000217 	ldw	r16,8(r19)
   470d4:	80c00117 	ldw	r3,4(r16)
   470d8:	00bfff04 	movi	r2,-4
   470dc:	1884703a 	and	r2,r3,r2
   470e0:	1447c83a 	sub	r3,r2,r17
   470e4:	14400236 	bltu	r2,r17,470f0 <_malloc_r+0x52c>
   470e8:	18800408 	cmpgei	r2,r3,16
   470ec:	103f8f1e 	bne	r2,zero,46f2c <_malloc_r+0x368>
   470f0:	9009883a 	mov	r4,r18
   470f4:	004f20c0 	call	4f20c <__malloc_unlock>
   470f8:	003f5206 	br	46e44 <_malloc_r+0x280>
   470fc:	11c01704 	addi	r7,r2,92
   47100:	380890fa 	slli	r4,r7,3
   47104:	120016c4 	addi	r8,r2,91
   47108:	003ef206 	br	46cd4 <_malloc_r+0x110>
   4710c:	58800217 	ldw	r2,8(r11)
   47110:	39ffffc4 	addi	r7,r7,-1
   47114:	12c0961e 	bne	r2,r11,47370 <_malloc_r+0x7ac>
   47118:	388000cc 	andi	r2,r7,3
   4711c:	5afffe04 	addi	r11,r11,-8
   47120:	103ffa1e 	bne	r2,zero,4710c <_malloc_r+0x548>
   47124:	98c00117 	ldw	r3,4(r19)
   47128:	0104303a 	nor	r2,zero,r4
   4712c:	10c4703a 	and	r2,r2,r3
   47130:	98800115 	stw	r2,4(r19)
   47134:	2109883a 	add	r4,r4,r4
   47138:	113f4836 	bltu	r2,r4,46e5c <_malloc_r+0x298>
   4713c:	203f4726 	beq	r4,zero,46e5c <_malloc_r+0x298>
   47140:	2086703a 	and	r3,r4,r2
   47144:	1800041e 	bne	r3,zero,47158 <_malloc_r+0x594>
   47148:	2109883a 	add	r4,r4,r4
   4714c:	2086703a 	and	r3,r4,r2
   47150:	63000104 	addi	r12,r12,4
   47154:	183ffc26 	beq	r3,zero,47148 <_malloc_r+0x584>
   47158:	600f883a 	mov	r7,r12
   4715c:	003f1e06 	br	46dd8 <_malloc_r+0x214>
   47160:	00800174 	movhi	r2,5
   47164:	10d44317 	ldw	r3,20748(r2)
   47168:	a0c7883a 	add	r3,r20,r3
   4716c:	10d44315 	stw	r3,20748(r2)
   47170:	00800174 	movhi	r2,5
   47174:	108d3117 	ldw	r2,13508(r2)
   47178:	10bfffd8 	cmpnei	r2,r2,-1
   4717c:	10004e26 	beq	r2,zero,472b8 <_malloc_r+0x6f4>
   47180:	b5c5c83a 	sub	r2,r22,r23
   47184:	10c5883a 	add	r2,r2,r3
   47188:	00c00174 	movhi	r3,5
   4718c:	18944315 	stw	r2,20748(r3)
   47190:	b70001cc 	andi	fp,r22,7
   47194:	e0003026 	beq	fp,zero,47258 <_malloc_r+0x694>
   47198:	b72dc83a 	sub	r22,r22,fp
   4719c:	b5800204 	addi	r22,r22,8
   471a0:	01040204 	movi	r4,4104
   471a4:	2709c83a 	sub	r4,r4,fp
   471a8:	b529883a 	add	r20,r22,r20
   471ac:	2509c83a 	sub	r4,r4,r20
   471b0:	25c3ffcc 	andi	r23,r4,4095
   471b4:	b80b883a 	mov	r5,r23
   471b8:	9009883a 	mov	r4,r18
   471bc:	0048eb00 	call	48eb0 <_sbrk_r>
   471c0:	10ffffe0 	cmpeqi	r3,r2,-1
   471c4:	1800501e 	bne	r3,zero,47308 <_malloc_r+0x744>
   471c8:	1585c83a 	sub	r2,r2,r22
   471cc:	15e9883a 	add	r20,r2,r23
   471d0:	00800174 	movhi	r2,5
   471d4:	10944317 	ldw	r2,20748(r2)
   471d8:	9d800215 	stw	r22,8(r19)
   471dc:	a0c00054 	ori	r3,r20,1
   471e0:	b889883a 	add	r4,r23,r2
   471e4:	00800174 	movhi	r2,5
   471e8:	11144315 	stw	r4,20748(r2)
   471ec:	b0c00115 	stw	r3,4(r22)
   471f0:	84ff4026 	beq	r16,r19,46ef4 <_malloc_r+0x330>
   471f4:	a8800428 	cmpgeui	r2,r21,16
   471f8:	10003226 	beq	r2,zero,472c4 <_malloc_r+0x700>
   471fc:	80800117 	ldw	r2,4(r16)
   47200:	017ffe04 	movi	r5,-8
   47204:	a8fffd04 	addi	r3,r21,-12
   47208:	1946703a 	and	r3,r3,r5
   4720c:	1080004c 	andi	r2,r2,1
   47210:	10c4b03a 	or	r2,r2,r3
   47214:	80800115 	stw	r2,4(r16)
   47218:	01400144 	movi	r5,5
   4721c:	80c5883a 	add	r2,r16,r3
   47220:	11400115 	stw	r5,4(r2)
   47224:	11400215 	stw	r5,8(r2)
   47228:	18c00428 	cmpgeui	r3,r3,16
   4722c:	18003b1e 	bne	r3,zero,4731c <_malloc_r+0x758>
   47230:	b0c00117 	ldw	r3,4(r22)
   47234:	003f2f06 	br	46ef4 <_malloc_r+0x330>
   47238:	a5000404 	addi	r20,r20,16
   4723c:	003f1a06 	br	46ea8 <_malloc_r+0x2e4>
   47240:	2009d0ba 	srai	r4,r4,2
   47244:	00800044 	movi	r2,1
   47248:	1104983a 	sll	r2,r2,r4
   4724c:	288ab03a 	or	r5,r5,r2
   47250:	99400115 	stw	r5,4(r19)
   47254:	003f5906 	br	46fbc <_malloc_r+0x3f8>
   47258:	b509883a 	add	r4,r22,r20
   4725c:	0109c83a 	sub	r4,zero,r4
   47260:	25c3ffcc 	andi	r23,r4,4095
   47264:	b80b883a 	mov	r5,r23
   47268:	9009883a 	mov	r4,r18
   4726c:	0048eb00 	call	48eb0 <_sbrk_r>
   47270:	10ffffe0 	cmpeqi	r3,r2,-1
   47274:	183fd426 	beq	r3,zero,471c8 <_malloc_r+0x604>
   47278:	002f883a 	mov	r23,zero
   4727c:	003fd406 	br	471d0 <_malloc_r+0x60c>
   47280:	19001568 	cmpgeui	r4,r3,85
   47284:	2000121e 	bne	r4,zero,472d0 <_malloc_r+0x70c>
   47288:	1006d33a 	srli	r3,r2,12
   4728c:	19801bc4 	addi	r6,r3,111
   47290:	300c90fa 	slli	r6,r6,3
   47294:	19001b84 	addi	r4,r3,110
   47298:	003f3c06 	br	46f8c <_malloc_r+0x3c8>
   4729c:	10c05568 	cmpgeui	r3,r2,341
   472a0:	1800121e 	bne	r3,zero,472ec <_malloc_r+0x728>
   472a4:	8804d3fa 	srli	r2,r17,15
   472a8:	11c01e04 	addi	r7,r2,120
   472ac:	380890fa 	slli	r4,r7,3
   472b0:	12001dc4 	addi	r8,r2,119
   472b4:	003e8706 	br	46cd4 <_malloc_r+0x110>
   472b8:	00800174 	movhi	r2,5
   472bc:	158d3115 	stw	r22,13508(r2)
   472c0:	003fb306 	br	47190 <_malloc_r+0x5cc>
   472c4:	00800044 	movi	r2,1
   472c8:	b0800115 	stw	r2,4(r22)
   472cc:	003f8806 	br	470f0 <_malloc_r+0x52c>
   472d0:	19005568 	cmpgeui	r4,r3,341
   472d4:	2000181e 	bne	r4,zero,47338 <_malloc_r+0x774>
   472d8:	1006d3fa 	srli	r3,r2,15
   472dc:	19801e04 	addi	r6,r3,120
   472e0:	300c90fa 	slli	r6,r6,3
   472e4:	19001dc4 	addi	r4,r3,119
   472e8:	003f2806 	br	46f8c <_malloc_r+0x3c8>
   472ec:	10815568 	cmpgeui	r2,r2,1365
   472f0:	1000181e 	bne	r2,zero,47354 <_malloc_r+0x790>
   472f4:	8804d4ba 	srli	r2,r17,18
   472f8:	11c01f44 	addi	r7,r2,125
   472fc:	380890fa 	slli	r4,r7,3
   47300:	12001f04 	addi	r8,r2,124
   47304:	003e7306 	br	46cd4 <_malloc_r+0x110>
   47308:	e73ffe04 	addi	fp,fp,-8
   4730c:	a729883a 	add	r20,r20,fp
   47310:	a5a9c83a 	sub	r20,r20,r22
   47314:	002f883a 	mov	r23,zero
   47318:	003fad06 	br	471d0 <_malloc_r+0x60c>
   4731c:	9009883a 	mov	r4,r18
   47320:	81400204 	addi	r5,r16,8
   47324:	004608c0 	call	4608c <_free_r>
   47328:	00800174 	movhi	r2,5
   4732c:	9d800217 	ldw	r22,8(r19)
   47330:	11144317 	ldw	r4,20748(r2)
   47334:	003fbe06 	br	47230 <_malloc_r+0x66c>
   47338:	18c15568 	cmpgeui	r3,r3,1365
   4733c:	1800091e 	bne	r3,zero,47364 <_malloc_r+0x7a0>
   47340:	1006d4ba 	srli	r3,r2,18
   47344:	19801f44 	addi	r6,r3,125
   47348:	300c90fa 	slli	r6,r6,3
   4734c:	19001f04 	addi	r4,r3,124
   47350:	003f0e06 	br	46f8c <_malloc_r+0x3c8>
   47354:	0100fe04 	movi	r4,1016
   47358:	01c01fc4 	movi	r7,127
   4735c:	02001f84 	movi	r8,126
   47360:	003e5c06 	br	46cd4 <_malloc_r+0x110>
   47364:	0180fe04 	movi	r6,1016
   47368:	01001f84 	movi	r4,126
   4736c:	003f0706 	br	46f8c <_malloc_r+0x3c8>
   47370:	98800117 	ldw	r2,4(r19)
   47374:	003f6f06 	br	47134 <_malloc_r+0x570>

00047378 <memchr>:
   47378:	208000cc 	andi	r2,r4,3
   4737c:	280f883a 	mov	r7,r5
   47380:	10000e26 	beq	r2,zero,473bc <memchr+0x44>
   47384:	30bfffc4 	addi	r2,r6,-1
   47388:	30001726 	beq	r6,zero,473e8 <memchr+0x70>
   4738c:	29803fcc 	andi	r6,r5,255
   47390:	00000606 	br	473ac <memchr+0x34>
   47394:	21000044 	addi	r4,r4,1
   47398:	20c000cc 	andi	r3,r4,3
   4739c:	18000826 	beq	r3,zero,473c0 <memchr+0x48>
   473a0:	10bfffc4 	addi	r2,r2,-1
   473a4:	10ffffe0 	cmpeqi	r3,r2,-1
   473a8:	18000f1e 	bne	r3,zero,473e8 <memchr+0x70>
   473ac:	20c00003 	ldbu	r3,0(r4)
   473b0:	19bff81e 	bne	r3,r6,47394 <memchr+0x1c>
   473b4:	2005883a 	mov	r2,r4
   473b8:	f800283a 	ret
   473bc:	3005883a 	mov	r2,r6
   473c0:	10c00130 	cmpltui	r3,r2,4
   473c4:	18000a26 	beq	r3,zero,473f0 <memchr+0x78>
   473c8:	10001e26 	beq	r2,zero,47444 <memchr+0xcc>
   473cc:	2087883a 	add	r3,r4,r2
   473d0:	39803fcc 	andi	r6,r7,255
   473d4:	2005883a 	mov	r2,r4
   473d8:	11000003 	ldbu	r4,0(r2)
   473dc:	21bff626 	beq	r4,r6,473b8 <memchr+0x40>
   473e0:	10800044 	addi	r2,r2,1
   473e4:	18bffc1e 	bne	r3,r2,473d8 <memchr+0x60>
   473e8:	0005883a 	mov	r2,zero
   473ec:	f800283a 	ret
   473f0:	00c04074 	movhi	r3,257
   473f4:	29403fcc 	andi	r5,r5,255
   473f8:	18c04044 	addi	r3,r3,257
   473fc:	027fbff4 	movhi	r9,65279
   47400:	02202074 	movhi	r8,32897
   47404:	28cd383a 	mul	r6,r5,r3
   47408:	4a7fbfc4 	addi	r9,r9,-257
   4740c:	42202004 	addi	r8,r8,-32640
   47410:	00000406 	br	47424 <memchr+0xac>
   47414:	10bfff04 	addi	r2,r2,-4
   47418:	10c00128 	cmpgeui	r3,r2,4
   4741c:	21000104 	addi	r4,r4,4
   47420:	183fe926 	beq	r3,zero,473c8 <memchr+0x50>
   47424:	20c00017 	ldw	r3,0(r4)
   47428:	30c6f03a 	xor	r3,r6,r3
   4742c:	1a4b883a 	add	r5,r3,r9
   47430:	00c6303a 	nor	r3,zero,r3
   47434:	28c6703a 	and	r3,r5,r3
   47438:	1a06703a 	and	r3,r3,r8
   4743c:	183ff526 	beq	r3,zero,47414 <memchr+0x9c>
   47440:	003fe106 	br	473c8 <memchr+0x50>
   47444:	f800283a 	ret

00047448 <memcpy>:
   47448:	30c00428 	cmpgeui	r3,r6,16
   4744c:	2005883a 	mov	r2,r4
   47450:	18000b1e 	bne	r3,zero,47480 <memcpy+0x38>
   47454:	2007883a 	mov	r3,r4
   47458:	31ffffc4 	addi	r7,r6,-1
   4745c:	30003426 	beq	r6,zero,47530 <memcpy+0xe8>
   47460:	39c00044 	addi	r7,r7,1
   47464:	19cf883a 	add	r7,r3,r7
   47468:	29800003 	ldbu	r6,0(r5)
   4746c:	18c00044 	addi	r3,r3,1
   47470:	29400044 	addi	r5,r5,1
   47474:	19bfffc5 	stb	r6,-1(r3)
   47478:	38fffb1e 	bne	r7,r3,47468 <memcpy+0x20>
   4747c:	f800283a 	ret
   47480:	2146b03a 	or	r3,r4,r5
   47484:	18c000cc 	andi	r3,r3,3
   47488:	18002a1e 	bne	r3,zero,47534 <memcpy+0xec>
   4748c:	333ffc04 	addi	r12,r6,-16
   47490:	6018d13a 	srli	r12,r12,4
   47494:	2811883a 	mov	r8,r5
   47498:	200f883a 	mov	r7,r4
   4749c:	63000044 	addi	r12,r12,1
   474a0:	6018913a 	slli	r12,r12,4
   474a4:	2307883a 	add	r3,r4,r12
   474a8:	42c00017 	ldw	r11,0(r8)
   474ac:	42800117 	ldw	r10,4(r8)
   474b0:	42400217 	ldw	r9,8(r8)
   474b4:	41000317 	ldw	r4,12(r8)
   474b8:	39c00404 	addi	r7,r7,16
   474bc:	3afffc15 	stw	r11,-16(r7)
   474c0:	3abffd15 	stw	r10,-12(r7)
   474c4:	3a7ffe15 	stw	r9,-8(r7)
   474c8:	393fff15 	stw	r4,-4(r7)
   474cc:	42000404 	addi	r8,r8,16
   474d0:	38fff51e 	bne	r7,r3,474a8 <memcpy+0x60>
   474d4:	3100030c 	andi	r4,r6,12
   474d8:	2b0b883a 	add	r5,r5,r12
   474dc:	324003cc 	andi	r9,r6,15
   474e0:	20001726 	beq	r4,zero,47540 <memcpy+0xf8>
   474e4:	2811883a 	mov	r8,r5
   474e8:	1809883a 	mov	r4,r3
   474ec:	1a57883a 	add	r11,r3,r9
   474f0:	42800017 	ldw	r10,0(r8)
   474f4:	21000104 	addi	r4,r4,4
   474f8:	590fc83a 	sub	r7,r11,r4
   474fc:	39c00128 	cmpgeui	r7,r7,4
   47500:	22bfff15 	stw	r10,-4(r4)
   47504:	42000104 	addi	r8,r8,4
   47508:	383ff91e 	bne	r7,zero,474f0 <memcpy+0xa8>
   4750c:	493fff04 	addi	r4,r9,-4
   47510:	2008d0ba 	srli	r4,r4,2
   47514:	318000cc 	andi	r6,r6,3
   47518:	31ffffc4 	addi	r7,r6,-1
   4751c:	21000044 	addi	r4,r4,1
   47520:	200890ba 	slli	r4,r4,2
   47524:	1907883a 	add	r3,r3,r4
   47528:	290b883a 	add	r5,r5,r4
   4752c:	303fcc1e 	bne	r6,zero,47460 <memcpy+0x18>
   47530:	f800283a 	ret
   47534:	31ffffc4 	addi	r7,r6,-1
   47538:	2007883a 	mov	r3,r4
   4753c:	003fc806 	br	47460 <memcpy+0x18>
   47540:	480d883a 	mov	r6,r9
   47544:	003fc406 	br	47458 <memcpy+0x10>

00047548 <memmove>:
   47548:	2005883a 	mov	r2,r4
   4754c:	29000a2e 	bgeu	r5,r4,47578 <memmove+0x30>
   47550:	298f883a 	add	r7,r5,r6
   47554:	21c0082e 	bgeu	r4,r7,47578 <memmove+0x30>
   47558:	2187883a 	add	r3,r4,r6
   4755c:	30001226 	beq	r6,zero,475a8 <memmove+0x60>
   47560:	397fffc3 	ldbu	r5,-1(r7)
   47564:	18ffffc4 	addi	r3,r3,-1
   47568:	39ffffc4 	addi	r7,r7,-1
   4756c:	19400005 	stb	r5,0(r3)
   47570:	10fffb1e 	bne	r2,r3,47560 <memmove+0x18>
   47574:	f800283a 	ret
   47578:	30c00428 	cmpgeui	r3,r6,16
   4757c:	18000b1e 	bne	r3,zero,475ac <memmove+0x64>
   47580:	1007883a 	mov	r3,r2
   47584:	31ffffc4 	addi	r7,r6,-1
   47588:	30003626 	beq	r6,zero,47664 <memmove+0x11c>
   4758c:	39c00044 	addi	r7,r7,1
   47590:	19cf883a 	add	r7,r3,r7
   47594:	29800003 	ldbu	r6,0(r5)
   47598:	18c00044 	addi	r3,r3,1
   4759c:	29400044 	addi	r5,r5,1
   475a0:	19bfffc5 	stb	r6,-1(r3)
   475a4:	19fffb1e 	bne	r3,r7,47594 <memmove+0x4c>
   475a8:	f800283a 	ret
   475ac:	1146b03a 	or	r3,r2,r5
   475b0:	18c000cc 	andi	r3,r3,3
   475b4:	1800281e 	bne	r3,zero,47658 <memmove+0x110>
   475b8:	313ffc04 	addi	r4,r6,-16
   475bc:	2008d13a 	srli	r4,r4,4
   475c0:	2811883a 	mov	r8,r5
   475c4:	100f883a 	mov	r7,r2
   475c8:	21000044 	addi	r4,r4,1
   475cc:	2008913a 	slli	r4,r4,4
   475d0:	1107883a 	add	r3,r2,r4
   475d4:	42400017 	ldw	r9,0(r8)
   475d8:	42000404 	addi	r8,r8,16
   475dc:	39c00404 	addi	r7,r7,16
   475e0:	3a7ffc15 	stw	r9,-16(r7)
   475e4:	427ffd17 	ldw	r9,-12(r8)
   475e8:	3a7ffd15 	stw	r9,-12(r7)
   475ec:	427ffe17 	ldw	r9,-8(r8)
   475f0:	3a7ffe15 	stw	r9,-8(r7)
   475f4:	427fff17 	ldw	r9,-4(r8)
   475f8:	3a7fff15 	stw	r9,-4(r7)
   475fc:	38fff51e 	bne	r7,r3,475d4 <memmove+0x8c>
   47600:	31c0030c 	andi	r7,r6,12
   47604:	290b883a 	add	r5,r5,r4
   47608:	324003cc 	andi	r9,r6,15
   4760c:	38001626 	beq	r7,zero,47668 <memmove+0x120>
   47610:	2809883a 	mov	r4,r5
   47614:	180f883a 	mov	r7,r3
   47618:	1a57883a 	add	r11,r3,r9
   4761c:	22800017 	ldw	r10,0(r4)
   47620:	39c00104 	addi	r7,r7,4
   47624:	59d1c83a 	sub	r8,r11,r7
   47628:	42000128 	cmpgeui	r8,r8,4
   4762c:	3abfff15 	stw	r10,-4(r7)
   47630:	21000104 	addi	r4,r4,4
   47634:	403ff91e 	bne	r8,zero,4761c <memmove+0xd4>
   47638:	493fff04 	addi	r4,r9,-4
   4763c:	2008d0ba 	srli	r4,r4,2
   47640:	318000cc 	andi	r6,r6,3
   47644:	21000044 	addi	r4,r4,1
   47648:	200890ba 	slli	r4,r4,2
   4764c:	1907883a 	add	r3,r3,r4
   47650:	290b883a 	add	r5,r5,r4
   47654:	003fcb06 	br	47584 <memmove+0x3c>
   47658:	31ffffc4 	addi	r7,r6,-1
   4765c:	1007883a 	mov	r3,r2
   47660:	003fca06 	br	4758c <memmove+0x44>
   47664:	f800283a 	ret
   47668:	480d883a 	mov	r6,r9
   4766c:	003fc506 	br	47584 <memmove+0x3c>

00047670 <memset>:
   47670:	20c000cc 	andi	r3,r4,3
   47674:	2005883a 	mov	r2,r4
   47678:	18003626 	beq	r3,zero,47754 <memset+0xe4>
   4767c:	31ffffc4 	addi	r7,r6,-1
   47680:	30003226 	beq	r6,zero,4774c <memset+0xdc>
   47684:	2811883a 	mov	r8,r5
   47688:	2007883a 	mov	r3,r4
   4768c:	00000306 	br	4769c <memset+0x2c>
   47690:	39ffffc4 	addi	r7,r7,-1
   47694:	39bfffe0 	cmpeqi	r6,r7,-1
   47698:	30002c1e 	bne	r6,zero,4774c <memset+0xdc>
   4769c:	18c00044 	addi	r3,r3,1
   476a0:	198000cc 	andi	r6,r3,3
   476a4:	1a3fffc5 	stb	r8,-1(r3)
   476a8:	303ff91e 	bne	r6,zero,47690 <memset+0x20>
   476ac:	39000128 	cmpgeui	r4,r7,4
   476b0:	20002126 	beq	r4,zero,47738 <memset+0xc8>
   476b4:	02004074 	movhi	r8,257
   476b8:	29803fcc 	andi	r6,r5,255
   476bc:	42004044 	addi	r8,r8,257
   476c0:	39000430 	cmpltui	r4,r7,16
   476c4:	320d383a 	mul	r6,r6,r8
   476c8:	2000251e 	bne	r4,zero,47760 <memset+0xf0>
   476cc:	393ffc04 	addi	r4,r7,-16
   476d0:	2008d13a 	srli	r4,r4,4
   476d4:	21000044 	addi	r4,r4,1
   476d8:	2008913a 	slli	r4,r4,4
   476dc:	1909883a 	add	r4,r3,r4
   476e0:	19800015 	stw	r6,0(r3)
   476e4:	19800115 	stw	r6,4(r3)
   476e8:	19800215 	stw	r6,8(r3)
   476ec:	19800315 	stw	r6,12(r3)
   476f0:	18c00404 	addi	r3,r3,16
   476f4:	193ffa1e 	bne	r3,r4,476e0 <memset+0x70>
   476f8:	3a00030c 	andi	r8,r7,12
   476fc:	39c003cc 	andi	r7,r7,15
   47700:	40000d26 	beq	r8,zero,47738 <memset+0xc8>
   47704:	2007883a 	mov	r3,r4
   47708:	21d3883a 	add	r9,r4,r7
   4770c:	18c00104 	addi	r3,r3,4
   47710:	48d1c83a 	sub	r8,r9,r3
   47714:	42000128 	cmpgeui	r8,r8,4
   47718:	19bfff15 	stw	r6,-4(r3)
   4771c:	403ffb1e 	bne	r8,zero,4770c <memset+0x9c>
   47720:	38ffff04 	addi	r3,r7,-4
   47724:	1806d0ba 	srli	r3,r3,2
   47728:	39c000cc 	andi	r7,r7,3
   4772c:	18c00044 	addi	r3,r3,1
   47730:	180690ba 	slli	r3,r3,2
   47734:	20c7883a 	add	r3,r4,r3
   47738:	38000526 	beq	r7,zero,47750 <memset+0xe0>
   4773c:	19cf883a 	add	r7,r3,r7
   47740:	18c00044 	addi	r3,r3,1
   47744:	197fffc5 	stb	r5,-1(r3)
   47748:	38fffd1e 	bne	r7,r3,47740 <memset+0xd0>
   4774c:	f800283a 	ret
   47750:	f800283a 	ret
   47754:	2007883a 	mov	r3,r4
   47758:	300f883a 	mov	r7,r6
   4775c:	003fd306 	br	476ac <memset+0x3c>
   47760:	1809883a 	mov	r4,r3
   47764:	003fe706 	br	47704 <memset+0x94>

00047768 <_Balloc>:
   47768:	20801317 	ldw	r2,76(r4)
   4776c:	defffc04 	addi	sp,sp,-16
   47770:	dc400115 	stw	r17,4(sp)
   47774:	dc000015 	stw	r16,0(sp)
   47778:	dfc00315 	stw	ra,12(sp)
   4777c:	dc800215 	stw	r18,8(sp)
   47780:	2021883a 	mov	r16,r4
   47784:	2823883a 	mov	r17,r5
   47788:	10000e26 	beq	r2,zero,477c4 <_Balloc+0x5c>
   4778c:	880690ba 	slli	r3,r17,2
   47790:	10c7883a 	add	r3,r2,r3
   47794:	18800017 	ldw	r2,0(r3)
   47798:	10001126 	beq	r2,zero,477e0 <_Balloc+0x78>
   4779c:	11000017 	ldw	r4,0(r2)
   477a0:	19000015 	stw	r4,0(r3)
   477a4:	10000415 	stw	zero,16(r2)
   477a8:	10000315 	stw	zero,12(r2)
   477ac:	dfc00317 	ldw	ra,12(sp)
   477b0:	dc800217 	ldw	r18,8(sp)
   477b4:	dc400117 	ldw	r17,4(sp)
   477b8:	dc000017 	ldw	r16,0(sp)
   477bc:	dec00404 	addi	sp,sp,16
   477c0:	f800283a 	ret
   477c4:	01800844 	movi	r6,33
   477c8:	01400104 	movi	r5,4
   477cc:	004a5d80 	call	4a5d8 <_calloc_r>
   477d0:	80801315 	stw	r2,76(r16)
   477d4:	103fed1e 	bne	r2,zero,4778c <_Balloc+0x24>
   477d8:	0005883a 	mov	r2,zero
   477dc:	003ff306 	br	477ac <_Balloc+0x44>
   477e0:	04800044 	movi	r18,1
   477e4:	9464983a 	sll	r18,r18,r17
   477e8:	01400044 	movi	r5,1
   477ec:	8009883a 	mov	r4,r16
   477f0:	91800144 	addi	r6,r18,5
   477f4:	300c90ba 	slli	r6,r6,2
   477f8:	004a5d80 	call	4a5d8 <_calloc_r>
   477fc:	103ff626 	beq	r2,zero,477d8 <_Balloc+0x70>
   47800:	14400115 	stw	r17,4(r2)
   47804:	14800215 	stw	r18,8(r2)
   47808:	003fe606 	br	477a4 <_Balloc+0x3c>

0004780c <_Bfree>:
   4780c:	28000726 	beq	r5,zero,4782c <_Bfree+0x20>
   47810:	28c00117 	ldw	r3,4(r5)
   47814:	20801317 	ldw	r2,76(r4)
   47818:	180690ba 	slli	r3,r3,2
   4781c:	10c5883a 	add	r2,r2,r3
   47820:	10c00017 	ldw	r3,0(r2)
   47824:	28c00015 	stw	r3,0(r5)
   47828:	11400015 	stw	r5,0(r2)
   4782c:	f800283a 	ret

00047830 <__multadd>:
   47830:	defffa04 	addi	sp,sp,-24
   47834:	dc400115 	stw	r17,4(sp)
   47838:	2c400417 	ldw	r17,16(r5)
   4783c:	dcc00315 	stw	r19,12(sp)
   47840:	dc800215 	stw	r18,8(sp)
   47844:	dc000015 	stw	r16,0(sp)
   47848:	dfc00515 	stw	ra,20(sp)
   4784c:	dd000415 	stw	r20,16(sp)
   47850:	2825883a 	mov	r18,r5
   47854:	2027883a 	mov	r19,r4
   47858:	3821883a 	mov	r16,r7
   4785c:	2a400504 	addi	r9,r5,20
   47860:	0015883a 	mov	r10,zero
   47864:	48c00017 	ldw	r3,0(r9)
   47868:	4a400104 	addi	r9,r9,4
   4786c:	52800044 	addi	r10,r10,1
   47870:	1a3fffcc 	andi	r8,r3,65535
   47874:	4191383a 	mul	r8,r8,r6
   47878:	180ed43a 	srli	r7,r3,16
   4787c:	4407883a 	add	r3,r8,r16
   47880:	1810d43a 	srli	r8,r3,16
   47884:	398f383a 	mul	r7,r7,r6
   47888:	18ffffcc 	andi	r3,r3,65535
   4788c:	3a0f883a 	add	r7,r7,r8
   47890:	3810943a 	slli	r8,r7,16
   47894:	3820d43a 	srli	r16,r7,16
   47898:	40c7883a 	add	r3,r8,r3
   4789c:	48ffff15 	stw	r3,-4(r9)
   478a0:	547ff016 	blt	r10,r17,47864 <__multadd+0x34>
   478a4:	80000826 	beq	r16,zero,478c8 <__multadd+0x98>
   478a8:	90800217 	ldw	r2,8(r18)
   478ac:	88800f0e 	bge	r17,r2,478ec <__multadd+0xbc>
   478b0:	88800144 	addi	r2,r17,5
   478b4:	100490ba 	slli	r2,r2,2
   478b8:	8c400044 	addi	r17,r17,1
   478bc:	9085883a 	add	r2,r18,r2
   478c0:	14000015 	stw	r16,0(r2)
   478c4:	94400415 	stw	r17,16(r18)
   478c8:	9005883a 	mov	r2,r18
   478cc:	dfc00517 	ldw	ra,20(sp)
   478d0:	dd000417 	ldw	r20,16(sp)
   478d4:	dcc00317 	ldw	r19,12(sp)
   478d8:	dc800217 	ldw	r18,8(sp)
   478dc:	dc400117 	ldw	r17,4(sp)
   478e0:	dc000017 	ldw	r16,0(sp)
   478e4:	dec00604 	addi	sp,sp,24
   478e8:	f800283a 	ret
   478ec:	91400117 	ldw	r5,4(r18)
   478f0:	9809883a 	mov	r4,r19
   478f4:	29400044 	addi	r5,r5,1
   478f8:	00477680 	call	47768 <_Balloc>
   478fc:	1029883a 	mov	r20,r2
   47900:	10001026 	beq	r2,zero,47944 <__multadd+0x114>
   47904:	91800417 	ldw	r6,16(r18)
   47908:	91400304 	addi	r5,r18,12
   4790c:	11000304 	addi	r4,r2,12
   47910:	31800084 	addi	r6,r6,2
   47914:	300c90ba 	slli	r6,r6,2
   47918:	00474480 	call	47448 <memcpy>
   4791c:	90000726 	beq	r18,zero,4793c <__multadd+0x10c>
   47920:	90c00117 	ldw	r3,4(r18)
   47924:	98801317 	ldw	r2,76(r19)
   47928:	180690ba 	slli	r3,r3,2
   4792c:	10c5883a 	add	r2,r2,r3
   47930:	10c00017 	ldw	r3,0(r2)
   47934:	90c00015 	stw	r3,0(r18)
   47938:	14800015 	stw	r18,0(r2)
   4793c:	a025883a 	mov	r18,r20
   47940:	003fdb06 	br	478b0 <__multadd+0x80>
   47944:	01c00174 	movhi	r7,5
   47948:	01000174 	movhi	r4,5
   4794c:	39c51104 	addi	r7,r7,5188
   47950:	000d883a 	mov	r6,zero
   47954:	01402d44 	movi	r5,181
   47958:	21052504 	addi	r4,r4,5268
   4795c:	004a5600 	call	4a560 <__assert_func>

00047960 <__s2b>:
   47960:	defff904 	addi	sp,sp,-28
   47964:	dc800215 	stw	r18,8(sp)
   47968:	dc000015 	stw	r16,0(sp)
   4796c:	2025883a 	mov	r18,r4
   47970:	2821883a 	mov	r16,r5
   47974:	39000204 	addi	r4,r7,8
   47978:	01400244 	movi	r5,9
   4797c:	dcc00315 	stw	r19,12(sp)
   47980:	dc400115 	stw	r17,4(sp)
   47984:	dfc00615 	stw	ra,24(sp)
   47988:	3823883a 	mov	r17,r7
   4798c:	dd400515 	stw	r21,20(sp)
   47990:	dd000415 	stw	r20,16(sp)
   47994:	3027883a 	mov	r19,r6
   47998:	004c0340 	call	4c034 <__divsi3>
   4799c:	88c00290 	cmplti	r3,r17,10
   479a0:	1800341e 	bne	r3,zero,47a74 <__s2b+0x114>
   479a4:	00c00044 	movi	r3,1
   479a8:	000b883a 	mov	r5,zero
   479ac:	18c7883a 	add	r3,r3,r3
   479b0:	29400044 	addi	r5,r5,1
   479b4:	18bffd16 	blt	r3,r2,479ac <__s2b+0x4c>
   479b8:	9009883a 	mov	r4,r18
   479bc:	00477680 	call	47768 <_Balloc>
   479c0:	100b883a 	mov	r5,r2
   479c4:	10002d26 	beq	r2,zero,47a7c <__s2b+0x11c>
   479c8:	d8800717 	ldw	r2,28(sp)
   479cc:	28800515 	stw	r2,20(r5)
   479d0:	00800044 	movi	r2,1
   479d4:	28800415 	stw	r2,16(r5)
   479d8:	98800290 	cmplti	r2,r19,10
   479dc:	1000221e 	bne	r2,zero,47a68 <__s2b+0x108>
   479e0:	85400244 	addi	r21,r16,9
   479e4:	a829883a 	mov	r20,r21
   479e8:	84e1883a 	add	r16,r16,r19
   479ec:	a1c00007 	ldb	r7,0(r20)
   479f0:	01800284 	movi	r6,10
   479f4:	9009883a 	mov	r4,r18
   479f8:	39fff404 	addi	r7,r7,-48
   479fc:	00478300 	call	47830 <__multadd>
   47a00:	a5000044 	addi	r20,r20,1
   47a04:	100b883a 	mov	r5,r2
   47a08:	a43ff81e 	bne	r20,r16,479ec <__s2b+0x8c>
   47a0c:	9c3ffe04 	addi	r16,r19,-8
   47a10:	ac21883a 	add	r16,r21,r16
   47a14:	9c400a0e 	bge	r19,r17,47a40 <__s2b+0xe0>
   47a18:	8ce3c83a 	sub	r17,r17,r19
   47a1c:	8463883a 	add	r17,r16,r17
   47a20:	81c00007 	ldb	r7,0(r16)
   47a24:	01800284 	movi	r6,10
   47a28:	9009883a 	mov	r4,r18
   47a2c:	39fff404 	addi	r7,r7,-48
   47a30:	00478300 	call	47830 <__multadd>
   47a34:	84000044 	addi	r16,r16,1
   47a38:	100b883a 	mov	r5,r2
   47a3c:	8c3ff81e 	bne	r17,r16,47a20 <__s2b+0xc0>
   47a40:	2805883a 	mov	r2,r5
   47a44:	dfc00617 	ldw	ra,24(sp)
   47a48:	dd400517 	ldw	r21,20(sp)
   47a4c:	dd000417 	ldw	r20,16(sp)
   47a50:	dcc00317 	ldw	r19,12(sp)
   47a54:	dc800217 	ldw	r18,8(sp)
   47a58:	dc400117 	ldw	r17,4(sp)
   47a5c:	dc000017 	ldw	r16,0(sp)
   47a60:	dec00704 	addi	sp,sp,28
   47a64:	f800283a 	ret
   47a68:	84000284 	addi	r16,r16,10
   47a6c:	04c00244 	movi	r19,9
   47a70:	003fe806 	br	47a14 <__s2b+0xb4>
   47a74:	000b883a 	mov	r5,zero
   47a78:	003fcf06 	br	479b8 <__s2b+0x58>
   47a7c:	01c00174 	movhi	r7,5
   47a80:	01000174 	movhi	r4,5
   47a84:	39c51104 	addi	r7,r7,5188
   47a88:	000d883a 	mov	r6,zero
   47a8c:	01403384 	movi	r5,206
   47a90:	21052504 	addi	r4,r4,5268
   47a94:	004a5600 	call	4a560 <__assert_func>

00047a98 <__hi0bits>:
   47a98:	00bfffd4 	movui	r2,65535
   47a9c:	11001536 	bltu	r2,r4,47af4 <__hi0bits+0x5c>
   47aa0:	2008943a 	slli	r4,r4,16
   47aa4:	00800404 	movi	r2,16
   47aa8:	00c04034 	movhi	r3,256
   47aac:	20c0022e 	bgeu	r4,r3,47ab8 <__hi0bits+0x20>
   47ab0:	2008923a 	slli	r4,r4,8
   47ab4:	10800204 	addi	r2,r2,8
   47ab8:	00c40034 	movhi	r3,4096
   47abc:	20c0022e 	bgeu	r4,r3,47ac8 <__hi0bits+0x30>
   47ac0:	2008913a 	slli	r4,r4,4
   47ac4:	10800104 	addi	r2,r2,4
   47ac8:	00d00034 	movhi	r3,16384
   47acc:	20c00336 	bltu	r4,r3,47adc <__hi0bits+0x44>
   47ad0:	20000716 	blt	r4,zero,47af0 <__hi0bits+0x58>
   47ad4:	10800044 	addi	r2,r2,1
   47ad8:	f800283a 	ret
   47adc:	200890ba 	slli	r4,r4,2
   47ae0:	20000616 	blt	r4,zero,47afc <__hi0bits+0x64>
   47ae4:	2110002c 	andhi	r4,r4,16384
   47ae8:	2000061e 	bne	r4,zero,47b04 <__hi0bits+0x6c>
   47aec:	00800804 	movi	r2,32
   47af0:	f800283a 	ret
   47af4:	0005883a 	mov	r2,zero
   47af8:	003feb06 	br	47aa8 <__hi0bits+0x10>
   47afc:	10800084 	addi	r2,r2,2
   47b00:	f800283a 	ret
   47b04:	108000c4 	addi	r2,r2,3
   47b08:	f800283a 	ret

00047b0c <__lo0bits>:
   47b0c:	20c00017 	ldw	r3,0(r4)
   47b10:	188001cc 	andi	r2,r3,7
   47b14:	10000826 	beq	r2,zero,47b38 <__lo0bits+0x2c>
   47b18:	1880004c 	andi	r2,r3,1
   47b1c:	10001f1e 	bne	r2,zero,47b9c <__lo0bits+0x90>
   47b20:	1880008c 	andi	r2,r3,2
   47b24:	10002126 	beq	r2,zero,47bac <__lo0bits+0xa0>
   47b28:	1806d07a 	srli	r3,r3,1
   47b2c:	00800044 	movi	r2,1
   47b30:	20c00015 	stw	r3,0(r4)
   47b34:	f800283a 	ret
   47b38:	18bfffcc 	andi	r2,r3,65535
   47b3c:	10001426 	beq	r2,zero,47b90 <__lo0bits+0x84>
   47b40:	0005883a 	mov	r2,zero
   47b44:	19403fcc 	andi	r5,r3,255
   47b48:	2800021e 	bne	r5,zero,47b54 <__lo0bits+0x48>
   47b4c:	1806d23a 	srli	r3,r3,8
   47b50:	10800204 	addi	r2,r2,8
   47b54:	194003cc 	andi	r5,r3,15
   47b58:	2800021e 	bne	r5,zero,47b64 <__lo0bits+0x58>
   47b5c:	1806d13a 	srli	r3,r3,4
   47b60:	10800104 	addi	r2,r2,4
   47b64:	194000cc 	andi	r5,r3,3
   47b68:	2800021e 	bne	r5,zero,47b74 <__lo0bits+0x68>
   47b6c:	1806d0ba 	srli	r3,r3,2
   47b70:	10800084 	addi	r2,r2,2
   47b74:	1940004c 	andi	r5,r3,1
   47b78:	2800031e 	bne	r5,zero,47b88 <__lo0bits+0x7c>
   47b7c:	1806d07a 	srli	r3,r3,1
   47b80:	10800044 	addi	r2,r2,1
   47b84:	18000726 	beq	r3,zero,47ba4 <__lo0bits+0x98>
   47b88:	20c00015 	stw	r3,0(r4)
   47b8c:	f800283a 	ret
   47b90:	1806d43a 	srli	r3,r3,16
   47b94:	00800404 	movi	r2,16
   47b98:	003fea06 	br	47b44 <__lo0bits+0x38>
   47b9c:	0005883a 	mov	r2,zero
   47ba0:	f800283a 	ret
   47ba4:	00800804 	movi	r2,32
   47ba8:	f800283a 	ret
   47bac:	1806d0ba 	srli	r3,r3,2
   47bb0:	00800084 	movi	r2,2
   47bb4:	20c00015 	stw	r3,0(r4)
   47bb8:	f800283a 	ret

00047bbc <__i2b>:
   47bbc:	20c01317 	ldw	r3,76(r4)
   47bc0:	defffd04 	addi	sp,sp,-12
   47bc4:	dc400115 	stw	r17,4(sp)
   47bc8:	dc000015 	stw	r16,0(sp)
   47bcc:	dfc00215 	stw	ra,8(sp)
   47bd0:	2021883a 	mov	r16,r4
   47bd4:	2823883a 	mov	r17,r5
   47bd8:	18000d26 	beq	r3,zero,47c10 <__i2b+0x54>
   47bdc:	18800117 	ldw	r2,4(r3)
   47be0:	10001826 	beq	r2,zero,47c44 <__i2b+0x88>
   47be4:	11000017 	ldw	r4,0(r2)
   47be8:	19000115 	stw	r4,4(r3)
   47bec:	00c00044 	movi	r3,1
   47bf0:	10000315 	stw	zero,12(r2)
   47bf4:	14400515 	stw	r17,20(r2)
   47bf8:	10c00415 	stw	r3,16(r2)
   47bfc:	dfc00217 	ldw	ra,8(sp)
   47c00:	dc400117 	ldw	r17,4(sp)
   47c04:	dc000017 	ldw	r16,0(sp)
   47c08:	dec00304 	addi	sp,sp,12
   47c0c:	f800283a 	ret
   47c10:	01800844 	movi	r6,33
   47c14:	01400104 	movi	r5,4
   47c18:	004a5d80 	call	4a5d8 <_calloc_r>
   47c1c:	80801315 	stw	r2,76(r16)
   47c20:	1007883a 	mov	r3,r2
   47c24:	103fed1e 	bne	r2,zero,47bdc <__i2b+0x20>
   47c28:	01c00174 	movhi	r7,5
   47c2c:	01000174 	movhi	r4,5
   47c30:	39c51104 	addi	r7,r7,5188
   47c34:	000d883a 	mov	r6,zero
   47c38:	01405004 	movi	r5,320
   47c3c:	21052504 	addi	r4,r4,5268
   47c40:	004a5600 	call	4a560 <__assert_func>
   47c44:	01800704 	movi	r6,28
   47c48:	01400044 	movi	r5,1
   47c4c:	8009883a 	mov	r4,r16
   47c50:	004a5d80 	call	4a5d8 <_calloc_r>
   47c54:	103ff426 	beq	r2,zero,47c28 <__i2b+0x6c>
   47c58:	00c00044 	movi	r3,1
   47c5c:	10c00115 	stw	r3,4(r2)
   47c60:	00c00084 	movi	r3,2
   47c64:	10c00215 	stw	r3,8(r2)
   47c68:	003fe006 	br	47bec <__i2b+0x30>

00047c6c <__multiply>:
   47c6c:	defff804 	addi	sp,sp,-32
   47c70:	dd400515 	stw	r21,20(sp)
   47c74:	dd000415 	stw	r20,16(sp)
   47c78:	35400417 	ldw	r21,16(r6)
   47c7c:	2d000417 	ldw	r20,16(r5)
   47c80:	dd800615 	stw	r22,24(sp)
   47c84:	dcc00315 	stw	r19,12(sp)
   47c88:	dfc00715 	stw	ra,28(sp)
   47c8c:	dc800215 	stw	r18,8(sp)
   47c90:	dc400115 	stw	r17,4(sp)
   47c94:	dc000015 	stw	r16,0(sp)
   47c98:	282d883a 	mov	r22,r5
   47c9c:	3027883a 	mov	r19,r6
   47ca0:	a5400516 	blt	r20,r21,47cb8 <__multiply+0x4c>
   47ca4:	a807883a 	mov	r3,r21
   47ca8:	2827883a 	mov	r19,r5
   47cac:	a02b883a 	mov	r21,r20
   47cb0:	302d883a 	mov	r22,r6
   47cb4:	1829883a 	mov	r20,r3
   47cb8:	98800217 	ldw	r2,8(r19)
   47cbc:	ad23883a 	add	r17,r21,r20
   47cc0:	99400117 	ldw	r5,4(r19)
   47cc4:	1440010e 	bge	r2,r17,47ccc <__multiply+0x60>
   47cc8:	29400044 	addi	r5,r5,1
   47ccc:	00477680 	call	47768 <_Balloc>
   47cd0:	1025883a 	mov	r18,r2
   47cd4:	10007326 	beq	r2,zero,47ea4 <__multiply+0x238>
   47cd8:	882090ba 	slli	r16,r17,2
   47cdc:	11000504 	addi	r4,r2,20
   47ce0:	2421883a 	add	r16,r4,r16
   47ce4:	2400082e 	bgeu	r4,r16,47d08 <__multiply+0x9c>
   47ce8:	808dc83a 	sub	r6,r16,r2
   47cec:	31bffac4 	addi	r6,r6,-21
   47cf0:	300cd0ba 	srli	r6,r6,2
   47cf4:	000b883a 	mov	r5,zero
   47cf8:	31800044 	addi	r6,r6,1
   47cfc:	300c90ba 	slli	r6,r6,2
   47d00:	00476700 	call	47670 <memset>
   47d04:	1009883a 	mov	r4,r2
   47d08:	a01090ba 	slli	r8,r20,2
   47d0c:	a80e90ba 	slli	r7,r21,2
   47d10:	b1400504 	addi	r5,r22,20
   47d14:	9a400504 	addi	r9,r19,20
   47d18:	2a11883a 	add	r8,r5,r8
   47d1c:	49cf883a 	add	r7,r9,r7
   47d20:	2a004b2e 	bgeu	r5,r8,47e50 <__multiply+0x1e4>
   47d24:	98800544 	addi	r2,r19,21
   47d28:	38805c36 	bltu	r7,r2,47e9c <__multiply+0x230>
   47d2c:	3cc5c83a 	sub	r2,r7,r19
   47d30:	10bffac4 	addi	r2,r2,-21
   47d34:	1004d0ba 	srli	r2,r2,2
   47d38:	10800044 	addi	r2,r2,1
   47d3c:	100490ba 	slli	r2,r2,2
   47d40:	00000506 	br	47d58 <__multiply+0xec>
   47d44:	5816d43a 	srli	r11,r11,16
   47d48:	5800231e 	bne	r11,zero,47dd8 <__multiply+0x16c>
   47d4c:	29400104 	addi	r5,r5,4
   47d50:	21000104 	addi	r4,r4,4
   47d54:	2a003e2e 	bgeu	r5,r8,47e50 <__multiply+0x1e4>
   47d58:	2ac00017 	ldw	r11,0(r5)
   47d5c:	5b7fffcc 	andi	r13,r11,65535
   47d60:	683ff826 	beq	r13,zero,47d44 <__multiply+0xd8>
   47d64:	2019883a 	mov	r12,r4
   47d68:	4817883a 	mov	r11,r9
   47d6c:	001d883a 	mov	r14,zero
   47d70:	58c00017 	ldw	r3,0(r11)
   47d74:	62800017 	ldw	r10,0(r12)
   47d78:	63000104 	addi	r12,r12,4
   47d7c:	19bfffcc 	andi	r6,r3,65535
   47d80:	334d383a 	mul	r6,r6,r13
   47d84:	1806d43a 	srli	r3,r3,16
   47d88:	53ffffcc 	andi	r15,r10,65535
   47d8c:	33cd883a 	add	r6,r6,r15
   47d90:	5014d43a 	srli	r10,r10,16
   47d94:	338d883a 	add	r6,r6,r14
   47d98:	1b47383a 	mul	r3,r3,r13
   47d9c:	301cd43a 	srli	r14,r6,16
   47da0:	31bfffcc 	andi	r6,r6,65535
   47da4:	1a87883a 	add	r3,r3,r10
   47da8:	1b87883a 	add	r3,r3,r14
   47dac:	1814943a 	slli	r10,r3,16
   47db0:	181cd43a 	srli	r14,r3,16
   47db4:	5ac00104 	addi	r11,r11,4
   47db8:	5186b03a 	or	r3,r10,r6
   47dbc:	60ffff15 	stw	r3,-4(r12)
   47dc0:	59ffeb36 	bltu	r11,r7,47d70 <__multiply+0x104>
   47dc4:	2087883a 	add	r3,r4,r2
   47dc8:	1b800015 	stw	r14,0(r3)
   47dcc:	2ac00017 	ldw	r11,0(r5)
   47dd0:	5816d43a 	srli	r11,r11,16
   47dd4:	583fdd26 	beq	r11,zero,47d4c <__multiply+0xe0>
   47dd8:	20c00017 	ldw	r3,0(r4)
   47ddc:	2019883a 	mov	r12,r4
   47de0:	4815883a 	mov	r10,r9
   47de4:	181b883a 	mov	r13,r3
   47de8:	001d883a 	mov	r14,zero
   47dec:	5180000b 	ldhu	r6,0(r10)
   47df0:	681ed43a 	srli	r15,r13,16
   47df4:	18ffffcc 	andi	r3,r3,65535
   47df8:	32cd383a 	mul	r6,r6,r11
   47dfc:	52800104 	addi	r10,r10,4
   47e00:	63400117 	ldw	r13,4(r12)
   47e04:	338d883a 	add	r6,r6,r14
   47e08:	33cd883a 	add	r6,r6,r15
   47e0c:	301c943a 	slli	r14,r6,16
   47e10:	300cd43a 	srli	r6,r6,16
   47e14:	6bffffcc 	andi	r15,r13,65535
   47e18:	70c6b03a 	or	r3,r14,r3
   47e1c:	60c00015 	stw	r3,0(r12)
   47e20:	50ffff8b 	ldhu	r3,-2(r10)
   47e24:	63000104 	addi	r12,r12,4
   47e28:	1ac7383a 	mul	r3,r3,r11
   47e2c:	1bc7883a 	add	r3,r3,r15
   47e30:	1987883a 	add	r3,r3,r6
   47e34:	181cd43a 	srli	r14,r3,16
   47e38:	51ffec36 	bltu	r10,r7,47dec <__multiply+0x180>
   47e3c:	208d883a 	add	r6,r4,r2
   47e40:	30c00015 	stw	r3,0(r6)
   47e44:	29400104 	addi	r5,r5,4
   47e48:	21000104 	addi	r4,r4,4
   47e4c:	2a3fc236 	bltu	r5,r8,47d58 <__multiply+0xec>
   47e50:	04400316 	blt	zero,r17,47e60 <__multiply+0x1f4>
   47e54:	00000506 	br	47e6c <__multiply+0x200>
   47e58:	8c7fffc4 	addi	r17,r17,-1
   47e5c:	88000326 	beq	r17,zero,47e6c <__multiply+0x200>
   47e60:	80bfff17 	ldw	r2,-4(r16)
   47e64:	843fff04 	addi	r16,r16,-4
   47e68:	103ffb26 	beq	r2,zero,47e58 <__multiply+0x1ec>
   47e6c:	9005883a 	mov	r2,r18
   47e70:	94400415 	stw	r17,16(r18)
   47e74:	dfc00717 	ldw	ra,28(sp)
   47e78:	dd800617 	ldw	r22,24(sp)
   47e7c:	dd400517 	ldw	r21,20(sp)
   47e80:	dd000417 	ldw	r20,16(sp)
   47e84:	dcc00317 	ldw	r19,12(sp)
   47e88:	dc800217 	ldw	r18,8(sp)
   47e8c:	dc400117 	ldw	r17,4(sp)
   47e90:	dc000017 	ldw	r16,0(sp)
   47e94:	dec00804 	addi	sp,sp,32
   47e98:	f800283a 	ret
   47e9c:	00800104 	movi	r2,4
   47ea0:	003fad06 	br	47d58 <__multiply+0xec>
   47ea4:	01c00174 	movhi	r7,5
   47ea8:	01000174 	movhi	r4,5
   47eac:	39c51104 	addi	r7,r7,5188
   47eb0:	000d883a 	mov	r6,zero
   47eb4:	01405744 	movi	r5,349
   47eb8:	21052504 	addi	r4,r4,5268
   47ebc:	004a5600 	call	4a560 <__assert_func>

00047ec0 <__pow5mult>:
   47ec0:	defffb04 	addi	sp,sp,-20
   47ec4:	dcc00315 	stw	r19,12(sp)
   47ec8:	dc000015 	stw	r16,0(sp)
   47ecc:	dfc00415 	stw	ra,16(sp)
   47ed0:	dc800215 	stw	r18,8(sp)
   47ed4:	dc400115 	stw	r17,4(sp)
   47ed8:	308000cc 	andi	r2,r6,3
   47edc:	3021883a 	mov	r16,r6
   47ee0:	2027883a 	mov	r19,r4
   47ee4:	10002b1e 	bne	r2,zero,47f94 <__pow5mult+0xd4>
   47ee8:	2825883a 	mov	r18,r5
   47eec:	8021d0ba 	srai	r16,r16,2
   47ef0:	80001926 	beq	r16,zero,47f58 <__pow5mult+0x98>
   47ef4:	9c401217 	ldw	r17,72(r19)
   47ef8:	8800061e 	bne	r17,zero,47f14 <__pow5mult+0x54>
   47efc:	00002d06 	br	47fb4 <__pow5mult+0xf4>
   47f00:	8021d07a 	srai	r16,r16,1
   47f04:	80001426 	beq	r16,zero,47f58 <__pow5mult+0x98>
   47f08:	88800017 	ldw	r2,0(r17)
   47f0c:	10001a26 	beq	r2,zero,47f78 <__pow5mult+0xb8>
   47f10:	1023883a 	mov	r17,r2
   47f14:	8080004c 	andi	r2,r16,1
   47f18:	103ff926 	beq	r2,zero,47f00 <__pow5mult+0x40>
   47f1c:	880d883a 	mov	r6,r17
   47f20:	900b883a 	mov	r5,r18
   47f24:	9809883a 	mov	r4,r19
   47f28:	0047c6c0 	call	47c6c <__multiply>
   47f2c:	90000726 	beq	r18,zero,47f4c <__pow5mult+0x8c>
   47f30:	91000117 	ldw	r4,4(r18)
   47f34:	98c01317 	ldw	r3,76(r19)
   47f38:	200890ba 	slli	r4,r4,2
   47f3c:	1907883a 	add	r3,r3,r4
   47f40:	19000017 	ldw	r4,0(r3)
   47f44:	91000015 	stw	r4,0(r18)
   47f48:	1c800015 	stw	r18,0(r3)
   47f4c:	8021d07a 	srai	r16,r16,1
   47f50:	1025883a 	mov	r18,r2
   47f54:	803fec1e 	bne	r16,zero,47f08 <__pow5mult+0x48>
   47f58:	9005883a 	mov	r2,r18
   47f5c:	dfc00417 	ldw	ra,16(sp)
   47f60:	dcc00317 	ldw	r19,12(sp)
   47f64:	dc800217 	ldw	r18,8(sp)
   47f68:	dc400117 	ldw	r17,4(sp)
   47f6c:	dc000017 	ldw	r16,0(sp)
   47f70:	dec00504 	addi	sp,sp,20
   47f74:	f800283a 	ret
   47f78:	880d883a 	mov	r6,r17
   47f7c:	880b883a 	mov	r5,r17
   47f80:	9809883a 	mov	r4,r19
   47f84:	0047c6c0 	call	47c6c <__multiply>
   47f88:	88800015 	stw	r2,0(r17)
   47f8c:	10000015 	stw	zero,0(r2)
   47f90:	003fdf06 	br	47f10 <__pow5mult+0x50>
   47f94:	100490ba 	slli	r2,r2,2
   47f98:	00c00174 	movhi	r3,5
   47f9c:	000f883a 	mov	r7,zero
   47fa0:	10c7883a 	add	r3,r2,r3
   47fa4:	19853317 	ldw	r6,5324(r3)
   47fa8:	00478300 	call	47830 <__multadd>
   47fac:	1025883a 	mov	r18,r2
   47fb0:	003fce06 	br	47eec <__pow5mult+0x2c>
   47fb4:	01400044 	movi	r5,1
   47fb8:	9809883a 	mov	r4,r19
   47fbc:	00477680 	call	47768 <_Balloc>
   47fc0:	1023883a 	mov	r17,r2
   47fc4:	10000726 	beq	r2,zero,47fe4 <__pow5mult+0x124>
   47fc8:	00809c44 	movi	r2,625
   47fcc:	88800515 	stw	r2,20(r17)
   47fd0:	00800044 	movi	r2,1
   47fd4:	88800415 	stw	r2,16(r17)
   47fd8:	9c401215 	stw	r17,72(r19)
   47fdc:	88000015 	stw	zero,0(r17)
   47fe0:	003fcc06 	br	47f14 <__pow5mult+0x54>
   47fe4:	01c00174 	movhi	r7,5
   47fe8:	01000174 	movhi	r4,5
   47fec:	39c51104 	addi	r7,r7,5188
   47ff0:	000d883a 	mov	r6,zero
   47ff4:	01405004 	movi	r5,320
   47ff8:	21052504 	addi	r4,r4,5268
   47ffc:	004a5600 	call	4a560 <__assert_func>

00048000 <__lshift>:
   48000:	defff804 	addi	sp,sp,-32
   48004:	dd800615 	stw	r22,24(sp)
   48008:	dc400115 	stw	r17,4(sp)
   4800c:	302dd17a 	srai	r22,r6,5
   48010:	2c400417 	ldw	r17,16(r5)
   48014:	28800217 	ldw	r2,8(r5)
   48018:	dd000415 	stw	r20,16(sp)
   4801c:	b463883a 	add	r17,r22,r17
   48020:	dcc00315 	stw	r19,12(sp)
   48024:	dc800215 	stw	r18,8(sp)
   48028:	dc000015 	stw	r16,0(sp)
   4802c:	dfc00715 	stw	ra,28(sp)
   48030:	dd400515 	stw	r21,20(sp)
   48034:	8d000044 	addi	r20,r17,1
   48038:	2827883a 	mov	r19,r5
   4803c:	3025883a 	mov	r18,r6
   48040:	29400117 	ldw	r5,4(r5)
   48044:	2021883a 	mov	r16,r4
   48048:	1500030e 	bge	r2,r20,48058 <__lshift+0x58>
   4804c:	1085883a 	add	r2,r2,r2
   48050:	29400044 	addi	r5,r5,1
   48054:	153ffd16 	blt	r2,r20,4804c <__lshift+0x4c>
   48058:	8009883a 	mov	r4,r16
   4805c:	00477680 	call	47768 <_Balloc>
   48060:	102b883a 	mov	r21,r2
   48064:	10004126 	beq	r2,zero,4816c <__lshift+0x16c>
   48068:	11000504 	addi	r4,r2,20
   4806c:	0580050e 	bge	zero,r22,48084 <__lshift+0x84>
   48070:	b02c90ba 	slli	r22,r22,2
   48074:	000b883a 	mov	r5,zero
   48078:	b00d883a 	mov	r6,r22
   4807c:	00476700 	call	47670 <memset>
   48080:	1589883a 	add	r4,r2,r22
   48084:	9a400417 	ldw	r9,16(r19)
   48088:	98c00504 	addi	r3,r19,20
   4808c:	948007cc 	andi	r18,r18,31
   48090:	481290ba 	slli	r9,r9,2
   48094:	1a53883a 	add	r9,r3,r9
   48098:	90002c26 	beq	r18,zero,4814c <__lshift+0x14c>
   4809c:	01400804 	movi	r5,32
   480a0:	2c8bc83a 	sub	r5,r5,r18
   480a4:	2005883a 	mov	r2,r4
   480a8:	0011883a 	mov	r8,zero
   480ac:	19c00017 	ldw	r7,0(r3)
   480b0:	10800104 	addi	r2,r2,4
   480b4:	18c00104 	addi	r3,r3,4
   480b8:	3c8e983a 	sll	r7,r7,r18
   480bc:	3a0eb03a 	or	r7,r7,r8
   480c0:	11ffff15 	stw	r7,-4(r2)
   480c4:	1a3fff17 	ldw	r8,-4(r3)
   480c8:	4150d83a 	srl	r8,r8,r5
   480cc:	1a7ff736 	bltu	r3,r9,480ac <__lshift+0xac>
   480d0:	98800544 	addi	r2,r19,21
   480d4:	48802336 	bltu	r9,r2,48164 <__lshift+0x164>
   480d8:	4cc7c83a 	sub	r3,r9,r19
   480dc:	18fffac4 	addi	r3,r3,-21
   480e0:	1806d0ba 	srli	r3,r3,2
   480e4:	18c00044 	addi	r3,r3,1
   480e8:	180690ba 	slli	r3,r3,2
   480ec:	20c9883a 	add	r4,r4,r3
   480f0:	22000015 	stw	r8,0(r4)
   480f4:	4000011e 	bne	r8,zero,480fc <__lshift+0xfc>
   480f8:	8829883a 	mov	r20,r17
   480fc:	ad000415 	stw	r20,16(r21)
   48100:	98000726 	beq	r19,zero,48120 <__lshift+0x120>
   48104:	98c00117 	ldw	r3,4(r19)
   48108:	80801317 	ldw	r2,76(r16)
   4810c:	180690ba 	slli	r3,r3,2
   48110:	10c5883a 	add	r2,r2,r3
   48114:	10c00017 	ldw	r3,0(r2)
   48118:	98c00015 	stw	r3,0(r19)
   4811c:	14c00015 	stw	r19,0(r2)
   48120:	a805883a 	mov	r2,r21
   48124:	dfc00717 	ldw	ra,28(sp)
   48128:	dd800617 	ldw	r22,24(sp)
   4812c:	dd400517 	ldw	r21,20(sp)
   48130:	dd000417 	ldw	r20,16(sp)
   48134:	dcc00317 	ldw	r19,12(sp)
   48138:	dc800217 	ldw	r18,8(sp)
   4813c:	dc400117 	ldw	r17,4(sp)
   48140:	dc000017 	ldw	r16,0(sp)
   48144:	dec00804 	addi	sp,sp,32
   48148:	f800283a 	ret
   4814c:	18800017 	ldw	r2,0(r3)
   48150:	18c00104 	addi	r3,r3,4
   48154:	21000104 	addi	r4,r4,4
   48158:	20bfff15 	stw	r2,-4(r4)
   4815c:	1a7ffb36 	bltu	r3,r9,4814c <__lshift+0x14c>
   48160:	003fe506 	br	480f8 <__lshift+0xf8>
   48164:	00c00104 	movi	r3,4
   48168:	003fe006 	br	480ec <__lshift+0xec>
   4816c:	01c00174 	movhi	r7,5
   48170:	01000174 	movhi	r4,5
   48174:	39c51104 	addi	r7,r7,5188
   48178:	000d883a 	mov	r6,zero
   4817c:	01407644 	movi	r5,473
   48180:	21052504 	addi	r4,r4,5268
   48184:	004a5600 	call	4a560 <__assert_func>

00048188 <__mcmp>:
   48188:	21800417 	ldw	r6,16(r4)
   4818c:	28c00417 	ldw	r3,16(r5)
   48190:	30c5c83a 	sub	r2,r6,r3
   48194:	30c0101e 	bne	r6,r3,481d8 <__mcmp+0x50>
   48198:	180690ba 	slli	r3,r3,2
   4819c:	21000504 	addi	r4,r4,20
   481a0:	29400504 	addi	r5,r5,20
   481a4:	20cd883a 	add	r6,r4,r3
   481a8:	28c7883a 	add	r3,r5,r3
   481ac:	00000106 	br	481b4 <__mcmp+0x2c>
   481b0:	21800a2e 	bgeu	r4,r6,481dc <__mcmp+0x54>
   481b4:	31ffff17 	ldw	r7,-4(r6)
   481b8:	197fff17 	ldw	r5,-4(r3)
   481bc:	31bfff04 	addi	r6,r6,-4
   481c0:	18ffff04 	addi	r3,r3,-4
   481c4:	397ffa26 	beq	r7,r5,481b0 <__mcmp+0x28>
   481c8:	3940022e 	bgeu	r7,r5,481d4 <__mcmp+0x4c>
   481cc:	00bfffc4 	movi	r2,-1
   481d0:	f800283a 	ret
   481d4:	00800044 	movi	r2,1
   481d8:	f800283a 	ret
   481dc:	f800283a 	ret

000481e0 <__mdiff>:
   481e0:	28c00417 	ldw	r3,16(r5)
   481e4:	30800417 	ldw	r2,16(r6)
   481e8:	defffc04 	addi	sp,sp,-16
   481ec:	dc800215 	stw	r18,8(sp)
   481f0:	dc400115 	stw	r17,4(sp)
   481f4:	dc000015 	stw	r16,0(sp)
   481f8:	dfc00315 	stw	ra,12(sp)
   481fc:	2823883a 	mov	r17,r5
   48200:	3021883a 	mov	r16,r6
   48204:	18a5c83a 	sub	r18,r3,r2
   48208:	1880121e 	bne	r3,r2,48254 <__mdiff+0x74>
   4820c:	100c90ba 	slli	r6,r2,2
   48210:	29400504 	addi	r5,r5,20
   48214:	80c00504 	addi	r3,r16,20
   48218:	2985883a 	add	r2,r5,r6
   4821c:	1987883a 	add	r3,r3,r6
   48220:	00000106 	br	48228 <__mdiff+0x48>
   48224:	28805f2e 	bgeu	r5,r2,483a4 <__mdiff+0x1c4>
   48228:	11ffff17 	ldw	r7,-4(r2)
   4822c:	19bfff17 	ldw	r6,-4(r3)
   48230:	10bfff04 	addi	r2,r2,-4
   48234:	18ffff04 	addi	r3,r3,-4
   48238:	39bffa26 	beq	r7,r6,48224 <__mdiff+0x44>
   4823c:	3980072e 	bgeu	r7,r6,4825c <__mdiff+0x7c>
   48240:	8805883a 	mov	r2,r17
   48244:	04800044 	movi	r18,1
   48248:	8023883a 	mov	r17,r16
   4824c:	1021883a 	mov	r16,r2
   48250:	00000206 	br	4825c <__mdiff+0x7c>
   48254:	903ffa16 	blt	r18,zero,48240 <__mdiff+0x60>
   48258:	0025883a 	mov	r18,zero
   4825c:	89400117 	ldw	r5,4(r17)
   48260:	00477680 	call	47768 <_Balloc>
   48264:	10006326 	beq	r2,zero,483f4 <__mdiff+0x214>
   48268:	8a400417 	ldw	r9,16(r17)
   4826c:	83800417 	ldw	r14,16(r16)
   48270:	89400504 	addi	r5,r17,20
   48274:	481490ba 	slli	r10,r9,2
   48278:	701c90ba 	slli	r14,r14,2
   4827c:	81800504 	addi	r6,r16,20
   48280:	13400504 	addi	r13,r2,20
   48284:	14800315 	stw	r18,12(r2)
   48288:	2a95883a 	add	r10,r5,r10
   4828c:	339d883a 	add	r14,r6,r14
   48290:	6819883a 	mov	r12,r13
   48294:	2817883a 	mov	r11,r5
   48298:	000f883a 	mov	r7,zero
   4829c:	59000017 	ldw	r4,0(r11)
   482a0:	32000017 	ldw	r8,0(r6)
   482a4:	63000104 	addi	r12,r12,4
   482a8:	20ffffcc 	andi	r3,r4,65535
   482ac:	43ffffcc 	andi	r15,r8,65535
   482b0:	1bc7c83a 	sub	r3,r3,r15
   482b4:	4010d43a 	srli	r8,r8,16
   482b8:	19c7883a 	add	r3,r3,r7
   482bc:	2008d43a 	srli	r4,r4,16
   482c0:	180fd43a 	srai	r7,r3,16
   482c4:	18ffffcc 	andi	r3,r3,65535
   482c8:	2209c83a 	sub	r4,r4,r8
   482cc:	21c9883a 	add	r4,r4,r7
   482d0:	2010943a 	slli	r8,r4,16
   482d4:	31800104 	addi	r6,r6,4
   482d8:	200fd43a 	srai	r7,r4,16
   482dc:	1a06b03a 	or	r3,r3,r8
   482e0:	60ffff15 	stw	r3,-4(r12)
   482e4:	5ac00104 	addi	r11,r11,4
   482e8:	33bfec36 	bltu	r6,r14,4829c <__mdiff+0xbc>
   482ec:	7409c83a 	sub	r4,r14,r16
   482f0:	213ffac4 	addi	r4,r4,-21
   482f4:	84000544 	addi	r16,r16,21
   482f8:	200cd0ba 	srli	r6,r4,2
   482fc:	74002736 	bltu	r14,r16,4839c <__mdiff+0x1bc>
   48300:	31000044 	addi	r4,r6,1
   48304:	200890ba 	slli	r4,r4,2
   48308:	290b883a 	add	r5,r5,r4
   4830c:	6911883a 	add	r8,r13,r4
   48310:	2a802b2e 	bgeu	r5,r10,483c0 <__mdiff+0x1e0>
   48314:	4017883a 	mov	r11,r8
   48318:	280d883a 	mov	r6,r5
   4831c:	30c00017 	ldw	r3,0(r6)
   48320:	5ac00104 	addi	r11,r11,4
   48324:	31800104 	addi	r6,r6,4
   48328:	193fffcc 	andi	r4,r3,65535
   4832c:	21c9883a 	add	r4,r4,r7
   48330:	1818d43a 	srli	r12,r3,16
   48334:	2009d43a 	srai	r4,r4,16
   48338:	19c7883a 	add	r3,r3,r7
   4833c:	18ffffcc 	andi	r3,r3,65535
   48340:	2309883a 	add	r4,r4,r12
   48344:	2018943a 	slli	r12,r4,16
   48348:	200fd43a 	srai	r7,r4,16
   4834c:	1b06b03a 	or	r3,r3,r12
   48350:	58ffff15 	stw	r3,-4(r11)
   48354:	32bff136 	bltu	r6,r10,4831c <__mdiff+0x13c>
   48358:	513fffc4 	addi	r4,r10,-1
   4835c:	2149c83a 	sub	r4,r4,r5
   48360:	2008d0ba 	srli	r4,r4,2
   48364:	200890ba 	slli	r4,r4,2
   48368:	4109883a 	add	r4,r8,r4
   4836c:	1800041e 	bne	r3,zero,48380 <__mdiff+0x1a0>
   48370:	20ffff17 	ldw	r3,-4(r4)
   48374:	4a7fffc4 	addi	r9,r9,-1
   48378:	213fff04 	addi	r4,r4,-4
   4837c:	183ffc26 	beq	r3,zero,48370 <__mdiff+0x190>
   48380:	12400415 	stw	r9,16(r2)
   48384:	dfc00317 	ldw	ra,12(sp)
   48388:	dc800217 	ldw	r18,8(sp)
   4838c:	dc400117 	ldw	r17,4(sp)
   48390:	dc000017 	ldw	r16,0(sp)
   48394:	dec00404 	addi	sp,sp,16
   48398:	f800283a 	ret
   4839c:	01000104 	movi	r4,4
   483a0:	003fd906 	br	48308 <__mdiff+0x128>
   483a4:	000b883a 	mov	r5,zero
   483a8:	00477680 	call	47768 <_Balloc>
   483ac:	10000a26 	beq	r2,zero,483d8 <__mdiff+0x1f8>
   483b0:	00c00044 	movi	r3,1
   483b4:	10c00415 	stw	r3,16(r2)
   483b8:	10000515 	stw	zero,20(r2)
   483bc:	003ff106 	br	48384 <__mdiff+0x1a4>
   483c0:	74000336 	bltu	r14,r16,483d0 <__mdiff+0x1f0>
   483c4:	300890ba 	slli	r4,r6,2
   483c8:	6909883a 	add	r4,r13,r4
   483cc:	003fe706 	br	4836c <__mdiff+0x18c>
   483d0:	0009883a 	mov	r4,zero
   483d4:	003ffc06 	br	483c8 <__mdiff+0x1e8>
   483d8:	01c00174 	movhi	r7,5
   483dc:	01000174 	movhi	r4,5
   483e0:	39c51104 	addi	r7,r7,5188
   483e4:	000d883a 	mov	r6,zero
   483e8:	01408c84 	movi	r5,562
   483ec:	21052504 	addi	r4,r4,5268
   483f0:	004a5600 	call	4a560 <__assert_func>
   483f4:	01c00174 	movhi	r7,5
   483f8:	01000174 	movhi	r4,5
   483fc:	39c51104 	addi	r7,r7,5188
   48400:	000d883a 	mov	r6,zero
   48404:	01409004 	movi	r5,576
   48408:	21052504 	addi	r4,r4,5268
   4840c:	004a5600 	call	4a560 <__assert_func>

00048410 <__ulp>:
   48410:	28dffc2c 	andhi	r3,r5,32752
   48414:	00bf3034 	movhi	r2,64704
   48418:	1887883a 	add	r3,r3,r2
   4841c:	00c0020e 	bge	zero,r3,48428 <__ulp+0x18>
   48420:	0005883a 	mov	r2,zero
   48424:	f800283a 	ret
   48428:	00c7c83a 	sub	r3,zero,r3
   4842c:	1807d53a 	srai	r3,r3,20
   48430:	18800508 	cmpgei	r2,r3,20
   48434:	1000041e 	bne	r2,zero,48448 <__ulp+0x38>
   48438:	00800234 	movhi	r2,8
   4843c:	10c7d83a 	sra	r3,r2,r3
   48440:	0005883a 	mov	r2,zero
   48444:	f800283a 	ret
   48448:	18fffb04 	addi	r3,r3,-20
   4844c:	188007c8 	cmpgei	r2,r3,31
   48450:	10000326 	beq	r2,zero,48460 <__ulp+0x50>
   48454:	00800044 	movi	r2,1
   48458:	0007883a 	mov	r3,zero
   4845c:	f800283a 	ret
   48460:	00a00034 	movhi	r2,32768
   48464:	10c4d83a 	srl	r2,r2,r3
   48468:	0007883a 	mov	r3,zero
   4846c:	f800283a 	ret

00048470 <__b2d>:
   48470:	defffa04 	addi	sp,sp,-24
   48474:	dc400115 	stw	r17,4(sp)
   48478:	24400417 	ldw	r17,16(r4)
   4847c:	dc000015 	stw	r16,0(sp)
   48480:	24000504 	addi	r16,r4,20
   48484:	882290ba 	slli	r17,r17,2
   48488:	dc800215 	stw	r18,8(sp)
   4848c:	dd000415 	stw	r20,16(sp)
   48490:	8463883a 	add	r17,r16,r17
   48494:	8cbfff17 	ldw	r18,-4(r17)
   48498:	dcc00315 	stw	r19,12(sp)
   4849c:	dfc00515 	stw	ra,20(sp)
   484a0:	9009883a 	mov	r4,r18
   484a4:	2827883a 	mov	r19,r5
   484a8:	0047a980 	call	47a98 <__hi0bits>
   484ac:	00c00804 	movi	r3,32
   484b0:	1889c83a 	sub	r4,r3,r2
   484b4:	99000015 	stw	r4,0(r19)
   484b8:	110002c8 	cmpgei	r4,r2,11
   484bc:	8d3fff04 	addi	r20,r17,-4
   484c0:	20001b26 	beq	r4,zero,48530 <__b2d+0xc0>
   484c4:	117ffd44 	addi	r5,r2,-11
   484c8:	85000e2e 	bgeu	r16,r20,48504 <__b2d+0x94>
   484cc:	88bffe17 	ldw	r2,-8(r17)
   484d0:	28000e26 	beq	r5,zero,4850c <__b2d+0x9c>
   484d4:	1949c83a 	sub	r4,r3,r5
   484d8:	1106d83a 	srl	r3,r2,r4
   484dc:	9164983a 	sll	r18,r18,r5
   484e0:	89bffe04 	addi	r6,r17,-8
   484e4:	1144983a 	sll	r2,r2,r5
   484e8:	90c6b03a 	or	r3,r18,r3
   484ec:	18cffc34 	orhi	r3,r3,16368
   484f0:	8180072e 	bgeu	r16,r6,48510 <__b2d+0xa0>
   484f4:	897ffd17 	ldw	r5,-12(r17)
   484f8:	2908d83a 	srl	r4,r5,r4
   484fc:	1104b03a 	or	r2,r2,r4
   48500:	00000306 	br	48510 <__b2d+0xa0>
   48504:	108002d8 	cmpnei	r2,r2,11
   48508:	1000161e 	bne	r2,zero,48564 <__b2d+0xf4>
   4850c:	90cffc34 	orhi	r3,r18,16368
   48510:	dfc00517 	ldw	ra,20(sp)
   48514:	dd000417 	ldw	r20,16(sp)
   48518:	dcc00317 	ldw	r19,12(sp)
   4851c:	dc800217 	ldw	r18,8(sp)
   48520:	dc400117 	ldw	r17,4(sp)
   48524:	dc000017 	ldw	r16,0(sp)
   48528:	dec00604 	addi	sp,sp,24
   4852c:	f800283a 	ret
   48530:	014002c4 	movi	r5,11
   48534:	288bc83a 	sub	r5,r5,r2
   48538:	9146d83a 	srl	r3,r18,r5
   4853c:	18cffc34 	orhi	r3,r3,16368
   48540:	85000536 	bltu	r16,r20,48558 <__b2d+0xe8>
   48544:	0009883a 	mov	r4,zero
   48548:	10800544 	addi	r2,r2,21
   4854c:	90a4983a 	sll	r18,r18,r2
   48550:	9104b03a 	or	r2,r18,r4
   48554:	003fee06 	br	48510 <__b2d+0xa0>
   48558:	893ffe17 	ldw	r4,-8(r17)
   4855c:	2148d83a 	srl	r4,r4,r5
   48560:	003ff906 	br	48548 <__b2d+0xd8>
   48564:	9164983a 	sll	r18,r18,r5
   48568:	0005883a 	mov	r2,zero
   4856c:	003fe706 	br	4850c <__b2d+0x9c>

00048570 <__d2b>:
   48570:	defff804 	addi	sp,sp,-32
   48574:	dd000615 	stw	r20,24(sp)
   48578:	2829883a 	mov	r20,r5
   4857c:	01400044 	movi	r5,1
   48580:	dcc00515 	stw	r19,20(sp)
   48584:	dc000215 	stw	r16,8(sp)
   48588:	dfc00715 	stw	ra,28(sp)
   4858c:	dc800415 	stw	r18,16(sp)
   48590:	dc400315 	stw	r17,12(sp)
   48594:	3021883a 	mov	r16,r6
   48598:	3827883a 	mov	r19,r7
   4859c:	00477680 	call	47768 <_Balloc>
   485a0:	10004226 	beq	r2,zero,486ac <__d2b+0x13c>
   485a4:	8024d53a 	srli	r18,r16,20
   485a8:	1023883a 	mov	r17,r2
   485ac:	00800434 	movhi	r2,16
   485b0:	10bfffc4 	addi	r2,r2,-1
   485b4:	9481ffcc 	andi	r18,r18,2047
   485b8:	80a0703a 	and	r16,r16,r2
   485bc:	90000126 	beq	r18,zero,485c4 <__d2b+0x54>
   485c0:	84000434 	orhi	r16,r16,16
   485c4:	dc000115 	stw	r16,4(sp)
   485c8:	a0001b26 	beq	r20,zero,48638 <__d2b+0xc8>
   485cc:	d809883a 	mov	r4,sp
   485d0:	dd000015 	stw	r20,0(sp)
   485d4:	0047b0c0 	call	47b0c <__lo0bits>
   485d8:	d8c00117 	ldw	r3,4(sp)
   485dc:	10003026 	beq	r2,zero,486a0 <__d2b+0x130>
   485e0:	01000804 	movi	r4,32
   485e4:	2089c83a 	sub	r4,r4,r2
   485e8:	1908983a 	sll	r4,r3,r4
   485ec:	d9400017 	ldw	r5,0(sp)
   485f0:	1886d83a 	srl	r3,r3,r2
   485f4:	2148b03a 	or	r4,r4,r5
   485f8:	89000515 	stw	r4,20(r17)
   485fc:	d8c00115 	stw	r3,4(sp)
   48600:	88c00615 	stw	r3,24(r17)
   48604:	18002426 	beq	r3,zero,48698 <__d2b+0x128>
   48608:	04000084 	movi	r16,2
   4860c:	8c000415 	stw	r16,16(r17)
   48610:	9000111e 	bne	r18,zero,48658 <__d2b+0xe8>
   48614:	800690ba 	slli	r3,r16,2
   48618:	10bef384 	addi	r2,r2,-1074
   4861c:	98800015 	stw	r2,0(r19)
   48620:	88c5883a 	add	r2,r17,r3
   48624:	11000417 	ldw	r4,16(r2)
   48628:	8020917a 	slli	r16,r16,5
   4862c:	0047a980 	call	47a98 <__hi0bits>
   48630:	8085c83a 	sub	r2,r16,r2
   48634:	00000d06 	br	4866c <__d2b+0xfc>
   48638:	d9000104 	addi	r4,sp,4
   4863c:	0047b0c0 	call	47b0c <__lo0bits>
   48640:	d8c00117 	ldw	r3,4(sp)
   48644:	10800804 	addi	r2,r2,32
   48648:	04000044 	movi	r16,1
   4864c:	88c00515 	stw	r3,20(r17)
   48650:	8c000415 	stw	r16,16(r17)
   48654:	903fef26 	beq	r18,zero,48614 <__d2b+0xa4>
   48658:	94bef344 	addi	r18,r18,-1075
   4865c:	90a5883a 	add	r18,r18,r2
   48660:	04000d44 	movi	r16,53
   48664:	9c800015 	stw	r18,0(r19)
   48668:	8085c83a 	sub	r2,r16,r2
   4866c:	d8c00817 	ldw	r3,32(sp)
   48670:	18800015 	stw	r2,0(r3)
   48674:	8805883a 	mov	r2,r17
   48678:	dfc00717 	ldw	ra,28(sp)
   4867c:	dd000617 	ldw	r20,24(sp)
   48680:	dcc00517 	ldw	r19,20(sp)
   48684:	dc800417 	ldw	r18,16(sp)
   48688:	dc400317 	ldw	r17,12(sp)
   4868c:	dc000217 	ldw	r16,8(sp)
   48690:	dec00804 	addi	sp,sp,32
   48694:	f800283a 	ret
   48698:	04000044 	movi	r16,1
   4869c:	003fec06 	br	48650 <__d2b+0xe0>
   486a0:	d9000017 	ldw	r4,0(sp)
   486a4:	89000515 	stw	r4,20(r17)
   486a8:	003fd506 	br	48600 <__d2b+0x90>
   486ac:	01c00174 	movhi	r7,5
   486b0:	01000174 	movhi	r4,5
   486b4:	39c51104 	addi	r7,r7,5188
   486b8:	000d883a 	mov	r6,zero
   486bc:	0140c284 	movi	r5,778
   486c0:	21052504 	addi	r4,r4,5268
   486c4:	004a5600 	call	4a560 <__assert_func>

000486c8 <__ratio>:
   486c8:	defff904 	addi	sp,sp,-28
   486cc:	dc400315 	stw	r17,12(sp)
   486d0:	2823883a 	mov	r17,r5
   486d4:	d80b883a 	mov	r5,sp
   486d8:	dfc00615 	stw	ra,24(sp)
   486dc:	dcc00515 	stw	r19,20(sp)
   486e0:	dc800415 	stw	r18,16(sp)
   486e4:	2027883a 	mov	r19,r4
   486e8:	dc000215 	stw	r16,8(sp)
   486ec:	00484700 	call	48470 <__b2d>
   486f0:	d9400104 	addi	r5,sp,4
   486f4:	8809883a 	mov	r4,r17
   486f8:	1025883a 	mov	r18,r2
   486fc:	1821883a 	mov	r16,r3
   48700:	00484700 	call	48470 <__b2d>
   48704:	89000417 	ldw	r4,16(r17)
   48708:	9a000417 	ldw	r8,16(r19)
   4870c:	d9400117 	ldw	r5,4(sp)
   48710:	100d883a 	mov	r6,r2
   48714:	4111c83a 	sub	r8,r8,r4
   48718:	d9000017 	ldw	r4,0(sp)
   4871c:	4010917a 	slli	r8,r8,5
   48720:	180f883a 	mov	r7,r3
   48724:	2149c83a 	sub	r4,r4,r5
   48728:	4111883a 	add	r8,r8,r4
   4872c:	02000c0e 	bge	zero,r8,48760 <__ratio+0x98>
   48730:	4010953a 	slli	r8,r8,20
   48734:	4421883a 	add	r16,r8,r16
   48738:	9009883a 	mov	r4,r18
   4873c:	800b883a 	mov	r5,r16
   48740:	004caec0 	call	4caec <__divdf3>
   48744:	dfc00617 	ldw	ra,24(sp)
   48748:	dcc00517 	ldw	r19,20(sp)
   4874c:	dc800417 	ldw	r18,16(sp)
   48750:	dc400317 	ldw	r17,12(sp)
   48754:	dc000217 	ldw	r16,8(sp)
   48758:	dec00704 	addi	sp,sp,28
   4875c:	f800283a 	ret
   48760:	00bffc34 	movhi	r2,65520
   48764:	4091383a 	mul	r8,r8,r2
   48768:	40cf883a 	add	r7,r8,r3
   4876c:	003ff206 	br	48738 <__ratio+0x70>

00048770 <_mprec_log10>:
   48770:	defffe04 	addi	sp,sp,-8
   48774:	dc000015 	stw	r16,0(sp)
   48778:	dfc00115 	stw	ra,4(sp)
   4877c:	20800608 	cmpgei	r2,r4,24
   48780:	2021883a 	mov	r16,r4
   48784:	10000f26 	beq	r2,zero,487c4 <_mprec_log10+0x54>
   48788:	0009883a 	mov	r4,zero
   4878c:	014ffc34 	movhi	r5,16368
   48790:	000d883a 	mov	r6,zero
   48794:	01d00934 	movhi	r7,16420
   48798:	004d5bc0 	call	4d5bc <__muldf3>
   4879c:	843fffc4 	addi	r16,r16,-1
   487a0:	1009883a 	mov	r4,r2
   487a4:	180b883a 	mov	r5,r3
   487a8:	803ff91e 	bne	r16,zero,48790 <_mprec_log10+0x20>
   487ac:	2005883a 	mov	r2,r4
   487b0:	2807883a 	mov	r3,r5
   487b4:	dfc00117 	ldw	ra,4(sp)
   487b8:	dc000017 	ldw	r16,0(sp)
   487bc:	dec00204 	addi	sp,sp,8
   487c0:	f800283a 	ret
   487c4:	202090fa 	slli	r16,r4,3
   487c8:	00800174 	movhi	r2,5
   487cc:	10854b04 	addi	r2,r2,5420
   487d0:	1405883a 	add	r2,r2,r16
   487d4:	11000017 	ldw	r4,0(r2)
   487d8:	11400117 	ldw	r5,4(r2)
   487dc:	003ff306 	br	487ac <_mprec_log10+0x3c>

000487e0 <__copybits>:
   487e0:	297fffc4 	addi	r5,r5,-1
   487e4:	280fd17a 	srai	r7,r5,5
   487e8:	31400417 	ldw	r5,16(r6)
   487ec:	30800504 	addi	r2,r6,20
   487f0:	39c00044 	addi	r7,r7,1
   487f4:	280a90ba 	slli	r5,r5,2
   487f8:	380e90ba 	slli	r7,r7,2
   487fc:	114b883a 	add	r5,r2,r5
   48800:	21cf883a 	add	r7,r4,r7
   48804:	11400c2e 	bgeu	r2,r5,48838 <__copybits+0x58>
   48808:	2007883a 	mov	r3,r4
   4880c:	12000017 	ldw	r8,0(r2)
   48810:	10800104 	addi	r2,r2,4
   48814:	18c00104 	addi	r3,r3,4
   48818:	1a3fff15 	stw	r8,-4(r3)
   4881c:	117ffb36 	bltu	r2,r5,4880c <__copybits+0x2c>
   48820:	2985c83a 	sub	r2,r5,r6
   48824:	10bffac4 	addi	r2,r2,-21
   48828:	1004d0ba 	srli	r2,r2,2
   4882c:	10800044 	addi	r2,r2,1
   48830:	100490ba 	slli	r2,r2,2
   48834:	2089883a 	add	r4,r4,r2
   48838:	21c0072e 	bgeu	r4,r7,48858 <__copybits+0x78>
   4883c:	39bfffc4 	addi	r6,r7,-1
   48840:	310dc83a 	sub	r6,r6,r4
   48844:	300cd0ba 	srli	r6,r6,2
   48848:	000b883a 	mov	r5,zero
   4884c:	31800044 	addi	r6,r6,1
   48850:	300c90ba 	slli	r6,r6,2
   48854:	00476701 	jmpi	47670 <memset>
   48858:	f800283a 	ret

0004885c <__any_on>:
   4885c:	20c00417 	ldw	r3,16(r4)
   48860:	280dd17a 	srai	r6,r5,5
   48864:	21000504 	addi	r4,r4,20
   48868:	1980080e 	bge	r3,r6,4888c <__any_on+0x30>
   4886c:	180690ba 	slli	r3,r3,2
   48870:	20c5883a 	add	r2,r4,r3
   48874:	20800f2e 	bgeu	r4,r2,488b4 <__any_on+0x58>
   48878:	10ffff17 	ldw	r3,-4(r2)
   4887c:	10bfff04 	addi	r2,r2,-4
   48880:	183ffc26 	beq	r3,zero,48874 <__any_on+0x18>
   48884:	00800044 	movi	r2,1
   48888:	f800283a 	ret
   4888c:	300490ba 	slli	r2,r6,2
   48890:	2085883a 	add	r2,r4,r2
   48894:	30fff70e 	bge	r6,r3,48874 <__any_on+0x18>
   48898:	294007cc 	andi	r5,r5,31
   4889c:	283ff526 	beq	r5,zero,48874 <__any_on+0x18>
   488a0:	11800017 	ldw	r6,0(r2)
   488a4:	3146d83a 	srl	r3,r6,r5
   488a8:	1946983a 	sll	r3,r3,r5
   488ac:	30fff51e 	bne	r6,r3,48884 <__any_on+0x28>
   488b0:	003ff006 	br	48874 <__any_on+0x18>
   488b4:	0005883a 	mov	r2,zero
   488b8:	f800283a 	ret

000488bc <_realloc_r>:
   488bc:	defff504 	addi	sp,sp,-44
   488c0:	dd000515 	stw	r20,20(sp)
   488c4:	dfc00a15 	stw	ra,40(sp)
   488c8:	df000915 	stw	fp,36(sp)
   488cc:	ddc00815 	stw	r23,32(sp)
   488d0:	dd800715 	stw	r22,28(sp)
   488d4:	dd400615 	stw	r21,24(sp)
   488d8:	dcc00415 	stw	r19,16(sp)
   488dc:	dc800315 	stw	r18,12(sp)
   488e0:	dc400215 	stw	r17,8(sp)
   488e4:	dc000115 	stw	r16,4(sp)
   488e8:	3029883a 	mov	r20,r6
   488ec:	28008a26 	beq	r5,zero,48b18 <_realloc_r+0x25c>
   488f0:	2821883a 	mov	r16,r5
   488f4:	202b883a 	mov	r21,r4
   488f8:	004f1e80 	call	4f1e8 <__malloc_lock>
   488fc:	84ffff17 	ldw	r19,-4(r16)
   48900:	a44002c4 	addi	r17,r20,11
   48904:	04bfff04 	movi	r18,-4
   48908:	888005f0 	cmpltui	r2,r17,23
   4890c:	85bffe04 	addi	r22,r16,-8
   48910:	9ca4703a 	and	r18,r19,r18
   48914:	10005a1e 	bne	r2,zero,48a80 <_realloc_r+0x1c4>
   48918:	00bffe04 	movi	r2,-8
   4891c:	88a2703a 	and	r17,r17,r2
   48920:	88005916 	blt	r17,zero,48a88 <_realloc_r+0x1cc>
   48924:	8d005836 	bltu	r17,r20,48a88 <_realloc_r+0x1cc>
   48928:	94403b0e 	bge	r18,r17,48a18 <_realloc_r+0x15c>
   4892c:	05c00174 	movhi	r23,5
   48930:	bdc75004 	addi	r23,r23,7488
   48934:	b9400217 	ldw	r5,8(r23)
   48938:	b489883a 	add	r4,r22,r18
   4893c:	20800117 	ldw	r2,4(r4)
   48940:	29008e26 	beq	r5,r4,48b7c <_realloc_r+0x2c0>
   48944:	00ffff84 	movi	r3,-2
   48948:	10c6703a 	and	r3,r2,r3
   4894c:	20c7883a 	add	r3,r4,r3
   48950:	18c00117 	ldw	r3,4(r3)
   48954:	18c0004c 	andi	r3,r3,1
   48958:	18004f1e 	bne	r3,zero,48a98 <_realloc_r+0x1dc>
   4895c:	00ffff04 	movi	r3,-4
   48960:	10c4703a 	and	r2,r2,r3
   48964:	9087883a 	add	r3,r18,r2
   48968:	1c40c30e 	bge	r3,r17,48c78 <_realloc_r+0x3bc>
   4896c:	9cc0004c 	andi	r19,r19,1
   48970:	98004b1e 	bne	r19,zero,48aa0 <_realloc_r+0x1e4>
   48974:	873ffe17 	ldw	fp,-8(r16)
   48978:	00ffff04 	movi	r3,-4
   4897c:	b739c83a 	sub	fp,r22,fp
   48980:	e4c00117 	ldw	r19,4(fp)
   48984:	98c6703a 	and	r3,r19,r3
   48988:	20000426 	beq	r4,zero,4899c <_realloc_r+0xe0>
   4898c:	90cf883a 	add	r7,r18,r3
   48990:	388f883a 	add	r7,r7,r2
   48994:	2900c226 	beq	r5,r4,48ca0 <_realloc_r+0x3e4>
   48998:	3c409e0e 	bge	r7,r17,48c14 <_realloc_r+0x358>
   4899c:	e0004026 	beq	fp,zero,48aa0 <_realloc_r+0x1e4>
   489a0:	90ef883a 	add	r23,r18,r3
   489a4:	bc403e16 	blt	r23,r17,48aa0 <_realloc_r+0x1e4>
   489a8:	e0800317 	ldw	r2,12(fp)
   489ac:	e0c00217 	ldw	r3,8(fp)
   489b0:	91bfff04 	addi	r6,r18,-4
   489b4:	31400968 	cmpgeui	r5,r6,37
   489b8:	18800315 	stw	r2,12(r3)
   489bc:	10c00215 	stw	r3,8(r2)
   489c0:	e1000204 	addi	r4,fp,8
   489c4:	2800e71e 	bne	r5,zero,48d64 <_realloc_r+0x4a8>
   489c8:	30800530 	cmpltui	r2,r6,20
   489cc:	1000e31e 	bne	r2,zero,48d5c <_realloc_r+0x4a0>
   489d0:	80c00017 	ldw	r3,0(r16)
   489d4:	30800728 	cmpgeui	r2,r6,28
   489d8:	e0c00215 	stw	r3,8(fp)
   489dc:	80c00117 	ldw	r3,4(r16)
   489e0:	e0c00315 	stw	r3,12(fp)
   489e4:	1000fa1e 	bne	r2,zero,48dd0 <_realloc_r+0x514>
   489e8:	84000204 	addi	r16,r16,8
   489ec:	e0800404 	addi	r2,fp,16
   489f0:	80c00017 	ldw	r3,0(r16)
   489f4:	b825883a 	mov	r18,r23
   489f8:	10c00015 	stw	r3,0(r2)
   489fc:	80c00117 	ldw	r3,4(r16)
   48a00:	e02d883a 	mov	r22,fp
   48a04:	10c00115 	stw	r3,4(r2)
   48a08:	80c00217 	ldw	r3,8(r16)
   48a0c:	2021883a 	mov	r16,r4
   48a10:	10c00215 	stw	r3,8(r2)
   48a14:	e4c00117 	ldw	r19,4(fp)
   48a18:	9447c83a 	sub	r3,r18,r17
   48a1c:	19000430 	cmpltui	r4,r3,16
   48a20:	9cc0004c 	andi	r19,r19,1
   48a24:	b485883a 	add	r2,r22,r18
   48a28:	20004826 	beq	r4,zero,48b4c <_realloc_r+0x290>
   48a2c:	94e6b03a 	or	r19,r18,r19
   48a30:	b4c00115 	stw	r19,4(r22)
   48a34:	10c00117 	ldw	r3,4(r2)
   48a38:	18c00054 	ori	r3,r3,1
   48a3c:	10c00115 	stw	r3,4(r2)
   48a40:	a809883a 	mov	r4,r21
   48a44:	004f20c0 	call	4f20c <__malloc_unlock>
   48a48:	8029883a 	mov	r20,r16
   48a4c:	a005883a 	mov	r2,r20
   48a50:	dfc00a17 	ldw	ra,40(sp)
   48a54:	df000917 	ldw	fp,36(sp)
   48a58:	ddc00817 	ldw	r23,32(sp)
   48a5c:	dd800717 	ldw	r22,28(sp)
   48a60:	dd400617 	ldw	r21,24(sp)
   48a64:	dd000517 	ldw	r20,20(sp)
   48a68:	dcc00417 	ldw	r19,16(sp)
   48a6c:	dc800317 	ldw	r18,12(sp)
   48a70:	dc400217 	ldw	r17,8(sp)
   48a74:	dc000117 	ldw	r16,4(sp)
   48a78:	dec00b04 	addi	sp,sp,44
   48a7c:	f800283a 	ret
   48a80:	04400404 	movi	r17,16
   48a84:	8d3fa82e 	bgeu	r17,r20,48928 <_realloc_r+0x6c>
   48a88:	00800304 	movi	r2,12
   48a8c:	a8800015 	stw	r2,0(r21)
   48a90:	0029883a 	mov	r20,zero
   48a94:	003fed06 	br	48a4c <_realloc_r+0x190>
   48a98:	9cc0004c 	andi	r19,r19,1
   48a9c:	98004e26 	beq	r19,zero,48bd8 <_realloc_r+0x31c>
   48aa0:	a00b883a 	mov	r5,r20
   48aa4:	a809883a 	mov	r4,r21
   48aa8:	0046bc40 	call	46bc4 <_malloc_r>
   48aac:	1029883a 	mov	r20,r2
   48ab0:	1000bd26 	beq	r2,zero,48da8 <_realloc_r+0x4ec>
   48ab4:	84ffff17 	ldw	r19,-4(r16)
   48ab8:	10fffe04 	addi	r3,r2,-8
   48abc:	00bfff84 	movi	r2,-2
   48ac0:	9884703a 	and	r2,r19,r2
   48ac4:	b085883a 	add	r2,r22,r2
   48ac8:	10c03e26 	beq	r2,r3,48bc4 <_realloc_r+0x308>
   48acc:	91bfff04 	addi	r6,r18,-4
   48ad0:	30800968 	cmpgeui	r2,r6,37
   48ad4:	10006e1e 	bne	r2,zero,48c90 <_realloc_r+0x3d4>
   48ad8:	30800530 	cmpltui	r2,r6,20
   48adc:	10004426 	beq	r2,zero,48bf0 <_realloc_r+0x334>
   48ae0:	a005883a 	mov	r2,r20
   48ae4:	8007883a 	mov	r3,r16
   48ae8:	19000017 	ldw	r4,0(r3)
   48aec:	11000015 	stw	r4,0(r2)
   48af0:	19000117 	ldw	r4,4(r3)
   48af4:	11000115 	stw	r4,4(r2)
   48af8:	18c00217 	ldw	r3,8(r3)
   48afc:	10c00215 	stw	r3,8(r2)
   48b00:	a809883a 	mov	r4,r21
   48b04:	800b883a 	mov	r5,r16
   48b08:	004608c0 	call	4608c <_free_r>
   48b0c:	a809883a 	mov	r4,r21
   48b10:	004f20c0 	call	4f20c <__malloc_unlock>
   48b14:	003fcd06 	br	48a4c <_realloc_r+0x190>
   48b18:	300b883a 	mov	r5,r6
   48b1c:	dfc00a17 	ldw	ra,40(sp)
   48b20:	df000917 	ldw	fp,36(sp)
   48b24:	ddc00817 	ldw	r23,32(sp)
   48b28:	dd800717 	ldw	r22,28(sp)
   48b2c:	dd400617 	ldw	r21,24(sp)
   48b30:	dd000517 	ldw	r20,20(sp)
   48b34:	dcc00417 	ldw	r19,16(sp)
   48b38:	dc800317 	ldw	r18,12(sp)
   48b3c:	dc400217 	ldw	r17,8(sp)
   48b40:	dc000117 	ldw	r16,4(sp)
   48b44:	dec00b04 	addi	sp,sp,44
   48b48:	0046bc41 	jmpi	46bc4 <_malloc_r>
   48b4c:	8ce6b03a 	or	r19,r17,r19
   48b50:	b4c00115 	stw	r19,4(r22)
   48b54:	b44b883a 	add	r5,r22,r17
   48b58:	18c00054 	ori	r3,r3,1
   48b5c:	28c00115 	stw	r3,4(r5)
   48b60:	10c00117 	ldw	r3,4(r2)
   48b64:	29400204 	addi	r5,r5,8
   48b68:	a809883a 	mov	r4,r21
   48b6c:	18c00054 	ori	r3,r3,1
   48b70:	10c00115 	stw	r3,4(r2)
   48b74:	004608c0 	call	4608c <_free_r>
   48b78:	003fb106 	br	48a40 <_realloc_r+0x184>
   48b7c:	00ffff04 	movi	r3,-4
   48b80:	10c4703a 	and	r2,r2,r3
   48b84:	1487883a 	add	r3,r2,r18
   48b88:	89800404 	addi	r6,r17,16
   48b8c:	19bf7716 	blt	r3,r6,4896c <_realloc_r+0xb0>
   48b90:	b46d883a 	add	r22,r22,r17
   48b94:	1c45c83a 	sub	r2,r3,r17
   48b98:	bd800215 	stw	r22,8(r23)
   48b9c:	10800054 	ori	r2,r2,1
   48ba0:	b0800115 	stw	r2,4(r22)
   48ba4:	80bfff17 	ldw	r2,-4(r16)
   48ba8:	a809883a 	mov	r4,r21
   48bac:	8029883a 	mov	r20,r16
   48bb0:	1080004c 	andi	r2,r2,1
   48bb4:	1444b03a 	or	r2,r2,r17
   48bb8:	80bfff15 	stw	r2,-4(r16)
   48bbc:	004f20c0 	call	4f20c <__malloc_unlock>
   48bc0:	003fa206 	br	48a4c <_realloc_r+0x190>
   48bc4:	a0bfff17 	ldw	r2,-4(r20)
   48bc8:	00ffff04 	movi	r3,-4
   48bcc:	10c4703a 	and	r2,r2,r3
   48bd0:	90a5883a 	add	r18,r18,r2
   48bd4:	003f9006 	br	48a18 <_realloc_r+0x15c>
   48bd8:	873ffe17 	ldw	fp,-8(r16)
   48bdc:	00bfff04 	movi	r2,-4
   48be0:	b739c83a 	sub	fp,r22,fp
   48be4:	e0c00117 	ldw	r3,4(fp)
   48be8:	1886703a 	and	r3,r3,r2
   48bec:	003f6b06 	br	4899c <_realloc_r+0xe0>
   48bf0:	80c00017 	ldw	r3,0(r16)
   48bf4:	30800728 	cmpgeui	r2,r6,28
   48bf8:	a0c00015 	stw	r3,0(r20)
   48bfc:	80c00117 	ldw	r3,4(r16)
   48c00:	a0c00115 	stw	r3,4(r20)
   48c04:	10004c1e 	bne	r2,zero,48d38 <_realloc_r+0x47c>
   48c08:	80c00204 	addi	r3,r16,8
   48c0c:	a0800204 	addi	r2,r20,8
   48c10:	003fb506 	br	48ae8 <_realloc_r+0x22c>
   48c14:	20800317 	ldw	r2,12(r4)
   48c18:	20c00217 	ldw	r3,8(r4)
   48c1c:	91bfff04 	addi	r6,r18,-4
   48c20:	31400968 	cmpgeui	r5,r6,37
   48c24:	18800315 	stw	r2,12(r3)
   48c28:	10c00215 	stw	r3,8(r2)
   48c2c:	e0c00217 	ldw	r3,8(fp)
   48c30:	e0800317 	ldw	r2,12(fp)
   48c34:	e1000204 	addi	r4,fp,8
   48c38:	18800315 	stw	r2,12(r3)
   48c3c:	10c00215 	stw	r3,8(r2)
   48c40:	2800511e 	bne	r5,zero,48d88 <_realloc_r+0x4cc>
   48c44:	30800530 	cmpltui	r2,r6,20
   48c48:	10004d1e 	bne	r2,zero,48d80 <_realloc_r+0x4c4>
   48c4c:	80c00017 	ldw	r3,0(r16)
   48c50:	30800728 	cmpgeui	r2,r6,28
   48c54:	e0c00215 	stw	r3,8(fp)
   48c58:	80c00117 	ldw	r3,4(r16)
   48c5c:	e0c00315 	stw	r3,12(fp)
   48c60:	1000641e 	bne	r2,zero,48df4 <_realloc_r+0x538>
   48c64:	84000204 	addi	r16,r16,8
   48c68:	e0800404 	addi	r2,fp,16
   48c6c:	80c00017 	ldw	r3,0(r16)
   48c70:	3825883a 	mov	r18,r7
   48c74:	003f6006 	br	489f8 <_realloc_r+0x13c>
   48c78:	20800317 	ldw	r2,12(r4)
   48c7c:	21000217 	ldw	r4,8(r4)
   48c80:	1825883a 	mov	r18,r3
   48c84:	20800315 	stw	r2,12(r4)
   48c88:	11000215 	stw	r4,8(r2)
   48c8c:	003f6206 	br	48a18 <_realloc_r+0x15c>
   48c90:	800b883a 	mov	r5,r16
   48c94:	a009883a 	mov	r4,r20
   48c98:	00475480 	call	47548 <memmove>
   48c9c:	003f9806 	br	48b00 <_realloc_r+0x244>
   48ca0:	88800404 	addi	r2,r17,16
   48ca4:	38bf3d16 	blt	r7,r2,4899c <_realloc_r+0xe0>
   48ca8:	e0800317 	ldw	r2,12(fp)
   48cac:	e0c00217 	ldw	r3,8(fp)
   48cb0:	91bfff04 	addi	r6,r18,-4
   48cb4:	31000968 	cmpgeui	r4,r6,37
   48cb8:	18800315 	stw	r2,12(r3)
   48cbc:	10c00215 	stw	r3,8(r2)
   48cc0:	e5000204 	addi	r20,fp,8
   48cc4:	2000561e 	bne	r4,zero,48e20 <_realloc_r+0x564>
   48cc8:	30800530 	cmpltui	r2,r6,20
   48ccc:	1000521e 	bne	r2,zero,48e18 <_realloc_r+0x55c>
   48cd0:	80c00017 	ldw	r3,0(r16)
   48cd4:	30800728 	cmpgeui	r2,r6,28
   48cd8:	e0c00215 	stw	r3,8(fp)
   48cdc:	80c00117 	ldw	r3,4(r16)
   48ce0:	e0c00315 	stw	r3,12(fp)
   48ce4:	1000541e 	bne	r2,zero,48e38 <_realloc_r+0x57c>
   48ce8:	84000204 	addi	r16,r16,8
   48cec:	e0800404 	addi	r2,fp,16
   48cf0:	80c00017 	ldw	r3,0(r16)
   48cf4:	10c00015 	stw	r3,0(r2)
   48cf8:	80c00117 	ldw	r3,4(r16)
   48cfc:	10c00115 	stw	r3,4(r2)
   48d00:	80c00217 	ldw	r3,8(r16)
   48d04:	10c00215 	stw	r3,8(r2)
   48d08:	e447883a 	add	r3,fp,r17
   48d0c:	3c45c83a 	sub	r2,r7,r17
   48d10:	b8c00215 	stw	r3,8(r23)
   48d14:	10800054 	ori	r2,r2,1
   48d18:	18800115 	stw	r2,4(r3)
   48d1c:	e0800117 	ldw	r2,4(fp)
   48d20:	a809883a 	mov	r4,r21
   48d24:	1080004c 	andi	r2,r2,1
   48d28:	1444b03a 	or	r2,r2,r17
   48d2c:	e0800115 	stw	r2,4(fp)
   48d30:	004f20c0 	call	4f20c <__malloc_unlock>
   48d34:	003f4506 	br	48a4c <_realloc_r+0x190>
   48d38:	80800217 	ldw	r2,8(r16)
   48d3c:	31800920 	cmpeqi	r6,r6,36
   48d40:	a0800215 	stw	r2,8(r20)
   48d44:	80800317 	ldw	r2,12(r16)
   48d48:	a0800315 	stw	r2,12(r20)
   48d4c:	3000191e 	bne	r6,zero,48db4 <_realloc_r+0x4f8>
   48d50:	80c00404 	addi	r3,r16,16
   48d54:	a0800404 	addi	r2,r20,16
   48d58:	003f6306 	br	48ae8 <_realloc_r+0x22c>
   48d5c:	2005883a 	mov	r2,r4
   48d60:	003f2306 	br	489f0 <_realloc_r+0x134>
   48d64:	800b883a 	mov	r5,r16
   48d68:	00475480 	call	47548 <memmove>
   48d6c:	1021883a 	mov	r16,r2
   48d70:	e4c00117 	ldw	r19,4(fp)
   48d74:	b825883a 	mov	r18,r23
   48d78:	e02d883a 	mov	r22,fp
   48d7c:	003f2606 	br	48a18 <_realloc_r+0x15c>
   48d80:	2005883a 	mov	r2,r4
   48d84:	003fb906 	br	48c6c <_realloc_r+0x3b0>
   48d88:	800b883a 	mov	r5,r16
   48d8c:	d9c00015 	stw	r7,0(sp)
   48d90:	00475480 	call	47548 <memmove>
   48d94:	d9c00017 	ldw	r7,0(sp)
   48d98:	1021883a 	mov	r16,r2
   48d9c:	e02d883a 	mov	r22,fp
   48da0:	3825883a 	mov	r18,r7
   48da4:	003f1c06 	br	48a18 <_realloc_r+0x15c>
   48da8:	a809883a 	mov	r4,r21
   48dac:	004f20c0 	call	4f20c <__malloc_unlock>
   48db0:	003f3706 	br	48a90 <_realloc_r+0x1d4>
   48db4:	81000417 	ldw	r4,16(r16)
   48db8:	80c00604 	addi	r3,r16,24
   48dbc:	a0800604 	addi	r2,r20,24
   48dc0:	a1000415 	stw	r4,16(r20)
   48dc4:	81000517 	ldw	r4,20(r16)
   48dc8:	a1000515 	stw	r4,20(r20)
   48dcc:	003f4606 	br	48ae8 <_realloc_r+0x22c>
   48dd0:	80800217 	ldw	r2,8(r16)
   48dd4:	31800920 	cmpeqi	r6,r6,36
   48dd8:	e0800415 	stw	r2,16(fp)
   48ddc:	80800317 	ldw	r2,12(r16)
   48de0:	e0800515 	stw	r2,20(fp)
   48de4:	30001d1e 	bne	r6,zero,48e5c <_realloc_r+0x5a0>
   48de8:	84000404 	addi	r16,r16,16
   48dec:	e0800604 	addi	r2,fp,24
   48df0:	003eff06 	br	489f0 <_realloc_r+0x134>
   48df4:	80800217 	ldw	r2,8(r16)
   48df8:	31800920 	cmpeqi	r6,r6,36
   48dfc:	e0800415 	stw	r2,16(fp)
   48e00:	80800317 	ldw	r2,12(r16)
   48e04:	e0800515 	stw	r2,20(fp)
   48e08:	30001b1e 	bne	r6,zero,48e78 <_realloc_r+0x5bc>
   48e0c:	84000404 	addi	r16,r16,16
   48e10:	e0800604 	addi	r2,fp,24
   48e14:	003f9506 	br	48c6c <_realloc_r+0x3b0>
   48e18:	a005883a 	mov	r2,r20
   48e1c:	003fb406 	br	48cf0 <_realloc_r+0x434>
   48e20:	800b883a 	mov	r5,r16
   48e24:	a009883a 	mov	r4,r20
   48e28:	d9c00015 	stw	r7,0(sp)
   48e2c:	00475480 	call	47548 <memmove>
   48e30:	d9c00017 	ldw	r7,0(sp)
   48e34:	003fb406 	br	48d08 <_realloc_r+0x44c>
   48e38:	80800217 	ldw	r2,8(r16)
   48e3c:	31800920 	cmpeqi	r6,r6,36
   48e40:	e0800415 	stw	r2,16(fp)
   48e44:	80800317 	ldw	r2,12(r16)
   48e48:	e0800515 	stw	r2,20(fp)
   48e4c:	3000111e 	bne	r6,zero,48e94 <_realloc_r+0x5d8>
   48e50:	84000404 	addi	r16,r16,16
   48e54:	e0800604 	addi	r2,fp,24
   48e58:	003fa506 	br	48cf0 <_realloc_r+0x434>
   48e5c:	80c00417 	ldw	r3,16(r16)
   48e60:	84000604 	addi	r16,r16,24
   48e64:	e0800804 	addi	r2,fp,32
   48e68:	e0c00615 	stw	r3,24(fp)
   48e6c:	80ffff17 	ldw	r3,-4(r16)
   48e70:	e0c00715 	stw	r3,28(fp)
   48e74:	003ede06 	br	489f0 <_realloc_r+0x134>
   48e78:	80c00417 	ldw	r3,16(r16)
   48e7c:	84000604 	addi	r16,r16,24
   48e80:	e0800804 	addi	r2,fp,32
   48e84:	e0c00615 	stw	r3,24(fp)
   48e88:	80ffff17 	ldw	r3,-4(r16)
   48e8c:	e0c00715 	stw	r3,28(fp)
   48e90:	003f7606 	br	48c6c <_realloc_r+0x3b0>
   48e94:	80c00417 	ldw	r3,16(r16)
   48e98:	84000604 	addi	r16,r16,24
   48e9c:	e0800804 	addi	r2,fp,32
   48ea0:	e0c00615 	stw	r3,24(fp)
   48ea4:	80ffff17 	ldw	r3,-4(r16)
   48ea8:	e0c00715 	stw	r3,28(fp)
   48eac:	003f9006 	br	48cf0 <_realloc_r+0x434>

00048eb0 <_sbrk_r>:
   48eb0:	defffe04 	addi	sp,sp,-8
   48eb4:	dc000015 	stw	r16,0(sp)
   48eb8:	00800174 	movhi	r2,5
   48ebc:	2021883a 	mov	r16,r4
   48ec0:	2809883a 	mov	r4,r5
   48ec4:	dfc00115 	stw	ra,4(sp)
   48ec8:	10143915 	stw	zero,20708(r2)
   48ecc:	004f3c00 	call	4f3c0 <sbrk>
   48ed0:	10ffffd8 	cmpnei	r3,r2,-1
   48ed4:	18000426 	beq	r3,zero,48ee8 <_sbrk_r+0x38>
   48ed8:	dfc00117 	ldw	ra,4(sp)
   48edc:	dc000017 	ldw	r16,0(sp)
   48ee0:	dec00204 	addi	sp,sp,8
   48ee4:	f800283a 	ret
   48ee8:	00c00174 	movhi	r3,5
   48eec:	18d43917 	ldw	r3,20708(r3)
   48ef0:	183ff926 	beq	r3,zero,48ed8 <_sbrk_r+0x28>
   48ef4:	80c00015 	stw	r3,0(r16)
   48ef8:	dfc00117 	ldw	ra,4(sp)
   48efc:	dc000017 	ldw	r16,0(sp)
   48f00:	dec00204 	addi	sp,sp,8
   48f04:	f800283a 	ret

00048f08 <__sread>:
   48f08:	defffe04 	addi	sp,sp,-8
   48f0c:	dc000015 	stw	r16,0(sp)
   48f10:	2821883a 	mov	r16,r5
   48f14:	2940038f 	ldh	r5,14(r5)
   48f18:	dfc00115 	stw	ra,4(sp)
   48f1c:	004ace80 	call	4ace8 <_read_r>
   48f20:	10000716 	blt	r2,zero,48f40 <__sread+0x38>
   48f24:	80c01417 	ldw	r3,80(r16)
   48f28:	1887883a 	add	r3,r3,r2
   48f2c:	80c01415 	stw	r3,80(r16)
   48f30:	dfc00117 	ldw	ra,4(sp)
   48f34:	dc000017 	ldw	r16,0(sp)
   48f38:	dec00204 	addi	sp,sp,8
   48f3c:	f800283a 	ret
   48f40:	80c0030b 	ldhu	r3,12(r16)
   48f44:	18fbffcc 	andi	r3,r3,61439
   48f48:	80c0030d 	sth	r3,12(r16)
   48f4c:	dfc00117 	ldw	ra,4(sp)
   48f50:	dc000017 	ldw	r16,0(sp)
   48f54:	dec00204 	addi	sp,sp,8
   48f58:	f800283a 	ret

00048f5c <__seofread>:
   48f5c:	0005883a 	mov	r2,zero
   48f60:	f800283a 	ret

00048f64 <__swrite>:
   48f64:	2880030b 	ldhu	r2,12(r5)
   48f68:	defffb04 	addi	sp,sp,-20
   48f6c:	dcc00315 	stw	r19,12(sp)
   48f70:	dc800215 	stw	r18,8(sp)
   48f74:	dc400115 	stw	r17,4(sp)
   48f78:	dc000015 	stw	r16,0(sp)
   48f7c:	dfc00415 	stw	ra,16(sp)
   48f80:	10c0400c 	andi	r3,r2,256
   48f84:	2821883a 	mov	r16,r5
   48f88:	2023883a 	mov	r17,r4
   48f8c:	3025883a 	mov	r18,r6
   48f90:	3827883a 	mov	r19,r7
   48f94:	18000d1e 	bne	r3,zero,48fcc <__swrite+0x68>
   48f98:	8140038f 	ldh	r5,14(r16)
   48f9c:	10bbffcc 	andi	r2,r2,61439
   48fa0:	980f883a 	mov	r7,r19
   48fa4:	900d883a 	mov	r6,r18
   48fa8:	8809883a 	mov	r4,r17
   48fac:	8080030d 	sth	r2,12(r16)
   48fb0:	dfc00417 	ldw	ra,16(sp)
   48fb4:	dcc00317 	ldw	r19,12(sp)
   48fb8:	dc800217 	ldw	r18,8(sp)
   48fbc:	dc400117 	ldw	r17,4(sp)
   48fc0:	dc000017 	ldw	r16,0(sp)
   48fc4:	dec00504 	addi	sp,sp,20
   48fc8:	004a4a41 	jmpi	4a4a4 <_write_r>
   48fcc:	2940038f 	ldh	r5,14(r5)
   48fd0:	01c00084 	movi	r7,2
   48fd4:	000d883a 	mov	r6,zero
   48fd8:	004ac340 	call	4ac34 <_lseek_r>
   48fdc:	8080030b 	ldhu	r2,12(r16)
   48fe0:	003fed06 	br	48f98 <__swrite+0x34>

00048fe4 <__sseek>:
   48fe4:	defffe04 	addi	sp,sp,-8
   48fe8:	dc000015 	stw	r16,0(sp)
   48fec:	2821883a 	mov	r16,r5
   48ff0:	2940038f 	ldh	r5,14(r5)
   48ff4:	dfc00115 	stw	ra,4(sp)
   48ff8:	004ac340 	call	4ac34 <_lseek_r>
   48ffc:	10ffffd8 	cmpnei	r3,r2,-1
   49000:	18000826 	beq	r3,zero,49024 <__sseek+0x40>
   49004:	80c0030b 	ldhu	r3,12(r16)
   49008:	80801415 	stw	r2,80(r16)
   4900c:	18c40014 	ori	r3,r3,4096
   49010:	80c0030d 	sth	r3,12(r16)
   49014:	dfc00117 	ldw	ra,4(sp)
   49018:	dc000017 	ldw	r16,0(sp)
   4901c:	dec00204 	addi	sp,sp,8
   49020:	f800283a 	ret
   49024:	80c0030b 	ldhu	r3,12(r16)
   49028:	18fbffcc 	andi	r3,r3,61439
   4902c:	80c0030d 	sth	r3,12(r16)
   49030:	dfc00117 	ldw	ra,4(sp)
   49034:	dc000017 	ldw	r16,0(sp)
   49038:	dec00204 	addi	sp,sp,8
   4903c:	f800283a 	ret

00049040 <__sclose>:
   49040:	2940038f 	ldh	r5,14(r5)
   49044:	004a5081 	jmpi	4a508 <_close_r>

00049048 <__sprint_r.part.0>:
   49048:	28801917 	ldw	r2,100(r5)
   4904c:	defff604 	addi	sp,sp,-40
   49050:	dcc00315 	stw	r19,12(sp)
   49054:	dfc00915 	stw	ra,36(sp)
   49058:	df000815 	stw	fp,32(sp)
   4905c:	ddc00715 	stw	r23,28(sp)
   49060:	dd800615 	stw	r22,24(sp)
   49064:	dd400515 	stw	r21,20(sp)
   49068:	dd000415 	stw	r20,16(sp)
   4906c:	dc800215 	stw	r18,8(sp)
   49070:	dc400115 	stw	r17,4(sp)
   49074:	dc000015 	stw	r16,0(sp)
   49078:	1088000c 	andi	r2,r2,8192
   4907c:	3027883a 	mov	r19,r6
   49080:	10002c26 	beq	r2,zero,49134 <__sprint_r.part.0+0xec>
   49084:	30800217 	ldw	r2,8(r6)
   49088:	35000017 	ldw	r20,0(r6)
   4908c:	2821883a 	mov	r16,r5
   49090:	2023883a 	mov	r17,r4
   49094:	05bfff04 	movi	r22,-4
   49098:	10002426 	beq	r2,zero,4912c <__sprint_r.part.0+0xe4>
   4909c:	a5400117 	ldw	r21,4(r20)
   490a0:	a5c00017 	ldw	r23,0(r20)
   490a4:	a824d0ba 	srli	r18,r21,2
   490a8:	90001b26 	beq	r18,zero,49118 <__sprint_r.part.0+0xd0>
   490ac:	0039883a 	mov	fp,zero
   490b0:	00000206 	br	490bc <__sprint_r.part.0+0x74>
   490b4:	bdc00104 	addi	r23,r23,4
   490b8:	97001626 	beq	r18,fp,49114 <__sprint_r.part.0+0xcc>
   490bc:	b9400017 	ldw	r5,0(r23)
   490c0:	800d883a 	mov	r6,r16
   490c4:	8809883a 	mov	r4,r17
   490c8:	004a9ec0 	call	4a9ec <_fputwc_r>
   490cc:	10bfffe0 	cmpeqi	r2,r2,-1
   490d0:	e7000044 	addi	fp,fp,1
   490d4:	103ff726 	beq	r2,zero,490b4 <__sprint_r.part.0+0x6c>
   490d8:	00bfffc4 	movi	r2,-1
   490dc:	98000215 	stw	zero,8(r19)
   490e0:	98000115 	stw	zero,4(r19)
   490e4:	dfc00917 	ldw	ra,36(sp)
   490e8:	df000817 	ldw	fp,32(sp)
   490ec:	ddc00717 	ldw	r23,28(sp)
   490f0:	dd800617 	ldw	r22,24(sp)
   490f4:	dd400517 	ldw	r21,20(sp)
   490f8:	dd000417 	ldw	r20,16(sp)
   490fc:	dcc00317 	ldw	r19,12(sp)
   49100:	dc800217 	ldw	r18,8(sp)
   49104:	dc400117 	ldw	r17,4(sp)
   49108:	dc000017 	ldw	r16,0(sp)
   4910c:	dec00a04 	addi	sp,sp,40
   49110:	f800283a 	ret
   49114:	98800217 	ldw	r2,8(r19)
   49118:	adaa703a 	and	r21,r21,r22
   4911c:	1545c83a 	sub	r2,r2,r21
   49120:	98800215 	stw	r2,8(r19)
   49124:	a5000204 	addi	r20,r20,8
   49128:	103fdc1e 	bne	r2,zero,4909c <__sprint_r.part.0+0x54>
   4912c:	0005883a 	mov	r2,zero
   49130:	003fea06 	br	490dc <__sprint_r.part.0+0x94>
   49134:	00463940 	call	46394 <__sfvwrite_r>
   49138:	003fe806 	br	490dc <__sprint_r.part.0+0x94>

0004913c <__sprint_r>:
   4913c:	30c00217 	ldw	r3,8(r6)
   49140:	18000126 	beq	r3,zero,49148 <__sprint_r+0xc>
   49144:	00490481 	jmpi	49048 <__sprint_r.part.0>
   49148:	30000115 	stw	zero,4(r6)
   4914c:	0005883a 	mov	r2,zero
   49150:	f800283a 	ret

00049154 <___vfiprintf_internal_r>:
   49154:	deffcf04 	addi	sp,sp,-196
   49158:	dd002b15 	stw	r20,172(sp)
   4915c:	dc802915 	stw	r18,164(sp)
   49160:	dfc03015 	stw	ra,192(sp)
   49164:	df002f15 	stw	fp,188(sp)
   49168:	ddc02e15 	stw	r23,184(sp)
   4916c:	dd802d15 	stw	r22,180(sp)
   49170:	dd402c15 	stw	r21,176(sp)
   49174:	dcc02a15 	stw	r19,168(sp)
   49178:	dc402815 	stw	r17,160(sp)
   4917c:	dc002715 	stw	r16,156(sp)
   49180:	d9000015 	stw	r4,0(sp)
   49184:	d9c00315 	stw	r7,12(sp)
   49188:	2825883a 	mov	r18,r5
   4918c:	3029883a 	mov	r20,r6
   49190:	20000226 	beq	r4,zero,4919c <___vfiprintf_internal_r+0x48>
   49194:	20800e17 	ldw	r2,56(r4)
   49198:	1001b526 	beq	r2,zero,49870 <___vfiprintf_internal_r+0x71c>
   4919c:	9080030b 	ldhu	r2,12(r18)
   491a0:	10c8000c 	andi	r3,r2,8192
   491a4:	1800071e 	bne	r3,zero,491c4 <___vfiprintf_internal_r+0x70>
   491a8:	90c01917 	ldw	r3,100(r18)
   491ac:	11080014 	ori	r4,r2,8192
   491b0:	00b7ffc4 	movi	r2,-8193
   491b4:	1886703a 	and	r3,r3,r2
   491b8:	9100030d 	sth	r4,12(r18)
   491bc:	2005883a 	mov	r2,r4
   491c0:	90c01915 	stw	r3,100(r18)
   491c4:	10c0020c 	andi	r3,r2,8
   491c8:	1800fd26 	beq	r3,zero,495c0 <___vfiprintf_internal_r+0x46c>
   491cc:	90c00417 	ldw	r3,16(r18)
   491d0:	1800fb26 	beq	r3,zero,495c0 <___vfiprintf_internal_r+0x46c>
   491d4:	1080068c 	andi	r2,r2,26
   491d8:	10800298 	cmpnei	r2,r2,10
   491dc:	10010026 	beq	r2,zero,495e0 <___vfiprintf_internal_r+0x48c>
   491e0:	dcc01704 	addi	r19,sp,92
   491e4:	05c00174 	movhi	r23,5
   491e8:	dcc00a15 	stw	r19,40(sp)
   491ec:	d8000c15 	stw	zero,48(sp)
   491f0:	d8000b15 	stw	zero,44(sp)
   491f4:	9811883a 	mov	r8,r19
   491f8:	d8000515 	stw	zero,20(sp)
   491fc:	d8000115 	stw	zero,4(sp)
   49200:	bdc57d04 	addi	r23,r23,5620
   49204:	a0800007 	ldb	r2,0(r20)
   49208:	1000db26 	beq	r2,zero,49578 <___vfiprintf_internal_r+0x424>
   4920c:	a021883a 	mov	r16,r20
   49210:	00000306 	br	49220 <___vfiprintf_internal_r+0xcc>
   49214:	80800047 	ldb	r2,1(r16)
   49218:	84000044 	addi	r16,r16,1
   4921c:	10011826 	beq	r2,zero,49680 <___vfiprintf_internal_r+0x52c>
   49220:	10800958 	cmpnei	r2,r2,37
   49224:	103ffb1e 	bne	r2,zero,49214 <___vfiprintf_internal_r+0xc0>
   49228:	8523c83a 	sub	r17,r16,r20
   4922c:	8501161e 	bne	r16,r20,49688 <___vfiprintf_internal_r+0x534>
   49230:	80800003 	ldbu	r2,0(r16)
   49234:	10803fcc 	andi	r2,r2,255
   49238:	1080201c 	xori	r2,r2,128
   4923c:	10bfe004 	addi	r2,r2,-128
   49240:	1000cd26 	beq	r2,zero,49578 <___vfiprintf_internal_r+0x424>
   49244:	80800047 	ldb	r2,1(r16)
   49248:	85000044 	addi	r20,r16,1
   4924c:	d8000945 	stb	zero,37(sp)
   49250:	027fffc4 	movi	r9,-1
   49254:	0023883a 	mov	r17,zero
   49258:	0021883a 	mov	r16,zero
   4925c:	a5000044 	addi	r20,r20,1
   49260:	10fff804 	addi	r3,r2,-32
   49264:	19001668 	cmpgeui	r4,r3,89
   49268:	20006a1e 	bne	r4,zero,49414 <___vfiprintf_internal_r+0x2c0>
   4926c:	180690ba 	slli	r3,r3,2
   49270:	01000174 	movhi	r4,5
   49274:	1909883a 	add	r4,r3,r4
   49278:	20e4a017 	ldw	r3,-28032(r4)
   4927c:	1800683a 	jmp	r3
   49280:	00049914 	movui	zero,4708
   49284:	00049414 	movui	zero,4688
   49288:	00049414 	movui	zero,4688
   4928c:	00049908 	cmpgei	zero,zero,4708
   49290:	00049414 	movui	zero,4688
   49294:	00049414 	movui	zero,4688
   49298:	00049414 	movui	zero,4688
   4929c:	00049414 	movui	zero,4688
   492a0:	00049414 	movui	zero,4688
   492a4:	00049414 	movui	zero,4688
   492a8:	00049884 	movi	zero,4706
   492ac:	000498f8 	rdprs	zero,zero,4707
   492b0:	00049414 	movui	zero,4688
   492b4:	0004989c 	xori	zero,zero,4706
   492b8:	000498a8 	cmpgeui	zero,zero,4706
   492bc:	00049414 	movui	zero,4688
   492c0:	000498ec 	andhi	zero,zero,4707
   492c4:	000493e4 	muli	zero,zero,4687
   492c8:	000493e4 	muli	zero,zero,4687
   492cc:	000493e4 	muli	zero,zero,4687
   492d0:	000493e4 	muli	zero,zero,4687
   492d4:	000493e4 	muli	zero,zero,4687
   492d8:	000493e4 	muli	zero,zero,4687
   492dc:	000493e4 	muli	zero,zero,4687
   492e0:	000493e4 	muli	zero,zero,4687
   492e4:	000493e4 	muli	zero,zero,4687
   492e8:	00049414 	movui	zero,4688
   492ec:	00049414 	movui	zero,4688
   492f0:	00049414 	movui	zero,4688
   492f4:	00049414 	movui	zero,4688
   492f8:	00049414 	movui	zero,4688
   492fc:	00049414 	movui	zero,4688
   49300:	00049414 	movui	zero,4688
   49304:	00049414 	movui	zero,4688
   49308:	00049414 	movui	zero,4688
   4930c:	00049414 	movui	zero,4688
   49310:	00049628 	cmpgeui	zero,zero,4696
   49314:	00049414 	movui	zero,4688
   49318:	00049414 	movui	zero,4688
   4931c:	00049414 	movui	zero,4688
   49320:	00049414 	movui	zero,4688
   49324:	00049414 	movui	zero,4688
   49328:	00049414 	movui	zero,4688
   4932c:	00049414 	movui	zero,4688
   49330:	00049414 	movui	zero,4688
   49334:	00049414 	movui	zero,4688
   49338:	00049414 	movui	zero,4688
   4933c:	00049a30 	cmpltui	zero,zero,4712
   49340:	00049414 	movui	zero,4688
   49344:	00049414 	movui	zero,4688
   49348:	00049414 	movui	zero,4688
   4934c:	00049414 	movui	zero,4688
   49350:	00049414 	movui	zero,4688
   49354:	000499cc 	andi	zero,zero,4711
   49358:	00049414 	movui	zero,4688
   4935c:	00049414 	movui	zero,4688
   49360:	0004a1a4 	muli	zero,zero,4742
   49364:	00049414 	movui	zero,4688
   49368:	00049414 	movui	zero,4688
   4936c:	00049414 	movui	zero,4688
   49370:	00049414 	movui	zero,4688
   49374:	00049414 	movui	zero,4688
   49378:	00049414 	movui	zero,4688
   4937c:	00049414 	movui	zero,4688
   49380:	00049414 	movui	zero,4688
   49384:	00049414 	movui	zero,4688
   49388:	00049414 	movui	zero,4688
   4938c:	000499a4 	muli	zero,zero,4710
   49390:	0004962c 	andhi	zero,zero,4696
   49394:	00049414 	movui	zero,4688
   49398:	00049414 	movui	zero,4688
   4939c:	00049414 	movui	zero,4688
   493a0:	00049998 	cmpnei	zero,zero,4710
   493a4:	0004962c 	andhi	zero,zero,4696
   493a8:	00049414 	movui	zero,4688
   493ac:	00049414 	movui	zero,4688
   493b0:	00049984 	movi	zero,4710
   493b4:	00049414 	movui	zero,4688
   493b8:	00049954 	movui	zero,4709
   493bc:	0004a200 	call	4a20 <__reset-0x3b5e0>
   493c0:	00049b44 	movi	zero,4717
   493c4:	00049b38 	rdprs	zero,zero,4716
   493c8:	00049414 	movui	zero,4688
   493cc:	00049ae0 	cmpeqi	zero,zero,4715
   493d0:	00049414 	movui	zero,4688
   493d4:	0004a19c 	xori	zero,zero,4742
   493d8:	00049414 	movui	zero,4688
   493dc:	00049414 	movui	zero,4688
   493e0:	0004a22c 	andhi	zero,zero,4744
   493e4:	0023883a 	mov	r17,zero
   493e8:	10fff404 	addi	r3,r2,-48
   493ec:	a0800007 	ldb	r2,0(r20)
   493f0:	8c4002a4 	muli	r17,r17,10
   493f4:	a5000044 	addi	r20,r20,1
   493f8:	1c63883a 	add	r17,r3,r17
   493fc:	10fff404 	addi	r3,r2,-48
   49400:	190002b0 	cmpltui	r4,r3,10
   49404:	203ff91e 	bne	r4,zero,493ec <___vfiprintf_internal_r+0x298>
   49408:	10fff804 	addi	r3,r2,-32
   4940c:	19001668 	cmpgeui	r4,r3,89
   49410:	203f9626 	beq	r4,zero,4926c <___vfiprintf_internal_r+0x118>
   49414:	10005826 	beq	r2,zero,49578 <___vfiprintf_internal_r+0x424>
   49418:	d8800d05 	stb	r2,52(sp)
   4941c:	d8000945 	stb	zero,37(sp)
   49420:	05800044 	movi	r22,1
   49424:	05400044 	movi	r21,1
   49428:	df000d04 	addi	fp,sp,52
   4942c:	0013883a 	mov	r9,zero
   49430:	8340008c 	andi	r13,r16,2
   49434:	68000126 	beq	r13,zero,4943c <___vfiprintf_internal_r+0x2e8>
   49438:	b5800084 	addi	r22,r22,2
   4943c:	d9000b17 	ldw	r4,44(sp)
   49440:	8300210c 	andi	r12,r16,132
   49444:	d8800c17 	ldw	r2,48(sp)
   49448:	21800044 	addi	r6,r4,1
   4944c:	300b883a 	mov	r5,r6
   49450:	6000021e 	bne	r12,zero,4945c <___vfiprintf_internal_r+0x308>
   49454:	8d87c83a 	sub	r3,r17,r22
   49458:	00c28f16 	blt	zero,r3,49e98 <___vfiprintf_internal_r+0xd44>
   4945c:	d8c00947 	ldb	r3,37(sp)
   49460:	18000c26 	beq	r3,zero,49494 <___vfiprintf_internal_r+0x340>
   49464:	d8c00944 	addi	r3,sp,37
   49468:	10800044 	addi	r2,r2,1
   4946c:	40c00015 	stw	r3,0(r8)
   49470:	00c00044 	movi	r3,1
   49474:	40c00115 	stw	r3,4(r8)
   49478:	d8800c15 	stw	r2,48(sp)
   4947c:	d9400b15 	stw	r5,44(sp)
   49480:	28c00208 	cmpgei	r3,r5,8
   49484:	1802681e 	bne	r3,zero,49e28 <___vfiprintf_internal_r+0xcd4>
   49488:	2809883a 	mov	r4,r5
   4948c:	42000204 	addi	r8,r8,8
   49490:	29400044 	addi	r5,r5,1
   49494:	68001726 	beq	r13,zero,494f4 <___vfiprintf_internal_r+0x3a0>
   49498:	d8c00984 	addi	r3,sp,38
   4949c:	10800084 	addi	r2,r2,2
   494a0:	40c00015 	stw	r3,0(r8)
   494a4:	00c00084 	movi	r3,2
   494a8:	40c00115 	stw	r3,4(r8)
   494ac:	d8800c15 	stw	r2,48(sp)
   494b0:	d9400b15 	stw	r5,44(sp)
   494b4:	28c00208 	cmpgei	r3,r5,8
   494b8:	18027326 	beq	r3,zero,49e88 <___vfiprintf_internal_r+0xd34>
   494bc:	1002f626 	beq	r2,zero,4a098 <___vfiprintf_internal_r+0xf44>
   494c0:	d9000017 	ldw	r4,0(sp)
   494c4:	d9800a04 	addi	r6,sp,40
   494c8:	900b883a 	mov	r5,r18
   494cc:	da400415 	stw	r9,16(sp)
   494d0:	db000215 	stw	r12,8(sp)
   494d4:	00490480 	call	49048 <__sprint_r.part.0>
   494d8:	1000291e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   494dc:	d9000b17 	ldw	r4,44(sp)
   494e0:	d8800c17 	ldw	r2,48(sp)
   494e4:	da400417 	ldw	r9,16(sp)
   494e8:	db000217 	ldw	r12,8(sp)
   494ec:	9811883a 	mov	r8,r19
   494f0:	21400044 	addi	r5,r4,1
   494f4:	63002018 	cmpnei	r12,r12,128
   494f8:	6001cf26 	beq	r12,zero,49c38 <___vfiprintf_internal_r+0xae4>
   494fc:	4d53c83a 	sub	r9,r9,r21
   49500:	02420d16 	blt	zero,r9,49d38 <___vfiprintf_internal_r+0xbe4>
   49504:	a885883a 	add	r2,r21,r2
   49508:	d9400b15 	stw	r5,44(sp)
   4950c:	47000015 	stw	fp,0(r8)
   49510:	45400115 	stw	r21,4(r8)
   49514:	d8800c15 	stw	r2,48(sp)
   49518:	29400208 	cmpgei	r5,r5,8
   4951c:	2801c026 	beq	r5,zero,49c20 <___vfiprintf_internal_r+0xacc>
   49520:	10007126 	beq	r2,zero,496e8 <___vfiprintf_internal_r+0x594>
   49524:	d9000017 	ldw	r4,0(sp)
   49528:	d9800a04 	addi	r6,sp,40
   4952c:	900b883a 	mov	r5,r18
   49530:	00490480 	call	49048 <__sprint_r.part.0>
   49534:	1000121e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   49538:	d8800c17 	ldw	r2,48(sp)
   4953c:	9811883a 	mov	r8,r19
   49540:	8400010c 	andi	r16,r16,4
   49544:	80000226 	beq	r16,zero,49550 <___vfiprintf_internal_r+0x3fc>
   49548:	8da1c83a 	sub	r16,r17,r22
   4954c:	04006c16 	blt	zero,r16,49700 <___vfiprintf_internal_r+0x5ac>
   49550:	8d80010e 	bge	r17,r22,49558 <___vfiprintf_internal_r+0x404>
   49554:	b023883a 	mov	r17,r22
   49558:	d8c00117 	ldw	r3,4(sp)
   4955c:	1c47883a 	add	r3,r3,r17
   49560:	d8c00115 	stw	r3,4(sp)
   49564:	1002261e 	bne	r2,zero,49e00 <___vfiprintf_internal_r+0xcac>
   49568:	a0800007 	ldb	r2,0(r20)
   4956c:	d8000b15 	stw	zero,44(sp)
   49570:	9811883a 	mov	r8,r19
   49574:	103f251e 	bne	r2,zero,4920c <___vfiprintf_internal_r+0xb8>
   49578:	d8800c17 	ldw	r2,48(sp)
   4957c:	1003631e 	bne	r2,zero,4a30c <___vfiprintf_internal_r+0x11b8>
   49580:	9080030b 	ldhu	r2,12(r18)
   49584:	1080100c 	andi	r2,r2,64
   49588:	1003741e 	bne	r2,zero,4a35c <___vfiprintf_internal_r+0x1208>
   4958c:	d8800117 	ldw	r2,4(sp)
   49590:	dfc03017 	ldw	ra,192(sp)
   49594:	df002f17 	ldw	fp,188(sp)
   49598:	ddc02e17 	ldw	r23,184(sp)
   4959c:	dd802d17 	ldw	r22,180(sp)
   495a0:	dd402c17 	ldw	r21,176(sp)
   495a4:	dd002b17 	ldw	r20,172(sp)
   495a8:	dcc02a17 	ldw	r19,168(sp)
   495ac:	dc802917 	ldw	r18,164(sp)
   495b0:	dc402817 	ldw	r17,160(sp)
   495b4:	dc002717 	ldw	r16,156(sp)
   495b8:	dec03104 	addi	sp,sp,196
   495bc:	f800283a 	ret
   495c0:	d9000017 	ldw	r4,0(sp)
   495c4:	900b883a 	mov	r5,r18
   495c8:	0043dd00 	call	43dd0 <__swsetup_r>
   495cc:	1003631e 	bne	r2,zero,4a35c <___vfiprintf_internal_r+0x1208>
   495d0:	9080030b 	ldhu	r2,12(r18)
   495d4:	1080068c 	andi	r2,r2,26
   495d8:	10800298 	cmpnei	r2,r2,10
   495dc:	103f001e 	bne	r2,zero,491e0 <___vfiprintf_internal_r+0x8c>
   495e0:	9080038f 	ldh	r2,14(r18)
   495e4:	103efe16 	blt	r2,zero,491e0 <___vfiprintf_internal_r+0x8c>
   495e8:	d9c00317 	ldw	r7,12(sp)
   495ec:	d9000017 	ldw	r4,0(sp)
   495f0:	a00d883a 	mov	r6,r20
   495f4:	900b883a 	mov	r5,r18
   495f8:	dfc03017 	ldw	ra,192(sp)
   495fc:	df002f17 	ldw	fp,188(sp)
   49600:	ddc02e17 	ldw	r23,184(sp)
   49604:	dd802d17 	ldw	r22,180(sp)
   49608:	dd402c17 	ldw	r21,176(sp)
   4960c:	dd002b17 	ldw	r20,172(sp)
   49610:	dcc02a17 	ldw	r19,168(sp)
   49614:	dc802917 	ldw	r18,164(sp)
   49618:	dc402817 	ldw	r17,160(sp)
   4961c:	dc002717 	ldw	r16,156(sp)
   49620:	dec03104 	addi	sp,sp,196
   49624:	004a3e01 	jmpi	4a3e0 <__sbprintf>
   49628:	84000414 	ori	r16,r16,16
   4962c:	8080080c 	andi	r2,r16,32
   49630:	10006626 	beq	r2,zero,497cc <___vfiprintf_internal_r+0x678>
   49634:	d8c00317 	ldw	r3,12(sp)
   49638:	18800117 	ldw	r2,4(r3)
   4963c:	1d800017 	ldw	r22,0(r3)
   49640:	18c00204 	addi	r3,r3,8
   49644:	d8c00315 	stw	r3,12(sp)
   49648:	102b883a 	mov	r21,r2
   4964c:	10006d16 	blt	r2,zero,49804 <___vfiprintf_internal_r+0x6b0>
   49650:	48bfffd8 	cmpnei	r2,r9,-1
   49654:	db000943 	ldbu	r12,37(sp)
   49658:	10007526 	beq	r2,zero,49830 <___vfiprintf_internal_r+0x6dc>
   4965c:	00ffdfc4 	movi	r3,-129
   49660:	b544b03a 	or	r2,r22,r21
   49664:	80e0703a 	and	r16,r16,r3
   49668:	1000711e 	bne	r2,zero,49830 <___vfiprintf_internal_r+0x6dc>
   4966c:	48033e1e 	bne	r9,zero,4a368 <___vfiprintf_internal_r+0x1214>
   49670:	002d883a 	mov	r22,zero
   49674:	002b883a 	mov	r21,zero
   49678:	9839883a 	mov	fp,r19
   4967c:	00007606 	br	49858 <___vfiprintf_internal_r+0x704>
   49680:	8523c83a 	sub	r17,r16,r20
   49684:	853fbc26 	beq	r16,r20,49578 <___vfiprintf_internal_r+0x424>
   49688:	d8c00c17 	ldw	r3,48(sp)
   4968c:	d8800b17 	ldw	r2,44(sp)
   49690:	45000015 	stw	r20,0(r8)
   49694:	88c7883a 	add	r3,r17,r3
   49698:	10800044 	addi	r2,r2,1
   4969c:	d8800b15 	stw	r2,44(sp)
   496a0:	44400115 	stw	r17,4(r8)
   496a4:	d8c00c15 	stw	r3,48(sp)
   496a8:	10800208 	cmpgei	r2,r2,8
   496ac:	1000061e 	bne	r2,zero,496c8 <___vfiprintf_internal_r+0x574>
   496b0:	42000204 	addi	r8,r8,8
   496b4:	d8c00117 	ldw	r3,4(sp)
   496b8:	80800003 	ldbu	r2,0(r16)
   496bc:	1c47883a 	add	r3,r3,r17
   496c0:	d8c00115 	stw	r3,4(sp)
   496c4:	003edb06 	br	49234 <___vfiprintf_internal_r+0xe0>
   496c8:	18025226 	beq	r3,zero,4a014 <___vfiprintf_internal_r+0xec0>
   496cc:	d9000017 	ldw	r4,0(sp)
   496d0:	d9800a04 	addi	r6,sp,40
   496d4:	900b883a 	mov	r5,r18
   496d8:	00490480 	call	49048 <__sprint_r.part.0>
   496dc:	103fa81e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   496e0:	9811883a 	mov	r8,r19
   496e4:	003ff306 	br	496b4 <___vfiprintf_internal_r+0x560>
   496e8:	d8000b15 	stw	zero,44(sp)
   496ec:	8400010c 	andi	r16,r16,4
   496f0:	80022426 	beq	r16,zero,49f84 <___vfiprintf_internal_r+0xe30>
   496f4:	8da1c83a 	sub	r16,r17,r22
   496f8:	0402220e 	bge	zero,r16,49f84 <___vfiprintf_internal_r+0xe30>
   496fc:	9811883a 	mov	r8,r19
   49700:	80c00450 	cmplti	r3,r16,17
   49704:	d9000b17 	ldw	r4,44(sp)
   49708:	01c00174 	movhi	r7,5
   4970c:	18030b1e 	bne	r3,zero,4a33c <___vfiprintf_internal_r+0x11e8>
   49710:	39c58104 	addi	r7,r7,5636
   49714:	05400404 	movi	r21,16
   49718:	00000606 	br	49734 <___vfiprintf_internal_r+0x5e0>
   4971c:	21400084 	addi	r5,r4,2
   49720:	42000204 	addi	r8,r8,8
   49724:	1809883a 	mov	r4,r3
   49728:	843ffc04 	addi	r16,r16,-16
   4972c:	80c00448 	cmpgei	r3,r16,17
   49730:	18001726 	beq	r3,zero,49790 <___vfiprintf_internal_r+0x63c>
   49734:	20c00044 	addi	r3,r4,1
   49738:	10800404 	addi	r2,r2,16
   4973c:	41c00015 	stw	r7,0(r8)
   49740:	45400115 	stw	r21,4(r8)
   49744:	d8800c15 	stw	r2,48(sp)
   49748:	d8c00b15 	stw	r3,44(sp)
   4974c:	19400208 	cmpgei	r5,r3,8
   49750:	283ff226 	beq	r5,zero,4971c <___vfiprintf_internal_r+0x5c8>
   49754:	d9000017 	ldw	r4,0(sp)
   49758:	d9800a04 	addi	r6,sp,40
   4975c:	900b883a 	mov	r5,r18
   49760:	10013126 	beq	r2,zero,49c28 <___vfiprintf_internal_r+0xad4>
   49764:	d9c00215 	stw	r7,8(sp)
   49768:	00490480 	call	49048 <__sprint_r.part.0>
   4976c:	103f841e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   49770:	d9000b17 	ldw	r4,44(sp)
   49774:	843ffc04 	addi	r16,r16,-16
   49778:	80c00448 	cmpgei	r3,r16,17
   4977c:	d8800c17 	ldw	r2,48(sp)
   49780:	d9c00217 	ldw	r7,8(sp)
   49784:	9811883a 	mov	r8,r19
   49788:	21400044 	addi	r5,r4,1
   4978c:	183fe91e 	bne	r3,zero,49734 <___vfiprintf_internal_r+0x5e0>
   49790:	1405883a 	add	r2,r2,r16
   49794:	d9400b15 	stw	r5,44(sp)
   49798:	41c00015 	stw	r7,0(r8)
   4979c:	44000115 	stw	r16,4(r8)
   497a0:	d8800c15 	stw	r2,48(sp)
   497a4:	29400210 	cmplti	r5,r5,8
   497a8:	283f691e 	bne	r5,zero,49550 <___vfiprintf_internal_r+0x3fc>
   497ac:	1001f526 	beq	r2,zero,49f84 <___vfiprintf_internal_r+0xe30>
   497b0:	d9000017 	ldw	r4,0(sp)
   497b4:	d9800a04 	addi	r6,sp,40
   497b8:	900b883a 	mov	r5,r18
   497bc:	00490480 	call	49048 <__sprint_r.part.0>
   497c0:	103f6f1e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   497c4:	d8800c17 	ldw	r2,48(sp)
   497c8:	003f6106 	br	49550 <___vfiprintf_internal_r+0x3fc>
   497cc:	d8c00317 	ldw	r3,12(sp)
   497d0:	8080040c 	andi	r2,r16,16
   497d4:	1d800017 	ldw	r22,0(r3)
   497d8:	18c00104 	addi	r3,r3,4
   497dc:	d8c00315 	stw	r3,12(sp)
   497e0:	1000251e 	bne	r2,zero,49878 <___vfiprintf_internal_r+0x724>
   497e4:	8080100c 	andi	r2,r16,64
   497e8:	10002326 	beq	r2,zero,49878 <___vfiprintf_internal_r+0x724>
   497ec:	b5bfffcc 	andi	r22,r22,65535
   497f0:	b5a0001c 	xori	r22,r22,32768
   497f4:	b5a00004 	addi	r22,r22,-32768
   497f8:	b02bd7fa 	srai	r21,r22,31
   497fc:	a805883a 	mov	r2,r21
   49800:	103f930e 	bge	r2,zero,49650 <___vfiprintf_internal_r+0x4fc>
   49804:	00800b44 	movi	r2,45
   49808:	b006c03a 	cmpne	r3,r22,zero
   4980c:	056bc83a 	sub	r21,zero,r21
   49810:	d8800945 	stb	r2,37(sp)
   49814:	48bfffd8 	cmpnei	r2,r9,-1
   49818:	a8ebc83a 	sub	r21,r21,r3
   4981c:	05adc83a 	sub	r22,zero,r22
   49820:	10000226 	beq	r2,zero,4982c <___vfiprintf_internal_r+0x6d8>
   49824:	00bfdfc4 	movi	r2,-129
   49828:	80a0703a 	and	r16,r16,r2
   4982c:	03000b44 	movi	r12,45
   49830:	a800d41e 	bne	r21,zero,49b84 <___vfiprintf_internal_r+0xa30>
   49834:	b08002a8 	cmpgeui	r2,r22,10
   49838:	1000d21e 	bne	r2,zero,49b84 <___vfiprintf_internal_r+0xa30>
   4983c:	b5800c04 	addi	r22,r22,48
   49840:	dd8016c5 	stb	r22,91(sp)
   49844:	482d883a 	mov	r22,r9
   49848:	02400116 	blt	zero,r9,49850 <___vfiprintf_internal_r+0x6fc>
   4984c:	05800044 	movi	r22,1
   49850:	05400044 	movi	r21,1
   49854:	df0016c4 	addi	fp,sp,91
   49858:	63003fcc 	andi	r12,r12,255
   4985c:	6300201c 	xori	r12,r12,128
   49860:	633fe004 	addi	r12,r12,-128
   49864:	603ef226 	beq	r12,zero,49430 <___vfiprintf_internal_r+0x2dc>
   49868:	b5800044 	addi	r22,r22,1
   4986c:	003ef006 	br	49430 <___vfiprintf_internal_r+0x2dc>
   49870:	0045f200 	call	45f20 <__sinit>
   49874:	003e4906 	br	4919c <___vfiprintf_internal_r+0x48>
   49878:	b02bd7fa 	srai	r21,r22,31
   4987c:	a805883a 	mov	r2,r21
   49880:	003f7206 	br	4964c <___vfiprintf_internal_r+0x4f8>
   49884:	d8800317 	ldw	r2,12(sp)
   49888:	14400017 	ldw	r17,0(r2)
   4988c:	17000104 	addi	fp,r2,4
   49890:	8802200e 	bge	r17,zero,4a114 <___vfiprintf_internal_r+0xfc0>
   49894:	0463c83a 	sub	r17,zero,r17
   49898:	df000315 	stw	fp,12(sp)
   4989c:	a0800007 	ldb	r2,0(r20)
   498a0:	84000114 	ori	r16,r16,4
   498a4:	003e6d06 	br	4925c <___vfiprintf_internal_r+0x108>
   498a8:	a0800007 	ldb	r2,0(r20)
   498ac:	a1000044 	addi	r4,r20,1
   498b0:	10c00aa0 	cmpeqi	r3,r2,42
   498b4:	1802b11e 	bne	r3,zero,4a37c <___vfiprintf_internal_r+0x1228>
   498b8:	10fff404 	addi	r3,r2,-48
   498bc:	194002b0 	cmpltui	r5,r3,10
   498c0:	2029883a 	mov	r20,r4
   498c4:	0013883a 	mov	r9,zero
   498c8:	283e6526 	beq	r5,zero,49260 <___vfiprintf_internal_r+0x10c>
   498cc:	a0800007 	ldb	r2,0(r20)
   498d0:	4a4002a4 	muli	r9,r9,10
   498d4:	a5000044 	addi	r20,r20,1
   498d8:	48d3883a 	add	r9,r9,r3
   498dc:	10fff404 	addi	r3,r2,-48
   498e0:	190002b0 	cmpltui	r4,r3,10
   498e4:	203ff91e 	bne	r4,zero,498cc <___vfiprintf_internal_r+0x778>
   498e8:	003e5d06 	br	49260 <___vfiprintf_internal_r+0x10c>
   498ec:	a0800007 	ldb	r2,0(r20)
   498f0:	84002014 	ori	r16,r16,128
   498f4:	003e5906 	br	4925c <___vfiprintf_internal_r+0x108>
   498f8:	00c00ac4 	movi	r3,43
   498fc:	a0800007 	ldb	r2,0(r20)
   49900:	d8c00945 	stb	r3,37(sp)
   49904:	003e5506 	br	4925c <___vfiprintf_internal_r+0x108>
   49908:	a0800007 	ldb	r2,0(r20)
   4990c:	84000054 	ori	r16,r16,1
   49910:	003e5206 	br	4925c <___vfiprintf_internal_r+0x108>
   49914:	d8c00947 	ldb	r3,37(sp)
   49918:	a0800003 	ldbu	r2,0(r20)
   4991c:	1800091e 	bne	r3,zero,49944 <___vfiprintf_internal_r+0x7f0>
   49920:	10803fcc 	andi	r2,r2,255
   49924:	00c00804 	movi	r3,32
   49928:	1080201c 	xori	r2,r2,128
   4992c:	d8c00945 	stb	r3,37(sp)
   49930:	10bfe004 	addi	r2,r2,-128
   49934:	003e4906 	br	4925c <___vfiprintf_internal_r+0x108>
   49938:	a0800043 	ldbu	r2,1(r20)
   4993c:	84000814 	ori	r16,r16,32
   49940:	a5000044 	addi	r20,r20,1
   49944:	10803fcc 	andi	r2,r2,255
   49948:	1080201c 	xori	r2,r2,128
   4994c:	10bfe004 	addi	r2,r2,-128
   49950:	003e4206 	br	4925c <___vfiprintf_internal_r+0x108>
   49954:	8080080c 	andi	r2,r16,32
   49958:	1001f826 	beq	r2,zero,4a13c <___vfiprintf_internal_r+0xfe8>
   4995c:	d9000117 	ldw	r4,4(sp)
   49960:	d8800317 	ldw	r2,12(sp)
   49964:	2007d7fa 	srai	r3,r4,31
   49968:	10800017 	ldw	r2,0(r2)
   4996c:	11000015 	stw	r4,0(r2)
   49970:	10c00115 	stw	r3,4(r2)
   49974:	d8800317 	ldw	r2,12(sp)
   49978:	10800104 	addi	r2,r2,4
   4997c:	d8800315 	stw	r2,12(sp)
   49980:	003e2006 	br	49204 <___vfiprintf_internal_r+0xb0>
   49984:	a0800007 	ldb	r2,0(r20)
   49988:	10c01b18 	cmpnei	r3,r2,108
   4998c:	183fea26 	beq	r3,zero,49938 <___vfiprintf_internal_r+0x7e4>
   49990:	84000414 	ori	r16,r16,16
   49994:	003e3106 	br	4925c <___vfiprintf_internal_r+0x108>
   49998:	a0800007 	ldb	r2,0(r20)
   4999c:	84001014 	ori	r16,r16,64
   499a0:	003e2e06 	br	4925c <___vfiprintf_internal_r+0x108>
   499a4:	d8c00317 	ldw	r3,12(sp)
   499a8:	d8000945 	stb	zero,37(sp)
   499ac:	05800044 	movi	r22,1
   499b0:	18800017 	ldw	r2,0(r3)
   499b4:	18c00104 	addi	r3,r3,4
   499b8:	d8c00315 	stw	r3,12(sp)
   499bc:	d8800d05 	stb	r2,52(sp)
   499c0:	05400044 	movi	r21,1
   499c4:	df000d04 	addi	fp,sp,52
   499c8:	003e9806 	br	4942c <___vfiprintf_internal_r+0x2d8>
   499cc:	80800414 	ori	r2,r16,16
   499d0:	10c0080c 	andi	r3,r2,32
   499d4:	18019126 	beq	r3,zero,4a01c <___vfiprintf_internal_r+0xec8>
   499d8:	d8c00317 	ldw	r3,12(sp)
   499dc:	d8000945 	stb	zero,37(sp)
   499e0:	1d800017 	ldw	r22,0(r3)
   499e4:	1d400117 	ldw	r21,4(r3)
   499e8:	18c00204 	addi	r3,r3,8
   499ec:	d8c00315 	stw	r3,12(sp)
   499f0:	48ffffd8 	cmpnei	r3,r9,-1
   499f4:	18019626 	beq	r3,zero,4a050 <___vfiprintf_internal_r+0xefc>
   499f8:	00c00044 	movi	r3,1
   499fc:	043fdfc4 	movi	r16,-129
   49a00:	b548b03a 	or	r4,r22,r21
   49a04:	1420703a 	and	r16,r2,r16
   49a08:	2000191e 	bne	r4,zero,49a70 <___vfiprintf_internal_r+0x91c>
   49a0c:	4802221e 	bne	r9,zero,4a298 <___vfiprintf_internal_r+0x1144>
   49a10:	1801bc1e 	bne	r3,zero,4a104 <___vfiprintf_internal_r+0xfb0>
   49a14:	1540004c 	andi	r21,r2,1
   49a18:	a801c126 	beq	r21,zero,4a120 <___vfiprintf_internal_r+0xfcc>
   49a1c:	00800c04 	movi	r2,48
   49a20:	d88016c5 	stb	r2,91(sp)
   49a24:	a82d883a 	mov	r22,r21
   49a28:	df0016c4 	addi	fp,sp,91
   49a2c:	003e8006 	br	49430 <___vfiprintf_internal_r+0x2dc>
   49a30:	80800414 	ori	r2,r16,16
   49a34:	10c0080c 	andi	r3,r2,32
   49a38:	18018826 	beq	r3,zero,4a05c <___vfiprintf_internal_r+0xf08>
   49a3c:	d8c00317 	ldw	r3,12(sp)
   49a40:	d8000945 	stb	zero,37(sp)
   49a44:	1d800017 	ldw	r22,0(r3)
   49a48:	1d400117 	ldw	r21,4(r3)
   49a4c:	18c00204 	addi	r3,r3,8
   49a50:	d8c00315 	stw	r3,12(sp)
   49a54:	48ffffd8 	cmpnei	r3,r9,-1
   49a58:	18018d26 	beq	r3,zero,4a090 <___vfiprintf_internal_r+0xf3c>
   49a5c:	043fdfc4 	movi	r16,-129
   49a60:	b548b03a 	or	r4,r22,r21
   49a64:	0007883a 	mov	r3,zero
   49a68:	1420703a 	and	r16,r2,r16
   49a6c:	203fe726 	beq	r4,zero,49a0c <___vfiprintf_internal_r+0x8b8>
   49a70:	18800060 	cmpeqi	r2,r3,1
   49a74:	1002511e 	bne	r2,zero,4a3bc <___vfiprintf_internal_r+0x1268>
   49a78:	18c000a0 	cmpeqi	r3,r3,2
   49a7c:	1801481e 	bne	r3,zero,49fa0 <___vfiprintf_internal_r+0xe4c>
   49a80:	9839883a 	mov	fp,r19
   49a84:	a808977a 	slli	r4,r21,29
   49a88:	b006d0fa 	srli	r3,r22,3
   49a8c:	a82ad0fa 	srli	r21,r21,3
   49a90:	b08001cc 	andi	r2,r22,7
   49a94:	10800c04 	addi	r2,r2,48
   49a98:	20ecb03a 	or	r22,r4,r3
   49a9c:	e0bfffc5 	stb	r2,-1(fp)
   49aa0:	b546b03a 	or	r3,r22,r21
   49aa4:	e00b883a 	mov	r5,fp
   49aa8:	e73fffc4 	addi	fp,fp,-1
   49aac:	183ff51e 	bne	r3,zero,49a84 <___vfiprintf_internal_r+0x930>
   49ab0:	80c0004c 	andi	r3,r16,1
   49ab4:	18014726 	beq	r3,zero,49fd4 <___vfiprintf_internal_r+0xe80>
   49ab8:	10800c18 	cmpnei	r2,r2,48
   49abc:	10014526 	beq	r2,zero,49fd4 <___vfiprintf_internal_r+0xe80>
   49ac0:	297fff84 	addi	r5,r5,-2
   49ac4:	00800c04 	movi	r2,48
   49ac8:	e0bfffc5 	stb	r2,-1(fp)
   49acc:	996bc83a 	sub	r21,r19,r5
   49ad0:	482d883a 	mov	r22,r9
   49ad4:	4d41a616 	blt	r9,r21,4a170 <___vfiprintf_internal_r+0x101c>
   49ad8:	2839883a 	mov	fp,r5
   49adc:	003e5406 	br	49430 <___vfiprintf_internal_r+0x2dc>
   49ae0:	d8800317 	ldw	r2,12(sp)
   49ae4:	d8000945 	stb	zero,37(sp)
   49ae8:	17000017 	ldw	fp,0(r2)
   49aec:	10c00104 	addi	r3,r2,4
   49af0:	e001f026 	beq	fp,zero,4a2b4 <___vfiprintf_internal_r+0x1160>
   49af4:	48bfffe0 	cmpeqi	r2,r9,-1
   49af8:	1001a01e 	bne	r2,zero,4a17c <___vfiprintf_internal_r+0x1028>
   49afc:	480d883a 	mov	r6,r9
   49b00:	000b883a 	mov	r5,zero
   49b04:	e009883a 	mov	r4,fp
   49b08:	d8c00415 	stw	r3,16(sp)
   49b0c:	da000315 	stw	r8,12(sp)
   49b10:	da400215 	stw	r9,8(sp)
   49b14:	00473780 	call	47378 <memchr>
   49b18:	da400217 	ldw	r9,8(sp)
   49b1c:	da000317 	ldw	r8,12(sp)
   49b20:	d8c00417 	ldw	r3,16(sp)
   49b24:	1001fe26 	beq	r2,zero,4a320 <___vfiprintf_internal_r+0x11cc>
   49b28:	172bc83a 	sub	r21,r2,fp
   49b2c:	a82d883a 	mov	r22,r21
   49b30:	d8c00315 	stw	r3,12(sp)
   49b34:	003e3d06 	br	4942c <___vfiprintf_internal_r+0x2d8>
   49b38:	a0800007 	ldb	r2,0(r20)
   49b3c:	84000814 	ori	r16,r16,32
   49b40:	003dc606 	br	4925c <___vfiprintf_internal_r+0x108>
   49b44:	d9000317 	ldw	r4,12(sp)
   49b48:	00de0c04 	movi	r3,30768
   49b4c:	01400174 	movhi	r5,5
   49b50:	d8c0098d 	sth	r3,38(sp)
   49b54:	25800017 	ldw	r22,0(r4)
   49b58:	20c00104 	addi	r3,r4,4
   49b5c:	d8c00315 	stw	r3,12(sp)
   49b60:	28c4fd04 	addi	r3,r5,5108
   49b64:	002b883a 	mov	r21,zero
   49b68:	80800094 	ori	r2,r16,2
   49b6c:	d8c00515 	stw	r3,20(sp)
   49b70:	d8000945 	stb	zero,37(sp)
   49b74:	48ffffd8 	cmpnei	r3,r9,-1
   49b78:	18010826 	beq	r3,zero,49f9c <___vfiprintf_internal_r+0xe48>
   49b7c:	00c00084 	movi	r3,2
   49b80:	003f9e06 	br	499fc <___vfiprintf_internal_r+0x8a8>
   49b84:	9839883a 	mov	fp,r19
   49b88:	b009883a 	mov	r4,r22
   49b8c:	a80b883a 	mov	r5,r21
   49b90:	01800284 	movi	r6,10
   49b94:	000f883a 	mov	r7,zero
   49b98:	db000615 	stw	r12,24(sp)
   49b9c:	da000415 	stw	r8,16(sp)
   49ba0:	da400215 	stw	r9,8(sp)
   49ba4:	004bb240 	call	4bb24 <__umoddi3>
   49ba8:	10800c04 	addi	r2,r2,48
   49bac:	b009883a 	mov	r4,r22
   49bb0:	a80b883a 	mov	r5,r21
   49bb4:	e0bfffc5 	stb	r2,-1(fp)
   49bb8:	01800284 	movi	r6,10
   49bbc:	000f883a 	mov	r7,zero
   49bc0:	004b5d40 	call	4b5d4 <__udivdi3>
   49bc4:	a809883a 	mov	r4,r21
   49bc8:	b00b883a 	mov	r5,r22
   49bcc:	da400217 	ldw	r9,8(sp)
   49bd0:	da000417 	ldw	r8,16(sp)
   49bd4:	db000617 	ldw	r12,24(sp)
   49bd8:	e73fffc4 	addi	fp,fp,-1
   49bdc:	102d883a 	mov	r22,r2
   49be0:	182b883a 	mov	r21,r3
   49be4:	203fe81e 	bne	r4,zero,49b88 <___vfiprintf_internal_r+0xa34>
   49be8:	294002a8 	cmpgeui	r5,r5,10
   49bec:	283fe61e 	bne	r5,zero,49b88 <___vfiprintf_internal_r+0xa34>
   49bf0:	9f2bc83a 	sub	r21,r19,fp
   49bf4:	482d883a 	mov	r22,r9
   49bf8:	4d7f170e 	bge	r9,r21,49858 <___vfiprintf_internal_r+0x704>
   49bfc:	a82d883a 	mov	r22,r21
   49c00:	003f1506 	br	49858 <___vfiprintf_internal_r+0x704>
   49c04:	00c00044 	movi	r3,1
   49c08:	a805883a 	mov	r2,r21
   49c0c:	df001715 	stw	fp,92(sp)
   49c10:	dd401815 	stw	r21,96(sp)
   49c14:	dd400c15 	stw	r21,48(sp)
   49c18:	d8c00b15 	stw	r3,44(sp)
   49c1c:	9811883a 	mov	r8,r19
   49c20:	42000204 	addi	r8,r8,8
   49c24:	003e4606 	br	49540 <___vfiprintf_internal_r+0x3ec>
   49c28:	01400044 	movi	r5,1
   49c2c:	0009883a 	mov	r4,zero
   49c30:	9811883a 	mov	r8,r19
   49c34:	003ebc06 	br	49728 <___vfiprintf_internal_r+0x5d4>
   49c38:	8d8fc83a 	sub	r7,r17,r22
   49c3c:	01fe2f0e 	bge	zero,r7,494fc <___vfiprintf_internal_r+0x3a8>
   49c40:	38c00450 	cmplti	r3,r7,17
   49c44:	1801c01e 	bne	r3,zero,4a348 <___vfiprintf_internal_r+0x11f4>
   49c48:	00c00174 	movhi	r3,5
   49c4c:	18c57d04 	addi	r3,r3,5620
   49c50:	d8c00415 	stw	r3,16(sp)
   49c54:	03000404 	movi	r12,16
   49c58:	00000606 	br	49c74 <___vfiprintf_internal_r+0xb20>
   49c5c:	21800084 	addi	r6,r4,2
   49c60:	42000204 	addi	r8,r8,8
   49c64:	1809883a 	mov	r4,r3
   49c68:	39fffc04 	addi	r7,r7,-16
   49c6c:	38c00448 	cmpgei	r3,r7,17
   49c70:	18001b26 	beq	r3,zero,49ce0 <___vfiprintf_internal_r+0xb8c>
   49c74:	d9400417 	ldw	r5,16(sp)
   49c78:	20c00044 	addi	r3,r4,1
   49c7c:	10800404 	addi	r2,r2,16
   49c80:	41400015 	stw	r5,0(r8)
   49c84:	43000115 	stw	r12,4(r8)
   49c88:	d8800c15 	stw	r2,48(sp)
   49c8c:	d8c00b15 	stw	r3,44(sp)
   49c90:	19400208 	cmpgei	r5,r3,8
   49c94:	283ff126 	beq	r5,zero,49c5c <___vfiprintf_internal_r+0xb08>
   49c98:	d9000017 	ldw	r4,0(sp)
   49c9c:	d9800a04 	addi	r6,sp,40
   49ca0:	900b883a 	mov	r5,r18
   49ca4:	10005c26 	beq	r2,zero,49e18 <___vfiprintf_internal_r+0xcc4>
   49ca8:	d9c00615 	stw	r7,24(sp)
   49cac:	da400215 	stw	r9,8(sp)
   49cb0:	00490480 	call	49048 <__sprint_r.part.0>
   49cb4:	103e321e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   49cb8:	d9c00617 	ldw	r7,24(sp)
   49cbc:	d9000b17 	ldw	r4,44(sp)
   49cc0:	d8800c17 	ldw	r2,48(sp)
   49cc4:	39fffc04 	addi	r7,r7,-16
   49cc8:	38c00448 	cmpgei	r3,r7,17
   49ccc:	da400217 	ldw	r9,8(sp)
   49cd0:	9811883a 	mov	r8,r19
   49cd4:	21800044 	addi	r6,r4,1
   49cd8:	03000404 	movi	r12,16
   49cdc:	183fe51e 	bne	r3,zero,49c74 <___vfiprintf_internal_r+0xb20>
   49ce0:	d8c00417 	ldw	r3,16(sp)
   49ce4:	11c5883a 	add	r2,r2,r7
   49ce8:	41c00115 	stw	r7,4(r8)
   49cec:	40c00015 	stw	r3,0(r8)
   49cf0:	d8800c15 	stw	r2,48(sp)
   49cf4:	d9800b15 	stw	r6,44(sp)
   49cf8:	30c00208 	cmpgei	r3,r6,8
   49cfc:	18010b26 	beq	r3,zero,4a12c <___vfiprintf_internal_r+0xfd8>
   49d00:	10017826 	beq	r2,zero,4a2e4 <___vfiprintf_internal_r+0x1190>
   49d04:	d9000017 	ldw	r4,0(sp)
   49d08:	d9800a04 	addi	r6,sp,40
   49d0c:	900b883a 	mov	r5,r18
   49d10:	da400215 	stw	r9,8(sp)
   49d14:	00490480 	call	49048 <__sprint_r.part.0>
   49d18:	103e191e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   49d1c:	da400217 	ldw	r9,8(sp)
   49d20:	d9000b17 	ldw	r4,44(sp)
   49d24:	d8800c17 	ldw	r2,48(sp)
   49d28:	4d53c83a 	sub	r9,r9,r21
   49d2c:	9811883a 	mov	r8,r19
   49d30:	21400044 	addi	r5,r4,1
   49d34:	027df30e 	bge	zero,r9,49504 <___vfiprintf_internal_r+0x3b0>
   49d38:	48c00450 	cmplti	r3,r9,17
   49d3c:	1801651e 	bne	r3,zero,4a2d4 <___vfiprintf_internal_r+0x1180>
   49d40:	ddc00415 	stw	r23,16(sp)
   49d44:	01c00404 	movi	r7,16
   49d48:	00000606 	br	49d64 <___vfiprintf_internal_r+0xc10>
   49d4c:	21400084 	addi	r5,r4,2
   49d50:	42000204 	addi	r8,r8,8
   49d54:	1809883a 	mov	r4,r3
   49d58:	4a7ffc04 	addi	r9,r9,-16
   49d5c:	48c00448 	cmpgei	r3,r9,17
   49d60:	18001826 	beq	r3,zero,49dc4 <___vfiprintf_internal_r+0xc70>
   49d64:	20c00044 	addi	r3,r4,1
   49d68:	10800404 	addi	r2,r2,16
   49d6c:	45c00015 	stw	r23,0(r8)
   49d70:	41c00115 	stw	r7,4(r8)
   49d74:	d8800c15 	stw	r2,48(sp)
   49d78:	d8c00b15 	stw	r3,44(sp)
   49d7c:	19400208 	cmpgei	r5,r3,8
   49d80:	283ff226 	beq	r5,zero,49d4c <___vfiprintf_internal_r+0xbf8>
   49d84:	d9000017 	ldw	r4,0(sp)
   49d88:	d9800a04 	addi	r6,sp,40
   49d8c:	900b883a 	mov	r5,r18
   49d90:	10001726 	beq	r2,zero,49df0 <___vfiprintf_internal_r+0xc9c>
   49d94:	da400215 	stw	r9,8(sp)
   49d98:	00490480 	call	49048 <__sprint_r.part.0>
   49d9c:	103df81e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   49da0:	da400217 	ldw	r9,8(sp)
   49da4:	d9000b17 	ldw	r4,44(sp)
   49da8:	d8800c17 	ldw	r2,48(sp)
   49dac:	4a7ffc04 	addi	r9,r9,-16
   49db0:	48c00448 	cmpgei	r3,r9,17
   49db4:	9811883a 	mov	r8,r19
   49db8:	21400044 	addi	r5,r4,1
   49dbc:	01c00404 	movi	r7,16
   49dc0:	183fe81e 	bne	r3,zero,49d64 <___vfiprintf_internal_r+0xc10>
   49dc4:	d8c00417 	ldw	r3,16(sp)
   49dc8:	1245883a 	add	r2,r2,r9
   49dcc:	42400115 	stw	r9,4(r8)
   49dd0:	40c00015 	stw	r3,0(r8)
   49dd4:	d8800c15 	stw	r2,48(sp)
   49dd8:	d9400b15 	stw	r5,44(sp)
   49ddc:	28c00208 	cmpgei	r3,r5,8
   49de0:	1800811e 	bne	r3,zero,49fe8 <___vfiprintf_internal_r+0xe94>
   49de4:	42000204 	addi	r8,r8,8
   49de8:	29400044 	addi	r5,r5,1
   49dec:	003dc506 	br	49504 <___vfiprintf_internal_r+0x3b0>
   49df0:	01400044 	movi	r5,1
   49df4:	0009883a 	mov	r4,zero
   49df8:	9811883a 	mov	r8,r19
   49dfc:	003fd606 	br	49d58 <___vfiprintf_internal_r+0xc04>
   49e00:	d9000017 	ldw	r4,0(sp)
   49e04:	d9800a04 	addi	r6,sp,40
   49e08:	900b883a 	mov	r5,r18
   49e0c:	00490480 	call	49048 <__sprint_r.part.0>
   49e10:	103dd526 	beq	r2,zero,49568 <___vfiprintf_internal_r+0x414>
   49e14:	003dda06 	br	49580 <___vfiprintf_internal_r+0x42c>
   49e18:	01800044 	movi	r6,1
   49e1c:	0009883a 	mov	r4,zero
   49e20:	9811883a 	mov	r8,r19
   49e24:	003f9006 	br	49c68 <___vfiprintf_internal_r+0xb14>
   49e28:	10001026 	beq	r2,zero,49e6c <___vfiprintf_internal_r+0xd18>
   49e2c:	d9000017 	ldw	r4,0(sp)
   49e30:	d9800a04 	addi	r6,sp,40
   49e34:	900b883a 	mov	r5,r18
   49e38:	da400615 	stw	r9,24(sp)
   49e3c:	db000415 	stw	r12,16(sp)
   49e40:	db400215 	stw	r13,8(sp)
   49e44:	00490480 	call	49048 <__sprint_r.part.0>
   49e48:	103dcd1e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   49e4c:	d9000b17 	ldw	r4,44(sp)
   49e50:	d8800c17 	ldw	r2,48(sp)
   49e54:	da400617 	ldw	r9,24(sp)
   49e58:	db000417 	ldw	r12,16(sp)
   49e5c:	db400217 	ldw	r13,8(sp)
   49e60:	9811883a 	mov	r8,r19
   49e64:	21400044 	addi	r5,r4,1
   49e68:	003d8a06 	br	49494 <___vfiprintf_internal_r+0x340>
   49e6c:	6800bc26 	beq	r13,zero,4a160 <___vfiprintf_internal_r+0x100c>
   49e70:	d8800984 	addi	r2,sp,38
   49e74:	d8801715 	stw	r2,92(sp)
   49e78:	00800084 	movi	r2,2
   49e7c:	d8801815 	stw	r2,96(sp)
   49e80:	01400044 	movi	r5,1
   49e84:	9811883a 	mov	r8,r19
   49e88:	2809883a 	mov	r4,r5
   49e8c:	42000204 	addi	r8,r8,8
   49e90:	29400044 	addi	r5,r5,1
   49e94:	003d9706 	br	494f4 <___vfiprintf_internal_r+0x3a0>
   49e98:	19400450 	cmplti	r5,r3,17
   49e9c:	01c00174 	movhi	r7,5
   49ea0:	2801231e 	bne	r5,zero,4a330 <___vfiprintf_internal_r+0x11dc>
   49ea4:	39c58104 	addi	r7,r7,5636
   49ea8:	03800404 	movi	r14,16
   49eac:	00000706 	br	49ecc <___vfiprintf_internal_r+0xd78>
   49eb0:	23c00084 	addi	r15,r4,2
   49eb4:	42000204 	addi	r8,r8,8
   49eb8:	3009883a 	mov	r4,r6
   49ebc:	18fffc04 	addi	r3,r3,-16
   49ec0:	19400448 	cmpgei	r5,r3,17
   49ec4:	28002026 	beq	r5,zero,49f48 <___vfiprintf_internal_r+0xdf4>
   49ec8:	21800044 	addi	r6,r4,1
   49ecc:	10800404 	addi	r2,r2,16
   49ed0:	41c00015 	stw	r7,0(r8)
   49ed4:	43800115 	stw	r14,4(r8)
   49ed8:	d8800c15 	stw	r2,48(sp)
   49edc:	d9800b15 	stw	r6,44(sp)
   49ee0:	31400208 	cmpgei	r5,r6,8
   49ee4:	283ff226 	beq	r5,zero,49eb0 <___vfiprintf_internal_r+0xd5c>
   49ee8:	d9000017 	ldw	r4,0(sp)
   49eec:	d9800a04 	addi	r6,sp,40
   49ef0:	900b883a 	mov	r5,r18
   49ef4:	10001f26 	beq	r2,zero,49f74 <___vfiprintf_internal_r+0xe20>
   49ef8:	d9c00815 	stw	r7,32(sp)
   49efc:	d8c00715 	stw	r3,28(sp)
   49f00:	da400615 	stw	r9,24(sp)
   49f04:	db000415 	stw	r12,16(sp)
   49f08:	db400215 	stw	r13,8(sp)
   49f0c:	00490480 	call	49048 <__sprint_r.part.0>
   49f10:	103d9b1e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   49f14:	d8c00717 	ldw	r3,28(sp)
   49f18:	d9000b17 	ldw	r4,44(sp)
   49f1c:	d8800c17 	ldw	r2,48(sp)
   49f20:	18fffc04 	addi	r3,r3,-16
   49f24:	19400448 	cmpgei	r5,r3,17
   49f28:	d9c00817 	ldw	r7,32(sp)
   49f2c:	da400617 	ldw	r9,24(sp)
   49f30:	db000417 	ldw	r12,16(sp)
   49f34:	db400217 	ldw	r13,8(sp)
   49f38:	9811883a 	mov	r8,r19
   49f3c:	23c00044 	addi	r15,r4,1
   49f40:	03800404 	movi	r14,16
   49f44:	283fe01e 	bne	r5,zero,49ec8 <___vfiprintf_internal_r+0xd74>
   49f48:	10c5883a 	add	r2,r2,r3
   49f4c:	40c00115 	stw	r3,4(r8)
   49f50:	41c00015 	stw	r7,0(r8)
   49f54:	d8800c15 	stw	r2,48(sp)
   49f58:	dbc00b15 	stw	r15,44(sp)
   49f5c:	78c00208 	cmpgei	r3,r15,8
   49f60:	1800511e 	bne	r3,zero,4a0a8 <___vfiprintf_internal_r+0xf54>
   49f64:	42000204 	addi	r8,r8,8
   49f68:	79400044 	addi	r5,r15,1
   49f6c:	7809883a 	mov	r4,r15
   49f70:	003d3a06 	br	4945c <___vfiprintf_internal_r+0x308>
   49f74:	0009883a 	mov	r4,zero
   49f78:	03c00044 	movi	r15,1
   49f7c:	9811883a 	mov	r8,r19
   49f80:	003fce06 	br	49ebc <___vfiprintf_internal_r+0xd68>
   49f84:	8d80010e 	bge	r17,r22,49f8c <___vfiprintf_internal_r+0xe38>
   49f88:	b023883a 	mov	r17,r22
   49f8c:	d8800117 	ldw	r2,4(sp)
   49f90:	1445883a 	add	r2,r2,r17
   49f94:	d8800115 	stw	r2,4(sp)
   49f98:	003d7306 	br	49568 <___vfiprintf_internal_r+0x414>
   49f9c:	1021883a 	mov	r16,r2
   49fa0:	9839883a 	mov	fp,r19
   49fa4:	d9000517 	ldw	r4,20(sp)
   49fa8:	b08003cc 	andi	r2,r22,15
   49fac:	a806973a 	slli	r3,r21,28
   49fb0:	b02cd13a 	srli	r22,r22,4
   49fb4:	2085883a 	add	r2,r4,r2
   49fb8:	10800003 	ldbu	r2,0(r2)
   49fbc:	a82ad13a 	srli	r21,r21,4
   49fc0:	1dacb03a 	or	r22,r3,r22
   49fc4:	e0bfffc5 	stb	r2,-1(fp)
   49fc8:	b544b03a 	or	r2,r22,r21
   49fcc:	e73fffc4 	addi	fp,fp,-1
   49fd0:	103ff41e 	bne	r2,zero,49fa4 <___vfiprintf_internal_r+0xe50>
   49fd4:	9f2bc83a 	sub	r21,r19,fp
   49fd8:	482d883a 	mov	r22,r9
   49fdc:	4d7d140e 	bge	r9,r21,49430 <___vfiprintf_internal_r+0x2dc>
   49fe0:	a82d883a 	mov	r22,r21
   49fe4:	003d1206 	br	49430 <___vfiprintf_internal_r+0x2dc>
   49fe8:	103f0626 	beq	r2,zero,49c04 <___vfiprintf_internal_r+0xab0>
   49fec:	d9000017 	ldw	r4,0(sp)
   49ff0:	d9800a04 	addi	r6,sp,40
   49ff4:	900b883a 	mov	r5,r18
   49ff8:	00490480 	call	49048 <__sprint_r.part.0>
   49ffc:	103d601e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   4a000:	d9400b17 	ldw	r5,44(sp)
   4a004:	d8800c17 	ldw	r2,48(sp)
   4a008:	9811883a 	mov	r8,r19
   4a00c:	29400044 	addi	r5,r5,1
   4a010:	003d3c06 	br	49504 <___vfiprintf_internal_r+0x3b0>
   4a014:	d8000b15 	stw	zero,44(sp)
   4a018:	003db106 	br	496e0 <___vfiprintf_internal_r+0x58c>
   4a01c:	d9000317 	ldw	r4,12(sp)
   4a020:	10c0040c 	andi	r3,r2,16
   4a024:	25800017 	ldw	r22,0(r4)
   4a028:	21000104 	addi	r4,r4,4
   4a02c:	d9000315 	stw	r4,12(sp)
   4a030:	1800031e 	bne	r3,zero,4a040 <___vfiprintf_internal_r+0xeec>
   4a034:	10c0100c 	andi	r3,r2,64
   4a038:	18000126 	beq	r3,zero,4a040 <___vfiprintf_internal_r+0xeec>
   4a03c:	b5bfffcc 	andi	r22,r22,65535
   4a040:	d8000945 	stb	zero,37(sp)
   4a044:	48ffffd8 	cmpnei	r3,r9,-1
   4a048:	002b883a 	mov	r21,zero
   4a04c:	183e6a1e 	bne	r3,zero,499f8 <___vfiprintf_internal_r+0x8a4>
   4a050:	1021883a 	mov	r16,r2
   4a054:	0019883a 	mov	r12,zero
   4a058:	003df506 	br	49830 <___vfiprintf_internal_r+0x6dc>
   4a05c:	d9000317 	ldw	r4,12(sp)
   4a060:	10c0040c 	andi	r3,r2,16
   4a064:	25800017 	ldw	r22,0(r4)
   4a068:	21000104 	addi	r4,r4,4
   4a06c:	d9000315 	stw	r4,12(sp)
   4a070:	1800031e 	bne	r3,zero,4a080 <___vfiprintf_internal_r+0xf2c>
   4a074:	10c0100c 	andi	r3,r2,64
   4a078:	18000126 	beq	r3,zero,4a080 <___vfiprintf_internal_r+0xf2c>
   4a07c:	b5bfffcc 	andi	r22,r22,65535
   4a080:	d8000945 	stb	zero,37(sp)
   4a084:	48ffffd8 	cmpnei	r3,r9,-1
   4a088:	002b883a 	mov	r21,zero
   4a08c:	183e731e 	bne	r3,zero,49a5c <___vfiprintf_internal_r+0x908>
   4a090:	1021883a 	mov	r16,r2
   4a094:	003e7a06 	br	49a80 <___vfiprintf_internal_r+0x92c>
   4a098:	01400044 	movi	r5,1
   4a09c:	0009883a 	mov	r4,zero
   4a0a0:	9811883a 	mov	r8,r19
   4a0a4:	003d1306 	br	494f4 <___vfiprintf_internal_r+0x3a0>
   4a0a8:	10005726 	beq	r2,zero,4a208 <___vfiprintf_internal_r+0x10b4>
   4a0ac:	d9000017 	ldw	r4,0(sp)
   4a0b0:	d9800a04 	addi	r6,sp,40
   4a0b4:	900b883a 	mov	r5,r18
   4a0b8:	da400615 	stw	r9,24(sp)
   4a0bc:	db000415 	stw	r12,16(sp)
   4a0c0:	db400215 	stw	r13,8(sp)
   4a0c4:	00490480 	call	49048 <__sprint_r.part.0>
   4a0c8:	103d2d1e 	bne	r2,zero,49580 <___vfiprintf_internal_r+0x42c>
   4a0cc:	d9000b17 	ldw	r4,44(sp)
   4a0d0:	d8800c17 	ldw	r2,48(sp)
   4a0d4:	da400617 	ldw	r9,24(sp)
   4a0d8:	db000417 	ldw	r12,16(sp)
   4a0dc:	db400217 	ldw	r13,8(sp)
   4a0e0:	9811883a 	mov	r8,r19
   4a0e4:	21400044 	addi	r5,r4,1
   4a0e8:	003cdc06 	br	4945c <___vfiprintf_internal_r+0x308>
   4a0ec:	d8000945 	stb	zero,37(sp)
   4a0f0:	48bfffd8 	cmpnei	r2,r9,-1
   4a0f4:	103faa26 	beq	r2,zero,49fa0 <___vfiprintf_internal_r+0xe4c>
   4a0f8:	00bfdfc4 	movi	r2,-129
   4a0fc:	80a0703a 	and	r16,r16,r2
   4a100:	4800621e 	bne	r9,zero,4a28c <___vfiprintf_internal_r+0x1138>
   4a104:	002d883a 	mov	r22,zero
   4a108:	002b883a 	mov	r21,zero
   4a10c:	9839883a 	mov	fp,r19
   4a110:	003cc706 	br	49430 <___vfiprintf_internal_r+0x2dc>
   4a114:	a0800007 	ldb	r2,0(r20)
   4a118:	df000315 	stw	fp,12(sp)
   4a11c:	003c4f06 	br	4925c <___vfiprintf_internal_r+0x108>
   4a120:	002d883a 	mov	r22,zero
   4a124:	9839883a 	mov	fp,r19
   4a128:	003cc106 	br	49430 <___vfiprintf_internal_r+0x2dc>
   4a12c:	42000204 	addi	r8,r8,8
   4a130:	31400044 	addi	r5,r6,1
   4a134:	3009883a 	mov	r4,r6
   4a138:	003cf006 	br	494fc <___vfiprintf_internal_r+0x3a8>
   4a13c:	8080040c 	andi	r2,r16,16
   4a140:	10003e1e 	bne	r2,zero,4a23c <___vfiprintf_internal_r+0x10e8>
   4a144:	8400100c 	andi	r16,r16,64
   4a148:	80003c26 	beq	r16,zero,4a23c <___vfiprintf_internal_r+0x10e8>
   4a14c:	d8800317 	ldw	r2,12(sp)
   4a150:	d8c00117 	ldw	r3,4(sp)
   4a154:	10800017 	ldw	r2,0(r2)
   4a158:	10c0000d 	sth	r3,0(r2)
   4a15c:	003e0506 	br	49974 <___vfiprintf_internal_r+0x820>
   4a160:	0009883a 	mov	r4,zero
   4a164:	01400044 	movi	r5,1
   4a168:	9811883a 	mov	r8,r19
   4a16c:	003ce106 	br	494f4 <___vfiprintf_internal_r+0x3a0>
   4a170:	a82d883a 	mov	r22,r21
   4a174:	2839883a 	mov	fp,r5
   4a178:	003cad06 	br	49430 <___vfiprintf_internal_r+0x2dc>
   4a17c:	e009883a 	mov	r4,fp
   4a180:	da000215 	stw	r8,8(sp)
   4a184:	d8c00315 	stw	r3,12(sp)
   4a188:	00418b00 	call	418b0 <strlen>
   4a18c:	da000217 	ldw	r8,8(sp)
   4a190:	102b883a 	mov	r21,r2
   4a194:	102d883a 	mov	r22,r2
   4a198:	003ca406 	br	4942c <___vfiprintf_internal_r+0x2d8>
   4a19c:	8005883a 	mov	r2,r16
   4a1a0:	003e0b06 	br	499d0 <___vfiprintf_internal_r+0x87c>
   4a1a4:	00c00174 	movhi	r3,5
   4a1a8:	18c4f804 	addi	r3,r3,5088
   4a1ac:	d8c00515 	stw	r3,20(sp)
   4a1b0:	80c0080c 	andi	r3,r16,32
   4a1b4:	18002826 	beq	r3,zero,4a258 <___vfiprintf_internal_r+0x1104>
   4a1b8:	d8c00317 	ldw	r3,12(sp)
   4a1bc:	1d800017 	ldw	r22,0(r3)
   4a1c0:	1d400117 	ldw	r21,4(r3)
   4a1c4:	18c00204 	addi	r3,r3,8
   4a1c8:	d8c00315 	stw	r3,12(sp)
   4a1cc:	80c0004c 	andi	r3,r16,1
   4a1d0:	18001f26 	beq	r3,zero,4a250 <___vfiprintf_internal_r+0x10fc>
   4a1d4:	b546b03a 	or	r3,r22,r21
   4a1d8:	183fc426 	beq	r3,zero,4a0ec <___vfiprintf_internal_r+0xf98>
   4a1dc:	00c00c04 	movi	r3,48
   4a1e0:	d8c00985 	stb	r3,38(sp)
   4a1e4:	d88009c5 	stb	r2,39(sp)
   4a1e8:	d8000945 	stb	zero,37(sp)
   4a1ec:	48bfffd8 	cmpnei	r2,r9,-1
   4a1f0:	80c00094 	ori	r3,r16,2
   4a1f4:	10006d1e 	bne	r2,zero,4a3ac <___vfiprintf_internal_r+0x1258>
   4a1f8:	1821883a 	mov	r16,r3
   4a1fc:	003f6806 	br	49fa0 <___vfiprintf_internal_r+0xe4c>
   4a200:	8005883a 	mov	r2,r16
   4a204:	003e0b06 	br	49a34 <___vfiprintf_internal_r+0x8e0>
   4a208:	d8c00947 	ldb	r3,37(sp)
   4a20c:	18003b26 	beq	r3,zero,4a2fc <___vfiprintf_internal_r+0x11a8>
   4a210:	d8800944 	addi	r2,sp,37
   4a214:	d8801715 	stw	r2,92(sp)
   4a218:	00800044 	movi	r2,1
   4a21c:	d8801815 	stw	r2,96(sp)
   4a220:	01400044 	movi	r5,1
   4a224:	9811883a 	mov	r8,r19
   4a228:	003c9706 	br	49488 <___vfiprintf_internal_r+0x334>
   4a22c:	00c00174 	movhi	r3,5
   4a230:	18c4fd04 	addi	r3,r3,5108
   4a234:	d8c00515 	stw	r3,20(sp)
   4a238:	003fdd06 	br	4a1b0 <___vfiprintf_internal_r+0x105c>
   4a23c:	d8800317 	ldw	r2,12(sp)
   4a240:	d8c00117 	ldw	r3,4(sp)
   4a244:	10800017 	ldw	r2,0(r2)
   4a248:	10c00015 	stw	r3,0(r2)
   4a24c:	003dc906 	br	49974 <___vfiprintf_internal_r+0x820>
   4a250:	8005883a 	mov	r2,r16
   4a254:	003e4606 	br	49b70 <___vfiprintf_internal_r+0xa1c>
   4a258:	d9000317 	ldw	r4,12(sp)
   4a25c:	80c0040c 	andi	r3,r16,16
   4a260:	25800017 	ldw	r22,0(r4)
   4a264:	21000104 	addi	r4,r4,4
   4a268:	d9000315 	stw	r4,12(sp)
   4a26c:	1800051e 	bne	r3,zero,4a284 <___vfiprintf_internal_r+0x1130>
   4a270:	80c0100c 	andi	r3,r16,64
   4a274:	18000326 	beq	r3,zero,4a284 <___vfiprintf_internal_r+0x1130>
   4a278:	b5bfffcc 	andi	r22,r22,65535
   4a27c:	002b883a 	mov	r21,zero
   4a280:	003fd206 	br	4a1cc <___vfiprintf_internal_r+0x1078>
   4a284:	002b883a 	mov	r21,zero
   4a288:	003fd006 	br	4a1cc <___vfiprintf_internal_r+0x1078>
   4a28c:	002d883a 	mov	r22,zero
   4a290:	002b883a 	mov	r21,zero
   4a294:	003f4206 	br	49fa0 <___vfiprintf_internal_r+0xe4c>
   4a298:	18800060 	cmpeqi	r2,r3,1
   4a29c:	1000341e 	bne	r2,zero,4a370 <___vfiprintf_internal_r+0x121c>
   4a2a0:	18c000a0 	cmpeqi	r3,r3,2
   4a2a4:	183ff91e 	bne	r3,zero,4a28c <___vfiprintf_internal_r+0x1138>
   4a2a8:	002d883a 	mov	r22,zero
   4a2ac:	002b883a 	mov	r21,zero
   4a2b0:	003df306 	br	49a80 <___vfiprintf_internal_r+0x92c>
   4a2b4:	488001f0 	cmpltui	r2,r9,7
   4a2b8:	482b883a 	mov	r21,r9
   4a2bc:	10000d26 	beq	r2,zero,4a2f4 <___vfiprintf_internal_r+0x11a0>
   4a2c0:	07000174 	movhi	fp,5
   4a2c4:	a82d883a 	mov	r22,r21
   4a2c8:	d8c00315 	stw	r3,12(sp)
   4a2cc:	e7050204 	addi	fp,fp,5128
   4a2d0:	003c5606 	br	4942c <___vfiprintf_internal_r+0x2d8>
   4a2d4:	00c00174 	movhi	r3,5
   4a2d8:	18c57d04 	addi	r3,r3,5620
   4a2dc:	d8c00415 	stw	r3,16(sp)
   4a2e0:	003eb806 	br	49dc4 <___vfiprintf_internal_r+0xc70>
   4a2e4:	01400044 	movi	r5,1
   4a2e8:	0009883a 	mov	r4,zero
   4a2ec:	9811883a 	mov	r8,r19
   4a2f0:	003c8206 	br	494fc <___vfiprintf_internal_r+0x3a8>
   4a2f4:	05400184 	movi	r21,6
   4a2f8:	003ff106 	br	4a2c0 <___vfiprintf_internal_r+0x116c>
   4a2fc:	0009883a 	mov	r4,zero
   4a300:	01400044 	movi	r5,1
   4a304:	9811883a 	mov	r8,r19
   4a308:	003c6206 	br	49494 <___vfiprintf_internal_r+0x340>
   4a30c:	d9000017 	ldw	r4,0(sp)
   4a310:	d9800a04 	addi	r6,sp,40
   4a314:	900b883a 	mov	r5,r18
   4a318:	00490480 	call	49048 <__sprint_r.part.0>
   4a31c:	003c9806 	br	49580 <___vfiprintf_internal_r+0x42c>
   4a320:	482d883a 	mov	r22,r9
   4a324:	d8c00315 	stw	r3,12(sp)
   4a328:	482b883a 	mov	r21,r9
   4a32c:	003c3f06 	br	4942c <___vfiprintf_internal_r+0x2d8>
   4a330:	301f883a 	mov	r15,r6
   4a334:	39c58104 	addi	r7,r7,5636
   4a338:	003f0306 	br	49f48 <___vfiprintf_internal_r+0xdf4>
   4a33c:	21400044 	addi	r5,r4,1
   4a340:	39c58104 	addi	r7,r7,5636
   4a344:	003d1206 	br	49790 <___vfiprintf_internal_r+0x63c>
   4a348:	00c00174 	movhi	r3,5
   4a34c:	18c57d04 	addi	r3,r3,5620
   4a350:	280d883a 	mov	r6,r5
   4a354:	d8c00415 	stw	r3,16(sp)
   4a358:	003e6106 	br	49ce0 <___vfiprintf_internal_r+0xb8c>
   4a35c:	00bfffc4 	movi	r2,-1
   4a360:	d8800115 	stw	r2,4(sp)
   4a364:	003c8906 	br	4958c <___vfiprintf_internal_r+0x438>
   4a368:	05800c04 	movi	r22,48
   4a36c:	003d3406 	br	49840 <___vfiprintf_internal_r+0x6ec>
   4a370:	0019883a 	mov	r12,zero
   4a374:	05800c04 	movi	r22,48
   4a378:	003d3106 	br	49840 <___vfiprintf_internal_r+0x6ec>
   4a37c:	d8800317 	ldw	r2,12(sp)
   4a380:	12400017 	ldw	r9,0(r2)
   4a384:	17000104 	addi	fp,r2,4
   4a388:	4800010e 	bge	r9,zero,4a390 <___vfiprintf_internal_r+0x123c>
   4a38c:	027fffc4 	movi	r9,-1
   4a390:	a0800043 	ldbu	r2,1(r20)
   4a394:	df000315 	stw	fp,12(sp)
   4a398:	2029883a 	mov	r20,r4
   4a39c:	10803fcc 	andi	r2,r2,255
   4a3a0:	1080201c 	xori	r2,r2,128
   4a3a4:	10bfe004 	addi	r2,r2,-128
   4a3a8:	003bac06 	br	4925c <___vfiprintf_internal_r+0x108>
   4a3ac:	00bfdfc4 	movi	r2,-129
   4a3b0:	8084703a 	and	r2,r16,r2
   4a3b4:	14000094 	ori	r16,r2,2
   4a3b8:	003ef906 	br	49fa0 <___vfiprintf_internal_r+0xe4c>
   4a3bc:	0019883a 	mov	r12,zero
   4a3c0:	003d1b06 	br	49830 <___vfiprintf_internal_r+0x6dc>

0004a3c4 <__vfiprintf_internal>:
   4a3c4:	00c00174 	movhi	r3,5
   4a3c8:	2005883a 	mov	r2,r4
   4a3cc:	190d3017 	ldw	r4,13504(r3)
   4a3d0:	300f883a 	mov	r7,r6
   4a3d4:	280d883a 	mov	r6,r5
   4a3d8:	100b883a 	mov	r5,r2
   4a3dc:	00491541 	jmpi	49154 <___vfiprintf_internal_r>

0004a3e0 <__sbprintf>:
   4a3e0:	28c0038b 	ldhu	r3,14(r5)
   4a3e4:	2880030b 	ldhu	r2,12(r5)
   4a3e8:	2ac01917 	ldw	r11,100(r5)
   4a3ec:	1806943a 	slli	r3,r3,16
   4a3f0:	2a800717 	ldw	r10,28(r5)
   4a3f4:	2a400917 	ldw	r9,36(r5)
   4a3f8:	defee204 	addi	sp,sp,-1144
   4a3fc:	10bfff4c 	andi	r2,r2,65533
   4a400:	10c4b03a 	or	r2,r2,r3
   4a404:	da001a04 	addi	r8,sp,104
   4a408:	00c10004 	movi	r3,1024
   4a40c:	dc011a15 	stw	r16,1128(sp)
   4a410:	2821883a 	mov	r16,r5
   4a414:	d80b883a 	mov	r5,sp
   4a418:	dc811c15 	stw	r18,1136(sp)
   4a41c:	dc411b15 	stw	r17,1132(sp)
   4a420:	dfc11d15 	stw	ra,1140(sp)
   4a424:	2025883a 	mov	r18,r4
   4a428:	dac01915 	stw	r11,100(sp)
   4a42c:	d8800315 	stw	r2,12(sp)
   4a430:	da800715 	stw	r10,28(sp)
   4a434:	da400915 	stw	r9,36(sp)
   4a438:	da000015 	stw	r8,0(sp)
   4a43c:	da000415 	stw	r8,16(sp)
   4a440:	d8c00215 	stw	r3,8(sp)
   4a444:	d8c00515 	stw	r3,20(sp)
   4a448:	d8000615 	stw	zero,24(sp)
   4a44c:	00491540 	call	49154 <___vfiprintf_internal_r>
   4a450:	1023883a 	mov	r17,r2
   4a454:	10000d0e 	bge	r2,zero,4a48c <__sbprintf+0xac>
   4a458:	d880030b 	ldhu	r2,12(sp)
   4a45c:	1080100c 	andi	r2,r2,64
   4a460:	10000326 	beq	r2,zero,4a470 <__sbprintf+0x90>
   4a464:	8080030b 	ldhu	r2,12(r16)
   4a468:	10801014 	ori	r2,r2,64
   4a46c:	8080030d 	sth	r2,12(r16)
   4a470:	8805883a 	mov	r2,r17
   4a474:	dfc11d17 	ldw	ra,1140(sp)
   4a478:	dc811c17 	ldw	r18,1136(sp)
   4a47c:	dc411b17 	ldw	r17,1132(sp)
   4a480:	dc011a17 	ldw	r16,1128(sp)
   4a484:	dec11e04 	addi	sp,sp,1144
   4a488:	f800283a 	ret
   4a48c:	d80b883a 	mov	r5,sp
   4a490:	9009883a 	mov	r4,r18
   4a494:	0045b080 	call	45b08 <_fflush_r>
   4a498:	103fef26 	beq	r2,zero,4a458 <__sbprintf+0x78>
   4a49c:	047fffc4 	movi	r17,-1
   4a4a0:	003fed06 	br	4a458 <__sbprintf+0x78>

0004a4a4 <_write_r>:
   4a4a4:	2807883a 	mov	r3,r5
   4a4a8:	defffe04 	addi	sp,sp,-8
   4a4ac:	dc000015 	stw	r16,0(sp)
   4a4b0:	300b883a 	mov	r5,r6
   4a4b4:	00800174 	movhi	r2,5
   4a4b8:	380d883a 	mov	r6,r7
   4a4bc:	2021883a 	mov	r16,r4
   4a4c0:	1809883a 	mov	r4,r3
   4a4c4:	dfc00115 	stw	ra,4(sp)
   4a4c8:	10143915 	stw	zero,20708(r2)
   4a4cc:	004f4e40 	call	4f4e4 <write>
   4a4d0:	10ffffd8 	cmpnei	r3,r2,-1
   4a4d4:	18000426 	beq	r3,zero,4a4e8 <_write_r+0x44>
   4a4d8:	dfc00117 	ldw	ra,4(sp)
   4a4dc:	dc000017 	ldw	r16,0(sp)
   4a4e0:	dec00204 	addi	sp,sp,8
   4a4e4:	f800283a 	ret
   4a4e8:	00c00174 	movhi	r3,5
   4a4ec:	18d43917 	ldw	r3,20708(r3)
   4a4f0:	183ff926 	beq	r3,zero,4a4d8 <_write_r+0x34>
   4a4f4:	80c00015 	stw	r3,0(r16)
   4a4f8:	dfc00117 	ldw	ra,4(sp)
   4a4fc:	dc000017 	ldw	r16,0(sp)
   4a500:	dec00204 	addi	sp,sp,8
   4a504:	f800283a 	ret

0004a508 <_close_r>:
   4a508:	defffe04 	addi	sp,sp,-8
   4a50c:	dc000015 	stw	r16,0(sp)
   4a510:	00800174 	movhi	r2,5
   4a514:	2021883a 	mov	r16,r4
   4a518:	2809883a 	mov	r4,r5
   4a51c:	dfc00115 	stw	ra,4(sp)
   4a520:	10143915 	stw	zero,20708(r2)
   4a524:	004e8880 	call	4e888 <close>
   4a528:	10ffffd8 	cmpnei	r3,r2,-1
   4a52c:	18000426 	beq	r3,zero,4a540 <_close_r+0x38>
   4a530:	dfc00117 	ldw	ra,4(sp)
   4a534:	dc000017 	ldw	r16,0(sp)
   4a538:	dec00204 	addi	sp,sp,8
   4a53c:	f800283a 	ret
   4a540:	00c00174 	movhi	r3,5
   4a544:	18d43917 	ldw	r3,20708(r3)
   4a548:	183ff926 	beq	r3,zero,4a530 <_close_r+0x28>
   4a54c:	80c00015 	stw	r3,0(r16)
   4a550:	dfc00117 	ldw	ra,4(sp)
   4a554:	dc000017 	ldw	r16,0(sp)
   4a558:	dec00204 	addi	sp,sp,8
   4a55c:	f800283a 	ret

0004a560 <__assert_func>:
   4a560:	00800174 	movhi	r2,5
   4a564:	120d3017 	ldw	r8,13504(r2)
   4a568:	defffc04 	addi	sp,sp,-16
   4a56c:	3807883a 	mov	r3,r7
   4a570:	3005883a 	mov	r2,r6
   4a574:	dfc00315 	stw	ra,12(sp)
   4a578:	42400317 	ldw	r9,12(r8)
   4a57c:	200f883a 	mov	r7,r4
   4a580:	2811883a 	mov	r8,r5
   4a584:	180d883a 	mov	r6,r3
   4a588:	10000a26 	beq	r2,zero,4a5b4 <__assert_func+0x54>
   4a58c:	00c00174 	movhi	r3,5
   4a590:	18c58504 	addi	r3,r3,5652
   4a594:	01400174 	movhi	r5,5
   4a598:	29458904 	addi	r5,r5,5668
   4a59c:	4809883a 	mov	r4,r9
   4a5a0:	d8c00115 	stw	r3,4(sp)
   4a5a4:	da000015 	stw	r8,0(sp)
   4a5a8:	d8800215 	stw	r2,8(sp)
   4a5ac:	004a8500 	call	4a850 <fiprintf>
   4a5b0:	004b0980 	call	4b098 <abort>
   4a5b4:	00c00174 	movhi	r3,5
   4a5b8:	18c58804 	addi	r3,r3,5664
   4a5bc:	1805883a 	mov	r2,r3
   4a5c0:	003ff406 	br	4a594 <__assert_func+0x34>

0004a5c4 <__assert>:
   4a5c4:	deffff04 	addi	sp,sp,-4
   4a5c8:	300f883a 	mov	r7,r6
   4a5cc:	000d883a 	mov	r6,zero
   4a5d0:	dfc00015 	stw	ra,0(sp)
   4a5d4:	004a5600 	call	4a560 <__assert_func>

0004a5d8 <_calloc_r>:
   4a5d8:	2804d43a 	srli	r2,r5,16
   4a5dc:	deffff04 	addi	sp,sp,-4
   4a5e0:	dfc00015 	stw	ra,0(sp)
   4a5e4:	3006d43a 	srli	r3,r6,16
   4a5e8:	10002a1e 	bne	r2,zero,4a694 <_calloc_r+0xbc>
   4a5ec:	1800411e 	bne	r3,zero,4a6f4 <_calloc_r+0x11c>
   4a5f0:	31bfffcc 	andi	r6,r6,65535
   4a5f4:	297fffcc 	andi	r5,r5,65535
   4a5f8:	298b383a 	mul	r5,r5,r6
   4a5fc:	0046bc40 	call	46bc4 <_malloc_r>
   4a600:	1009883a 	mov	r4,r2
   4a604:	10003626 	beq	r2,zero,4a6e0 <_calloc_r+0x108>
   4a608:	11bfff17 	ldw	r6,-4(r2)
   4a60c:	00bfff04 	movi	r2,-4
   4a610:	308c703a 	and	r6,r6,r2
   4a614:	31bfff04 	addi	r6,r6,-4
   4a618:	30800968 	cmpgeui	r2,r6,37
   4a61c:	10000c1e 	bne	r2,zero,4a650 <_calloc_r+0x78>
   4a620:	30800530 	cmpltui	r2,r6,20
   4a624:	1000111e 	bne	r2,zero,4a66c <_calloc_r+0x94>
   4a628:	20000015 	stw	zero,0(r4)
   4a62c:	20000115 	stw	zero,4(r4)
   4a630:	30800728 	cmpgeui	r2,r6,28
   4a634:	10001526 	beq	r2,zero,4a68c <_calloc_r+0xb4>
   4a638:	20000215 	stw	zero,8(r4)
   4a63c:	20000315 	stw	zero,12(r4)
   4a640:	31800920 	cmpeqi	r6,r6,36
   4a644:	3000311e 	bne	r6,zero,4a70c <_calloc_r+0x134>
   4a648:	20800404 	addi	r2,r4,16
   4a64c:	00000806 	br	4a670 <_calloc_r+0x98>
   4a650:	000b883a 	mov	r5,zero
   4a654:	00476700 	call	47670 <memset>
   4a658:	1009883a 	mov	r4,r2
   4a65c:	2005883a 	mov	r2,r4
   4a660:	dfc00017 	ldw	ra,0(sp)
   4a664:	dec00104 	addi	sp,sp,4
   4a668:	f800283a 	ret
   4a66c:	2005883a 	mov	r2,r4
   4a670:	10000015 	stw	zero,0(r2)
   4a674:	10000115 	stw	zero,4(r2)
   4a678:	10000215 	stw	zero,8(r2)
   4a67c:	2005883a 	mov	r2,r4
   4a680:	dfc00017 	ldw	ra,0(sp)
   4a684:	dec00104 	addi	sp,sp,4
   4a688:	f800283a 	ret
   4a68c:	20800204 	addi	r2,r4,8
   4a690:	003ff706 	br	4a670 <_calloc_r+0x98>
   4a694:	1800191e 	bne	r3,zero,4a6fc <_calloc_r+0x124>
   4a698:	1007883a 	mov	r3,r2
   4a69c:	3005883a 	mov	r2,r6
   4a6a0:	297fffcc 	andi	r5,r5,65535
   4a6a4:	31bfffcc 	andi	r6,r6,65535
   4a6a8:	298b383a 	mul	r5,r5,r6
   4a6ac:	18ffffcc 	andi	r3,r3,65535
   4a6b0:	10bfffcc 	andi	r2,r2,65535
   4a6b4:	10c5383a 	mul	r2,r2,r3
   4a6b8:	2806d43a 	srli	r3,r5,16
   4a6bc:	10c5883a 	add	r2,r2,r3
   4a6c0:	1006d43a 	srli	r3,r2,16
   4a6c4:	18000d1e 	bne	r3,zero,4a6fc <_calloc_r+0x124>
   4a6c8:	1004943a 	slli	r2,r2,16
   4a6cc:	297fffcc 	andi	r5,r5,65535
   4a6d0:	114ab03a 	or	r5,r2,r5
   4a6d4:	0046bc40 	call	46bc4 <_malloc_r>
   4a6d8:	1009883a 	mov	r4,r2
   4a6dc:	103fca1e 	bne	r2,zero,4a608 <_calloc_r+0x30>
   4a6e0:	0009883a 	mov	r4,zero
   4a6e4:	2005883a 	mov	r2,r4
   4a6e8:	dfc00017 	ldw	ra,0(sp)
   4a6ec:	dec00104 	addi	sp,sp,4
   4a6f0:	f800283a 	ret
   4a6f4:	2805883a 	mov	r2,r5
   4a6f8:	003fe906 	br	4a6a0 <_calloc_r+0xc8>
   4a6fc:	004a71c0 	call	4a71c <__errno>
   4a700:	00c00304 	movi	r3,12
   4a704:	10c00015 	stw	r3,0(r2)
   4a708:	003ff506 	br	4a6e0 <_calloc_r+0x108>
   4a70c:	20000415 	stw	zero,16(r4)
   4a710:	20800604 	addi	r2,r4,24
   4a714:	20000515 	stw	zero,20(r4)
   4a718:	003fd506 	br	4a670 <_calloc_r+0x98>

0004a71c <__errno>:
   4a71c:	00800174 	movhi	r2,5
   4a720:	108d3017 	ldw	r2,13504(r2)
   4a724:	f800283a 	ret

0004a728 <_fclose_r>:
   4a728:	defffc04 	addi	sp,sp,-16
   4a72c:	dfc00315 	stw	ra,12(sp)
   4a730:	dc800215 	stw	r18,8(sp)
   4a734:	dc400115 	stw	r17,4(sp)
   4a738:	dc000015 	stw	r16,0(sp)
   4a73c:	28000726 	beq	r5,zero,4a75c <_fclose_r+0x34>
   4a740:	2821883a 	mov	r16,r5
   4a744:	2023883a 	mov	r17,r4
   4a748:	20000226 	beq	r4,zero,4a754 <_fclose_r+0x2c>
   4a74c:	20800e17 	ldw	r2,56(r4)
   4a750:	10002726 	beq	r2,zero,4a7f0 <_fclose_r+0xc8>
   4a754:	8080030f 	ldh	r2,12(r16)
   4a758:	1000081e 	bne	r2,zero,4a77c <_fclose_r+0x54>
   4a75c:	0025883a 	mov	r18,zero
   4a760:	9005883a 	mov	r2,r18
   4a764:	dfc00317 	ldw	ra,12(sp)
   4a768:	dc800217 	ldw	r18,8(sp)
   4a76c:	dc400117 	ldw	r17,4(sp)
   4a770:	dc000017 	ldw	r16,0(sp)
   4a774:	dec00404 	addi	sp,sp,16
   4a778:	f800283a 	ret
   4a77c:	800b883a 	mov	r5,r16
   4a780:	8809883a 	mov	r4,r17
   4a784:	00459000 	call	45900 <__sflush_r>
   4a788:	80c00b17 	ldw	r3,44(r16)
   4a78c:	1025883a 	mov	r18,r2
   4a790:	18000426 	beq	r3,zero,4a7a4 <_fclose_r+0x7c>
   4a794:	81400717 	ldw	r5,28(r16)
   4a798:	8809883a 	mov	r4,r17
   4a79c:	183ee83a 	callr	r3
   4a7a0:	10001716 	blt	r2,zero,4a800 <_fclose_r+0xd8>
   4a7a4:	8080030b 	ldhu	r2,12(r16)
   4a7a8:	1080200c 	andi	r2,r2,128
   4a7ac:	1000181e 	bne	r2,zero,4a810 <_fclose_r+0xe8>
   4a7b0:	81400c17 	ldw	r5,48(r16)
   4a7b4:	28000526 	beq	r5,zero,4a7cc <_fclose_r+0xa4>
   4a7b8:	80801004 	addi	r2,r16,64
   4a7bc:	28800226 	beq	r5,r2,4a7c8 <_fclose_r+0xa0>
   4a7c0:	8809883a 	mov	r4,r17
   4a7c4:	004608c0 	call	4608c <_free_r>
   4a7c8:	80000c15 	stw	zero,48(r16)
   4a7cc:	81401117 	ldw	r5,68(r16)
   4a7d0:	28000326 	beq	r5,zero,4a7e0 <_fclose_r+0xb8>
   4a7d4:	8809883a 	mov	r4,r17
   4a7d8:	004608c0 	call	4608c <_free_r>
   4a7dc:	80001115 	stw	zero,68(r16)
   4a7e0:	0045f300 	call	45f30 <__sfp_lock_acquire>
   4a7e4:	8000030d 	sth	zero,12(r16)
   4a7e8:	0045f340 	call	45f34 <__sfp_lock_release>
   4a7ec:	003fdc06 	br	4a760 <_fclose_r+0x38>
   4a7f0:	0045f200 	call	45f20 <__sinit>
   4a7f4:	8080030f 	ldh	r2,12(r16)
   4a7f8:	103fd826 	beq	r2,zero,4a75c <_fclose_r+0x34>
   4a7fc:	003fdf06 	br	4a77c <_fclose_r+0x54>
   4a800:	8080030b 	ldhu	r2,12(r16)
   4a804:	04bfffc4 	movi	r18,-1
   4a808:	1080200c 	andi	r2,r2,128
   4a80c:	103fe826 	beq	r2,zero,4a7b0 <_fclose_r+0x88>
   4a810:	81400417 	ldw	r5,16(r16)
   4a814:	8809883a 	mov	r4,r17
   4a818:	004608c0 	call	4608c <_free_r>
   4a81c:	003fe406 	br	4a7b0 <_fclose_r+0x88>

0004a820 <fclose>:
   4a820:	00800174 	movhi	r2,5
   4a824:	200b883a 	mov	r5,r4
   4a828:	110d3017 	ldw	r4,13504(r2)
   4a82c:	004a7281 	jmpi	4a728 <_fclose_r>

0004a830 <_fiprintf_r>:
   4a830:	defffe04 	addi	sp,sp,-8
   4a834:	dfc00015 	stw	ra,0(sp)
   4a838:	d9c00115 	stw	r7,4(sp)
   4a83c:	d9c00104 	addi	r7,sp,4
   4a840:	004ae040 	call	4ae04 <_vfiprintf_r>
   4a844:	dfc00017 	ldw	ra,0(sp)
   4a848:	dec00204 	addi	sp,sp,8
   4a84c:	f800283a 	ret

0004a850 <fiprintf>:
   4a850:	defffd04 	addi	sp,sp,-12
   4a854:	2005883a 	mov	r2,r4
   4a858:	dfc00015 	stw	ra,0(sp)
   4a85c:	d9800115 	stw	r6,4(sp)
   4a860:	d9c00215 	stw	r7,8(sp)
   4a864:	00c00174 	movhi	r3,5
   4a868:	190d3017 	ldw	r4,13504(r3)
   4a86c:	280d883a 	mov	r6,r5
   4a870:	d9c00104 	addi	r7,sp,4
   4a874:	100b883a 	mov	r5,r2
   4a878:	004ae040 	call	4ae04 <_vfiprintf_r>
   4a87c:	dfc00017 	ldw	ra,0(sp)
   4a880:	dec00304 	addi	sp,sp,12
   4a884:	f800283a 	ret

0004a888 <__fputwc>:
   4a888:	defff904 	addi	sp,sp,-28
   4a88c:	dcc00415 	stw	r19,16(sp)
   4a890:	dc800315 	stw	r18,12(sp)
   4a894:	dc000115 	stw	r16,4(sp)
   4a898:	dfc00615 	stw	ra,24(sp)
   4a89c:	dd000515 	stw	r20,20(sp)
   4a8a0:	dc400215 	stw	r17,8(sp)
   4a8a4:	2027883a 	mov	r19,r4
   4a8a8:	2825883a 	mov	r18,r5
   4a8ac:	3021883a 	mov	r16,r6
   4a8b0:	004abb40 	call	4abb4 <__locale_mb_cur_max>
   4a8b4:	10800058 	cmpnei	r2,r2,1
   4a8b8:	1000071e 	bne	r2,zero,4a8d8 <__fputwc+0x50>
   4a8bc:	90bfffc4 	addi	r2,r18,-1
   4a8c0:	10803fe8 	cmpgeui	r2,r2,255
   4a8c4:	1000041e 	bne	r2,zero,4a8d8 <__fputwc+0x50>
   4a8c8:	900b883a 	mov	r5,r18
   4a8cc:	dc8000c5 	stb	r18,3(sp)
   4a8d0:	05000044 	movi	r20,1
   4a8d4:	00000a06 	br	4a900 <__fputwc+0x78>
   4a8d8:	81c01704 	addi	r7,r16,92
   4a8dc:	900d883a 	mov	r6,r18
   4a8e0:	d94000c4 	addi	r5,sp,3
   4a8e4:	9809883a 	mov	r4,r19
   4a8e8:	004af680 	call	4af68 <_wcrtomb_r>
   4a8ec:	1029883a 	mov	r20,r2
   4a8f0:	10bfffd8 	cmpnei	r2,r2,-1
   4a8f4:	10003826 	beq	r2,zero,4a9d8 <__fputwc+0x150>
   4a8f8:	a0001f26 	beq	r20,zero,4a978 <__fputwc+0xf0>
   4a8fc:	d94000c3 	ldbu	r5,3(sp)
   4a900:	0023883a 	mov	r17,zero
   4a904:	00000a06 	br	4a930 <__fputwc+0xa8>
   4a908:	80800017 	ldw	r2,0(r16)
   4a90c:	11400005 	stb	r5,0(r2)
   4a910:	80c00017 	ldw	r3,0(r16)
   4a914:	18c00044 	addi	r3,r3,1
   4a918:	80c00015 	stw	r3,0(r16)
   4a91c:	8c400044 	addi	r17,r17,1
   4a920:	d88000c4 	addi	r2,sp,3
   4a924:	1447883a 	add	r3,r2,r17
   4a928:	8d00132e 	bgeu	r17,r20,4a978 <__fputwc+0xf0>
   4a92c:	19400003 	ldbu	r5,0(r3)
   4a930:	80c00217 	ldw	r3,8(r16)
   4a934:	18ffffc4 	addi	r3,r3,-1
   4a938:	80c00215 	stw	r3,8(r16)
   4a93c:	183ff20e 	bge	r3,zero,4a908 <__fputwc+0x80>
   4a940:	80800617 	ldw	r2,24(r16)
   4a944:	18801516 	blt	r3,r2,4a99c <__fputwc+0x114>
   4a948:	80800017 	ldw	r2,0(r16)
   4a94c:	11400005 	stb	r5,0(r2)
   4a950:	80800017 	ldw	r2,0(r16)
   4a954:	10c00003 	ldbu	r3,0(r2)
   4a958:	10800044 	addi	r2,r2,1
   4a95c:	18c002a0 	cmpeqi	r3,r3,10
   4a960:	1800161e 	bne	r3,zero,4a9bc <__fputwc+0x134>
   4a964:	80800015 	stw	r2,0(r16)
   4a968:	8c400044 	addi	r17,r17,1
   4a96c:	d88000c4 	addi	r2,sp,3
   4a970:	1447883a 	add	r3,r2,r17
   4a974:	8d3fed36 	bltu	r17,r20,4a92c <__fputwc+0xa4>
   4a978:	9005883a 	mov	r2,r18
   4a97c:	dfc00617 	ldw	ra,24(sp)
   4a980:	dd000517 	ldw	r20,20(sp)
   4a984:	dcc00417 	ldw	r19,16(sp)
   4a988:	dc800317 	ldw	r18,12(sp)
   4a98c:	dc400217 	ldw	r17,8(sp)
   4a990:	dc000117 	ldw	r16,4(sp)
   4a994:	dec00704 	addi	sp,sp,28
   4a998:	f800283a 	ret
   4a99c:	29403fcc 	andi	r5,r5,255
   4a9a0:	800d883a 	mov	r6,r16
   4a9a4:	9809883a 	mov	r4,r19
   4a9a8:	004ae080 	call	4ae08 <__swbuf_r>
   4a9ac:	10bfffe0 	cmpeqi	r2,r2,-1
   4a9b0:	103fda26 	beq	r2,zero,4a91c <__fputwc+0x94>
   4a9b4:	00bfffc4 	movi	r2,-1
   4a9b8:	003ff006 	br	4a97c <__fputwc+0xf4>
   4a9bc:	800d883a 	mov	r6,r16
   4a9c0:	01400284 	movi	r5,10
   4a9c4:	9809883a 	mov	r4,r19
   4a9c8:	004ae080 	call	4ae08 <__swbuf_r>
   4a9cc:	10bfffe0 	cmpeqi	r2,r2,-1
   4a9d0:	103fd226 	beq	r2,zero,4a91c <__fputwc+0x94>
   4a9d4:	003ff706 	br	4a9b4 <__fputwc+0x12c>
   4a9d8:	8080030b 	ldhu	r2,12(r16)
   4a9dc:	10801014 	ori	r2,r2,64
   4a9e0:	8080030d 	sth	r2,12(r16)
   4a9e4:	00bfffc4 	movi	r2,-1
   4a9e8:	003fe406 	br	4a97c <__fputwc+0xf4>

0004a9ec <_fputwc_r>:
   4a9ec:	3080030b 	ldhu	r2,12(r6)
   4a9f0:	10c8000c 	andi	r3,r2,8192
   4a9f4:	1800051e 	bne	r3,zero,4aa0c <_fputwc_r+0x20>
   4a9f8:	30c01917 	ldw	r3,100(r6)
   4a9fc:	10880014 	ori	r2,r2,8192
   4aa00:	3080030d 	sth	r2,12(r6)
   4aa04:	18880014 	ori	r2,r3,8192
   4aa08:	30801915 	stw	r2,100(r6)
   4aa0c:	004a8881 	jmpi	4a888 <__fputwc>

0004aa10 <fputwc>:
   4aa10:	defffc04 	addi	sp,sp,-16
   4aa14:	00800174 	movhi	r2,5
   4aa18:	dc000215 	stw	r16,8(sp)
   4aa1c:	140d3017 	ldw	r16,13504(r2)
   4aa20:	dfc00315 	stw	ra,12(sp)
   4aa24:	280d883a 	mov	r6,r5
   4aa28:	200b883a 	mov	r5,r4
   4aa2c:	80000226 	beq	r16,zero,4aa38 <fputwc+0x28>
   4aa30:	80800e17 	ldw	r2,56(r16)
   4aa34:	10000d26 	beq	r2,zero,4aa6c <fputwc+0x5c>
   4aa38:	3080030b 	ldhu	r2,12(r6)
   4aa3c:	10c8000c 	andi	r3,r2,8192
   4aa40:	1800051e 	bne	r3,zero,4aa58 <fputwc+0x48>
   4aa44:	30c01917 	ldw	r3,100(r6)
   4aa48:	10880014 	ori	r2,r2,8192
   4aa4c:	3080030d 	sth	r2,12(r6)
   4aa50:	18880014 	ori	r2,r3,8192
   4aa54:	30801915 	stw	r2,100(r6)
   4aa58:	8009883a 	mov	r4,r16
   4aa5c:	dfc00317 	ldw	ra,12(sp)
   4aa60:	dc000217 	ldw	r16,8(sp)
   4aa64:	dec00404 	addi	sp,sp,16
   4aa68:	004a8881 	jmpi	4a888 <__fputwc>
   4aa6c:	d9000015 	stw	r4,0(sp)
   4aa70:	8009883a 	mov	r4,r16
   4aa74:	d9800115 	stw	r6,4(sp)
   4aa78:	0045f200 	call	45f20 <__sinit>
   4aa7c:	d9800117 	ldw	r6,4(sp)
   4aa80:	d9400017 	ldw	r5,0(sp)
   4aa84:	003fec06 	br	4aa38 <fputwc+0x28>

0004aa88 <_fstat_r>:
   4aa88:	2807883a 	mov	r3,r5
   4aa8c:	defffe04 	addi	sp,sp,-8
   4aa90:	dc000015 	stw	r16,0(sp)
   4aa94:	00800174 	movhi	r2,5
   4aa98:	300b883a 	mov	r5,r6
   4aa9c:	2021883a 	mov	r16,r4
   4aaa0:	1809883a 	mov	r4,r3
   4aaa4:	dfc00115 	stw	ra,4(sp)
   4aaa8:	10143915 	stw	zero,20708(r2)
   4aaac:	004e9fc0 	call	4e9fc <fstat>
   4aab0:	10ffffd8 	cmpnei	r3,r2,-1
   4aab4:	18000426 	beq	r3,zero,4aac8 <_fstat_r+0x40>
   4aab8:	dfc00117 	ldw	ra,4(sp)
   4aabc:	dc000017 	ldw	r16,0(sp)
   4aac0:	dec00204 	addi	sp,sp,8
   4aac4:	f800283a 	ret
   4aac8:	00c00174 	movhi	r3,5
   4aacc:	18d43917 	ldw	r3,20708(r3)
   4aad0:	183ff926 	beq	r3,zero,4aab8 <_fstat_r+0x30>
   4aad4:	80c00015 	stw	r3,0(r16)
   4aad8:	dfc00117 	ldw	ra,4(sp)
   4aadc:	dc000017 	ldw	r16,0(sp)
   4aae0:	dec00204 	addi	sp,sp,8
   4aae4:	f800283a 	ret

0004aae8 <_isatty_r>:
   4aae8:	defffe04 	addi	sp,sp,-8
   4aaec:	dc000015 	stw	r16,0(sp)
   4aaf0:	00800174 	movhi	r2,5
   4aaf4:	2021883a 	mov	r16,r4
   4aaf8:	2809883a 	mov	r4,r5
   4aafc:	dfc00115 	stw	ra,4(sp)
   4ab00:	10143915 	stw	zero,20708(r2)
   4ab04:	004eda00 	call	4eda0 <isatty>
   4ab08:	10ffffd8 	cmpnei	r3,r2,-1
   4ab0c:	18000426 	beq	r3,zero,4ab20 <_isatty_r+0x38>
   4ab10:	dfc00117 	ldw	ra,4(sp)
   4ab14:	dc000017 	ldw	r16,0(sp)
   4ab18:	dec00204 	addi	sp,sp,8
   4ab1c:	f800283a 	ret
   4ab20:	00c00174 	movhi	r3,5
   4ab24:	18d43917 	ldw	r3,20708(r3)
   4ab28:	183ff926 	beq	r3,zero,4ab10 <_isatty_r+0x28>
   4ab2c:	80c00015 	stw	r3,0(r16)
   4ab30:	dfc00117 	ldw	ra,4(sp)
   4ab34:	dc000017 	ldw	r16,0(sp)
   4ab38:	dec00204 	addi	sp,sp,8
   4ab3c:	f800283a 	ret

0004ab40 <_setlocale_r>:
   4ab40:	30001626 	beq	r6,zero,4ab9c <_setlocale_r+0x5c>
   4ab44:	01400174 	movhi	r5,5
   4ab48:	defffe04 	addi	sp,sp,-8
   4ab4c:	29459604 	addi	r5,r5,5720
   4ab50:	3009883a 	mov	r4,r6
   4ab54:	dc000015 	stw	r16,0(sp)
   4ab58:	dfc00115 	stw	ra,4(sp)
   4ab5c:	3021883a 	mov	r16,r6
   4ab60:	004ad4c0 	call	4ad4c <strcmp>
   4ab64:	1000061e 	bne	r2,zero,4ab80 <_setlocale_r+0x40>
   4ab68:	00800174 	movhi	r2,5
   4ab6c:	10859504 	addi	r2,r2,5716
   4ab70:	dfc00117 	ldw	ra,4(sp)
   4ab74:	dc000017 	ldw	r16,0(sp)
   4ab78:	dec00204 	addi	sp,sp,8
   4ab7c:	f800283a 	ret
   4ab80:	80800003 	ldbu	r2,0(r16)
   4ab84:	10bfef44 	addi	r2,r2,-67
   4ab88:	10000726 	beq	r2,zero,4aba8 <_setlocale_r+0x68>
   4ab8c:	80800003 	ldbu	r2,0(r16)
   4ab90:	103ff526 	beq	r2,zero,4ab68 <_setlocale_r+0x28>
   4ab94:	0005883a 	mov	r2,zero
   4ab98:	003ff506 	br	4ab70 <_setlocale_r+0x30>
   4ab9c:	00800174 	movhi	r2,5
   4aba0:	10859504 	addi	r2,r2,5716
   4aba4:	f800283a 	ret
   4aba8:	80800043 	ldbu	r2,1(r16)
   4abac:	103fee26 	beq	r2,zero,4ab68 <_setlocale_r+0x28>
   4abb0:	003ff606 	br	4ab8c <_setlocale_r+0x4c>

0004abb4 <__locale_mb_cur_max>:
   4abb4:	00800174 	movhi	r2,5
   4abb8:	10889c07 	ldb	r2,8816(r2)
   4abbc:	f800283a 	ret

0004abc0 <setlocale>:
   4abc0:	28001626 	beq	r5,zero,4ac1c <setlocale+0x5c>
   4abc4:	defffe04 	addi	sp,sp,-8
   4abc8:	dc000015 	stw	r16,0(sp)
   4abcc:	2821883a 	mov	r16,r5
   4abd0:	01400174 	movhi	r5,5
   4abd4:	29459604 	addi	r5,r5,5720
   4abd8:	8009883a 	mov	r4,r16
   4abdc:	dfc00115 	stw	ra,4(sp)
   4abe0:	004ad4c0 	call	4ad4c <strcmp>
   4abe4:	1000061e 	bne	r2,zero,4ac00 <setlocale+0x40>
   4abe8:	00800174 	movhi	r2,5
   4abec:	10859504 	addi	r2,r2,5716
   4abf0:	dfc00117 	ldw	ra,4(sp)
   4abf4:	dc000017 	ldw	r16,0(sp)
   4abf8:	dec00204 	addi	sp,sp,8
   4abfc:	f800283a 	ret
   4ac00:	80800003 	ldbu	r2,0(r16)
   4ac04:	10bfef44 	addi	r2,r2,-67
   4ac08:	10000726 	beq	r2,zero,4ac28 <setlocale+0x68>
   4ac0c:	80800003 	ldbu	r2,0(r16)
   4ac10:	103ff526 	beq	r2,zero,4abe8 <setlocale+0x28>
   4ac14:	0005883a 	mov	r2,zero
   4ac18:	003ff506 	br	4abf0 <setlocale+0x30>
   4ac1c:	00800174 	movhi	r2,5
   4ac20:	10859504 	addi	r2,r2,5716
   4ac24:	f800283a 	ret
   4ac28:	80800043 	ldbu	r2,1(r16)
   4ac2c:	103fee26 	beq	r2,zero,4abe8 <setlocale+0x28>
   4ac30:	003ff606 	br	4ac0c <setlocale+0x4c>

0004ac34 <_lseek_r>:
   4ac34:	2807883a 	mov	r3,r5
   4ac38:	defffe04 	addi	sp,sp,-8
   4ac3c:	dc000015 	stw	r16,0(sp)
   4ac40:	300b883a 	mov	r5,r6
   4ac44:	00800174 	movhi	r2,5
   4ac48:	380d883a 	mov	r6,r7
   4ac4c:	2021883a 	mov	r16,r4
   4ac50:	1809883a 	mov	r4,r3
   4ac54:	dfc00115 	stw	ra,4(sp)
   4ac58:	10143915 	stw	zero,20708(r2)
   4ac5c:	004f0980 	call	4f098 <lseek>
   4ac60:	10ffffd8 	cmpnei	r3,r2,-1
   4ac64:	18000426 	beq	r3,zero,4ac78 <_lseek_r+0x44>
   4ac68:	dfc00117 	ldw	ra,4(sp)
   4ac6c:	dc000017 	ldw	r16,0(sp)
   4ac70:	dec00204 	addi	sp,sp,8
   4ac74:	f800283a 	ret
   4ac78:	00c00174 	movhi	r3,5
   4ac7c:	18d43917 	ldw	r3,20708(r3)
   4ac80:	183ff926 	beq	r3,zero,4ac68 <_lseek_r+0x34>
   4ac84:	80c00015 	stw	r3,0(r16)
   4ac88:	dfc00117 	ldw	ra,4(sp)
   4ac8c:	dc000017 	ldw	r16,0(sp)
   4ac90:	dec00204 	addi	sp,sp,8
   4ac94:	f800283a 	ret

0004ac98 <_mbtowc_r>:
   4ac98:	00800174 	movhi	r2,5
   4ac9c:	10888b17 	ldw	r2,8748(r2)
   4aca0:	1000683a 	jmp	r2

0004aca4 <__ascii_mbtowc>:
   4aca4:	deffff04 	addi	sp,sp,-4
   4aca8:	28000826 	beq	r5,zero,4accc <__ascii_mbtowc+0x28>
   4acac:	30000926 	beq	r6,zero,4acd4 <__ascii_mbtowc+0x30>
   4acb0:	38000b26 	beq	r7,zero,4ace0 <__ascii_mbtowc+0x3c>
   4acb4:	30800003 	ldbu	r2,0(r6)
   4acb8:	28800015 	stw	r2,0(r5)
   4acbc:	30800003 	ldbu	r2,0(r6)
   4acc0:	1004c03a 	cmpne	r2,r2,zero
   4acc4:	dec00104 	addi	sp,sp,4
   4acc8:	f800283a 	ret
   4accc:	d80b883a 	mov	r5,sp
   4acd0:	303ff71e 	bne	r6,zero,4acb0 <__ascii_mbtowc+0xc>
   4acd4:	0005883a 	mov	r2,zero
   4acd8:	dec00104 	addi	sp,sp,4
   4acdc:	f800283a 	ret
   4ace0:	00bfff84 	movi	r2,-2
   4ace4:	003ff706 	br	4acc4 <__ascii_mbtowc+0x20>

0004ace8 <_read_r>:
   4ace8:	2807883a 	mov	r3,r5
   4acec:	defffe04 	addi	sp,sp,-8
   4acf0:	dc000015 	stw	r16,0(sp)
   4acf4:	300b883a 	mov	r5,r6
   4acf8:	00800174 	movhi	r2,5
   4acfc:	380d883a 	mov	r6,r7
   4ad00:	2021883a 	mov	r16,r4
   4ad04:	1809883a 	mov	r4,r3
   4ad08:	dfc00115 	stw	ra,4(sp)
   4ad0c:	10143915 	stw	zero,20708(r2)
   4ad10:	004f26c0 	call	4f26c <read>
   4ad14:	10ffffd8 	cmpnei	r3,r2,-1
   4ad18:	18000426 	beq	r3,zero,4ad2c <_read_r+0x44>
   4ad1c:	dfc00117 	ldw	ra,4(sp)
   4ad20:	dc000017 	ldw	r16,0(sp)
   4ad24:	dec00204 	addi	sp,sp,8
   4ad28:	f800283a 	ret
   4ad2c:	00c00174 	movhi	r3,5
   4ad30:	18d43917 	ldw	r3,20708(r3)
   4ad34:	183ff926 	beq	r3,zero,4ad1c <_read_r+0x34>
   4ad38:	80c00015 	stw	r3,0(r16)
   4ad3c:	dfc00117 	ldw	ra,4(sp)
   4ad40:	dc000017 	ldw	r16,0(sp)
   4ad44:	dec00204 	addi	sp,sp,8
   4ad48:	f800283a 	ret

0004ad4c <strcmp>:
   4ad4c:	2144b03a 	or	r2,r4,r5
   4ad50:	108000cc 	andi	r2,r2,3
   4ad54:	1000141e 	bne	r2,zero,4ada8 <strcmp+0x5c>
   4ad58:	20800017 	ldw	r2,0(r4)
   4ad5c:	28c00017 	ldw	r3,0(r5)
   4ad60:	10c0111e 	bne	r2,r3,4ada8 <strcmp+0x5c>
   4ad64:	01ffbff4 	movhi	r7,65279
   4ad68:	01a02074 	movhi	r6,32897
   4ad6c:	39ffbfc4 	addi	r7,r7,-257
   4ad70:	31a02004 	addi	r6,r6,-32640
   4ad74:	00000306 	br	4ad84 <strcmp+0x38>
   4ad78:	20800017 	ldw	r2,0(r4)
   4ad7c:	28c00017 	ldw	r3,0(r5)
   4ad80:	10c0091e 	bne	r2,r3,4ada8 <strcmp+0x5c>
   4ad84:	11c7883a 	add	r3,r2,r7
   4ad88:	0084303a 	nor	r2,zero,r2
   4ad8c:	1884703a 	and	r2,r3,r2
   4ad90:	1184703a 	and	r2,r2,r6
   4ad94:	21000104 	addi	r4,r4,4
   4ad98:	29400104 	addi	r5,r5,4
   4ad9c:	103ff626 	beq	r2,zero,4ad78 <strcmp+0x2c>
   4ada0:	0005883a 	mov	r2,zero
   4ada4:	f800283a 	ret
   4ada8:	20c00003 	ldbu	r3,0(r4)
   4adac:	18803fcc 	andi	r2,r3,255
   4adb0:	1080201c 	xori	r2,r2,128
   4adb4:	10bfe004 	addi	r2,r2,-128
   4adb8:	1000071e 	bne	r2,zero,4add8 <strcmp+0x8c>
   4adbc:	00000a06 	br	4ade8 <strcmp+0x9c>
   4adc0:	20c00003 	ldbu	r3,0(r4)
   4adc4:	29400044 	addi	r5,r5,1
   4adc8:	18803fcc 	andi	r2,r3,255
   4adcc:	1080201c 	xori	r2,r2,128
   4add0:	10bfe004 	addi	r2,r2,-128
   4add4:	10000726 	beq	r2,zero,4adf4 <strcmp+0xa8>
   4add8:	29800007 	ldb	r6,0(r5)
   4addc:	21000044 	addi	r4,r4,1
   4ade0:	30bff726 	beq	r6,r2,4adc0 <strcmp+0x74>
   4ade4:	18803fcc 	andi	r2,r3,255
   4ade8:	28c00003 	ldbu	r3,0(r5)
   4adec:	10c5c83a 	sub	r2,r2,r3
   4adf0:	f800283a 	ret
   4adf4:	28c00003 	ldbu	r3,0(r5)
   4adf8:	0005883a 	mov	r2,zero
   4adfc:	10c5c83a 	sub	r2,r2,r3
   4ae00:	f800283a 	ret

0004ae04 <_vfiprintf_r>:
   4ae04:	00491541 	jmpi	49154 <___vfiprintf_internal_r>

0004ae08 <__swbuf_r>:
   4ae08:	defffb04 	addi	sp,sp,-20
   4ae0c:	dcc00315 	stw	r19,12(sp)
   4ae10:	dc400115 	stw	r17,4(sp)
   4ae14:	dc000015 	stw	r16,0(sp)
   4ae18:	dfc00415 	stw	ra,16(sp)
   4ae1c:	dc800215 	stw	r18,8(sp)
   4ae20:	2027883a 	mov	r19,r4
   4ae24:	2823883a 	mov	r17,r5
   4ae28:	3021883a 	mov	r16,r6
   4ae2c:	20000226 	beq	r4,zero,4ae38 <__swbuf_r+0x30>
   4ae30:	20800e17 	ldw	r2,56(r4)
   4ae34:	10003e26 	beq	r2,zero,4af30 <__swbuf_r+0x128>
   4ae38:	80800617 	ldw	r2,24(r16)
   4ae3c:	80c0030b 	ldhu	r3,12(r16)
   4ae40:	80800215 	stw	r2,8(r16)
   4ae44:	1880020c 	andi	r2,r3,8
   4ae48:	10001f26 	beq	r2,zero,4aec8 <__swbuf_r+0xc0>
   4ae4c:	80800417 	ldw	r2,16(r16)
   4ae50:	10001d26 	beq	r2,zero,4aec8 <__swbuf_r+0xc0>
   4ae54:	1948000c 	andi	r5,r3,8192
   4ae58:	8c803fcc 	andi	r18,r17,255
   4ae5c:	28002326 	beq	r5,zero,4aeec <__swbuf_r+0xe4>
   4ae60:	80c00017 	ldw	r3,0(r16)
   4ae64:	81000517 	ldw	r4,20(r16)
   4ae68:	1885c83a 	sub	r2,r3,r2
   4ae6c:	1100290e 	bge	r2,r4,4af14 <__swbuf_r+0x10c>
   4ae70:	10800044 	addi	r2,r2,1
   4ae74:	81400217 	ldw	r5,8(r16)
   4ae78:	19000044 	addi	r4,r3,1
   4ae7c:	81000015 	stw	r4,0(r16)
   4ae80:	297fffc4 	addi	r5,r5,-1
   4ae84:	81400215 	stw	r5,8(r16)
   4ae88:	1c400005 	stb	r17,0(r3)
   4ae8c:	80c00517 	ldw	r3,20(r16)
   4ae90:	18802926 	beq	r3,r2,4af38 <__swbuf_r+0x130>
   4ae94:	8080030b 	ldhu	r2,12(r16)
   4ae98:	1080004c 	andi	r2,r2,1
   4ae9c:	10000226 	beq	r2,zero,4aea8 <__swbuf_r+0xa0>
   4aea0:	90800298 	cmpnei	r2,r18,10
   4aea4:	10002426 	beq	r2,zero,4af38 <__swbuf_r+0x130>
   4aea8:	9005883a 	mov	r2,r18
   4aeac:	dfc00417 	ldw	ra,16(sp)
   4aeb0:	dcc00317 	ldw	r19,12(sp)
   4aeb4:	dc800217 	ldw	r18,8(sp)
   4aeb8:	dc400117 	ldw	r17,4(sp)
   4aebc:	dc000017 	ldw	r16,0(sp)
   4aec0:	dec00504 	addi	sp,sp,20
   4aec4:	f800283a 	ret
   4aec8:	800b883a 	mov	r5,r16
   4aecc:	9809883a 	mov	r4,r19
   4aed0:	0043dd00 	call	43dd0 <__swsetup_r>
   4aed4:	10001c1e 	bne	r2,zero,4af48 <__swbuf_r+0x140>
   4aed8:	80c0030b 	ldhu	r3,12(r16)
   4aedc:	80800417 	ldw	r2,16(r16)
   4aee0:	8c803fcc 	andi	r18,r17,255
   4aee4:	1948000c 	andi	r5,r3,8192
   4aee8:	283fdd1e 	bne	r5,zero,4ae60 <__swbuf_r+0x58>
   4aeec:	81001917 	ldw	r4,100(r16)
   4aef0:	18c80014 	ori	r3,r3,8192
   4aef4:	0177ffc4 	movi	r5,-8193
   4aef8:	2148703a 	and	r4,r4,r5
   4aefc:	80c0030d 	sth	r3,12(r16)
   4af00:	80c00017 	ldw	r3,0(r16)
   4af04:	81001915 	stw	r4,100(r16)
   4af08:	81000517 	ldw	r4,20(r16)
   4af0c:	1885c83a 	sub	r2,r3,r2
   4af10:	113fd716 	blt	r2,r4,4ae70 <__swbuf_r+0x68>
   4af14:	800b883a 	mov	r5,r16
   4af18:	9809883a 	mov	r4,r19
   4af1c:	0045b080 	call	45b08 <_fflush_r>
   4af20:	1000091e 	bne	r2,zero,4af48 <__swbuf_r+0x140>
   4af24:	80c00017 	ldw	r3,0(r16)
   4af28:	00800044 	movi	r2,1
   4af2c:	003fd106 	br	4ae74 <__swbuf_r+0x6c>
   4af30:	0045f200 	call	45f20 <__sinit>
   4af34:	003fc006 	br	4ae38 <__swbuf_r+0x30>
   4af38:	800b883a 	mov	r5,r16
   4af3c:	9809883a 	mov	r4,r19
   4af40:	0045b080 	call	45b08 <_fflush_r>
   4af44:	103fd826 	beq	r2,zero,4aea8 <__swbuf_r+0xa0>
   4af48:	04bfffc4 	movi	r18,-1
   4af4c:	003fd606 	br	4aea8 <__swbuf_r+0xa0>

0004af50 <__swbuf>:
   4af50:	00c00174 	movhi	r3,5
   4af54:	2005883a 	mov	r2,r4
   4af58:	190d3017 	ldw	r4,13504(r3)
   4af5c:	280d883a 	mov	r6,r5
   4af60:	100b883a 	mov	r5,r2
   4af64:	004ae081 	jmpi	4ae08 <__swbuf_r>

0004af68 <_wcrtomb_r>:
   4af68:	defffa04 	addi	sp,sp,-24
   4af6c:	dc400415 	stw	r17,16(sp)
   4af70:	dc000315 	stw	r16,12(sp)
   4af74:	00800174 	movhi	r2,5
   4af78:	dfc00515 	stw	ra,20(sp)
   4af7c:	10888a17 	ldw	r2,8744(r2)
   4af80:	2023883a 	mov	r17,r4
   4af84:	3821883a 	mov	r16,r7
   4af88:	28000826 	beq	r5,zero,4afac <_wcrtomb_r+0x44>
   4af8c:	103ee83a 	callr	r2
   4af90:	10ffffd8 	cmpnei	r3,r2,-1
   4af94:	18000a26 	beq	r3,zero,4afc0 <_wcrtomb_r+0x58>
   4af98:	dfc00517 	ldw	ra,20(sp)
   4af9c:	dc400417 	ldw	r17,16(sp)
   4afa0:	dc000317 	ldw	r16,12(sp)
   4afa4:	dec00604 	addi	sp,sp,24
   4afa8:	f800283a 	ret
   4afac:	000d883a 	mov	r6,zero
   4afb0:	d9400084 	addi	r5,sp,2
   4afb4:	103ee83a 	callr	r2
   4afb8:	10ffffd8 	cmpnei	r3,r2,-1
   4afbc:	183ff61e 	bne	r3,zero,4af98 <_wcrtomb_r+0x30>
   4afc0:	00802284 	movi	r2,138
   4afc4:	80000015 	stw	zero,0(r16)
   4afc8:	88800015 	stw	r2,0(r17)
   4afcc:	00bfffc4 	movi	r2,-1
   4afd0:	003ff106 	br	4af98 <_wcrtomb_r+0x30>

0004afd4 <wcrtomb>:
   4afd4:	defffa04 	addi	sp,sp,-24
   4afd8:	00c00174 	movhi	r3,5
   4afdc:	dc400415 	stw	r17,16(sp)
   4afe0:	dc000315 	stw	r16,12(sp)
   4afe4:	1c4d3017 	ldw	r17,13504(r3)
   4afe8:	dfc00515 	stw	ra,20(sp)
   4afec:	00c00174 	movhi	r3,5
   4aff0:	18c88a17 	ldw	r3,8744(r3)
   4aff4:	3021883a 	mov	r16,r6
   4aff8:	20000c26 	beq	r4,zero,4b02c <wcrtomb+0x58>
   4affc:	280d883a 	mov	r6,r5
   4b000:	800f883a 	mov	r7,r16
   4b004:	200b883a 	mov	r5,r4
   4b008:	8809883a 	mov	r4,r17
   4b00c:	183ee83a 	callr	r3
   4b010:	10ffffd8 	cmpnei	r3,r2,-1
   4b014:	18000c26 	beq	r3,zero,4b048 <wcrtomb+0x74>
   4b018:	dfc00517 	ldw	ra,20(sp)
   4b01c:	dc400417 	ldw	r17,16(sp)
   4b020:	dc000317 	ldw	r16,12(sp)
   4b024:	dec00604 	addi	sp,sp,24
   4b028:	f800283a 	ret
   4b02c:	300f883a 	mov	r7,r6
   4b030:	d9400084 	addi	r5,sp,2
   4b034:	000d883a 	mov	r6,zero
   4b038:	8809883a 	mov	r4,r17
   4b03c:	183ee83a 	callr	r3
   4b040:	10ffffd8 	cmpnei	r3,r2,-1
   4b044:	183ff41e 	bne	r3,zero,4b018 <wcrtomb+0x44>
   4b048:	00802284 	movi	r2,138
   4b04c:	80000015 	stw	zero,0(r16)
   4b050:	88800015 	stw	r2,0(r17)
   4b054:	00bfffc4 	movi	r2,-1
   4b058:	003fef06 	br	4b018 <wcrtomb+0x44>

0004b05c <_wctomb_r>:
   4b05c:	00800174 	movhi	r2,5
   4b060:	10888a17 	ldw	r2,8744(r2)
   4b064:	1000683a 	jmp	r2

0004b068 <__ascii_wctomb>:
   4b068:	28000926 	beq	r5,zero,4b090 <__ascii_wctomb+0x28>
   4b06c:	30804030 	cmpltui	r2,r6,256
   4b070:	10000326 	beq	r2,zero,4b080 <__ascii_wctomb+0x18>
   4b074:	29800005 	stb	r6,0(r5)
   4b078:	00800044 	movi	r2,1
   4b07c:	f800283a 	ret
   4b080:	00802284 	movi	r2,138
   4b084:	20800015 	stw	r2,0(r4)
   4b088:	00bfffc4 	movi	r2,-1
   4b08c:	f800283a 	ret
   4b090:	0005883a 	mov	r2,zero
   4b094:	f800283a 	ret

0004b098 <abort>:
   4b098:	deffff04 	addi	sp,sp,-4
   4b09c:	01000184 	movi	r4,6
   4b0a0:	dfc00015 	stw	ra,0(sp)
   4b0a4:	004b3080 	call	4b308 <raise>
   4b0a8:	01000044 	movi	r4,1
   4b0ac:	004e9840 	call	4e984 <_exit>

0004b0b0 <_init_signal_r>:
   4b0b0:	2080b717 	ldw	r2,732(r4)
   4b0b4:	10000226 	beq	r2,zero,4b0c0 <_init_signal_r+0x10>
   4b0b8:	0005883a 	mov	r2,zero
   4b0bc:	f800283a 	ret
   4b0c0:	defffe04 	addi	sp,sp,-8
   4b0c4:	01402004 	movi	r5,128
   4b0c8:	dc000015 	stw	r16,0(sp)
   4b0cc:	dfc00115 	stw	ra,4(sp)
   4b0d0:	2021883a 	mov	r16,r4
   4b0d4:	0046bc40 	call	46bc4 <_malloc_r>
   4b0d8:	8080b715 	stw	r2,732(r16)
   4b0dc:	1009883a 	mov	r4,r2
   4b0e0:	10000826 	beq	r2,zero,4b104 <_init_signal_r+0x54>
   4b0e4:	01802004 	movi	r6,128
   4b0e8:	000b883a 	mov	r5,zero
   4b0ec:	00476700 	call	47670 <memset>
   4b0f0:	0005883a 	mov	r2,zero
   4b0f4:	dfc00117 	ldw	ra,4(sp)
   4b0f8:	dc000017 	ldw	r16,0(sp)
   4b0fc:	dec00204 	addi	sp,sp,8
   4b100:	f800283a 	ret
   4b104:	00bfffc4 	movi	r2,-1
   4b108:	003ffa06 	br	4b0f4 <_init_signal_r+0x44>

0004b10c <_signal_r>:
   4b10c:	defffc04 	addi	sp,sp,-16
   4b110:	dc400115 	stw	r17,4(sp)
   4b114:	dfc00315 	stw	ra,12(sp)
   4b118:	dc800215 	stw	r18,8(sp)
   4b11c:	dc000015 	stw	r16,0(sp)
   4b120:	28800830 	cmpltui	r2,r5,32
   4b124:	2023883a 	mov	r17,r4
   4b128:	10000e26 	beq	r2,zero,4b164 <_signal_r+0x58>
   4b12c:	20c0b717 	ldw	r3,732(r4)
   4b130:	2821883a 	mov	r16,r5
   4b134:	3025883a 	mov	r18,r6
   4b138:	18000e26 	beq	r3,zero,4b174 <_signal_r+0x68>
   4b13c:	802090ba 	slli	r16,r16,2
   4b140:	1c07883a 	add	r3,r3,r16
   4b144:	18800017 	ldw	r2,0(r3)
   4b148:	1c800015 	stw	r18,0(r3)
   4b14c:	dfc00317 	ldw	ra,12(sp)
   4b150:	dc800217 	ldw	r18,8(sp)
   4b154:	dc400117 	ldw	r17,4(sp)
   4b158:	dc000017 	ldw	r16,0(sp)
   4b15c:	dec00404 	addi	sp,sp,16
   4b160:	f800283a 	ret
   4b164:	00800584 	movi	r2,22
   4b168:	20800015 	stw	r2,0(r4)
   4b16c:	00bfffc4 	movi	r2,-1
   4b170:	003ff606 	br	4b14c <_signal_r+0x40>
   4b174:	01402004 	movi	r5,128
   4b178:	0046bc40 	call	46bc4 <_malloc_r>
   4b17c:	8880b715 	stw	r2,732(r17)
   4b180:	103ffa26 	beq	r2,zero,4b16c <_signal_r+0x60>
   4b184:	01802004 	movi	r6,128
   4b188:	000b883a 	mov	r5,zero
   4b18c:	1009883a 	mov	r4,r2
   4b190:	00476700 	call	47670 <memset>
   4b194:	1007883a 	mov	r3,r2
   4b198:	003fe806 	br	4b13c <_signal_r+0x30>

0004b19c <_raise_r>:
   4b19c:	28800830 	cmpltui	r2,r5,32
   4b1a0:	10002626 	beq	r2,zero,4b23c <_raise_r+0xa0>
   4b1a4:	2080b717 	ldw	r2,732(r4)
   4b1a8:	defffd04 	addi	sp,sp,-12
   4b1ac:	dc000115 	stw	r16,4(sp)
   4b1b0:	dfc00215 	stw	ra,8(sp)
   4b1b4:	2821883a 	mov	r16,r5
   4b1b8:	10001026 	beq	r2,zero,4b1fc <_raise_r+0x60>
   4b1bc:	280690ba 	slli	r3,r5,2
   4b1c0:	10c5883a 	add	r2,r2,r3
   4b1c4:	10c00017 	ldw	r3,0(r2)
   4b1c8:	18000c26 	beq	r3,zero,4b1fc <_raise_r+0x60>
   4b1cc:	19400060 	cmpeqi	r5,r3,1
   4b1d0:	2800051e 	bne	r5,zero,4b1e8 <_raise_r+0x4c>
   4b1d4:	197fffd8 	cmpnei	r5,r3,-1
   4b1d8:	28001126 	beq	r5,zero,4b220 <_raise_r+0x84>
   4b1dc:	10000015 	stw	zero,0(r2)
   4b1e0:	8009883a 	mov	r4,r16
   4b1e4:	183ee83a 	callr	r3
   4b1e8:	0005883a 	mov	r2,zero
   4b1ec:	dfc00217 	ldw	ra,8(sp)
   4b1f0:	dc000117 	ldw	r16,4(sp)
   4b1f4:	dec00304 	addi	sp,sp,12
   4b1f8:	f800283a 	ret
   4b1fc:	d9000015 	stw	r4,0(sp)
   4b200:	004b5d00 	call	4b5d0 <_getpid_r>
   4b204:	d9000017 	ldw	r4,0(sp)
   4b208:	800d883a 	mov	r6,r16
   4b20c:	100b883a 	mov	r5,r2
   4b210:	dfc00217 	ldw	ra,8(sp)
   4b214:	dc000117 	ldw	r16,4(sp)
   4b218:	dec00304 	addi	sp,sp,12
   4b21c:	004b5701 	jmpi	4b570 <_kill_r>
   4b220:	00800584 	movi	r2,22
   4b224:	20800015 	stw	r2,0(r4)
   4b228:	00800044 	movi	r2,1
   4b22c:	dfc00217 	ldw	ra,8(sp)
   4b230:	dc000117 	ldw	r16,4(sp)
   4b234:	dec00304 	addi	sp,sp,12
   4b238:	f800283a 	ret
   4b23c:	00800584 	movi	r2,22
   4b240:	20800015 	stw	r2,0(r4)
   4b244:	00bfffc4 	movi	r2,-1
   4b248:	f800283a 	ret

0004b24c <__sigtramp_r>:
   4b24c:	28800830 	cmpltui	r2,r5,32
   4b250:	10002b26 	beq	r2,zero,4b300 <__sigtramp_r+0xb4>
   4b254:	20c0b717 	ldw	r3,732(r4)
   4b258:	defffd04 	addi	sp,sp,-12
   4b25c:	dc400115 	stw	r17,4(sp)
   4b260:	dc000015 	stw	r16,0(sp)
   4b264:	dfc00215 	stw	ra,8(sp)
   4b268:	2821883a 	mov	r16,r5
   4b26c:	2023883a 	mov	r17,r4
   4b270:	18001726 	beq	r3,zero,4b2d0 <__sigtramp_r+0x84>
   4b274:	800490ba 	slli	r2,r16,2
   4b278:	1887883a 	add	r3,r3,r2
   4b27c:	18800017 	ldw	r2,0(r3)
   4b280:	10000d26 	beq	r2,zero,4b2b8 <__sigtramp_r+0x6c>
   4b284:	113fffe0 	cmpeqi	r4,r2,-1
   4b288:	20000f1e 	bne	r4,zero,4b2c8 <__sigtramp_r+0x7c>
   4b28c:	11000060 	cmpeqi	r4,r2,1
   4b290:	20000b1e 	bne	r4,zero,4b2c0 <__sigtramp_r+0x74>
   4b294:	18000015 	stw	zero,0(r3)
   4b298:	8009883a 	mov	r4,r16
   4b29c:	103ee83a 	callr	r2
   4b2a0:	0005883a 	mov	r2,zero
   4b2a4:	dfc00217 	ldw	ra,8(sp)
   4b2a8:	dc400117 	ldw	r17,4(sp)
   4b2ac:	dc000017 	ldw	r16,0(sp)
   4b2b0:	dec00304 	addi	sp,sp,12
   4b2b4:	f800283a 	ret
   4b2b8:	00800044 	movi	r2,1
   4b2bc:	003ff906 	br	4b2a4 <__sigtramp_r+0x58>
   4b2c0:	008000c4 	movi	r2,3
   4b2c4:	003ff706 	br	4b2a4 <__sigtramp_r+0x58>
   4b2c8:	00800084 	movi	r2,2
   4b2cc:	003ff506 	br	4b2a4 <__sigtramp_r+0x58>
   4b2d0:	01402004 	movi	r5,128
   4b2d4:	0046bc40 	call	46bc4 <_malloc_r>
   4b2d8:	8880b715 	stw	r2,732(r17)
   4b2dc:	10000626 	beq	r2,zero,4b2f8 <__sigtramp_r+0xac>
   4b2e0:	01802004 	movi	r6,128
   4b2e4:	000b883a 	mov	r5,zero
   4b2e8:	1009883a 	mov	r4,r2
   4b2ec:	00476700 	call	47670 <memset>
   4b2f0:	1007883a 	mov	r3,r2
   4b2f4:	003fdf06 	br	4b274 <__sigtramp_r+0x28>
   4b2f8:	00bfffc4 	movi	r2,-1
   4b2fc:	003fe906 	br	4b2a4 <__sigtramp_r+0x58>
   4b300:	00bfffc4 	movi	r2,-1
   4b304:	f800283a 	ret

0004b308 <raise>:
   4b308:	defffd04 	addi	sp,sp,-12
   4b30c:	dc400115 	stw	r17,4(sp)
   4b310:	00c00174 	movhi	r3,5
   4b314:	dfc00215 	stw	ra,8(sp)
   4b318:	dc000015 	stw	r16,0(sp)
   4b31c:	20800830 	cmpltui	r2,r4,32
   4b320:	1c4d3017 	ldw	r17,13504(r3)
   4b324:	10002126 	beq	r2,zero,4b3ac <raise+0xa4>
   4b328:	8880b717 	ldw	r2,732(r17)
   4b32c:	2021883a 	mov	r16,r4
   4b330:	10001026 	beq	r2,zero,4b374 <raise+0x6c>
   4b334:	200690ba 	slli	r3,r4,2
   4b338:	10c5883a 	add	r2,r2,r3
   4b33c:	10c00017 	ldw	r3,0(r2)
   4b340:	18000c26 	beq	r3,zero,4b374 <raise+0x6c>
   4b344:	19400060 	cmpeqi	r5,r3,1
   4b348:	2800041e 	bne	r5,zero,4b35c <raise+0x54>
   4b34c:	197fffd8 	cmpnei	r5,r3,-1
   4b350:	28001226 	beq	r5,zero,4b39c <raise+0x94>
   4b354:	10000015 	stw	zero,0(r2)
   4b358:	183ee83a 	callr	r3
   4b35c:	0005883a 	mov	r2,zero
   4b360:	dfc00217 	ldw	ra,8(sp)
   4b364:	dc400117 	ldw	r17,4(sp)
   4b368:	dc000017 	ldw	r16,0(sp)
   4b36c:	dec00304 	addi	sp,sp,12
   4b370:	f800283a 	ret
   4b374:	8809883a 	mov	r4,r17
   4b378:	004b5d00 	call	4b5d0 <_getpid_r>
   4b37c:	800d883a 	mov	r6,r16
   4b380:	100b883a 	mov	r5,r2
   4b384:	8809883a 	mov	r4,r17
   4b388:	dfc00217 	ldw	ra,8(sp)
   4b38c:	dc400117 	ldw	r17,4(sp)
   4b390:	dc000017 	ldw	r16,0(sp)
   4b394:	dec00304 	addi	sp,sp,12
   4b398:	004b5701 	jmpi	4b570 <_kill_r>
   4b39c:	00800584 	movi	r2,22
   4b3a0:	88800015 	stw	r2,0(r17)
   4b3a4:	00800044 	movi	r2,1
   4b3a8:	003fed06 	br	4b360 <raise+0x58>
   4b3ac:	00800584 	movi	r2,22
   4b3b0:	88800015 	stw	r2,0(r17)
   4b3b4:	00bfffc4 	movi	r2,-1
   4b3b8:	003fe906 	br	4b360 <raise+0x58>

0004b3bc <signal>:
   4b3bc:	defffc04 	addi	sp,sp,-16
   4b3c0:	dc800215 	stw	r18,8(sp)
   4b3c4:	00c00174 	movhi	r3,5
   4b3c8:	dfc00315 	stw	ra,12(sp)
   4b3cc:	dc400115 	stw	r17,4(sp)
   4b3d0:	dc000015 	stw	r16,0(sp)
   4b3d4:	20800830 	cmpltui	r2,r4,32
   4b3d8:	1c8d3017 	ldw	r18,13504(r3)
   4b3dc:	10000e26 	beq	r2,zero,4b418 <signal+0x5c>
   4b3e0:	2021883a 	mov	r16,r4
   4b3e4:	9100b717 	ldw	r4,732(r18)
   4b3e8:	2823883a 	mov	r17,r5
   4b3ec:	20000e26 	beq	r4,zero,4b428 <signal+0x6c>
   4b3f0:	802090ba 	slli	r16,r16,2
   4b3f4:	2409883a 	add	r4,r4,r16
   4b3f8:	20800017 	ldw	r2,0(r4)
   4b3fc:	24400015 	stw	r17,0(r4)
   4b400:	dfc00317 	ldw	ra,12(sp)
   4b404:	dc800217 	ldw	r18,8(sp)
   4b408:	dc400117 	ldw	r17,4(sp)
   4b40c:	dc000017 	ldw	r16,0(sp)
   4b410:	dec00404 	addi	sp,sp,16
   4b414:	f800283a 	ret
   4b418:	00800584 	movi	r2,22
   4b41c:	90800015 	stw	r2,0(r18)
   4b420:	00bfffc4 	movi	r2,-1
   4b424:	003ff606 	br	4b400 <signal+0x44>
   4b428:	9009883a 	mov	r4,r18
   4b42c:	01402004 	movi	r5,128
   4b430:	0046bc40 	call	46bc4 <_malloc_r>
   4b434:	9080b715 	stw	r2,732(r18)
   4b438:	1009883a 	mov	r4,r2
   4b43c:	103ff826 	beq	r2,zero,4b420 <signal+0x64>
   4b440:	01802004 	movi	r6,128
   4b444:	000b883a 	mov	r5,zero
   4b448:	00476700 	call	47670 <memset>
   4b44c:	1009883a 	mov	r4,r2
   4b450:	003fe706 	br	4b3f0 <signal+0x34>

0004b454 <_init_signal>:
   4b454:	defffe04 	addi	sp,sp,-8
   4b458:	00800174 	movhi	r2,5
   4b45c:	dc000015 	stw	r16,0(sp)
   4b460:	140d3017 	ldw	r16,13504(r2)
   4b464:	dfc00115 	stw	ra,4(sp)
   4b468:	8080b717 	ldw	r2,732(r16)
   4b46c:	10000526 	beq	r2,zero,4b484 <_init_signal+0x30>
   4b470:	0005883a 	mov	r2,zero
   4b474:	dfc00117 	ldw	ra,4(sp)
   4b478:	dc000017 	ldw	r16,0(sp)
   4b47c:	dec00204 	addi	sp,sp,8
   4b480:	f800283a 	ret
   4b484:	8009883a 	mov	r4,r16
   4b488:	01402004 	movi	r5,128
   4b48c:	0046bc40 	call	46bc4 <_malloc_r>
   4b490:	8080b715 	stw	r2,732(r16)
   4b494:	1009883a 	mov	r4,r2
   4b498:	10000426 	beq	r2,zero,4b4ac <_init_signal+0x58>
   4b49c:	01802004 	movi	r6,128
   4b4a0:	000b883a 	mov	r5,zero
   4b4a4:	00476700 	call	47670 <memset>
   4b4a8:	003ff106 	br	4b470 <_init_signal+0x1c>
   4b4ac:	00bfffc4 	movi	r2,-1
   4b4b0:	003ff006 	br	4b474 <_init_signal+0x20>

0004b4b4 <__sigtramp>:
   4b4b4:	defffd04 	addi	sp,sp,-12
   4b4b8:	dc400115 	stw	r17,4(sp)
   4b4bc:	00c00174 	movhi	r3,5
   4b4c0:	dfc00215 	stw	ra,8(sp)
   4b4c4:	dc000015 	stw	r16,0(sp)
   4b4c8:	20800830 	cmpltui	r2,r4,32
   4b4cc:	1c4d3017 	ldw	r17,13504(r3)
   4b4d0:	10002526 	beq	r2,zero,4b568 <__sigtramp+0xb4>
   4b4d4:	88c0b717 	ldw	r3,732(r17)
   4b4d8:	2021883a 	mov	r16,r4
   4b4dc:	18001726 	beq	r3,zero,4b53c <__sigtramp+0x88>
   4b4e0:	800490ba 	slli	r2,r16,2
   4b4e4:	1887883a 	add	r3,r3,r2
   4b4e8:	18800017 	ldw	r2,0(r3)
   4b4ec:	10000d26 	beq	r2,zero,4b524 <__sigtramp+0x70>
   4b4f0:	113fffe0 	cmpeqi	r4,r2,-1
   4b4f4:	20000f1e 	bne	r4,zero,4b534 <__sigtramp+0x80>
   4b4f8:	11000060 	cmpeqi	r4,r2,1
   4b4fc:	20000b1e 	bne	r4,zero,4b52c <__sigtramp+0x78>
   4b500:	18000015 	stw	zero,0(r3)
   4b504:	8009883a 	mov	r4,r16
   4b508:	103ee83a 	callr	r2
   4b50c:	0005883a 	mov	r2,zero
   4b510:	dfc00217 	ldw	ra,8(sp)
   4b514:	dc400117 	ldw	r17,4(sp)
   4b518:	dc000017 	ldw	r16,0(sp)
   4b51c:	dec00304 	addi	sp,sp,12
   4b520:	f800283a 	ret
   4b524:	00800044 	movi	r2,1
   4b528:	003ff906 	br	4b510 <__sigtramp+0x5c>
   4b52c:	008000c4 	movi	r2,3
   4b530:	003ff706 	br	4b510 <__sigtramp+0x5c>
   4b534:	00800084 	movi	r2,2
   4b538:	003ff506 	br	4b510 <__sigtramp+0x5c>
   4b53c:	01402004 	movi	r5,128
   4b540:	8809883a 	mov	r4,r17
   4b544:	0046bc40 	call	46bc4 <_malloc_r>
   4b548:	8880b715 	stw	r2,732(r17)
   4b54c:	10000626 	beq	r2,zero,4b568 <__sigtramp+0xb4>
   4b550:	01802004 	movi	r6,128
   4b554:	000b883a 	mov	r5,zero
   4b558:	1009883a 	mov	r4,r2
   4b55c:	00476700 	call	47670 <memset>
   4b560:	1007883a 	mov	r3,r2
   4b564:	003fde06 	br	4b4e0 <__sigtramp+0x2c>
   4b568:	00bfffc4 	movi	r2,-1
   4b56c:	003fe806 	br	4b510 <__sigtramp+0x5c>

0004b570 <_kill_r>:
   4b570:	2807883a 	mov	r3,r5
   4b574:	defffe04 	addi	sp,sp,-8
   4b578:	dc000015 	stw	r16,0(sp)
   4b57c:	00800174 	movhi	r2,5
   4b580:	300b883a 	mov	r5,r6
   4b584:	2021883a 	mov	r16,r4
   4b588:	1809883a 	mov	r4,r3
   4b58c:	dfc00115 	stw	ra,4(sp)
   4b590:	10143915 	stw	zero,20708(r2)
   4b594:	004ee800 	call	4ee80 <kill>
   4b598:	10ffffd8 	cmpnei	r3,r2,-1
   4b59c:	18000426 	beq	r3,zero,4b5b0 <_kill_r+0x40>
   4b5a0:	dfc00117 	ldw	ra,4(sp)
   4b5a4:	dc000017 	ldw	r16,0(sp)
   4b5a8:	dec00204 	addi	sp,sp,8
   4b5ac:	f800283a 	ret
   4b5b0:	00c00174 	movhi	r3,5
   4b5b4:	18d43917 	ldw	r3,20708(r3)
   4b5b8:	183ff926 	beq	r3,zero,4b5a0 <_kill_r+0x30>
   4b5bc:	80c00015 	stw	r3,0(r16)
   4b5c0:	dfc00117 	ldw	ra,4(sp)
   4b5c4:	dc000017 	ldw	r16,0(sp)
   4b5c8:	dec00204 	addi	sp,sp,8
   4b5cc:	f800283a 	ret

0004b5d0 <_getpid_r>:
   4b5d0:	004eaac1 	jmpi	4eaac <getpid>

0004b5d4 <__udivdi3>:
   4b5d4:	defff504 	addi	sp,sp,-44
   4b5d8:	dc800315 	stw	r18,12(sp)
   4b5dc:	dc000115 	stw	r16,4(sp)
   4b5e0:	dfc00a15 	stw	ra,40(sp)
   4b5e4:	df000915 	stw	fp,36(sp)
   4b5e8:	ddc00815 	stw	r23,32(sp)
   4b5ec:	dd800715 	stw	r22,28(sp)
   4b5f0:	dd400615 	stw	r21,24(sp)
   4b5f4:	dd000515 	stw	r20,20(sp)
   4b5f8:	dcc00415 	stw	r19,16(sp)
   4b5fc:	dc400215 	stw	r17,8(sp)
   4b600:	2025883a 	mov	r18,r4
   4b604:	2821883a 	mov	r16,r5
   4b608:	3800401e 	bne	r7,zero,4b70c <__udivdi3+0x138>
   4b60c:	3023883a 	mov	r17,r6
   4b610:	2027883a 	mov	r19,r4
   4b614:	29805d2e 	bgeu	r5,r6,4b78c <__udivdi3+0x1b8>
   4b618:	00bfffd4 	movui	r2,65535
   4b61c:	282d883a 	mov	r22,r5
   4b620:	1180982e 	bgeu	r2,r6,4b884 <__udivdi3+0x2b0>
   4b624:	00804034 	movhi	r2,256
   4b628:	30812536 	bltu	r6,r2,4bac0 <__udivdi3+0x4ec>
   4b62c:	00c00604 	movi	r3,24
   4b630:	30cad83a 	srl	r5,r6,r3
   4b634:	00800174 	movhi	r2,5
   4b638:	01000804 	movi	r4,32
   4b63c:	2885883a 	add	r2,r5,r2
   4b640:	1084b303 	ldbu	r2,4812(r2)
   4b644:	10c5883a 	add	r2,r2,r3
   4b648:	2087c83a 	sub	r3,r4,r2
   4b64c:	20800526 	beq	r4,r2,4b664 <__udivdi3+0x90>
   4b650:	80ec983a 	sll	r22,r16,r3
   4b654:	9084d83a 	srl	r2,r18,r2
   4b658:	30e2983a 	sll	r17,r6,r3
   4b65c:	90e6983a 	sll	r19,r18,r3
   4b660:	15acb03a 	or	r22,r2,r22
   4b664:	882ad43a 	srli	r21,r17,16
   4b668:	b009883a 	mov	r4,r22
   4b66c:	8d3fffcc 	andi	r20,r17,65535
   4b670:	a80b883a 	mov	r5,r21
   4b674:	004c18c0 	call	4c18c <__umodsi3>
   4b678:	b009883a 	mov	r4,r22
   4b67c:	a80b883a 	mov	r5,r21
   4b680:	1025883a 	mov	r18,r2
   4b684:	004c1280 	call	4c128 <__udivsi3>
   4b688:	9008943a 	slli	r4,r18,16
   4b68c:	9806d43a 	srli	r3,r19,16
   4b690:	1021883a 	mov	r16,r2
   4b694:	a085383a 	mul	r2,r20,r2
   4b698:	20c8b03a 	or	r4,r4,r3
   4b69c:	2080052e 	bgeu	r4,r2,4b6b4 <__udivdi3+0xe0>
   4b6a0:	2449883a 	add	r4,r4,r17
   4b6a4:	80ffffc4 	addi	r3,r16,-1
   4b6a8:	24400136 	bltu	r4,r17,4b6b0 <__udivdi3+0xdc>
   4b6ac:	20811a36 	bltu	r4,r2,4bb18 <__udivdi3+0x544>
   4b6b0:	1821883a 	mov	r16,r3
   4b6b4:	20a5c83a 	sub	r18,r4,r2
   4b6b8:	9009883a 	mov	r4,r18
   4b6bc:	a80b883a 	mov	r5,r21
   4b6c0:	004c18c0 	call	4c18c <__umodsi3>
   4b6c4:	9009883a 	mov	r4,r18
   4b6c8:	a80b883a 	mov	r5,r21
   4b6cc:	1025883a 	mov	r18,r2
   4b6d0:	004c1280 	call	4c128 <__udivsi3>
   4b6d4:	9006943a 	slli	r3,r18,16
   4b6d8:	a0a9383a 	mul	r20,r20,r2
   4b6dc:	9cffffcc 	andi	r19,r19,65535
   4b6e0:	1cc6b03a 	or	r3,r3,r19
   4b6e4:	1d00052e 	bgeu	r3,r20,4b6fc <__udivdi3+0x128>
   4b6e8:	88c7883a 	add	r3,r17,r3
   4b6ec:	113fffc4 	addi	r4,r2,-1
   4b6f0:	1c400136 	bltu	r3,r17,4b6f8 <__udivdi3+0x124>
   4b6f4:	1d010136 	bltu	r3,r20,4bafc <__udivdi3+0x528>
   4b6f8:	2005883a 	mov	r2,r4
   4b6fc:	800c943a 	slli	r6,r16,16
   4b700:	0007883a 	mov	r3,zero
   4b704:	3084b03a 	or	r2,r6,r2
   4b708:	00000306 	br	4b718 <__udivdi3+0x144>
   4b70c:	29c00e2e 	bgeu	r5,r7,4b748 <__udivdi3+0x174>
   4b710:	0007883a 	mov	r3,zero
   4b714:	0005883a 	mov	r2,zero
   4b718:	dfc00a17 	ldw	ra,40(sp)
   4b71c:	df000917 	ldw	fp,36(sp)
   4b720:	ddc00817 	ldw	r23,32(sp)
   4b724:	dd800717 	ldw	r22,28(sp)
   4b728:	dd400617 	ldw	r21,24(sp)
   4b72c:	dd000517 	ldw	r20,20(sp)
   4b730:	dcc00417 	ldw	r19,16(sp)
   4b734:	dc800317 	ldw	r18,12(sp)
   4b738:	dc400217 	ldw	r17,8(sp)
   4b73c:	dc000117 	ldw	r16,4(sp)
   4b740:	dec00b04 	addi	sp,sp,44
   4b744:	f800283a 	ret
   4b748:	00bfffd4 	movui	r2,65535
   4b74c:	11c0562e 	bgeu	r2,r7,4b8a8 <__udivdi3+0x2d4>
   4b750:	00804034 	movhi	r2,256
   4b754:	3880d836 	bltu	r7,r2,4bab8 <__udivdi3+0x4e4>
   4b758:	00c00604 	movi	r3,24
   4b75c:	38cad83a 	srl	r5,r7,r3
   4b760:	00800174 	movhi	r2,5
   4b764:	01000804 	movi	r4,32
   4b768:	2885883a 	add	r2,r5,r2
   4b76c:	1084b303 	ldbu	r2,4812(r2)
   4b770:	10c5883a 	add	r2,r2,r3
   4b774:	20adc83a 	sub	r22,r4,r2
   4b778:	2080801e 	bne	r4,r2,4b97c <__udivdi3+0x3a8>
   4b77c:	3c00d236 	bltu	r7,r16,4bac8 <__udivdi3+0x4f4>
   4b780:	9185403a 	cmpgeu	r2,r18,r6
   4b784:	0007883a 	mov	r3,zero
   4b788:	003fe306 	br	4b718 <__udivdi3+0x144>
   4b78c:	3000401e 	bne	r6,zero,4b890 <__udivdi3+0x2bc>
   4b790:	000b883a 	mov	r5,zero
   4b794:	01000044 	movi	r4,1
   4b798:	004c1280 	call	4c128 <__udivsi3>
   4b79c:	1023883a 	mov	r17,r2
   4b7a0:	88804028 	cmpgeui	r2,r17,256
   4b7a4:	100490fa 	slli	r2,r2,3
   4b7a8:	888ad83a 	srl	r5,r17,r2
   4b7ac:	00c00174 	movhi	r3,5
   4b7b0:	01000804 	movi	r4,32
   4b7b4:	28c7883a 	add	r3,r5,r3
   4b7b8:	18c4b303 	ldbu	r3,4812(r3)
   4b7bc:	1887883a 	add	r3,r3,r2
   4b7c0:	20cdc83a 	sub	r6,r4,r3
   4b7c4:	20c03b1e 	bne	r4,r3,4b8b4 <__udivdi3+0x2e0>
   4b7c8:	8828d43a 	srli	r20,r17,16
   4b7cc:	8461c83a 	sub	r16,r16,r17
   4b7d0:	8d7fffcc 	andi	r21,r17,65535
   4b7d4:	00c00044 	movi	r3,1
   4b7d8:	8009883a 	mov	r4,r16
   4b7dc:	a00b883a 	mov	r5,r20
   4b7e0:	d8c00015 	stw	r3,0(sp)
   4b7e4:	004c18c0 	call	4c18c <__umodsi3>
   4b7e8:	8009883a 	mov	r4,r16
   4b7ec:	a00b883a 	mov	r5,r20
   4b7f0:	1025883a 	mov	r18,r2
   4b7f4:	004c1280 	call	4c128 <__udivsi3>
   4b7f8:	9008943a 	slli	r4,r18,16
   4b7fc:	980ad43a 	srli	r5,r19,16
   4b800:	1021883a 	mov	r16,r2
   4b804:	1545383a 	mul	r2,r2,r21
   4b808:	2148b03a 	or	r4,r4,r5
   4b80c:	d8c00017 	ldw	r3,0(sp)
   4b810:	2080052e 	bgeu	r4,r2,4b828 <__udivdi3+0x254>
   4b814:	2449883a 	add	r4,r4,r17
   4b818:	817fffc4 	addi	r5,r16,-1
   4b81c:	24400136 	bltu	r4,r17,4b824 <__udivdi3+0x250>
   4b820:	2080b836 	bltu	r4,r2,4bb04 <__udivdi3+0x530>
   4b824:	2821883a 	mov	r16,r5
   4b828:	20a5c83a 	sub	r18,r4,r2
   4b82c:	9009883a 	mov	r4,r18
   4b830:	a00b883a 	mov	r5,r20
   4b834:	d8c00015 	stw	r3,0(sp)
   4b838:	004c18c0 	call	4c18c <__umodsi3>
   4b83c:	9009883a 	mov	r4,r18
   4b840:	a00b883a 	mov	r5,r20
   4b844:	1025883a 	mov	r18,r2
   4b848:	004c1280 	call	4c128 <__udivsi3>
   4b84c:	9008943a 	slli	r4,r18,16
   4b850:	156b383a 	mul	r21,r2,r21
   4b854:	9cffffcc 	andi	r19,r19,65535
   4b858:	24c8b03a 	or	r4,r4,r19
   4b85c:	d8c00017 	ldw	r3,0(sp)
   4b860:	2540052e 	bgeu	r4,r21,4b878 <__udivdi3+0x2a4>
   4b864:	8909883a 	add	r4,r17,r4
   4b868:	117fffc4 	addi	r5,r2,-1
   4b86c:	24400136 	bltu	r4,r17,4b874 <__udivdi3+0x2a0>
   4b870:	2540a036 	bltu	r4,r21,4baf4 <__udivdi3+0x520>
   4b874:	2805883a 	mov	r2,r5
   4b878:	800c943a 	slli	r6,r16,16
   4b87c:	3084b03a 	or	r2,r6,r2
   4b880:	003fa506 	br	4b718 <__udivdi3+0x144>
   4b884:	30c04028 	cmpgeui	r3,r6,256
   4b888:	180690fa 	slli	r3,r3,3
   4b88c:	003f6806 	br	4b630 <__udivdi3+0x5c>
   4b890:	00bfffd4 	movui	r2,65535
   4b894:	11bfc22e 	bgeu	r2,r6,4b7a0 <__udivdi3+0x1cc>
   4b898:	00804034 	movhi	r2,256
   4b89c:	30809c2e 	bgeu	r6,r2,4bb10 <__udivdi3+0x53c>
   4b8a0:	00800404 	movi	r2,16
   4b8a4:	003fc006 	br	4b7a8 <__udivdi3+0x1d4>
   4b8a8:	38c04028 	cmpgeui	r3,r7,256
   4b8ac:	180690fa 	slli	r3,r3,3
   4b8b0:	003faa06 	br	4b75c <__udivdi3+0x188>
   4b8b4:	89a2983a 	sll	r17,r17,r6
   4b8b8:	80ead83a 	srl	r21,r16,r3
   4b8bc:	81a0983a 	sll	r16,r16,r6
   4b8c0:	8828d43a 	srli	r20,r17,16
   4b8c4:	90c6d83a 	srl	r3,r18,r3
   4b8c8:	a809883a 	mov	r4,r21
   4b8cc:	a00b883a 	mov	r5,r20
   4b8d0:	1c2cb03a 	or	r22,r3,r16
   4b8d4:	91a6983a 	sll	r19,r18,r6
   4b8d8:	004c18c0 	call	4c18c <__umodsi3>
   4b8dc:	a809883a 	mov	r4,r21
   4b8e0:	a00b883a 	mov	r5,r20
   4b8e4:	1021883a 	mov	r16,r2
   4b8e8:	004c1280 	call	4c128 <__udivsi3>
   4b8ec:	8008943a 	slli	r4,r16,16
   4b8f0:	b00ad43a 	srli	r5,r22,16
   4b8f4:	8d7fffcc 	andi	r21,r17,65535
   4b8f8:	1025883a 	mov	r18,r2
   4b8fc:	a885383a 	mul	r2,r21,r2
   4b900:	2148b03a 	or	r4,r4,r5
   4b904:	2080062e 	bgeu	r4,r2,4b920 <__udivdi3+0x34c>
   4b908:	2449883a 	add	r4,r4,r17
   4b90c:	90ffffc4 	addi	r3,r18,-1
   4b910:	24407636 	bltu	r4,r17,4baec <__udivdi3+0x518>
   4b914:	2080752e 	bgeu	r4,r2,4baec <__udivdi3+0x518>
   4b918:	94bfff84 	addi	r18,r18,-2
   4b91c:	2449883a 	add	r4,r4,r17
   4b920:	20a1c83a 	sub	r16,r4,r2
   4b924:	8009883a 	mov	r4,r16
   4b928:	a00b883a 	mov	r5,r20
   4b92c:	004c18c0 	call	4c18c <__umodsi3>
   4b930:	8009883a 	mov	r4,r16
   4b934:	a00b883a 	mov	r5,r20
   4b938:	1021883a 	mov	r16,r2
   4b93c:	8020943a 	slli	r16,r16,16
   4b940:	004c1280 	call	4c128 <__udivsi3>
   4b944:	a889383a 	mul	r4,r21,r2
   4b948:	b5bfffcc 	andi	r22,r22,65535
   4b94c:	85a0b03a 	or	r16,r16,r22
   4b950:	8100062e 	bgeu	r16,r4,4b96c <__udivdi3+0x398>
   4b954:	8461883a 	add	r16,r16,r17
   4b958:	10ffffc4 	addi	r3,r2,-1
   4b95c:	84405f36 	bltu	r16,r17,4badc <__udivdi3+0x508>
   4b960:	81005e2e 	bgeu	r16,r4,4badc <__udivdi3+0x508>
   4b964:	10bfff84 	addi	r2,r2,-2
   4b968:	8461883a 	add	r16,r16,r17
   4b96c:	9006943a 	slli	r3,r18,16
   4b970:	8121c83a 	sub	r16,r16,r4
   4b974:	1886b03a 	or	r3,r3,r2
   4b978:	003f9706 	br	4b7d8 <__udivdi3+0x204>
   4b97c:	30aed83a 	srl	r23,r6,r2
   4b980:	3d8e983a 	sll	r7,r7,r22
   4b984:	80a8d83a 	srl	r20,r16,r2
   4b988:	90a2d83a 	srl	r17,r18,r2
   4b98c:	b9eeb03a 	or	r23,r23,r7
   4b990:	b826d43a 	srli	r19,r23,16
   4b994:	8584983a 	sll	r2,r16,r22
   4b998:	a009883a 	mov	r4,r20
   4b99c:	980b883a 	mov	r5,r19
   4b9a0:	35aa983a 	sll	r21,r6,r22
   4b9a4:	88a2b03a 	or	r17,r17,r2
   4b9a8:	004c18c0 	call	4c18c <__umodsi3>
   4b9ac:	a009883a 	mov	r4,r20
   4b9b0:	980b883a 	mov	r5,r19
   4b9b4:	1029883a 	mov	r20,r2
   4b9b8:	004c1280 	call	4c128 <__udivsi3>
   4b9bc:	a008943a 	slli	r4,r20,16
   4b9c0:	8806d43a 	srli	r3,r17,16
   4b9c4:	bf3fffcc 	andi	fp,r23,65535
   4b9c8:	1021883a 	mov	r16,r2
   4b9cc:	e085383a 	mul	r2,fp,r2
   4b9d0:	20c8b03a 	or	r4,r4,r3
   4b9d4:	2080062e 	bgeu	r4,r2,4b9f0 <__udivdi3+0x41c>
   4b9d8:	25c9883a 	add	r4,r4,r23
   4b9dc:	80ffffc4 	addi	r3,r16,-1
   4b9e0:	25c04036 	bltu	r4,r23,4bae4 <__udivdi3+0x510>
   4b9e4:	20803f2e 	bgeu	r4,r2,4bae4 <__udivdi3+0x510>
   4b9e8:	843fff84 	addi	r16,r16,-2
   4b9ec:	25c9883a 	add	r4,r4,r23
   4b9f0:	20a9c83a 	sub	r20,r4,r2
   4b9f4:	980b883a 	mov	r5,r19
   4b9f8:	a009883a 	mov	r4,r20
   4b9fc:	004c18c0 	call	4c18c <__umodsi3>
   4ba00:	980b883a 	mov	r5,r19
   4ba04:	a009883a 	mov	r4,r20
   4ba08:	1027883a 	mov	r19,r2
   4ba0c:	004c1280 	call	4c128 <__udivsi3>
   4ba10:	9806943a 	slli	r3,r19,16
   4ba14:	e0b9383a 	mul	fp,fp,r2
   4ba18:	8c7fffcc 	andi	r17,r17,65535
   4ba1c:	1c46b03a 	or	r3,r3,r17
   4ba20:	1009883a 	mov	r4,r2
   4ba24:	1f00062e 	bgeu	r3,fp,4ba40 <__udivdi3+0x46c>
   4ba28:	1dc7883a 	add	r3,r3,r23
   4ba2c:	10bfffc4 	addi	r2,r2,-1
   4ba30:	1dc02836 	bltu	r3,r23,4bad4 <__udivdi3+0x500>
   4ba34:	1f00272e 	bgeu	r3,fp,4bad4 <__udivdi3+0x500>
   4ba38:	213fff84 	addi	r4,r4,-2
   4ba3c:	1dc7883a 	add	r3,r3,r23
   4ba40:	8004943a 	slli	r2,r16,16
   4ba44:	a80ed43a 	srli	r7,r21,16
   4ba48:	217fffcc 	andi	r5,r4,65535
   4ba4c:	1104b03a 	or	r2,r2,r4
   4ba50:	1008d43a 	srli	r4,r2,16
   4ba54:	ad7fffcc 	andi	r21,r21,65535
   4ba58:	2d51383a 	mul	r8,r5,r21
   4ba5c:	256b383a 	mul	r21,r4,r21
   4ba60:	29cb383a 	mul	r5,r5,r7
   4ba64:	400cd43a 	srli	r6,r8,16
   4ba68:	21c9383a 	mul	r4,r4,r7
   4ba6c:	2d4b883a 	add	r5,r5,r21
   4ba70:	314b883a 	add	r5,r6,r5
   4ba74:	1f07c83a 	sub	r3,r3,fp
   4ba78:	2d40022e 	bgeu	r5,r21,4ba84 <__udivdi3+0x4b0>
   4ba7c:	01800074 	movhi	r6,1
   4ba80:	2189883a 	add	r4,r4,r6
   4ba84:	280cd43a 	srli	r6,r5,16
   4ba88:	3109883a 	add	r4,r6,r4
   4ba8c:	19000836 	bltu	r3,r4,4bab0 <__udivdi3+0x4dc>
   4ba90:	19000226 	beq	r3,r4,4ba9c <__udivdi3+0x4c8>
   4ba94:	0007883a 	mov	r3,zero
   4ba98:	003f1f06 	br	4b718 <__udivdi3+0x144>
   4ba9c:	280a943a 	slli	r5,r5,16
   4baa0:	9588983a 	sll	r4,r18,r22
   4baa4:	423fffcc 	andi	r8,r8,65535
   4baa8:	2a0b883a 	add	r5,r5,r8
   4baac:	217ff92e 	bgeu	r4,r5,4ba94 <__udivdi3+0x4c0>
   4bab0:	10bfffc4 	addi	r2,r2,-1
   4bab4:	003ff706 	br	4ba94 <__udivdi3+0x4c0>
   4bab8:	00c00404 	movi	r3,16
   4babc:	003f2706 	br	4b75c <__udivdi3+0x188>
   4bac0:	00c00404 	movi	r3,16
   4bac4:	003eda06 	br	4b630 <__udivdi3+0x5c>
   4bac8:	0007883a 	mov	r3,zero
   4bacc:	00800044 	movi	r2,1
   4bad0:	003f1106 	br	4b718 <__udivdi3+0x144>
   4bad4:	1009883a 	mov	r4,r2
   4bad8:	003fd906 	br	4ba40 <__udivdi3+0x46c>
   4badc:	1805883a 	mov	r2,r3
   4bae0:	003fa206 	br	4b96c <__udivdi3+0x398>
   4bae4:	1821883a 	mov	r16,r3
   4bae8:	003fc106 	br	4b9f0 <__udivdi3+0x41c>
   4baec:	1825883a 	mov	r18,r3
   4baf0:	003f8b06 	br	4b920 <__udivdi3+0x34c>
   4baf4:	10bfff84 	addi	r2,r2,-2
   4baf8:	003f5f06 	br	4b878 <__udivdi3+0x2a4>
   4bafc:	10bfff84 	addi	r2,r2,-2
   4bb00:	003efe06 	br	4b6fc <__udivdi3+0x128>
   4bb04:	843fff84 	addi	r16,r16,-2
   4bb08:	2449883a 	add	r4,r4,r17
   4bb0c:	003f4606 	br	4b828 <__udivdi3+0x254>
   4bb10:	00800604 	movi	r2,24
   4bb14:	003f2406 	br	4b7a8 <__udivdi3+0x1d4>
   4bb18:	843fff84 	addi	r16,r16,-2
   4bb1c:	2449883a 	add	r4,r4,r17
   4bb20:	003ee406 	br	4b6b4 <__udivdi3+0xe0>

0004bb24 <__umoddi3>:
   4bb24:	defff504 	addi	sp,sp,-44
   4bb28:	dcc00415 	stw	r19,16(sp)
   4bb2c:	dc000115 	stw	r16,4(sp)
   4bb30:	dfc00a15 	stw	ra,40(sp)
   4bb34:	df000915 	stw	fp,36(sp)
   4bb38:	ddc00815 	stw	r23,32(sp)
   4bb3c:	dd800715 	stw	r22,28(sp)
   4bb40:	dd400615 	stw	r21,24(sp)
   4bb44:	dd000515 	stw	r20,20(sp)
   4bb48:	dc800315 	stw	r18,12(sp)
   4bb4c:	dc400215 	stw	r17,8(sp)
   4bb50:	2827883a 	mov	r19,r5
   4bb54:	2021883a 	mov	r16,r4
   4bb58:	38003b1e 	bne	r7,zero,4bc48 <__umoddi3+0x124>
   4bb5c:	3029883a 	mov	r20,r6
   4bb60:	2025883a 	mov	r18,r4
   4bb64:	29805d2e 	bgeu	r5,r6,4bcdc <__umoddi3+0x1b8>
   4bb68:	00bfffd4 	movui	r2,65535
   4bb6c:	282f883a 	mov	r23,r5
   4bb70:	11808e2e 	bgeu	r2,r6,4bdac <__umoddi3+0x288>
   4bb74:	00804034 	movhi	r2,256
   4bb78:	30811e36 	bltu	r6,r2,4bff4 <__umoddi3+0x4d0>
   4bb7c:	00c00604 	movi	r3,24
   4bb80:	30cad83a 	srl	r5,r6,r3
   4bb84:	00800174 	movhi	r2,5
   4bb88:	01000804 	movi	r4,32
   4bb8c:	2885883a 	add	r2,r5,r2
   4bb90:	1084b303 	ldbu	r2,4812(r2)
   4bb94:	10c5883a 	add	r2,r2,r3
   4bb98:	20a3c83a 	sub	r17,r4,r2
   4bb9c:	20800526 	beq	r4,r2,4bbb4 <__umoddi3+0x90>
   4bba0:	9c6e983a 	sll	r23,r19,r17
   4bba4:	8084d83a 	srl	r2,r16,r2
   4bba8:	3468983a 	sll	r20,r6,r17
   4bbac:	8464983a 	sll	r18,r16,r17
   4bbb0:	15eeb03a 	or	r23,r2,r23
   4bbb4:	a02cd43a 	srli	r22,r20,16
   4bbb8:	b809883a 	mov	r4,r23
   4bbbc:	a57fffcc 	andi	r21,r20,65535
   4bbc0:	b00b883a 	mov	r5,r22
   4bbc4:	004c18c0 	call	4c18c <__umodsi3>
   4bbc8:	b809883a 	mov	r4,r23
   4bbcc:	b00b883a 	mov	r5,r22
   4bbd0:	1021883a 	mov	r16,r2
   4bbd4:	004c1280 	call	4c128 <__udivsi3>
   4bbd8:	8008943a 	slli	r4,r16,16
   4bbdc:	9006d43a 	srli	r3,r18,16
   4bbe0:	a885383a 	mul	r2,r21,r2
   4bbe4:	20c8b03a 	or	r4,r4,r3
   4bbe8:	2080032e 	bgeu	r4,r2,4bbf8 <__umoddi3+0xd4>
   4bbec:	2509883a 	add	r4,r4,r20
   4bbf0:	25000136 	bltu	r4,r20,4bbf8 <__umoddi3+0xd4>
   4bbf4:	20810d36 	bltu	r4,r2,4c02c <__umoddi3+0x508>
   4bbf8:	20a7c83a 	sub	r19,r4,r2
   4bbfc:	b00b883a 	mov	r5,r22
   4bc00:	9809883a 	mov	r4,r19
   4bc04:	004c18c0 	call	4c18c <__umodsi3>
   4bc08:	1021883a 	mov	r16,r2
   4bc0c:	b00b883a 	mov	r5,r22
   4bc10:	9809883a 	mov	r4,r19
   4bc14:	8020943a 	slli	r16,r16,16
   4bc18:	004c1280 	call	4c128 <__udivsi3>
   4bc1c:	a8ab383a 	mul	r21,r21,r2
   4bc20:	94bfffcc 	andi	r18,r18,65535
   4bc24:	84a0b03a 	or	r16,r16,r18
   4bc28:	8540032e 	bgeu	r16,r21,4bc38 <__umoddi3+0x114>
   4bc2c:	8521883a 	add	r16,r16,r20
   4bc30:	85000136 	bltu	r16,r20,4bc38 <__umoddi3+0x114>
   4bc34:	8540f736 	bltu	r16,r21,4c014 <__umoddi3+0x4f0>
   4bc38:	8561c83a 	sub	r16,r16,r21
   4bc3c:	8444d83a 	srl	r2,r16,r17
   4bc40:	0007883a 	mov	r3,zero
   4bc44:	00000406 	br	4bc58 <__umoddi3+0x134>
   4bc48:	2807883a 	mov	r3,r5
   4bc4c:	200b883a 	mov	r5,r4
   4bc50:	99c00d2e 	bgeu	r19,r7,4bc88 <__umoddi3+0x164>
   4bc54:	2005883a 	mov	r2,r4
   4bc58:	dfc00a17 	ldw	ra,40(sp)
   4bc5c:	df000917 	ldw	fp,36(sp)
   4bc60:	ddc00817 	ldw	r23,32(sp)
   4bc64:	dd800717 	ldw	r22,28(sp)
   4bc68:	dd400617 	ldw	r21,24(sp)
   4bc6c:	dd000517 	ldw	r20,20(sp)
   4bc70:	dcc00417 	ldw	r19,16(sp)
   4bc74:	dc800317 	ldw	r18,12(sp)
   4bc78:	dc400217 	ldw	r17,8(sp)
   4bc7c:	dc000117 	ldw	r16,4(sp)
   4bc80:	dec00b04 	addi	sp,sp,44
   4bc84:	f800283a 	ret
   4bc88:	00bfffd4 	movui	r2,65535
   4bc8c:	11c0502e 	bgeu	r2,r7,4bdd0 <__umoddi3+0x2ac>
   4bc90:	00804034 	movhi	r2,256
   4bc94:	3880d936 	bltu	r7,r2,4bffc <__umoddi3+0x4d8>
   4bc98:	01000604 	movi	r4,24
   4bc9c:	3912d83a 	srl	r9,r7,r4
   4bca0:	00800174 	movhi	r2,5
   4bca4:	02000804 	movi	r8,32
   4bca8:	4885883a 	add	r2,r9,r2
   4bcac:	1504b303 	ldbu	r20,4812(r2)
   4bcb0:	a129883a 	add	r20,r20,r4
   4bcb4:	4525c83a 	sub	r18,r8,r20
   4bcb8:	4500731e 	bne	r8,r20,4be88 <__umoddi3+0x364>
   4bcbc:	3cc00136 	bltu	r7,r19,4bcc4 <__umoddi3+0x1a0>
   4bcc0:	81800436 	bltu	r16,r6,4bcd4 <__umoddi3+0x1b0>
   4bcc4:	818bc83a 	sub	r5,r16,r6
   4bcc8:	99cfc83a 	sub	r7,r19,r7
   4bccc:	8147803a 	cmpltu	r3,r16,r5
   4bcd0:	38c7c83a 	sub	r3,r7,r3
   4bcd4:	2805883a 	mov	r2,r5
   4bcd8:	003fdf06 	br	4bc58 <__umoddi3+0x134>
   4bcdc:	3000361e 	bne	r6,zero,4bdb8 <__umoddi3+0x294>
   4bce0:	000b883a 	mov	r5,zero
   4bce4:	01000044 	movi	r4,1
   4bce8:	004c1280 	call	4c128 <__udivsi3>
   4bcec:	1029883a 	mov	r20,r2
   4bcf0:	a0804028 	cmpgeui	r2,r20,256
   4bcf4:	100490fa 	slli	r2,r2,3
   4bcf8:	a08ad83a 	srl	r5,r20,r2
   4bcfc:	00c00174 	movhi	r3,5
   4bd00:	01000804 	movi	r4,32
   4bd04:	28c7883a 	add	r3,r5,r3
   4bd08:	1dc4b303 	ldbu	r23,4812(r3)
   4bd0c:	b8af883a 	add	r23,r23,r2
   4bd10:	25e3c83a 	sub	r17,r4,r23
   4bd14:	25c0311e 	bne	r4,r23,4bddc <__umoddi3+0x2b8>
   4bd18:	a02ad43a 	srli	r21,r20,16
   4bd1c:	9d27c83a 	sub	r19,r19,r20
   4bd20:	a5bfffcc 	andi	r22,r20,65535
   4bd24:	a80b883a 	mov	r5,r21
   4bd28:	9809883a 	mov	r4,r19
   4bd2c:	004c18c0 	call	4c18c <__umodsi3>
   4bd30:	9809883a 	mov	r4,r19
   4bd34:	a80b883a 	mov	r5,r21
   4bd38:	1021883a 	mov	r16,r2
   4bd3c:	004c1280 	call	4c128 <__udivsi3>
   4bd40:	8008943a 	slli	r4,r16,16
   4bd44:	9006d43a 	srli	r3,r18,16
   4bd48:	1585383a 	mul	r2,r2,r22
   4bd4c:	20c8b03a 	or	r4,r4,r3
   4bd50:	2080032e 	bgeu	r4,r2,4bd60 <__umoddi3+0x23c>
   4bd54:	2509883a 	add	r4,r4,r20
   4bd58:	25000136 	bltu	r4,r20,4bd60 <__umoddi3+0x23c>
   4bd5c:	2080af36 	bltu	r4,r2,4c01c <__umoddi3+0x4f8>
   4bd60:	20a7c83a 	sub	r19,r4,r2
   4bd64:	a80b883a 	mov	r5,r21
   4bd68:	9809883a 	mov	r4,r19
   4bd6c:	004c18c0 	call	4c18c <__umodsi3>
   4bd70:	1021883a 	mov	r16,r2
   4bd74:	a80b883a 	mov	r5,r21
   4bd78:	9809883a 	mov	r4,r19
   4bd7c:	8020943a 	slli	r16,r16,16
   4bd80:	004c1280 	call	4c128 <__udivsi3>
   4bd84:	1585383a 	mul	r2,r2,r22
   4bd88:	94bfffcc 	andi	r18,r18,65535
   4bd8c:	84a0b03a 	or	r16,r16,r18
   4bd90:	8080042e 	bgeu	r16,r2,4bda4 <__umoddi3+0x280>
   4bd94:	8521883a 	add	r16,r16,r20
   4bd98:	85000236 	bltu	r16,r20,4bda4 <__umoddi3+0x280>
   4bd9c:	8080012e 	bgeu	r16,r2,4bda4 <__umoddi3+0x280>
   4bda0:	8521883a 	add	r16,r16,r20
   4bda4:	80a1c83a 	sub	r16,r16,r2
   4bda8:	003fa406 	br	4bc3c <__umoddi3+0x118>
   4bdac:	30c04028 	cmpgeui	r3,r6,256
   4bdb0:	180690fa 	slli	r3,r3,3
   4bdb4:	003f7206 	br	4bb80 <__umoddi3+0x5c>
   4bdb8:	00bfffd4 	movui	r2,65535
   4bdbc:	11bfcc2e 	bgeu	r2,r6,4bcf0 <__umoddi3+0x1cc>
   4bdc0:	00804034 	movhi	r2,256
   4bdc4:	3080972e 	bgeu	r6,r2,4c024 <__umoddi3+0x500>
   4bdc8:	00800404 	movi	r2,16
   4bdcc:	003fca06 	br	4bcf8 <__umoddi3+0x1d4>
   4bdd0:	39004028 	cmpgeui	r4,r7,256
   4bdd4:	200890fa 	slli	r4,r4,3
   4bdd8:	003fb006 	br	4bc9c <__umoddi3+0x178>
   4bddc:	a468983a 	sll	r20,r20,r17
   4bde0:	9decd83a 	srl	r22,r19,r23
   4bde4:	85eed83a 	srl	r23,r16,r23
   4bde8:	a02ad43a 	srli	r21,r20,16
   4bdec:	b009883a 	mov	r4,r22
   4bdf0:	9c66983a 	sll	r19,r19,r17
   4bdf4:	a80b883a 	mov	r5,r21
   4bdf8:	004c18c0 	call	4c18c <__umodsi3>
   4bdfc:	b009883a 	mov	r4,r22
   4be00:	a80b883a 	mov	r5,r21
   4be04:	1025883a 	mov	r18,r2
   4be08:	bceeb03a 	or	r23,r23,r19
   4be0c:	004c1280 	call	4c128 <__udivsi3>
   4be10:	9008943a 	slli	r4,r18,16
   4be14:	b806d43a 	srli	r3,r23,16
   4be18:	a5bfffcc 	andi	r22,r20,65535
   4be1c:	b085383a 	mul	r2,r22,r2
   4be20:	20c8b03a 	or	r4,r4,r3
   4be24:	8464983a 	sll	r18,r16,r17
   4be28:	2080042e 	bgeu	r4,r2,4be3c <__umoddi3+0x318>
   4be2c:	2509883a 	add	r4,r4,r20
   4be30:	25000236 	bltu	r4,r20,4be3c <__umoddi3+0x318>
   4be34:	2080012e 	bgeu	r4,r2,4be3c <__umoddi3+0x318>
   4be38:	2509883a 	add	r4,r4,r20
   4be3c:	20a1c83a 	sub	r16,r4,r2
   4be40:	a80b883a 	mov	r5,r21
   4be44:	8009883a 	mov	r4,r16
   4be48:	004c18c0 	call	4c18c <__umodsi3>
   4be4c:	1027883a 	mov	r19,r2
   4be50:	a80b883a 	mov	r5,r21
   4be54:	8009883a 	mov	r4,r16
   4be58:	9826943a 	slli	r19,r19,16
   4be5c:	004c1280 	call	4c128 <__udivsi3>
   4be60:	b085383a 	mul	r2,r22,r2
   4be64:	bdffffcc 	andi	r23,r23,65535
   4be68:	9de6b03a 	or	r19,r19,r23
   4be6c:	9880042e 	bgeu	r19,r2,4be80 <__umoddi3+0x35c>
   4be70:	9d27883a 	add	r19,r19,r20
   4be74:	9d000236 	bltu	r19,r20,4be80 <__umoddi3+0x35c>
   4be78:	9880012e 	bgeu	r19,r2,4be80 <__umoddi3+0x35c>
   4be7c:	9d27883a 	add	r19,r19,r20
   4be80:	98a7c83a 	sub	r19,r19,r2
   4be84:	003fa706 	br	4bd24 <__umoddi3+0x200>
   4be88:	352cd83a 	srl	r22,r6,r20
   4be8c:	3c8e983a 	sll	r7,r7,r18
   4be90:	9d2ed83a 	srl	r23,r19,r20
   4be94:	8504d83a 	srl	r2,r16,r20
   4be98:	b1ecb03a 	or	r22,r22,r7
   4be9c:	b02ad43a 	srli	r21,r22,16
   4bea0:	9ca6983a 	sll	r19,r19,r18
   4bea4:	b809883a 	mov	r4,r23
   4bea8:	a80b883a 	mov	r5,r21
   4beac:	34a2983a 	sll	r17,r6,r18
   4beb0:	14e6b03a 	or	r19,r2,r19
   4beb4:	004c18c0 	call	4c18c <__umodsi3>
   4beb8:	b809883a 	mov	r4,r23
   4bebc:	a80b883a 	mov	r5,r21
   4bec0:	102f883a 	mov	r23,r2
   4bec4:	004c1280 	call	4c128 <__udivsi3>
   4bec8:	b808943a 	slli	r4,r23,16
   4becc:	9806d43a 	srli	r3,r19,16
   4bed0:	b1bfffcc 	andi	r6,r22,65535
   4bed4:	1039883a 	mov	fp,r2
   4bed8:	3085383a 	mul	r2,r6,r2
   4bedc:	20c8b03a 	or	r4,r4,r3
   4bee0:	84ae983a 	sll	r23,r16,r18
   4bee4:	2080062e 	bgeu	r4,r2,4bf00 <__umoddi3+0x3dc>
   4bee8:	2589883a 	add	r4,r4,r22
   4beec:	e0ffffc4 	addi	r3,fp,-1
   4bef0:	25804636 	bltu	r4,r22,4c00c <__umoddi3+0x4e8>
   4bef4:	2080452e 	bgeu	r4,r2,4c00c <__umoddi3+0x4e8>
   4bef8:	e73fff84 	addi	fp,fp,-2
   4befc:	2589883a 	add	r4,r4,r22
   4bf00:	20a1c83a 	sub	r16,r4,r2
   4bf04:	8009883a 	mov	r4,r16
   4bf08:	a80b883a 	mov	r5,r21
   4bf0c:	d9800015 	stw	r6,0(sp)
   4bf10:	004c18c0 	call	4c18c <__umodsi3>
   4bf14:	a80b883a 	mov	r5,r21
   4bf18:	8009883a 	mov	r4,r16
   4bf1c:	1021883a 	mov	r16,r2
   4bf20:	004c1280 	call	4c128 <__udivsi3>
   4bf24:	d9800017 	ldw	r6,0(sp)
   4bf28:	8006943a 	slli	r3,r16,16
   4bf2c:	9cffffcc 	andi	r19,r19,65535
   4bf30:	308b383a 	mul	r5,r6,r2
   4bf34:	1cc6b03a 	or	r3,r3,r19
   4bf38:	1940062e 	bgeu	r3,r5,4bf54 <__umoddi3+0x430>
   4bf3c:	1d87883a 	add	r3,r3,r22
   4bf40:	113fffc4 	addi	r4,r2,-1
   4bf44:	1d802f36 	bltu	r3,r22,4c004 <__umoddi3+0x4e0>
   4bf48:	19402e2e 	bgeu	r3,r5,4c004 <__umoddi3+0x4e0>
   4bf4c:	10bfff84 	addi	r2,r2,-2
   4bf50:	1d87883a 	add	r3,r3,r22
   4bf54:	e038943a 	slli	fp,fp,16
   4bf58:	113fffcc 	andi	r4,r2,65535
   4bf5c:	8810d43a 	srli	r8,r17,16
   4bf60:	e0b8b03a 	or	fp,fp,r2
   4bf64:	e038d43a 	srli	fp,fp,16
   4bf68:	89bfffcc 	andi	r6,r17,65535
   4bf6c:	218f383a 	mul	r7,r4,r6
   4bf70:	e18d383a 	mul	r6,fp,r6
   4bf74:	2209383a 	mul	r4,r4,r8
   4bf78:	3804d43a 	srli	r2,r7,16
   4bf7c:	e239383a 	mul	fp,fp,r8
   4bf80:	2189883a 	add	r4,r4,r6
   4bf84:	1105883a 	add	r2,r2,r4
   4bf88:	1947c83a 	sub	r3,r3,r5
   4bf8c:	1180022e 	bgeu	r2,r6,4bf98 <__umoddi3+0x474>
   4bf90:	01000074 	movhi	r4,1
   4bf94:	e139883a 	add	fp,fp,r4
   4bf98:	1008d43a 	srli	r4,r2,16
   4bf9c:	1004943a 	slli	r2,r2,16
   4bfa0:	39ffffcc 	andi	r7,r7,65535
   4bfa4:	2709883a 	add	r4,r4,fp
   4bfa8:	11c5883a 	add	r2,r2,r7
   4bfac:	19000b36 	bltu	r3,r4,4bfdc <__umoddi3+0x4b8>
   4bfb0:	19000926 	beq	r3,r4,4bfd8 <__umoddi3+0x4b4>
   4bfb4:	b885c83a 	sub	r2,r23,r2
   4bfb8:	b8af803a 	cmpltu	r23,r23,r2
   4bfbc:	1907c83a 	sub	r3,r3,r4
   4bfc0:	1dc7c83a 	sub	r3,r3,r23
   4bfc4:	1d28983a 	sll	r20,r3,r20
   4bfc8:	1484d83a 	srl	r2,r2,r18
   4bfcc:	1c86d83a 	srl	r3,r3,r18
   4bfd0:	a084b03a 	or	r2,r20,r2
   4bfd4:	003f2006 	br	4bc58 <__umoddi3+0x134>
   4bfd8:	b8bff62e 	bgeu	r23,r2,4bfb4 <__umoddi3+0x490>
   4bfdc:	1463c83a 	sub	r17,r2,r17
   4bfe0:	1445803a 	cmpltu	r2,r2,r17
   4bfe4:	1585883a 	add	r2,r2,r22
   4bfe8:	2089c83a 	sub	r4,r4,r2
   4bfec:	8805883a 	mov	r2,r17
   4bff0:	003ff006 	br	4bfb4 <__umoddi3+0x490>
   4bff4:	00c00404 	movi	r3,16
   4bff8:	003ee106 	br	4bb80 <__umoddi3+0x5c>
   4bffc:	01000404 	movi	r4,16
   4c000:	003f2606 	br	4bc9c <__umoddi3+0x178>
   4c004:	2005883a 	mov	r2,r4
   4c008:	003fd206 	br	4bf54 <__umoddi3+0x430>
   4c00c:	1839883a 	mov	fp,r3
   4c010:	003fbb06 	br	4bf00 <__umoddi3+0x3dc>
   4c014:	8521883a 	add	r16,r16,r20
   4c018:	003f0706 	br	4bc38 <__umoddi3+0x114>
   4c01c:	2509883a 	add	r4,r4,r20
   4c020:	003f4f06 	br	4bd60 <__umoddi3+0x23c>
   4c024:	00800604 	movi	r2,24
   4c028:	003f3306 	br	4bcf8 <__umoddi3+0x1d4>
   4c02c:	2509883a 	add	r4,r4,r20
   4c030:	003ef106 	br	4bbf8 <__umoddi3+0xd4>

0004c034 <__divsi3>:
   4c034:	20001a16 	blt	r4,zero,4c0a0 <__divsi3+0x6c>
   4c038:	000f883a 	mov	r7,zero
   4c03c:	2800020e 	bge	r5,zero,4c048 <__divsi3+0x14>
   4c040:	014bc83a 	sub	r5,zero,r5
   4c044:	39c0005c 	xori	r7,r7,1
   4c048:	200d883a 	mov	r6,r4
   4c04c:	00c00044 	movi	r3,1
   4c050:	2900092e 	bgeu	r5,r4,4c078 <__divsi3+0x44>
   4c054:	00800804 	movi	r2,32
   4c058:	00c00044 	movi	r3,1
   4c05c:	00000106 	br	4c064 <__divsi3+0x30>
   4c060:	10001226 	beq	r2,zero,4c0ac <__divsi3+0x78>
   4c064:	294b883a 	add	r5,r5,r5
   4c068:	10bfffc4 	addi	r2,r2,-1
   4c06c:	18c7883a 	add	r3,r3,r3
   4c070:	293ffb36 	bltu	r5,r4,4c060 <__divsi3+0x2c>
   4c074:	18000d26 	beq	r3,zero,4c0ac <__divsi3+0x78>
   4c078:	0005883a 	mov	r2,zero
   4c07c:	31400236 	bltu	r6,r5,4c088 <__divsi3+0x54>
   4c080:	314dc83a 	sub	r6,r6,r5
   4c084:	10c4b03a 	or	r2,r2,r3
   4c088:	1806d07a 	srli	r3,r3,1
   4c08c:	280ad07a 	srli	r5,r5,1
   4c090:	183ffa1e 	bne	r3,zero,4c07c <__divsi3+0x48>
   4c094:	38000126 	beq	r7,zero,4c09c <__divsi3+0x68>
   4c098:	0085c83a 	sub	r2,zero,r2
   4c09c:	f800283a 	ret
   4c0a0:	0109c83a 	sub	r4,zero,r4
   4c0a4:	01c00044 	movi	r7,1
   4c0a8:	003fe406 	br	4c03c <__divsi3+0x8>
   4c0ac:	0005883a 	mov	r2,zero
   4c0b0:	003ff806 	br	4c094 <__divsi3+0x60>

0004c0b4 <__modsi3>:
   4c0b4:	20001716 	blt	r4,zero,4c114 <__modsi3+0x60>
   4c0b8:	000f883a 	mov	r7,zero
   4c0bc:	2005883a 	mov	r2,r4
   4c0c0:	2800010e 	bge	r5,zero,4c0c8 <__modsi3+0x14>
   4c0c4:	014bc83a 	sub	r5,zero,r5
   4c0c8:	00c00044 	movi	r3,1
   4c0cc:	2900092e 	bgeu	r5,r4,4c0f4 <__modsi3+0x40>
   4c0d0:	01800804 	movi	r6,32
   4c0d4:	00c00044 	movi	r3,1
   4c0d8:	00000106 	br	4c0e0 <__modsi3+0x2c>
   4c0dc:	30001026 	beq	r6,zero,4c120 <__modsi3+0x6c>
   4c0e0:	294b883a 	add	r5,r5,r5
   4c0e4:	31bfffc4 	addi	r6,r6,-1
   4c0e8:	18c7883a 	add	r3,r3,r3
   4c0ec:	293ffb36 	bltu	r5,r4,4c0dc <__modsi3+0x28>
   4c0f0:	18000b26 	beq	r3,zero,4c120 <__modsi3+0x6c>
   4c0f4:	1806d07a 	srli	r3,r3,1
   4c0f8:	11400136 	bltu	r2,r5,4c100 <__modsi3+0x4c>
   4c0fc:	1145c83a 	sub	r2,r2,r5
   4c100:	280ad07a 	srli	r5,r5,1
   4c104:	183ffb1e 	bne	r3,zero,4c0f4 <__modsi3+0x40>
   4c108:	38000126 	beq	r7,zero,4c110 <__modsi3+0x5c>
   4c10c:	0085c83a 	sub	r2,zero,r2
   4c110:	f800283a 	ret
   4c114:	0109c83a 	sub	r4,zero,r4
   4c118:	01c00044 	movi	r7,1
   4c11c:	003fe706 	br	4c0bc <__modsi3+0x8>
   4c120:	2005883a 	mov	r2,r4
   4c124:	003ff806 	br	4c108 <__modsi3+0x54>

0004c128 <__udivsi3>:
   4c128:	200d883a 	mov	r6,r4
   4c12c:	2900152e 	bgeu	r5,r4,4c184 <__udivsi3+0x5c>
   4c130:	28001416 	blt	r5,zero,4c184 <__udivsi3+0x5c>
   4c134:	00800804 	movi	r2,32
   4c138:	00c00044 	movi	r3,1
   4c13c:	00000206 	br	4c148 <__udivsi3+0x20>
   4c140:	10000e26 	beq	r2,zero,4c17c <__udivsi3+0x54>
   4c144:	28000416 	blt	r5,zero,4c158 <__udivsi3+0x30>
   4c148:	294b883a 	add	r5,r5,r5
   4c14c:	10bfffc4 	addi	r2,r2,-1
   4c150:	18c7883a 	add	r3,r3,r3
   4c154:	293ffa36 	bltu	r5,r4,4c140 <__udivsi3+0x18>
   4c158:	18000826 	beq	r3,zero,4c17c <__udivsi3+0x54>
   4c15c:	0005883a 	mov	r2,zero
   4c160:	31400236 	bltu	r6,r5,4c16c <__udivsi3+0x44>
   4c164:	314dc83a 	sub	r6,r6,r5
   4c168:	10c4b03a 	or	r2,r2,r3
   4c16c:	1806d07a 	srli	r3,r3,1
   4c170:	280ad07a 	srli	r5,r5,1
   4c174:	183ffa1e 	bne	r3,zero,4c160 <__udivsi3+0x38>
   4c178:	f800283a 	ret
   4c17c:	0005883a 	mov	r2,zero
   4c180:	f800283a 	ret
   4c184:	00c00044 	movi	r3,1
   4c188:	003ff406 	br	4c15c <__udivsi3+0x34>

0004c18c <__umodsi3>:
   4c18c:	2005883a 	mov	r2,r4
   4c190:	2900132e 	bgeu	r5,r4,4c1e0 <__umodsi3+0x54>
   4c194:	28001216 	blt	r5,zero,4c1e0 <__umodsi3+0x54>
   4c198:	01800804 	movi	r6,32
   4c19c:	00c00044 	movi	r3,1
   4c1a0:	00000206 	br	4c1ac <__umodsi3+0x20>
   4c1a4:	30000c26 	beq	r6,zero,4c1d8 <__umodsi3+0x4c>
   4c1a8:	28000416 	blt	r5,zero,4c1bc <__umodsi3+0x30>
   4c1ac:	294b883a 	add	r5,r5,r5
   4c1b0:	31bfffc4 	addi	r6,r6,-1
   4c1b4:	18c7883a 	add	r3,r3,r3
   4c1b8:	293ffa36 	bltu	r5,r4,4c1a4 <__umodsi3+0x18>
   4c1bc:	18000626 	beq	r3,zero,4c1d8 <__umodsi3+0x4c>
   4c1c0:	1806d07a 	srli	r3,r3,1
   4c1c4:	11400136 	bltu	r2,r5,4c1cc <__umodsi3+0x40>
   4c1c8:	1145c83a 	sub	r2,r2,r5
   4c1cc:	280ad07a 	srli	r5,r5,1
   4c1d0:	183ffb1e 	bne	r3,zero,4c1c0 <__umodsi3+0x34>
   4c1d4:	f800283a 	ret
   4c1d8:	2005883a 	mov	r2,r4
   4c1dc:	f800283a 	ret
   4c1e0:	00c00044 	movi	r3,1
   4c1e4:	003ff606 	br	4c1c0 <__umodsi3+0x34>

0004c1e8 <__adddf3>:
   4c1e8:	00c00434 	movhi	r3,16
   4c1ec:	18ffffc4 	addi	r3,r3,-1
   4c1f0:	defffa04 	addi	sp,sp,-24
   4c1f4:	2810d7fa 	srli	r8,r5,31
   4c1f8:	3804d53a 	srli	r2,r7,20
   4c1fc:	28d4703a 	and	r10,r5,r3
   4c200:	38d2703a 	and	r9,r7,r3
   4c204:	280ad53a 	srli	r5,r5,20
   4c208:	501490fa 	slli	r10,r10,3
   4c20c:	481290fa 	slli	r9,r9,3
   4c210:	3016d77a 	srli	r11,r6,29
   4c214:	dc400115 	stw	r17,4(sp)
   4c218:	380ed7fa 	srli	r7,r7,31
   4c21c:	2022d77a 	srli	r17,r4,29
   4c220:	dd000415 	stw	r20,16(sp)
   4c224:	dcc00315 	stw	r19,12(sp)
   4c228:	dc000015 	stw	r16,0(sp)
   4c22c:	1081ffcc 	andi	r2,r2,2047
   4c230:	2c01ffcc 	andi	r16,r5,2047
   4c234:	dfc00515 	stw	ra,20(sp)
   4c238:	dc800215 	stw	r18,8(sp)
   4c23c:	201890fa 	slli	r12,r4,3
   4c240:	301a90fa 	slli	r13,r6,3
   4c244:	4027883a 	mov	r19,r8
   4c248:	45003fcc 	andi	r20,r8,255
   4c24c:	8aa2b03a 	or	r17,r17,r10
   4c250:	5a56b03a 	or	r11,r11,r9
   4c254:	808bc83a 	sub	r5,r16,r2
   4c258:	41c07526 	beq	r8,r7,4c430 <__adddf3+0x248>
   4c25c:	0140540e 	bge	zero,r5,4c3b0 <__adddf3+0x1c8>
   4c260:	10008b26 	beq	r2,zero,4c490 <__adddf3+0x2a8>
   4c264:	8081ffe0 	cmpeqi	r2,r16,2047
   4c268:	10010d1e 	bne	r2,zero,4c6a0 <__adddf3+0x4b8>
   4c26c:	28800e48 	cmpgei	r2,r5,57
   4c270:	1000c11e 	bne	r2,zero,4c578 <__adddf3+0x390>
   4c274:	5ac02034 	orhi	r11,r11,128
   4c278:	28800808 	cmpgei	r2,r5,32
   4c27c:	1001461e 	bne	r2,zero,4c798 <__adddf3+0x5b0>
   4c280:	00800804 	movi	r2,32
   4c284:	1145c83a 	sub	r2,r2,r5
   4c288:	58a4983a 	sll	r18,r11,r2
   4c28c:	6946d83a 	srl	r3,r13,r5
   4c290:	6884983a 	sll	r2,r13,r2
   4c294:	594ad83a 	srl	r5,r11,r5
   4c298:	90e4b03a 	or	r18,r18,r3
   4c29c:	1004c03a 	cmpne	r2,r2,zero
   4c2a0:	90a4b03a 	or	r18,r18,r2
   4c2a4:	8963c83a 	sub	r17,r17,r5
   4c2a8:	64a5c83a 	sub	r18,r12,r18
   4c2ac:	6485803a 	cmpltu	r2,r12,r18
   4c2b0:	88a3c83a 	sub	r17,r17,r2
   4c2b4:	8880202c 	andhi	r2,r17,128
   4c2b8:	1000b826 	beq	r2,zero,4c59c <__adddf3+0x3b4>
   4c2bc:	00802034 	movhi	r2,128
   4c2c0:	10bfffc4 	addi	r2,r2,-1
   4c2c4:	88a2703a 	and	r17,r17,r2
   4c2c8:	8800d026 	beq	r17,zero,4c60c <__adddf3+0x424>
   4c2cc:	8809883a 	mov	r4,r17
   4c2d0:	00417180 	call	41718 <__clzsi2>
   4c2d4:	113ffe04 	addi	r4,r2,-8
   4c2d8:	00c00804 	movi	r3,32
   4c2dc:	1905c83a 	sub	r2,r3,r4
   4c2e0:	9084d83a 	srl	r2,r18,r2
   4c2e4:	8922983a 	sll	r17,r17,r4
   4c2e8:	9124983a 	sll	r18,r18,r4
   4c2ec:	1444b03a 	or	r2,r2,r17
   4c2f0:	2400ff16 	blt	r4,r16,4c6f0 <__adddf3+0x508>
   4c2f4:	2409c83a 	sub	r4,r4,r16
   4c2f8:	21000044 	addi	r4,r4,1
   4c2fc:	1907c83a 	sub	r3,r3,r4
   4c300:	90ca983a 	sll	r5,r18,r3
   4c304:	9122d83a 	srl	r17,r18,r4
   4c308:	280ac03a 	cmpne	r5,r5,zero
   4c30c:	10c6983a 	sll	r3,r2,r3
   4c310:	894ab03a 	or	r5,r17,r5
   4c314:	1122d83a 	srl	r17,r2,r4
   4c318:	0021883a 	mov	r16,zero
   4c31c:	1964b03a 	or	r18,r3,r5
   4c320:	908001cc 	andi	r2,r18,7
   4c324:	10000726 	beq	r2,zero,4c344 <__adddf3+0x15c>
   4c328:	908003cc 	andi	r2,r18,15
   4c32c:	10800120 	cmpeqi	r2,r2,4
   4c330:	1000041e 	bne	r2,zero,4c344 <__adddf3+0x15c>
   4c334:	90800104 	addi	r2,r18,4
   4c338:	14a5803a 	cmpltu	r18,r2,r18
   4c33c:	8ca3883a 	add	r17,r17,r18
   4c340:	1025883a 	mov	r18,r2
   4c344:	8880202c 	andhi	r2,r17,128
   4c348:	1000c926 	beq	r2,zero,4c670 <__adddf3+0x488>
   4c34c:	8081ffa0 	cmpeqi	r2,r16,2046
   4c350:	84000044 	addi	r16,r16,1
   4c354:	1000841e 	bne	r2,zero,4c568 <__adddf3+0x380>
   4c358:	013fe034 	movhi	r4,65408
   4c35c:	213fffc4 	addi	r4,r4,-1
   4c360:	8908703a 	and	r4,r17,r4
   4c364:	2004977a 	slli	r2,r4,29
   4c368:	2008927a 	slli	r4,r4,9
   4c36c:	9024d0fa 	srli	r18,r18,3
   4c370:	80c1ffcc 	andi	r3,r16,2047
   4c374:	2008d33a 	srli	r4,r4,12
   4c378:	1484b03a 	or	r2,r2,r18
   4c37c:	a027883a 	mov	r19,r20
   4c380:	1806953a 	slli	r3,r3,20
   4c384:	982697fa 	slli	r19,r19,31
   4c388:	1906b03a 	or	r3,r3,r4
   4c38c:	1cc6b03a 	or	r3,r3,r19
   4c390:	dfc00517 	ldw	ra,20(sp)
   4c394:	dd000417 	ldw	r20,16(sp)
   4c398:	dcc00317 	ldw	r19,12(sp)
   4c39c:	dc800217 	ldw	r18,8(sp)
   4c3a0:	dc400117 	ldw	r17,4(sp)
   4c3a4:	dc000017 	ldw	r16,0(sp)
   4c3a8:	dec00604 	addi	sp,sp,24
   4c3ac:	f800283a 	ret
   4c3b0:	3a803fcc 	andi	r10,r7,255
   4c3b4:	28004026 	beq	r5,zero,4c4b8 <__adddf3+0x2d0>
   4c3b8:	140bc83a 	sub	r5,r2,r16
   4c3bc:	8000e61e 	bne	r16,zero,4c758 <__adddf3+0x570>
   4c3c0:	8b06b03a 	or	r3,r17,r12
   4c3c4:	1800c426 	beq	r3,zero,4c6d8 <__adddf3+0x4f0>
   4c3c8:	28ffffc4 	addi	r3,r5,-1
   4c3cc:	18017a26 	beq	r3,zero,4c9b8 <__adddf3+0x7d0>
   4c3d0:	2941ffe0 	cmpeqi	r5,r5,2047
   4c3d4:	28019a1e 	bne	r5,zero,4ca40 <__adddf3+0x858>
   4c3d8:	19000e48 	cmpgei	r4,r3,57
   4c3dc:	20010c1e 	bne	r4,zero,4c810 <__adddf3+0x628>
   4c3e0:	180b883a 	mov	r5,r3
   4c3e4:	28c00808 	cmpgei	r3,r5,32
   4c3e8:	1801521e 	bne	r3,zero,4c934 <__adddf3+0x74c>
   4c3ec:	00c00804 	movi	r3,32
   4c3f0:	1947c83a 	sub	r3,r3,r5
   4c3f4:	88e4983a 	sll	r18,r17,r3
   4c3f8:	6148d83a 	srl	r4,r12,r5
   4c3fc:	60c6983a 	sll	r3,r12,r3
   4c400:	894ad83a 	srl	r5,r17,r5
   4c404:	9124b03a 	or	r18,r18,r4
   4c408:	1806c03a 	cmpne	r3,r3,zero
   4c40c:	90e4b03a 	or	r18,r18,r3
   4c410:	5957c83a 	sub	r11,r11,r5
   4c414:	6ca5c83a 	sub	r18,r13,r18
   4c418:	6c9b803a 	cmpltu	r13,r13,r18
   4c41c:	5b63c83a 	sub	r17,r11,r13
   4c420:	3827883a 	mov	r19,r7
   4c424:	1021883a 	mov	r16,r2
   4c428:	5029883a 	mov	r20,r10
   4c42c:	003fa106 	br	4c2b4 <__adddf3+0xcc>
   4c430:	01405d0e 	bge	zero,r5,4c5a8 <__adddf3+0x3c0>
   4c434:	1000351e 	bne	r2,zero,4c50c <__adddf3+0x324>
   4c438:	5b44b03a 	or	r2,r11,r13
   4c43c:	1000a926 	beq	r2,zero,4c6e4 <__adddf3+0x4fc>
   4c440:	28bfffc4 	addi	r2,r5,-1
   4c444:	10004e26 	beq	r2,zero,4c580 <__adddf3+0x398>
   4c448:	2941ffe0 	cmpeqi	r5,r5,2047
   4c44c:	2801121e 	bne	r5,zero,4c898 <__adddf3+0x6b0>
   4c450:	10c00e48 	cmpgei	r3,r2,57
   4c454:	1800311e 	bne	r3,zero,4c51c <__adddf3+0x334>
   4c458:	100b883a 	mov	r5,r2
   4c45c:	28800808 	cmpgei	r2,r5,32
   4c460:	1001181e 	bne	r2,zero,4c8c4 <__adddf3+0x6dc>
   4c464:	00800804 	movi	r2,32
   4c468:	1145c83a 	sub	r2,r2,r5
   4c46c:	58a4983a 	sll	r18,r11,r2
   4c470:	6946d83a 	srl	r3,r13,r5
   4c474:	6884983a 	sll	r2,r13,r2
   4c478:	594ad83a 	srl	r5,r11,r5
   4c47c:	90e4b03a 	or	r18,r18,r3
   4c480:	1004c03a 	cmpne	r2,r2,zero
   4c484:	90a4b03a 	or	r18,r18,r2
   4c488:	8963883a 	add	r17,r17,r5
   4c48c:	00002406 	br	4c520 <__adddf3+0x338>
   4c490:	5b44b03a 	or	r2,r11,r13
   4c494:	10009326 	beq	r2,zero,4c6e4 <__adddf3+0x4fc>
   4c498:	28bfffc4 	addi	r2,r5,-1
   4c49c:	1000f826 	beq	r2,zero,4c880 <__adddf3+0x698>
   4c4a0:	2941ffe0 	cmpeqi	r5,r5,2047
   4c4a4:	2800fc1e 	bne	r5,zero,4c898 <__adddf3+0x6b0>
   4c4a8:	10c00e48 	cmpgei	r3,r2,57
   4c4ac:	1800321e 	bne	r3,zero,4c578 <__adddf3+0x390>
   4c4b0:	100b883a 	mov	r5,r2
   4c4b4:	003f7006 	br	4c278 <__adddf3+0x90>
   4c4b8:	80800044 	addi	r2,r16,1
   4c4bc:	1081ff8c 	andi	r2,r2,2046
   4c4c0:	1000ab1e 	bne	r2,zero,4c770 <__adddf3+0x588>
   4c4c4:	8b0ab03a 	or	r5,r17,r12
   4c4c8:	5b44b03a 	or	r2,r11,r13
   4c4cc:	8000e71e 	bne	r16,zero,4c86c <__adddf3+0x684>
   4c4d0:	28014126 	beq	r5,zero,4c9d8 <__adddf3+0x7f0>
   4c4d4:	10010626 	beq	r2,zero,4c8f0 <__adddf3+0x708>
   4c4d8:	6365c83a 	sub	r18,r12,r13
   4c4dc:	6485803a 	cmpltu	r2,r12,r18
   4c4e0:	8ac7c83a 	sub	r3,r17,r11
   4c4e4:	1887c83a 	sub	r3,r3,r2
   4c4e8:	1880202c 	andhi	r2,r3,128
   4c4ec:	10017326 	beq	r2,zero,4cabc <__adddf3+0x8d4>
   4c4f0:	6b25c83a 	sub	r18,r13,r12
   4c4f4:	5c57c83a 	sub	r11,r11,r17
   4c4f8:	6c9b803a 	cmpltu	r13,r13,r18
   4c4fc:	5b63c83a 	sub	r17,r11,r13
   4c500:	3827883a 	mov	r19,r7
   4c504:	5029883a 	mov	r20,r10
   4c508:	003f8506 	br	4c320 <__adddf3+0x138>
   4c50c:	8081ffe0 	cmpeqi	r2,r16,2047
   4c510:	1000631e 	bne	r2,zero,4c6a0 <__adddf3+0x4b8>
   4c514:	28800e48 	cmpgei	r2,r5,57
   4c518:	1000aa26 	beq	r2,zero,4c7c4 <__adddf3+0x5dc>
   4c51c:	04800044 	movi	r18,1
   4c520:	9325883a 	add	r18,r18,r12
   4c524:	9305803a 	cmpltu	r2,r18,r12
   4c528:	88a3883a 	add	r17,r17,r2
   4c52c:	8880202c 	andhi	r2,r17,128
   4c530:	10001a26 	beq	r2,zero,4c59c <__adddf3+0x3b4>
   4c534:	84000044 	addi	r16,r16,1
   4c538:	8081ffe0 	cmpeqi	r2,r16,2047
   4c53c:	10000a1e 	bne	r2,zero,4c568 <__adddf3+0x380>
   4c540:	00bfe034 	movhi	r2,65408
   4c544:	10bfffc4 	addi	r2,r2,-1
   4c548:	9006d07a 	srli	r3,r18,1
   4c54c:	8884703a 	and	r2,r17,r2
   4c550:	100897fa 	slli	r4,r2,31
   4c554:	9480004c 	andi	r18,r18,1
   4c558:	1c86b03a 	or	r3,r3,r18
   4c55c:	1022d07a 	srli	r17,r2,1
   4c560:	20e4b03a 	or	r18,r4,r3
   4c564:	003f6e06 	br	4c320 <__adddf3+0x138>
   4c568:	00c1ffc4 	movi	r3,2047
   4c56c:	0009883a 	mov	r4,zero
   4c570:	0005883a 	mov	r2,zero
   4c574:	003f8206 	br	4c380 <__adddf3+0x198>
   4c578:	04800044 	movi	r18,1
   4c57c:	003f4a06 	br	4c2a8 <__adddf3+0xc0>
   4c580:	6365883a 	add	r18,r12,r13
   4c584:	8ad7883a 	add	r11,r17,r11
   4c588:	9305803a 	cmpltu	r2,r18,r12
   4c58c:	58a3883a 	add	r17,r11,r2
   4c590:	8880202c 	andhi	r2,r17,128
   4c594:	1001061e 	bne	r2,zero,4c9b0 <__adddf3+0x7c8>
   4c598:	04000044 	movi	r16,1
   4c59c:	908001cc 	andi	r2,r18,7
   4c5a0:	103f611e 	bne	r2,zero,4c328 <__adddf3+0x140>
   4c5a4:	00006906 	br	4c74c <__adddf3+0x564>
   4c5a8:	28005626 	beq	r5,zero,4c704 <__adddf3+0x51c>
   4c5ac:	140bc83a 	sub	r5,r2,r16
   4c5b0:	80008626 	beq	r16,zero,4c7cc <__adddf3+0x5e4>
   4c5b4:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c5b8:	1801101e 	bne	r3,zero,4c9fc <__adddf3+0x814>
   4c5bc:	28c00e48 	cmpgei	r3,r5,57
   4c5c0:	1800da1e 	bne	r3,zero,4c92c <__adddf3+0x744>
   4c5c4:	8c402034 	orhi	r17,r17,128
   4c5c8:	28c00808 	cmpgei	r3,r5,32
   4c5cc:	1801241e 	bne	r3,zero,4ca60 <__adddf3+0x878>
   4c5d0:	00c00804 	movi	r3,32
   4c5d4:	1947c83a 	sub	r3,r3,r5
   4c5d8:	88e4983a 	sll	r18,r17,r3
   4c5dc:	6148d83a 	srl	r4,r12,r5
   4c5e0:	60c6983a 	sll	r3,r12,r3
   4c5e4:	894ad83a 	srl	r5,r17,r5
   4c5e8:	9124b03a 	or	r18,r18,r4
   4c5ec:	1806c03a 	cmpne	r3,r3,zero
   4c5f0:	90e4b03a 	or	r18,r18,r3
   4c5f4:	5957883a 	add	r11,r11,r5
   4c5f8:	9365883a 	add	r18,r18,r13
   4c5fc:	935b803a 	cmpltu	r13,r18,r13
   4c600:	6ae3883a 	add	r17,r13,r11
   4c604:	1021883a 	mov	r16,r2
   4c608:	003fc806 	br	4c52c <__adddf3+0x344>
   4c60c:	9009883a 	mov	r4,r18
   4c610:	00417180 	call	41718 <__clzsi2>
   4c614:	11000604 	addi	r4,r2,24
   4c618:	20c00808 	cmpgei	r3,r4,32
   4c61c:	183f2e26 	beq	r3,zero,4c2d8 <__adddf3+0xf0>
   4c620:	10bffe04 	addi	r2,r2,-8
   4c624:	9084983a 	sll	r2,r18,r2
   4c628:	24007216 	blt	r4,r16,4c7f4 <__adddf3+0x60c>
   4c62c:	2425c83a 	sub	r18,r4,r16
   4c630:	91000044 	addi	r4,r18,1
   4c634:	20c00808 	cmpgei	r3,r4,32
   4c638:	18012426 	beq	r3,zero,4cacc <__adddf3+0x8e4>
   4c63c:	94bff844 	addi	r18,r18,-31
   4c640:	20c00820 	cmpeqi	r3,r4,32
   4c644:	14a4d83a 	srl	r18,r2,r18
   4c648:	1800051e 	bne	r3,zero,4c660 <__adddf3+0x478>
   4c64c:	00c01004 	movi	r3,64
   4c650:	1907c83a 	sub	r3,r3,r4
   4c654:	10c4983a 	sll	r2,r2,r3
   4c658:	1004c03a 	cmpne	r2,r2,zero
   4c65c:	90a4b03a 	or	r18,r18,r2
   4c660:	908001cc 	andi	r2,r18,7
   4c664:	0021883a 	mov	r16,zero
   4c668:	103f2f1e 	bne	r2,zero,4c328 <__adddf3+0x140>
   4c66c:	00003706 	br	4c74c <__adddf3+0x564>
   4c670:	9004d0fa 	srli	r2,r18,3
   4c674:	880a977a 	slli	r5,r17,29
   4c678:	8101ffe0 	cmpeqi	r4,r16,2047
   4c67c:	8806d0fa 	srli	r3,r17,3
   4c680:	2884b03a 	or	r2,r5,r2
   4c684:	20000c1e 	bne	r4,zero,4c6b8 <__adddf3+0x4d0>
   4c688:	01000434 	movhi	r4,16
   4c68c:	213fffc4 	addi	r4,r4,-1
   4c690:	1908703a 	and	r4,r3,r4
   4c694:	80c1ffcc 	andi	r3,r16,2047
   4c698:	003f3906 	br	4c380 <__adddf3+0x198>
   4c69c:	1000b31e 	bne	r2,zero,4c96c <__adddf3+0x784>
   4c6a0:	880a977a 	slli	r5,r17,29
   4c6a4:	00880034 	movhi	r2,8192
   4c6a8:	10bfffc4 	addi	r2,r2,-1
   4c6ac:	8806d0fa 	srli	r3,r17,3
   4c6b0:	2084703a 	and	r2,r4,r2
   4c6b4:	1144b03a 	or	r2,r2,r5
   4c6b8:	10c8b03a 	or	r4,r2,r3
   4c6bc:	20010726 	beq	r4,zero,4cadc <__adddf3+0x8f4>
   4c6c0:	01400434 	movhi	r5,16
   4c6c4:	19000234 	orhi	r4,r3,8
   4c6c8:	297fffc4 	addi	r5,r5,-1
   4c6cc:	2148703a 	and	r4,r4,r5
   4c6d0:	00c1ffc4 	movi	r3,2047
   4c6d4:	003f2a06 	br	4c380 <__adddf3+0x198>
   4c6d8:	6819883a 	mov	r12,r13
   4c6dc:	5823883a 	mov	r17,r11
   4c6e0:	3827883a 	mov	r19,r7
   4c6e4:	6004d0fa 	srli	r2,r12,3
   4c6e8:	2821883a 	mov	r16,r5
   4c6ec:	003fe106 	br	4c674 <__adddf3+0x48c>
   4c6f0:	047fe034 	movhi	r17,65408
   4c6f4:	8c7fffc4 	addi	r17,r17,-1
   4c6f8:	8121c83a 	sub	r16,r16,r4
   4c6fc:	1462703a 	and	r17,r2,r17
   4c700:	003f0706 	br	4c320 <__adddf3+0x138>
   4c704:	80c00044 	addi	r3,r16,1
   4c708:	1881ff8c 	andi	r2,r3,2046
   4c70c:	1000421e 	bne	r2,zero,4c818 <__adddf3+0x630>
   4c710:	8b04b03a 	or	r2,r17,r12
   4c714:	8000921e 	bne	r16,zero,4c960 <__adddf3+0x778>
   4c718:	1000c226 	beq	r2,zero,4ca24 <__adddf3+0x83c>
   4c71c:	5b44b03a 	or	r2,r11,r13
   4c720:	10007326 	beq	r2,zero,4c8f0 <__adddf3+0x708>
   4c724:	6365883a 	add	r18,r12,r13
   4c728:	9305803a 	cmpltu	r2,r18,r12
   4c72c:	8ad7883a 	add	r11,r17,r11
   4c730:	58a3883a 	add	r17,r11,r2
   4c734:	8880202c 	andhi	r2,r17,128
   4c738:	10000426 	beq	r2,zero,4c74c <__adddf3+0x564>
   4c73c:	00bfe034 	movhi	r2,65408
   4c740:	10bfffc4 	addi	r2,r2,-1
   4c744:	88a2703a 	and	r17,r17,r2
   4c748:	04000044 	movi	r16,1
   4c74c:	800b883a 	mov	r5,r16
   4c750:	9019883a 	mov	r12,r18
   4c754:	003fe306 	br	4c6e4 <__adddf3+0x4fc>
   4c758:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c75c:	18006b1e 	bne	r3,zero,4c90c <__adddf3+0x724>
   4c760:	28c00e48 	cmpgei	r3,r5,57
   4c764:	18002a1e 	bne	r3,zero,4c810 <__adddf3+0x628>
   4c768:	8c402034 	orhi	r17,r17,128
   4c76c:	003f1d06 	br	4c3e4 <__adddf3+0x1fc>
   4c770:	6365c83a 	sub	r18,r12,r13
   4c774:	6485803a 	cmpltu	r2,r12,r18
   4c778:	8ac7c83a 	sub	r3,r17,r11
   4c77c:	1887c83a 	sub	r3,r3,r2
   4c780:	1880202c 	andhi	r2,r3,128
   4c784:	1000321e 	bne	r2,zero,4c850 <__adddf3+0x668>
   4c788:	90c4b03a 	or	r2,r18,r3
   4c78c:	10004926 	beq	r2,zero,4c8b4 <__adddf3+0x6cc>
   4c790:	1823883a 	mov	r17,r3
   4c794:	003ecc06 	br	4c2c8 <__adddf3+0xe0>
   4c798:	28bff804 	addi	r2,r5,-32
   4c79c:	28c00820 	cmpeqi	r3,r5,32
   4c7a0:	5884d83a 	srl	r2,r11,r2
   4c7a4:	1800041e 	bne	r3,zero,4c7b8 <__adddf3+0x5d0>
   4c7a8:	00c01004 	movi	r3,64
   4c7ac:	1947c83a 	sub	r3,r3,r5
   4c7b0:	58c6983a 	sll	r3,r11,r3
   4c7b4:	68dab03a 	or	r13,r13,r3
   4c7b8:	6824c03a 	cmpne	r18,r13,zero
   4c7bc:	90a4b03a 	or	r18,r18,r2
   4c7c0:	003eb906 	br	4c2a8 <__adddf3+0xc0>
   4c7c4:	5ac02034 	orhi	r11,r11,128
   4c7c8:	003f2406 	br	4c45c <__adddf3+0x274>
   4c7cc:	8b06b03a 	or	r3,r17,r12
   4c7d0:	18009126 	beq	r3,zero,4ca18 <__adddf3+0x830>
   4c7d4:	28ffffc4 	addi	r3,r5,-1
   4c7d8:	1800ac26 	beq	r3,zero,4ca8c <__adddf3+0x8a4>
   4c7dc:	2941ffe0 	cmpeqi	r5,r5,2047
   4c7e0:	2800861e 	bne	r5,zero,4c9fc <__adddf3+0x814>
   4c7e4:	19000e48 	cmpgei	r4,r3,57
   4c7e8:	2000501e 	bne	r4,zero,4c92c <__adddf3+0x744>
   4c7ec:	180b883a 	mov	r5,r3
   4c7f0:	003f7506 	br	4c5c8 <__adddf3+0x3e0>
   4c7f4:	00ffe034 	movhi	r3,65408
   4c7f8:	18ffffc4 	addi	r3,r3,-1
   4c7fc:	10c6703a 	and	r3,r2,r3
   4c800:	1804977a 	slli	r2,r3,29
   4c804:	8121c83a 	sub	r16,r16,r4
   4c808:	1806d0fa 	srli	r3,r3,3
   4c80c:	003f9e06 	br	4c688 <__adddf3+0x4a0>
   4c810:	04800044 	movi	r18,1
   4c814:	003eff06 	br	4c414 <__adddf3+0x22c>
   4c818:	1881ffe0 	cmpeqi	r2,r3,2047
   4c81c:	103f521e 	bne	r2,zero,4c568 <__adddf3+0x380>
   4c820:	6349883a 	add	r4,r12,r13
   4c824:	8ad7883a 	add	r11,r17,r11
   4c828:	2305803a 	cmpltu	r2,r4,r12
   4c82c:	5885883a 	add	r2,r11,r2
   4c830:	2008d07a 	srli	r4,r4,1
   4c834:	102497fa 	slli	r18,r2,31
   4c838:	1022d07a 	srli	r17,r2,1
   4c83c:	208001cc 	andi	r2,r4,7
   4c840:	9124b03a 	or	r18,r18,r4
   4c844:	1821883a 	mov	r16,r3
   4c848:	103eb71e 	bne	r2,zero,4c328 <__adddf3+0x140>
   4c84c:	003fbf06 	br	4c74c <__adddf3+0x564>
   4c850:	6b25c83a 	sub	r18,r13,r12
   4c854:	5c57c83a 	sub	r11,r11,r17
   4c858:	6c9b803a 	cmpltu	r13,r13,r18
   4c85c:	5b63c83a 	sub	r17,r11,r13
   4c860:	3827883a 	mov	r19,r7
   4c864:	5029883a 	mov	r20,r10
   4c868:	003e9706 	br	4c2c8 <__adddf3+0xe0>
   4c86c:	283f8b1e 	bne	r5,zero,4c69c <__adddf3+0x4b4>
   4c870:	1000261e 	bne	r2,zero,4c90c <__adddf3+0x724>
   4c874:	00bfffc4 	movi	r2,-1
   4c878:	0027883a 	mov	r19,zero
   4c87c:	003f9006 	br	4c6c0 <__adddf3+0x4d8>
   4c880:	6365c83a 	sub	r18,r12,r13
   4c884:	8ad7c83a 	sub	r11,r17,r11
   4c888:	6485803a 	cmpltu	r2,r12,r18
   4c88c:	58a3c83a 	sub	r17,r11,r2
   4c890:	04000044 	movi	r16,1
   4c894:	003e8706 	br	4c2b4 <__adddf3+0xcc>
   4c898:	8804977a 	slli	r2,r17,29
   4c89c:	00c80034 	movhi	r3,8192
   4c8a0:	18ffffc4 	addi	r3,r3,-1
   4c8a4:	20c8703a 	and	r4,r4,r3
   4c8a8:	2084b03a 	or	r2,r4,r2
   4c8ac:	8806d0fa 	srli	r3,r17,3
   4c8b0:	003f8106 	br	4c6b8 <__adddf3+0x4d0>
   4c8b4:	0027883a 	mov	r19,zero
   4c8b8:	0007883a 	mov	r3,zero
   4c8bc:	0009883a 	mov	r4,zero
   4c8c0:	003eaf06 	br	4c380 <__adddf3+0x198>
   4c8c4:	28bff804 	addi	r2,r5,-32
   4c8c8:	28c00820 	cmpeqi	r3,r5,32
   4c8cc:	5884d83a 	srl	r2,r11,r2
   4c8d0:	1800041e 	bne	r3,zero,4c8e4 <__adddf3+0x6fc>
   4c8d4:	00c01004 	movi	r3,64
   4c8d8:	1947c83a 	sub	r3,r3,r5
   4c8dc:	58c6983a 	sll	r3,r11,r3
   4c8e0:	68dab03a 	or	r13,r13,r3
   4c8e4:	6824c03a 	cmpne	r18,r13,zero
   4c8e8:	90a4b03a 	or	r18,r18,r2
   4c8ec:	003f0c06 	br	4c520 <__adddf3+0x338>
   4c8f0:	880a977a 	slli	r5,r17,29
   4c8f4:	00880034 	movhi	r2,8192
   4c8f8:	10bfffc4 	addi	r2,r2,-1
   4c8fc:	2084703a 	and	r2,r4,r2
   4c900:	8806d0fa 	srli	r3,r17,3
   4c904:	1144b03a 	or	r2,r2,r5
   4c908:	003f5f06 	br	4c688 <__adddf3+0x4a0>
   4c90c:	5804977a 	slli	r2,r11,29
   4c910:	00c80034 	movhi	r3,8192
   4c914:	18ffffc4 	addi	r3,r3,-1
   4c918:	30c8703a 	and	r4,r6,r3
   4c91c:	1104b03a 	or	r2,r2,r4
   4c920:	5806d0fa 	srli	r3,r11,3
   4c924:	3827883a 	mov	r19,r7
   4c928:	003f6306 	br	4c6b8 <__adddf3+0x4d0>
   4c92c:	04800044 	movi	r18,1
   4c930:	003f3106 	br	4c5f8 <__adddf3+0x410>
   4c934:	28fff804 	addi	r3,r5,-32
   4c938:	29000820 	cmpeqi	r4,r5,32
   4c93c:	88c6d83a 	srl	r3,r17,r3
   4c940:	2000041e 	bne	r4,zero,4c954 <__adddf3+0x76c>
   4c944:	01001004 	movi	r4,64
   4c948:	2149c83a 	sub	r4,r4,r5
   4c94c:	8908983a 	sll	r4,r17,r4
   4c950:	6118b03a 	or	r12,r12,r4
   4c954:	6024c03a 	cmpne	r18,r12,zero
   4c958:	90e4b03a 	or	r18,r18,r3
   4c95c:	003ead06 	br	4c414 <__adddf3+0x22c>
   4c960:	10004f26 	beq	r2,zero,4caa0 <__adddf3+0x8b8>
   4c964:	5b5ab03a 	or	r13,r11,r13
   4c968:	683f4d26 	beq	r13,zero,4c6a0 <__adddf3+0x4b8>
   4c96c:	8806d0fa 	srli	r3,r17,3
   4c970:	01480034 	movhi	r5,8192
   4c974:	8822977a 	slli	r17,r17,29
   4c978:	297fffc4 	addi	r5,r5,-1
   4c97c:	2144703a 	and	r2,r4,r5
   4c980:	1900022c 	andhi	r4,r3,8
   4c984:	1444b03a 	or	r2,r2,r17
   4c988:	203f4b26 	beq	r4,zero,4c6b8 <__adddf3+0x4d0>
   4c98c:	5808d0fa 	srli	r4,r11,3
   4c990:	2200022c 	andhi	r8,r4,8
   4c994:	403f481e 	bne	r8,zero,4c6b8 <__adddf3+0x4d0>
   4c998:	5804977a 	slli	r2,r11,29
   4c99c:	314a703a 	and	r5,r6,r5
   4c9a0:	3827883a 	mov	r19,r7
   4c9a4:	2884b03a 	or	r2,r5,r2
   4c9a8:	2007883a 	mov	r3,r4
   4c9ac:	003f4206 	br	4c6b8 <__adddf3+0x4d0>
   4c9b0:	04000084 	movi	r16,2
   4c9b4:	003ee206 	br	4c540 <__adddf3+0x358>
   4c9b8:	6b25c83a 	sub	r18,r13,r12
   4c9bc:	5c57c83a 	sub	r11,r11,r17
   4c9c0:	6c9b803a 	cmpltu	r13,r13,r18
   4c9c4:	5b63c83a 	sub	r17,r11,r13
   4c9c8:	3827883a 	mov	r19,r7
   4c9cc:	5029883a 	mov	r20,r10
   4c9d0:	04000044 	movi	r16,1
   4c9d4:	003e3706 	br	4c2b4 <__adddf3+0xcc>
   4c9d8:	103fb626 	beq	r2,zero,4c8b4 <__adddf3+0x6cc>
   4c9dc:	5808977a 	slli	r4,r11,29
   4c9e0:	00880034 	movhi	r2,8192
   4c9e4:	10bfffc4 	addi	r2,r2,-1
   4c9e8:	3084703a 	and	r2,r6,r2
   4c9ec:	5806d0fa 	srli	r3,r11,3
   4c9f0:	1104b03a 	or	r2,r2,r4
   4c9f4:	3827883a 	mov	r19,r7
   4c9f8:	003f2306 	br	4c688 <__adddf3+0x4a0>
   4c9fc:	5808977a 	slli	r4,r11,29
   4ca00:	00880034 	movhi	r2,8192
   4ca04:	10bfffc4 	addi	r2,r2,-1
   4ca08:	3084703a 	and	r2,r6,r2
   4ca0c:	5806d0fa 	srli	r3,r11,3
   4ca10:	1104b03a 	or	r2,r2,r4
   4ca14:	003f2806 	br	4c6b8 <__adddf3+0x4d0>
   4ca18:	6819883a 	mov	r12,r13
   4ca1c:	5823883a 	mov	r17,r11
   4ca20:	003f3006 	br	4c6e4 <__adddf3+0x4fc>
   4ca24:	5808977a 	slli	r4,r11,29
   4ca28:	00880034 	movhi	r2,8192
   4ca2c:	10bfffc4 	addi	r2,r2,-1
   4ca30:	3084703a 	and	r2,r6,r2
   4ca34:	5806d0fa 	srli	r3,r11,3
   4ca38:	1104b03a 	or	r2,r2,r4
   4ca3c:	003f1206 	br	4c688 <__adddf3+0x4a0>
   4ca40:	5808977a 	slli	r4,r11,29
   4ca44:	00880034 	movhi	r2,8192
   4ca48:	10bfffc4 	addi	r2,r2,-1
   4ca4c:	3084703a 	and	r2,r6,r2
   4ca50:	5806d0fa 	srli	r3,r11,3
   4ca54:	1104b03a 	or	r2,r2,r4
   4ca58:	3827883a 	mov	r19,r7
   4ca5c:	003f1606 	br	4c6b8 <__adddf3+0x4d0>
   4ca60:	28fff804 	addi	r3,r5,-32
   4ca64:	29000820 	cmpeqi	r4,r5,32
   4ca68:	88c6d83a 	srl	r3,r17,r3
   4ca6c:	2000041e 	bne	r4,zero,4ca80 <__adddf3+0x898>
   4ca70:	01001004 	movi	r4,64
   4ca74:	2149c83a 	sub	r4,r4,r5
   4ca78:	8908983a 	sll	r4,r17,r4
   4ca7c:	6118b03a 	or	r12,r12,r4
   4ca80:	6024c03a 	cmpne	r18,r12,zero
   4ca84:	90e4b03a 	or	r18,r18,r3
   4ca88:	003edb06 	br	4c5f8 <__adddf3+0x410>
   4ca8c:	6365883a 	add	r18,r12,r13
   4ca90:	8ad7883a 	add	r11,r17,r11
   4ca94:	935b803a 	cmpltu	r13,r18,r13
   4ca98:	5b63883a 	add	r17,r11,r13
   4ca9c:	003ebc06 	br	4c590 <__adddf3+0x3a8>
   4caa0:	5804977a 	slli	r2,r11,29
   4caa4:	00c80034 	movhi	r3,8192
   4caa8:	18ffffc4 	addi	r3,r3,-1
   4caac:	30cc703a 	and	r6,r6,r3
   4cab0:	1184b03a 	or	r2,r2,r6
   4cab4:	5806d0fa 	srli	r3,r11,3
   4cab8:	003eff06 	br	4c6b8 <__adddf3+0x4d0>
   4cabc:	90c4b03a 	or	r2,r18,r3
   4cac0:	103f7c26 	beq	r2,zero,4c8b4 <__adddf3+0x6cc>
   4cac4:	1823883a 	mov	r17,r3
   4cac8:	003f2006 	br	4c74c <__adddf3+0x564>
   4cacc:	00c00804 	movi	r3,32
   4cad0:	1907c83a 	sub	r3,r3,r4
   4cad4:	000b883a 	mov	r5,zero
   4cad8:	003e0c06 	br	4c30c <__adddf3+0x124>
   4cadc:	0005883a 	mov	r2,zero
   4cae0:	00c1ffc4 	movi	r3,2047
   4cae4:	0009883a 	mov	r4,zero
   4cae8:	003e2506 	br	4c380 <__adddf3+0x198>

0004caec <__divdf3>:
   4caec:	2806d53a 	srli	r3,r5,20
   4caf0:	defff304 	addi	sp,sp,-52
   4caf4:	00800434 	movhi	r2,16
   4caf8:	dd800915 	stw	r22,36(sp)
   4cafc:	dd400815 	stw	r21,32(sp)
   4cb00:	dd000715 	stw	r20,28(sp)
   4cb04:	dc400415 	stw	r17,16(sp)
   4cb08:	dc000315 	stw	r16,12(sp)
   4cb0c:	10bfffc4 	addi	r2,r2,-1
   4cb10:	dfc00c15 	stw	ra,48(sp)
   4cb14:	df000b15 	stw	fp,44(sp)
   4cb18:	ddc00a15 	stw	r23,40(sp)
   4cb1c:	dcc00615 	stw	r19,24(sp)
   4cb20:	dc800515 	stw	r18,20(sp)
   4cb24:	18c1ffcc 	andi	r3,r3,2047
   4cb28:	282cd7fa 	srli	r22,r5,31
   4cb2c:	302b883a 	mov	r21,r6
   4cb30:	3821883a 	mov	r16,r7
   4cb34:	2029883a 	mov	r20,r4
   4cb38:	28a2703a 	and	r17,r5,r2
   4cb3c:	18010d26 	beq	r3,zero,4cf74 <__divdf3+0x488>
   4cb40:	1881ffe0 	cmpeqi	r2,r3,2047
   4cb44:	10011e1e 	bne	r2,zero,4cfc0 <__divdf3+0x4d4>
   4cb48:	880a90fa 	slli	r5,r17,3
   4cb4c:	2008d77a 	srli	r4,r4,29
   4cb50:	a02890fa 	slli	r20,r20,3
   4cb54:	1cff0044 	addi	r19,r3,-1023
   4cb58:	2148b03a 	or	r4,r4,r5
   4cb5c:	24802034 	orhi	r18,r4,128
   4cb60:	0023883a 	mov	r17,zero
   4cb64:	0039883a 	mov	fp,zero
   4cb68:	8006d53a 	srli	r3,r16,20
   4cb6c:	00800434 	movhi	r2,16
   4cb70:	10bfffc4 	addi	r2,r2,-1
   4cb74:	18c1ffcc 	andi	r3,r3,2047
   4cb78:	802ed7fa 	srli	r23,r16,31
   4cb7c:	80a0703a 	and	r16,r16,r2
   4cb80:	1800eb26 	beq	r3,zero,4cf30 <__divdf3+0x444>
   4cb84:	1881ffe0 	cmpeqi	r2,r3,2047
   4cb88:	1001141e 	bne	r2,zero,4cfdc <__divdf3+0x4f0>
   4cb8c:	802090fa 	slli	r16,r16,3
   4cb90:	a804d77a 	srli	r2,r21,29
   4cb94:	a80e90fa 	slli	r7,r21,3
   4cb98:	18ff0044 	addi	r3,r3,-1023
   4cb9c:	1420b03a 	or	r16,r2,r16
   4cba0:	98e7c83a 	sub	r19,r19,r3
   4cba4:	84002034 	orhi	r16,r16,128
   4cba8:	0007883a 	mov	r3,zero
   4cbac:	88800428 	cmpgeui	r2,r17,16
   4cbb0:	b5eaf03a 	xor	r21,r22,r23
   4cbb4:	1000391e 	bne	r2,zero,4cc9c <__divdf3+0x1b0>
   4cbb8:	882290ba 	slli	r17,r17,2
   4cbbc:	00800174 	movhi	r2,5
   4cbc0:	8885883a 	add	r2,r17,r2
   4cbc4:	10b2f317 	ldw	r2,-13364(r2)
   4cbc8:	1000683a 	jmp	r2
   4cbcc:	0004cc9c 	xori	zero,zero,4914
   4cbd0:	0004cc84 	movi	zero,4914
   4cbd4:	0004cc34 	movhi	zero,4912
   4cbd8:	0004cc94 	movui	zero,4914
   4cbdc:	0004cc34 	movhi	zero,4912
   4cbe0:	0004d040 	call	4d04 <__reset-0x3b2fc>
   4cbe4:	0004cc34 	movhi	zero,4912
   4cbe8:	0004cc94 	movui	zero,4914
   4cbec:	0004cc84 	movi	zero,4914
   4cbf0:	0004cc84 	movi	zero,4914
   4cbf4:	0004d040 	call	4d04 <__reset-0x3b2fc>
   4cbf8:	0004cc94 	movui	zero,4914
   4cbfc:	0004cc0c 	andi	zero,zero,4912
   4cc00:	0004cc0c 	andi	zero,zero,4912
   4cc04:	0004cc0c 	andi	zero,zero,4912
   4cc08:	0004d0d0 	cmplti	zero,zero,4931
   4cc0c:	b02b883a 	mov	r21,r22
   4cc10:	9021883a 	mov	r16,r18
   4cc14:	a00f883a 	mov	r7,r20
   4cc18:	e007883a 	mov	r3,fp
   4cc1c:	188000a0 	cmpeqi	r2,r3,2
   4cc20:	1000181e 	bne	r2,zero,4cc84 <__divdf3+0x198>
   4cc24:	188000e0 	cmpeqi	r2,r3,3
   4cc28:	1001b61e 	bne	r2,zero,4d304 <__divdf3+0x818>
   4cc2c:	18c00060 	cmpeqi	r3,r3,1
   4cc30:	1800ac26 	beq	r3,zero,4cee4 <__divdf3+0x3f8>
   4cc34:	000b883a 	mov	r5,zero
   4cc38:	0009883a 	mov	r4,zero
   4cc3c:	0029883a 	mov	r20,zero
   4cc40:	2806953a 	slli	r3,r5,20
   4cc44:	a82a97fa 	slli	r21,r21,31
   4cc48:	a005883a 	mov	r2,r20
   4cc4c:	1906b03a 	or	r3,r3,r4
   4cc50:	1d46b03a 	or	r3,r3,r21
   4cc54:	dfc00c17 	ldw	ra,48(sp)
   4cc58:	df000b17 	ldw	fp,44(sp)
   4cc5c:	ddc00a17 	ldw	r23,40(sp)
   4cc60:	dd800917 	ldw	r22,36(sp)
   4cc64:	dd400817 	ldw	r21,32(sp)
   4cc68:	dd000717 	ldw	r20,28(sp)
   4cc6c:	dcc00617 	ldw	r19,24(sp)
   4cc70:	dc800517 	ldw	r18,20(sp)
   4cc74:	dc400417 	ldw	r17,16(sp)
   4cc78:	dc000317 	ldw	r16,12(sp)
   4cc7c:	dec00d04 	addi	sp,sp,52
   4cc80:	f800283a 	ret
   4cc84:	0141ffc4 	movi	r5,2047
   4cc88:	0009883a 	mov	r4,zero
   4cc8c:	0029883a 	mov	r20,zero
   4cc90:	003feb06 	br	4cc40 <__divdf3+0x154>
   4cc94:	b82b883a 	mov	r21,r23
   4cc98:	003fe006 	br	4cc1c <__divdf3+0x130>
   4cc9c:	84812636 	bltu	r16,r18,4d138 <__divdf3+0x64c>
   4cca0:	84812426 	beq	r16,r18,4d134 <__divdf3+0x648>
   4cca4:	9cffffc4 	addi	r19,r19,-1
   4cca8:	a023883a 	mov	r17,r20
   4ccac:	0007883a 	mov	r3,zero
   4ccb0:	8020923a 	slli	r16,r16,8
   4ccb4:	3828d63a 	srli	r20,r7,24
   4ccb8:	9009883a 	mov	r4,r18
   4ccbc:	802cd43a 	srli	r22,r16,16
   4ccc0:	d8c00015 	stw	r3,0(sp)
   4ccc4:	382e923a 	slli	r23,r7,8
   4ccc8:	b00b883a 	mov	r5,r22
   4cccc:	004c1280 	call	4c128 <__udivsi3>
   4ccd0:	9009883a 	mov	r4,r18
   4ccd4:	b00b883a 	mov	r5,r22
   4ccd8:	a428b03a 	or	r20,r20,r16
   4ccdc:	1021883a 	mov	r16,r2
   4cce0:	004c18c0 	call	4c18c <__umodsi3>
   4cce4:	1004943a 	slli	r2,r2,16
   4cce8:	8808d43a 	srli	r4,r17,16
   4ccec:	a4bfffcc 	andi	r18,r20,65535
   4ccf0:	940b383a 	mul	r5,r18,r16
   4ccf4:	2088b03a 	or	r4,r4,r2
   4ccf8:	d8c00017 	ldw	r3,0(sp)
   4ccfc:	2140042e 	bgeu	r4,r5,4cd10 <__divdf3+0x224>
   4cd00:	2509883a 	add	r4,r4,r20
   4cd04:	80bfffc4 	addi	r2,r16,-1
   4cd08:	25013b2e 	bgeu	r4,r20,4d1f8 <__divdf3+0x70c>
   4cd0c:	1021883a 	mov	r16,r2
   4cd10:	2179c83a 	sub	fp,r4,r5
   4cd14:	e009883a 	mov	r4,fp
   4cd18:	b00b883a 	mov	r5,r22
   4cd1c:	d8c00015 	stw	r3,0(sp)
   4cd20:	004c1280 	call	4c128 <__udivsi3>
   4cd24:	e009883a 	mov	r4,fp
   4cd28:	b00b883a 	mov	r5,r22
   4cd2c:	1039883a 	mov	fp,r2
   4cd30:	004c18c0 	call	4c18c <__umodsi3>
   4cd34:	1004943a 	slli	r2,r2,16
   4cd38:	9715383a 	mul	r10,r18,fp
   4cd3c:	893fffcc 	andi	r4,r17,65535
   4cd40:	2088b03a 	or	r4,r4,r2
   4cd44:	d8c00017 	ldw	r3,0(sp)
   4cd48:	2280042e 	bgeu	r4,r10,4cd5c <__divdf3+0x270>
   4cd4c:	2509883a 	add	r4,r4,r20
   4cd50:	e0bfffc4 	addi	r2,fp,-1
   4cd54:	2501242e 	bgeu	r4,r20,4d1e8 <__divdf3+0x6fc>
   4cd58:	1039883a 	mov	fp,r2
   4cd5c:	8020943a 	slli	r16,r16,16
   4cd60:	b80cd43a 	srli	r6,r23,16
   4cd64:	ba3fffcc 	andi	r8,r23,65535
   4cd68:	8720b03a 	or	r16,r16,fp
   4cd6c:	80bfffcc 	andi	r2,r16,65535
   4cd70:	800ed43a 	srli	r7,r16,16
   4cd74:	1213383a 	mul	r9,r2,r8
   4cd78:	308b383a 	mul	r5,r6,r2
   4cd7c:	3a17383a 	mul	r11,r7,r8
   4cd80:	4804d43a 	srli	r2,r9,16
   4cd84:	398f383a 	mul	r7,r7,r6
   4cd88:	2acb883a 	add	r5,r5,r11
   4cd8c:	1145883a 	add	r2,r2,r5
   4cd90:	2289c83a 	sub	r4,r4,r10
   4cd94:	12c0022e 	bgeu	r2,r11,4cda0 <__divdf3+0x2b4>
   4cd98:	01400074 	movhi	r5,1
   4cd9c:	394f883a 	add	r7,r7,r5
   4cda0:	100ad43a 	srli	r5,r2,16
   4cda4:	1038943a 	slli	fp,r2,16
   4cda8:	4a7fffcc 	andi	r9,r9,65535
   4cdac:	29c5883a 	add	r2,r5,r7
   4cdb0:	e279883a 	add	fp,fp,r9
   4cdb4:	20800236 	bltu	r4,r2,4cdc0 <__divdf3+0x2d4>
   4cdb8:	20800a1e 	bne	r4,r2,4cde4 <__divdf3+0x2f8>
   4cdbc:	1f00092e 	bgeu	r3,fp,4cde4 <__divdf3+0x2f8>
   4cdc0:	1dc7883a 	add	r3,r3,r23
   4cdc4:	1dcb803a 	cmpltu	r5,r3,r23
   4cdc8:	2d0b883a 	add	r5,r5,r20
   4cdcc:	2149883a 	add	r4,r4,r5
   4cdd0:	817fffc4 	addi	r5,r16,-1
   4cdd4:	a101012e 	bgeu	r20,r4,4d1dc <__divdf3+0x6f0>
   4cdd8:	20813236 	bltu	r4,r2,4d2a4 <__divdf3+0x7b8>
   4cddc:	11013026 	beq	r2,r4,4d2a0 <__divdf3+0x7b4>
   4cde0:	2821883a 	mov	r16,r5
   4cde4:	1f39c83a 	sub	fp,r3,fp
   4cde8:	2089c83a 	sub	r4,r4,r2
   4cdec:	1f07803a 	cmpltu	r3,r3,fp
   4cdf0:	da000115 	stw	r8,4(sp)
   4cdf4:	d9800015 	stw	r6,0(sp)
   4cdf8:	20e3c83a 	sub	r17,r4,r3
   4cdfc:	a4411726 	beq	r20,r17,4d25c <__divdf3+0x770>
   4ce00:	b00b883a 	mov	r5,r22
   4ce04:	8809883a 	mov	r4,r17
   4ce08:	004c1280 	call	4c128 <__udivsi3>
   4ce0c:	8809883a 	mov	r4,r17
   4ce10:	b00b883a 	mov	r5,r22
   4ce14:	d8800215 	stw	r2,8(sp)
   4ce18:	004c18c0 	call	4c18c <__umodsi3>
   4ce1c:	d9c00217 	ldw	r7,8(sp)
   4ce20:	1004943a 	slli	r2,r2,16
   4ce24:	e008d43a 	srli	r4,fp,16
   4ce28:	91c7383a 	mul	r3,r18,r7
   4ce2c:	d9800017 	ldw	r6,0(sp)
   4ce30:	2088b03a 	or	r4,r4,r2
   4ce34:	da000117 	ldw	r8,4(sp)
   4ce38:	20c0e136 	bltu	r4,r3,4d1c0 <__divdf3+0x6d4>
   4ce3c:	20e3c83a 	sub	r17,r4,r3
   4ce40:	8809883a 	mov	r4,r17
   4ce44:	b00b883a 	mov	r5,r22
   4ce48:	da000215 	stw	r8,8(sp)
   4ce4c:	d9c00115 	stw	r7,4(sp)
   4ce50:	d9800015 	stw	r6,0(sp)
   4ce54:	004c1280 	call	4c128 <__udivsi3>
   4ce58:	8809883a 	mov	r4,r17
   4ce5c:	b00b883a 	mov	r5,r22
   4ce60:	1023883a 	mov	r17,r2
   4ce64:	004c18c0 	call	4c18c <__umodsi3>
   4ce68:	1004943a 	slli	r2,r2,16
   4ce6c:	9465383a 	mul	r18,r18,r17
   4ce70:	e73fffcc 	andi	fp,fp,65535
   4ce74:	e0b8b03a 	or	fp,fp,r2
   4ce78:	d9800017 	ldw	r6,0(sp)
   4ce7c:	d9c00117 	ldw	r7,4(sp)
   4ce80:	da000217 	ldw	r8,8(sp)
   4ce84:	e480c736 	bltu	fp,r18,4d1a4 <__divdf3+0x6b8>
   4ce88:	380e943a 	slli	r7,r7,16
   4ce8c:	e4b9c83a 	sub	fp,fp,r18
   4ce90:	3c4eb03a 	or	r7,r7,r17
   4ce94:	38bfffcc 	andi	r2,r7,65535
   4ce98:	380ad43a 	srli	r5,r7,16
   4ce9c:	4089383a 	mul	r4,r8,r2
   4cea0:	3087383a 	mul	r3,r6,r2
   4cea4:	2a11383a 	mul	r8,r5,r8
   4cea8:	2004d43a 	srli	r2,r4,16
   4ceac:	314d383a 	mul	r6,r6,r5
   4ceb0:	1a07883a 	add	r3,r3,r8
   4ceb4:	10c5883a 	add	r2,r2,r3
   4ceb8:	1200022e 	bgeu	r2,r8,4cec4 <__divdf3+0x3d8>
   4cebc:	00c00074 	movhi	r3,1
   4cec0:	30cd883a 	add	r6,r6,r3
   4cec4:	1006d43a 	srli	r3,r2,16
   4cec8:	1004943a 	slli	r2,r2,16
   4cecc:	213fffcc 	andi	r4,r4,65535
   4ced0:	1987883a 	add	r3,r3,r6
   4ced4:	1105883a 	add	r2,r2,r4
   4ced8:	e0c08f36 	bltu	fp,r3,4d118 <__divdf3+0x62c>
   4cedc:	e0c08d26 	beq	fp,r3,4d114 <__divdf3+0x628>
   4cee0:	39c00054 	ori	r7,r7,1
   4cee4:	9940ffc4 	addi	r5,r19,1023
   4cee8:	01405c0e 	bge	zero,r5,4d05c <__divdf3+0x570>
   4ceec:	388001cc 	andi	r2,r7,7
   4cef0:	1000e21e 	bne	r2,zero,4d27c <__divdf3+0x790>
   4cef4:	8080402c 	andhi	r2,r16,256
   4cef8:	10000426 	beq	r2,zero,4cf0c <__divdf3+0x420>
   4cefc:	00bfc034 	movhi	r2,65280
   4cf00:	10bfffc4 	addi	r2,r2,-1
   4cf04:	80a0703a 	and	r16,r16,r2
   4cf08:	99410004 	addi	r5,r19,1024
   4cf0c:	2881ffc8 	cmpgei	r2,r5,2047
   4cf10:	103f5c1e 	bne	r2,zero,4cc84 <__divdf3+0x198>
   4cf14:	380ed0fa 	srli	r7,r7,3
   4cf18:	8028977a 	slli	r20,r16,29
   4cf1c:	8008927a 	slli	r4,r16,9
   4cf20:	2941ffcc 	andi	r5,r5,2047
   4cf24:	a1e8b03a 	or	r20,r20,r7
   4cf28:	2008d33a 	srli	r4,r4,12
   4cf2c:	003f4406 	br	4cc40 <__divdf3+0x154>
   4cf30:	854eb03a 	or	r7,r16,r21
   4cf34:	38003e26 	beq	r7,zero,4d030 <__divdf3+0x544>
   4cf38:	80008f26 	beq	r16,zero,4d178 <__divdf3+0x68c>
   4cf3c:	8009883a 	mov	r4,r16
   4cf40:	00417180 	call	41718 <__clzsi2>
   4cf44:	113ffd44 	addi	r4,r2,-11
   4cf48:	00c00744 	movi	r3,29
   4cf4c:	11fffe04 	addi	r7,r2,-8
   4cf50:	1907c83a 	sub	r3,r3,r4
   4cf54:	81e0983a 	sll	r16,r16,r7
   4cf58:	a8c6d83a 	srl	r3,r21,r3
   4cf5c:	a9ce983a 	sll	r7,r21,r7
   4cf60:	1c20b03a 	or	r16,r3,r16
   4cf64:	14c5883a 	add	r2,r2,r19
   4cf68:	14c0fcc4 	addi	r19,r2,1011
   4cf6c:	0007883a 	mov	r3,zero
   4cf70:	003f0e06 	br	4cbac <__divdf3+0xc0>
   4cf74:	2464b03a 	or	r18,r4,r17
   4cf78:	2027883a 	mov	r19,r4
   4cf7c:	90002726 	beq	r18,zero,4d01c <__divdf3+0x530>
   4cf80:	88007326 	beq	r17,zero,4d150 <__divdf3+0x664>
   4cf84:	8809883a 	mov	r4,r17
   4cf88:	00417180 	call	41718 <__clzsi2>
   4cf8c:	10fffd44 	addi	r3,r2,-11
   4cf90:	01000744 	movi	r4,29
   4cf94:	153ffe04 	addi	r20,r2,-8
   4cf98:	20c9c83a 	sub	r4,r4,r3
   4cf9c:	8d0a983a 	sll	r5,r17,r20
   4cfa0:	9908d83a 	srl	r4,r19,r4
   4cfa4:	9d28983a 	sll	r20,r19,r20
   4cfa8:	2164b03a 	or	r18,r4,r5
   4cfac:	00ff0344 	movi	r3,-1011
   4cfb0:	18a7c83a 	sub	r19,r3,r2
   4cfb4:	0023883a 	mov	r17,zero
   4cfb8:	0039883a 	mov	fp,zero
   4cfbc:	003eea06 	br	4cb68 <__divdf3+0x7c>
   4cfc0:	2464b03a 	or	r18,r4,r17
   4cfc4:	9000101e 	bne	r18,zero,4d008 <__divdf3+0x51c>
   4cfc8:	0029883a 	mov	r20,zero
   4cfcc:	04400204 	movi	r17,8
   4cfd0:	04c1ffc4 	movi	r19,2047
   4cfd4:	07000084 	movi	fp,2
   4cfd8:	003ee306 	br	4cb68 <__divdf3+0x7c>
   4cfdc:	854eb03a 	or	r7,r16,r21
   4cfe0:	9cfe0044 	addi	r19,r19,-2047
   4cfe4:	3800041e 	bne	r7,zero,4cff8 <__divdf3+0x50c>
   4cfe8:	8c400094 	ori	r17,r17,2
   4cfec:	0021883a 	mov	r16,zero
   4cff0:	00c00084 	movi	r3,2
   4cff4:	003eed06 	br	4cbac <__divdf3+0xc0>
   4cff8:	8c4000d4 	ori	r17,r17,3
   4cffc:	a80f883a 	mov	r7,r21
   4d000:	00c000c4 	movi	r3,3
   4d004:	003ee906 	br	4cbac <__divdf3+0xc0>
   4d008:	8825883a 	mov	r18,r17
   4d00c:	04c1ffc4 	movi	r19,2047
   4d010:	04400304 	movi	r17,12
   4d014:	070000c4 	movi	fp,3
   4d018:	003ed306 	br	4cb68 <__divdf3+0x7c>
   4d01c:	0029883a 	mov	r20,zero
   4d020:	04400104 	movi	r17,4
   4d024:	0027883a 	mov	r19,zero
   4d028:	07000044 	movi	fp,1
   4d02c:	003ece06 	br	4cb68 <__divdf3+0x7c>
   4d030:	8c400054 	ori	r17,r17,1
   4d034:	0021883a 	mov	r16,zero
   4d038:	00c00044 	movi	r3,1
   4d03c:	003edb06 	br	4cbac <__divdf3+0xc0>
   4d040:	01000434 	movhi	r4,16
   4d044:	002b883a 	mov	r21,zero
   4d048:	213fffc4 	addi	r4,r4,-1
   4d04c:	053fffc4 	movi	r20,-1
   4d050:	0141ffc4 	movi	r5,2047
   4d054:	003efa06 	br	4cc40 <__divdf3+0x154>
   4d058:	01ffffc4 	movi	r7,-1
   4d05c:	00800044 	movi	r2,1
   4d060:	1145c83a 	sub	r2,r2,r5
   4d064:	10c00e48 	cmpgei	r3,r2,57
   4d068:	183ef21e 	bne	r3,zero,4cc34 <__divdf3+0x148>
   4d06c:	10c00808 	cmpgei	r3,r2,32
   4d070:	1800651e 	bne	r3,zero,4d208 <__divdf3+0x71c>
   4d074:	98c10784 	addi	r3,r19,1054
   4d078:	80e8983a 	sll	r20,r16,r3
   4d07c:	3888d83a 	srl	r4,r7,r2
   4d080:	38c6983a 	sll	r3,r7,r3
   4d084:	80a0d83a 	srl	r16,r16,r2
   4d088:	a128b03a 	or	r20,r20,r4
   4d08c:	1806c03a 	cmpne	r3,r3,zero
   4d090:	a0e8b03a 	or	r20,r20,r3
   4d094:	a08001cc 	andi	r2,r20,7
   4d098:	10000726 	beq	r2,zero,4d0b8 <__divdf3+0x5cc>
   4d09c:	a08003cc 	andi	r2,r20,15
   4d0a0:	10800120 	cmpeqi	r2,r2,4
   4d0a4:	1000041e 	bne	r2,zero,4d0b8 <__divdf3+0x5cc>
   4d0a8:	a0800104 	addi	r2,r20,4
   4d0ac:	1529803a 	cmpltu	r20,r2,r20
   4d0b0:	8521883a 	add	r16,r16,r20
   4d0b4:	1029883a 	mov	r20,r2
   4d0b8:	8080202c 	andhi	r2,r16,128
   4d0bc:	10008d26 	beq	r2,zero,4d2f4 <__divdf3+0x808>
   4d0c0:	01400044 	movi	r5,1
   4d0c4:	0009883a 	mov	r4,zero
   4d0c8:	0029883a 	mov	r20,zero
   4d0cc:	003edc06 	br	4cc40 <__divdf3+0x154>
   4d0d0:	9080022c 	andhi	r2,r18,8
   4d0d4:	10000926 	beq	r2,zero,4d0fc <__divdf3+0x610>
   4d0d8:	8080022c 	andhi	r2,r16,8
   4d0dc:	1000071e 	bne	r2,zero,4d0fc <__divdf3+0x610>
   4d0e0:	00800434 	movhi	r2,16
   4d0e4:	81000234 	orhi	r4,r16,8
   4d0e8:	10bfffc4 	addi	r2,r2,-1
   4d0ec:	2088703a 	and	r4,r4,r2
   4d0f0:	b82b883a 	mov	r21,r23
   4d0f4:	3829883a 	mov	r20,r7
   4d0f8:	003fd506 	br	4d050 <__divdf3+0x564>
   4d0fc:	00800434 	movhi	r2,16
   4d100:	91000234 	orhi	r4,r18,8
   4d104:	10bfffc4 	addi	r2,r2,-1
   4d108:	2088703a 	and	r4,r4,r2
   4d10c:	b02b883a 	mov	r21,r22
   4d110:	003fcf06 	br	4d050 <__divdf3+0x564>
   4d114:	103f7326 	beq	r2,zero,4cee4 <__divdf3+0x3f8>
   4d118:	a739883a 	add	fp,r20,fp
   4d11c:	393fffc4 	addi	r4,r7,-1
   4d120:	e5004a36 	bltu	fp,r20,4d24c <__divdf3+0x760>
   4d124:	e0c06536 	bltu	fp,r3,4d2bc <__divdf3+0x7d0>
   4d128:	e0c07c26 	beq	fp,r3,4d31c <__divdf3+0x830>
   4d12c:	200f883a 	mov	r7,r4
   4d130:	003f6b06 	br	4cee0 <__divdf3+0x3f4>
   4d134:	a1fedb36 	bltu	r20,r7,4cca4 <__divdf3+0x1b8>
   4d138:	902297fa 	slli	r17,r18,31
   4d13c:	a004d07a 	srli	r2,r20,1
   4d140:	9024d07a 	srli	r18,r18,1
   4d144:	a00697fa 	slli	r3,r20,31
   4d148:	88a2b03a 	or	r17,r17,r2
   4d14c:	003ed806 	br	4ccb0 <__divdf3+0x1c4>
   4d150:	00417180 	call	41718 <__clzsi2>
   4d154:	10c00544 	addi	r3,r2,21
   4d158:	19400748 	cmpgei	r5,r3,29
   4d15c:	1009883a 	mov	r4,r2
   4d160:	10800804 	addi	r2,r2,32
   4d164:	283f8a26 	beq	r5,zero,4cf90 <__divdf3+0x4a4>
   4d168:	213ffe04 	addi	r4,r4,-8
   4d16c:	a124983a 	sll	r18,r20,r4
   4d170:	0029883a 	mov	r20,zero
   4d174:	003f8d06 	br	4cfac <__divdf3+0x4c0>
   4d178:	a809883a 	mov	r4,r21
   4d17c:	00417180 	call	41718 <__clzsi2>
   4d180:	11000544 	addi	r4,r2,21
   4d184:	21400748 	cmpgei	r5,r4,29
   4d188:	1007883a 	mov	r3,r2
   4d18c:	10800804 	addi	r2,r2,32
   4d190:	283f6d26 	beq	r5,zero,4cf48 <__divdf3+0x45c>
   4d194:	18fffe04 	addi	r3,r3,-8
   4d198:	a8e0983a 	sll	r16,r21,r3
   4d19c:	000f883a 	mov	r7,zero
   4d1a0:	003f7006 	br	4cf64 <__divdf3+0x478>
   4d1a4:	e539883a 	add	fp,fp,r20
   4d1a8:	88bfffc4 	addi	r2,r17,-1
   4d1ac:	e5003a36 	bltu	fp,r20,4d298 <__divdf3+0x7ac>
   4d1b0:	e480392e 	bgeu	fp,r18,4d298 <__divdf3+0x7ac>
   4d1b4:	8c7fff84 	addi	r17,r17,-2
   4d1b8:	e539883a 	add	fp,fp,r20
   4d1bc:	003f3206 	br	4ce88 <__divdf3+0x39c>
   4d1c0:	2509883a 	add	r4,r4,r20
   4d1c4:	38bfffc4 	addi	r2,r7,-1
   4d1c8:	25003136 	bltu	r4,r20,4d290 <__divdf3+0x7a4>
   4d1cc:	20c0302e 	bgeu	r4,r3,4d290 <__divdf3+0x7a4>
   4d1d0:	39ffff84 	addi	r7,r7,-2
   4d1d4:	2509883a 	add	r4,r4,r20
   4d1d8:	003f1806 	br	4ce3c <__divdf3+0x350>
   4d1dc:	a13f001e 	bne	r20,r4,4cde0 <__divdf3+0x2f4>
   4d1e0:	1dfeff36 	bltu	r3,r23,4cde0 <__divdf3+0x2f4>
   4d1e4:	003efc06 	br	4cdd8 <__divdf3+0x2ec>
   4d1e8:	22bedb2e 	bgeu	r4,r10,4cd58 <__divdf3+0x26c>
   4d1ec:	e73fff84 	addi	fp,fp,-2
   4d1f0:	2509883a 	add	r4,r4,r20
   4d1f4:	003ed906 	br	4cd5c <__divdf3+0x270>
   4d1f8:	217ec42e 	bgeu	r4,r5,4cd0c <__divdf3+0x220>
   4d1fc:	843fff84 	addi	r16,r16,-2
   4d200:	2509883a 	add	r4,r4,r20
   4d204:	003ec206 	br	4cd10 <__divdf3+0x224>
   4d208:	013ff844 	movi	r4,-31
   4d20c:	2149c83a 	sub	r4,r4,r5
   4d210:	10800820 	cmpeqi	r2,r2,32
   4d214:	8108d83a 	srl	r4,r16,r4
   4d218:	1000031e 	bne	r2,zero,4d228 <__divdf3+0x73c>
   4d21c:	98c10f84 	addi	r3,r19,1086
   4d220:	80c6983a 	sll	r3,r16,r3
   4d224:	38ceb03a 	or	r7,r7,r3
   4d228:	3828c03a 	cmpne	r20,r7,zero
   4d22c:	a128b03a 	or	r20,r20,r4
   4d230:	a40001cc 	andi	r16,r20,7
   4d234:	8000291e 	bne	r16,zero,4d2dc <__divdf3+0x7f0>
   4d238:	0009883a 	mov	r4,zero
   4d23c:	a028d0fa 	srli	r20,r20,3
   4d240:	000b883a 	mov	r5,zero
   4d244:	a428b03a 	or	r20,r20,r16
   4d248:	003e7d06 	br	4cc40 <__divdf3+0x154>
   4d24c:	200f883a 	mov	r7,r4
   4d250:	e0ff231e 	bne	fp,r3,4cee0 <__divdf3+0x3f4>
   4d254:	15ff221e 	bne	r2,r23,4cee0 <__divdf3+0x3f4>
   4d258:	003f2206 	br	4cee4 <__divdf3+0x3f8>
   4d25c:	98bf0088 	cmpgei	r2,r19,-1022
   4d260:	9940ffc4 	addi	r5,r19,1023
   4d264:	103f7c26 	beq	r2,zero,4d058 <__divdf3+0x56c>
   4d268:	00bfffc4 	movi	r2,-1
   4d26c:	11c00104 	addi	r7,r2,4
   4d270:	3885803a 	cmpltu	r2,r7,r2
   4d274:	80a1883a 	add	r16,r16,r2
   4d278:	003f1e06 	br	4cef4 <__divdf3+0x408>
   4d27c:	388003cc 	andi	r2,r7,15
   4d280:	10800120 	cmpeqi	r2,r2,4
   4d284:	103f1b1e 	bne	r2,zero,4cef4 <__divdf3+0x408>
   4d288:	3805883a 	mov	r2,r7
   4d28c:	003ff706 	br	4d26c <__divdf3+0x780>
   4d290:	100f883a 	mov	r7,r2
   4d294:	003ee906 	br	4ce3c <__divdf3+0x350>
   4d298:	1023883a 	mov	r17,r2
   4d29c:	003efa06 	br	4ce88 <__divdf3+0x39c>
   4d2a0:	1f3ecf2e 	bgeu	r3,fp,4cde0 <__divdf3+0x2f4>
   4d2a4:	1dc7883a 	add	r3,r3,r23
   4d2a8:	1dcb803a 	cmpltu	r5,r3,r23
   4d2ac:	2d0b883a 	add	r5,r5,r20
   4d2b0:	843fff84 	addi	r16,r16,-2
   4d2b4:	2149883a 	add	r4,r4,r5
   4d2b8:	003eca06 	br	4cde4 <__divdf3+0x2f8>
   4d2bc:	bdc9883a 	add	r4,r23,r23
   4d2c0:	25ef803a 	cmpltu	r23,r4,r23
   4d2c4:	bd2f883a 	add	r23,r23,r20
   4d2c8:	e5f9883a 	add	fp,fp,r23
   4d2cc:	39ffff84 	addi	r7,r7,-2
   4d2d0:	202f883a 	mov	r23,r4
   4d2d4:	e0ffdf26 	beq	fp,r3,4d254 <__divdf3+0x768>
   4d2d8:	003f0106 	br	4cee0 <__divdf3+0x3f4>
   4d2dc:	a08003cc 	andi	r2,r20,15
   4d2e0:	10800120 	cmpeqi	r2,r2,4
   4d2e4:	1000111e 	bne	r2,zero,4d32c <__divdf3+0x840>
   4d2e8:	a0800104 	addi	r2,r20,4
   4d2ec:	1521803a 	cmpltu	r16,r2,r20
   4d2f0:	1029883a 	mov	r20,r2
   4d2f4:	8008927a 	slli	r4,r16,9
   4d2f8:	8020977a 	slli	r16,r16,29
   4d2fc:	2008d33a 	srli	r4,r4,12
   4d300:	003fce06 	br	4d23c <__divdf3+0x750>
   4d304:	00800434 	movhi	r2,16
   4d308:	81000234 	orhi	r4,r16,8
   4d30c:	10bfffc4 	addi	r2,r2,-1
   4d310:	2088703a 	and	r4,r4,r2
   4d314:	3829883a 	mov	r20,r7
   4d318:	003f4d06 	br	4d050 <__divdf3+0x564>
   4d31c:	b8bfe736 	bltu	r23,r2,4d2bc <__divdf3+0x7d0>
   4d320:	200f883a 	mov	r7,r4
   4d324:	15feee1e 	bne	r2,r23,4cee0 <__divdf3+0x3f4>
   4d328:	003eee06 	br	4cee4 <__divdf3+0x3f8>
   4d32c:	0021883a 	mov	r16,zero
   4d330:	003ff006 	br	4d2f4 <__divdf3+0x808>

0004d334 <__eqdf2>:
   4d334:	2810d53a 	srli	r8,r5,20
   4d338:	3804d53a 	srli	r2,r7,20
   4d33c:	00c00434 	movhi	r3,16
   4d340:	4201ffcc 	andi	r8,r8,2047
   4d344:	18ffffc4 	addi	r3,r3,-1
   4d348:	4241ffe0 	cmpeqi	r9,r8,2047
   4d34c:	2816d7fa 	srli	r11,r5,31
   4d350:	3814d7fa 	srli	r10,r7,31
   4d354:	28ca703a 	and	r5,r5,r3
   4d358:	38ce703a 	and	r7,r7,r3
   4d35c:	1081ffcc 	andi	r2,r2,2047
   4d360:	4800061e 	bne	r9,zero,4d37c <__eqdf2+0x48>
   4d364:	10c1ffe0 	cmpeqi	r3,r2,2047
   4d368:	1800061e 	bne	r3,zero,4d384 <__eqdf2+0x50>
   4d36c:	4080051e 	bne	r8,r2,4d384 <__eqdf2+0x50>
   4d370:	00800044 	movi	r2,1
   4d374:	29c00b26 	beq	r5,r7,4d3a4 <__eqdf2+0x70>
   4d378:	f800283a 	ret
   4d37c:	1081ffd8 	cmpnei	r2,r2,2047
   4d380:	10000226 	beq	r2,zero,4d38c <__eqdf2+0x58>
   4d384:	00800044 	movi	r2,1
   4d388:	f800283a 	ret
   4d38c:	29cab03a 	or	r5,r5,r7
   4d390:	2984b03a 	or	r2,r5,r6
   4d394:	1104b03a 	or	r2,r2,r4
   4d398:	103ffa1e 	bne	r2,zero,4d384 <__eqdf2+0x50>
   4d39c:	5a84c03a 	cmpne	r2,r11,r10
   4d3a0:	f800283a 	ret
   4d3a4:	21800126 	beq	r4,r6,4d3ac <__eqdf2+0x78>
   4d3a8:	f800283a 	ret
   4d3ac:	5a800426 	beq	r11,r10,4d3c0 <__eqdf2+0x8c>
   4d3b0:	403ffd1e 	bne	r8,zero,4d3a8 <__eqdf2+0x74>
   4d3b4:	290ab03a 	or	r5,r5,r4
   4d3b8:	2804c03a 	cmpne	r2,r5,zero
   4d3bc:	f800283a 	ret
   4d3c0:	0005883a 	mov	r2,zero
   4d3c4:	003ff806 	br	4d3a8 <__eqdf2+0x74>

0004d3c8 <__gedf2>:
   4d3c8:	2810d53a 	srli	r8,r5,20
   4d3cc:	3812d53a 	srli	r9,r7,20
   4d3d0:	00c00434 	movhi	r3,16
   4d3d4:	4201ffcc 	andi	r8,r8,2047
   4d3d8:	18ffffc4 	addi	r3,r3,-1
   4d3dc:	4281ffd8 	cmpnei	r10,r8,2047
   4d3e0:	2816d7fa 	srli	r11,r5,31
   4d3e4:	3804d7fa 	srli	r2,r7,31
   4d3e8:	28ca703a 	and	r5,r5,r3
   4d3ec:	38ce703a 	and	r7,r7,r3
   4d3f0:	48c1ffcc 	andi	r3,r9,2047
   4d3f4:	50001426 	beq	r10,zero,4d448 <__gedf2+0x80>
   4d3f8:	1a41ffd8 	cmpnei	r9,r3,2047
   4d3fc:	48000926 	beq	r9,zero,4d424 <__gedf2+0x5c>
   4d400:	40001b1e 	bne	r8,zero,4d470 <__gedf2+0xa8>
   4d404:	2910b03a 	or	r8,r5,r4
   4d408:	1800161e 	bne	r3,zero,4d464 <__gedf2+0x9c>
   4d40c:	3986b03a 	or	r3,r7,r6
   4d410:	18002126 	beq	r3,zero,4d498 <__gedf2+0xd0>
   4d414:	4000291e 	bne	r8,zero,4d4bc <__gedf2+0xf4>
   4d418:	1000111e 	bne	r2,zero,4d460 <__gedf2+0x98>
   4d41c:	00bfffc4 	movi	r2,-1
   4d420:	f800283a 	ret
   4d424:	398eb03a 	or	r7,r7,r6
   4d428:	3800221e 	bne	r7,zero,4d4b4 <__gedf2+0xec>
   4d42c:	4000021e 	bne	r8,zero,4d438 <__gedf2+0x70>
   4d430:	2908b03a 	or	r4,r5,r4
   4d434:	203ff826 	beq	r4,zero,4d418 <__gedf2+0x50>
   4d438:	5880071e 	bne	r11,r2,4d458 <__gedf2+0x90>
   4d43c:	583ff726 	beq	r11,zero,4d41c <__gedf2+0x54>
   4d440:	5805883a 	mov	r2,r11
   4d444:	f800283a 	ret
   4d448:	290ab03a 	or	r5,r5,r4
   4d44c:	2800191e 	bne	r5,zero,4d4b4 <__gedf2+0xec>
   4d450:	1901ffe0 	cmpeqi	r4,r3,2047
   4d454:	2000131e 	bne	r4,zero,4d4a4 <__gedf2+0xdc>
   4d458:	00800044 	movi	r2,1
   4d45c:	583fef1e 	bne	r11,zero,4d41c <__gedf2+0x54>
   4d460:	f800283a 	ret
   4d464:	403ff41e 	bne	r8,zero,4d438 <__gedf2+0x70>
   4d468:	103ffd1e 	bne	r2,zero,4d460 <__gedf2+0x98>
   4d46c:	003feb06 	br	4d41c <__gedf2+0x54>
   4d470:	183ff926 	beq	r3,zero,4d458 <__gedf2+0x90>
   4d474:	58bff81e 	bne	r11,r2,4d458 <__gedf2+0x90>
   4d478:	1a3ff716 	blt	r3,r8,4d458 <__gedf2+0x90>
   4d47c:	40ffef16 	blt	r8,r3,4d43c <__gedf2+0x74>
   4d480:	397ff536 	bltu	r7,r5,4d458 <__gedf2+0x90>
   4d484:	29ffed1e 	bne	r5,r7,4d43c <__gedf2+0x74>
   4d488:	313ff336 	bltu	r6,r4,4d458 <__gedf2+0x90>
   4d48c:	21bfeb36 	bltu	r4,r6,4d43c <__gedf2+0x74>
   4d490:	0005883a 	mov	r2,zero
   4d494:	f800283a 	ret
   4d498:	0005883a 	mov	r2,zero
   4d49c:	403fee1e 	bne	r8,zero,4d458 <__gedf2+0x90>
   4d4a0:	f800283a 	ret
   4d4a4:	398eb03a 	or	r7,r7,r6
   4d4a8:	3800021e 	bne	r7,zero,4d4b4 <__gedf2+0xec>
   4d4ac:	58bff826 	beq	r11,r2,4d490 <__gedf2+0xc8>
   4d4b0:	003fe906 	br	4d458 <__gedf2+0x90>
   4d4b4:	00bfff84 	movi	r2,-2
   4d4b8:	f800283a 	ret
   4d4bc:	58bff026 	beq	r11,r2,4d480 <__gedf2+0xb8>
   4d4c0:	003fe506 	br	4d458 <__gedf2+0x90>

0004d4c4 <__ledf2>:
   4d4c4:	2810d53a 	srli	r8,r5,20
   4d4c8:	3812d53a 	srli	r9,r7,20
   4d4cc:	00c00434 	movhi	r3,16
   4d4d0:	4201ffcc 	andi	r8,r8,2047
   4d4d4:	18ffffc4 	addi	r3,r3,-1
   4d4d8:	4281ffd8 	cmpnei	r10,r8,2047
   4d4dc:	2816d7fa 	srli	r11,r5,31
   4d4e0:	3804d7fa 	srli	r2,r7,31
   4d4e4:	28ca703a 	and	r5,r5,r3
   4d4e8:	38ce703a 	and	r7,r7,r3
   4d4ec:	48c1ffcc 	andi	r3,r9,2047
   4d4f0:	50001426 	beq	r10,zero,4d544 <__ledf2+0x80>
   4d4f4:	1a41ffd8 	cmpnei	r9,r3,2047
   4d4f8:	48000926 	beq	r9,zero,4d520 <__ledf2+0x5c>
   4d4fc:	4000191e 	bne	r8,zero,4d564 <__ledf2+0xa0>
   4d500:	2910b03a 	or	r8,r5,r4
   4d504:	1800221e 	bne	r3,zero,4d590 <__ledf2+0xcc>
   4d508:	3986b03a 	or	r3,r7,r6
   4d50c:	18002326 	beq	r3,zero,4d59c <__ledf2+0xd8>
   4d510:	4000281e 	bne	r8,zero,4d5b4 <__ledf2+0xf0>
   4d514:	10000a1e 	bne	r2,zero,4d540 <__ledf2+0x7c>
   4d518:	00bfffc4 	movi	r2,-1
   4d51c:	f800283a 	ret
   4d520:	398eb03a 	or	r7,r7,r6
   4d524:	38000d1e 	bne	r7,zero,4d55c <__ledf2+0x98>
   4d528:	4000021e 	bne	r8,zero,4d534 <__ledf2+0x70>
   4d52c:	290ab03a 	or	r5,r5,r4
   4d530:	283ff826 	beq	r5,zero,4d514 <__ledf2+0x50>
   4d534:	58801326 	beq	r11,r2,4d584 <__ledf2+0xc0>
   4d538:	00800044 	movi	r2,1
   4d53c:	583ff61e 	bne	r11,zero,4d518 <__ledf2+0x54>
   4d540:	f800283a 	ret
   4d544:	290ab03a 	or	r5,r5,r4
   4d548:	2800041e 	bne	r5,zero,4d55c <__ledf2+0x98>
   4d54c:	1901ffe0 	cmpeqi	r4,r3,2047
   4d550:	203ff926 	beq	r4,zero,4d538 <__ledf2+0x74>
   4d554:	398eb03a 	or	r7,r7,r6
   4d558:	38001326 	beq	r7,zero,4d5a8 <__ledf2+0xe4>
   4d55c:	00800084 	movi	r2,2
   4d560:	f800283a 	ret
   4d564:	183ff426 	beq	r3,zero,4d538 <__ledf2+0x74>
   4d568:	58bff31e 	bne	r11,r2,4d538 <__ledf2+0x74>
   4d56c:	1a3ff216 	blt	r3,r8,4d538 <__ledf2+0x74>
   4d570:	40c00416 	blt	r8,r3,4d584 <__ledf2+0xc0>
   4d574:	397ff036 	bltu	r7,r5,4d538 <__ledf2+0x74>
   4d578:	29c0021e 	bne	r5,r7,4d584 <__ledf2+0xc0>
   4d57c:	313fee36 	bltu	r6,r4,4d538 <__ledf2+0x74>
   4d580:	21800a2e 	bgeu	r4,r6,4d5ac <__ledf2+0xe8>
   4d584:	583fe426 	beq	r11,zero,4d518 <__ledf2+0x54>
   4d588:	5805883a 	mov	r2,r11
   4d58c:	f800283a 	ret
   4d590:	403fe81e 	bne	r8,zero,4d534 <__ledf2+0x70>
   4d594:	103fea1e 	bne	r2,zero,4d540 <__ledf2+0x7c>
   4d598:	003fdf06 	br	4d518 <__ledf2+0x54>
   4d59c:	0005883a 	mov	r2,zero
   4d5a0:	403fe726 	beq	r8,zero,4d540 <__ledf2+0x7c>
   4d5a4:	003fe406 	br	4d538 <__ledf2+0x74>
   4d5a8:	58bfe31e 	bne	r11,r2,4d538 <__ledf2+0x74>
   4d5ac:	0005883a 	mov	r2,zero
   4d5b0:	f800283a 	ret
   4d5b4:	58bfef26 	beq	r11,r2,4d574 <__ledf2+0xb0>
   4d5b8:	003fdf06 	br	4d538 <__ledf2+0x74>

0004d5bc <__muldf3>:
   4d5bc:	defff304 	addi	sp,sp,-52
   4d5c0:	2804d53a 	srli	r2,r5,20
   4d5c4:	df000b15 	stw	fp,44(sp)
   4d5c8:	2838d7fa 	srli	fp,r5,31
   4d5cc:	00c00434 	movhi	r3,16
   4d5d0:	ddc00a15 	stw	r23,40(sp)
   4d5d4:	dd400815 	stw	r21,32(sp)
   4d5d8:	dc400415 	stw	r17,16(sp)
   4d5dc:	dc000315 	stw	r16,12(sp)
   4d5e0:	18ffffc4 	addi	r3,r3,-1
   4d5e4:	dfc00c15 	stw	ra,48(sp)
   4d5e8:	dd800915 	stw	r22,36(sp)
   4d5ec:	dd000715 	stw	r20,28(sp)
   4d5f0:	dcc00615 	stw	r19,24(sp)
   4d5f4:	dc800515 	stw	r18,20(sp)
   4d5f8:	1081ffcc 	andi	r2,r2,2047
   4d5fc:	2021883a 	mov	r16,r4
   4d600:	382f883a 	mov	r23,r7
   4d604:	28e2703a 	and	r17,r5,r3
   4d608:	e02b883a 	mov	r21,fp
   4d60c:	10009126 	beq	r2,zero,4d854 <__muldf3+0x298>
   4d610:	10c1ffe0 	cmpeqi	r3,r2,2047
   4d614:	1800a41e 	bne	r3,zero,4d8a8 <__muldf3+0x2ec>
   4d618:	882290fa 	slli	r17,r17,3
   4d61c:	2006d77a 	srli	r3,r4,29
   4d620:	202890fa 	slli	r20,r4,3
   4d624:	14ff0044 	addi	r19,r2,-1023
   4d628:	1c62b03a 	or	r17,r3,r17
   4d62c:	8c402034 	orhi	r17,r17,128
   4d630:	0025883a 	mov	r18,zero
   4d634:	000f883a 	mov	r7,zero
   4d638:	b804d53a 	srli	r2,r23,20
   4d63c:	04000434 	movhi	r16,16
   4d640:	843fffc4 	addi	r16,r16,-1
   4d644:	1081ffcc 	andi	r2,r2,2047
   4d648:	b80ad7fa 	srli	r5,r23,31
   4d64c:	302d883a 	mov	r22,r6
   4d650:	bc20703a 	and	r16,r23,r16
   4d654:	10006526 	beq	r2,zero,4d7ec <__muldf3+0x230>
   4d658:	10c1ffe0 	cmpeqi	r3,r2,2047
   4d65c:	1800291e 	bne	r3,zero,4d704 <__muldf3+0x148>
   4d660:	3006d77a 	srli	r3,r6,29
   4d664:	800890fa 	slli	r4,r16,3
   4d668:	10bf0044 	addi	r2,r2,-1023
   4d66c:	14c5883a 	add	r2,r2,r19
   4d670:	1920b03a 	or	r16,r3,r4
   4d674:	90c002c8 	cmpgei	r3,r18,11
   4d678:	302c90fa 	slli	r22,r6,3
   4d67c:	84002034 	orhi	r16,r16,128
   4d680:	0009883a 	mov	r4,zero
   4d684:	14c00044 	addi	r19,r2,1
   4d688:	18002c1e 	bne	r3,zero,4d73c <__muldf3+0x180>
   4d68c:	2f2af03a 	xor	r21,r5,fp
   4d690:	90c000c8 	cmpgei	r3,r18,3
   4d694:	1800251e 	bne	r3,zero,4d72c <__muldf3+0x170>
   4d698:	94bfffc4 	addi	r18,r18,-1
   4d69c:	948000a8 	cmpgeui	r18,r18,2
   4d6a0:	9000cb1e 	bne	r18,zero,4d9d0 <__muldf3+0x414>
   4d6a4:	208000a0 	cmpeqi	r2,r4,2
   4d6a8:	1000861e 	bne	r2,zero,4d8c4 <__muldf3+0x308>
   4d6ac:	21000060 	cmpeqi	r4,r4,1
   4d6b0:	20002b26 	beq	r4,zero,4d760 <__muldf3+0x1a4>
   4d6b4:	0009883a 	mov	r4,zero
   4d6b8:	0021883a 	mov	r16,zero
   4d6bc:	0029883a 	mov	r20,zero
   4d6c0:	2006953a 	slli	r3,r4,20
   4d6c4:	a82a97fa 	slli	r21,r21,31
   4d6c8:	a005883a 	mov	r2,r20
   4d6cc:	1c06b03a 	or	r3,r3,r16
   4d6d0:	1d46b03a 	or	r3,r3,r21
   4d6d4:	dfc00c17 	ldw	ra,48(sp)
   4d6d8:	df000b17 	ldw	fp,44(sp)
   4d6dc:	ddc00a17 	ldw	r23,40(sp)
   4d6e0:	dd800917 	ldw	r22,36(sp)
   4d6e4:	dd400817 	ldw	r21,32(sp)
   4d6e8:	dd000717 	ldw	r20,28(sp)
   4d6ec:	dcc00617 	ldw	r19,24(sp)
   4d6f0:	dc800517 	ldw	r18,20(sp)
   4d6f4:	dc400417 	ldw	r17,16(sp)
   4d6f8:	dc000317 	ldw	r16,12(sp)
   4d6fc:	dec00d04 	addi	sp,sp,52
   4d700:	f800283a 	ret
   4d704:	8186b03a 	or	r3,r16,r6
   4d708:	9881ffc4 	addi	r2,r19,2047
   4d70c:	18007726 	beq	r3,zero,4d8ec <__muldf3+0x330>
   4d710:	948000d4 	ori	r18,r18,3
   4d714:	90c002c8 	cmpgei	r3,r18,11
   4d718:	2f38f03a 	xor	fp,r5,fp
   4d71c:	9cc20004 	addi	r19,r19,2048
   4d720:	1801501e 	bne	r3,zero,4dc64 <__muldf3+0x6a8>
   4d724:	e02b883a 	mov	r21,fp
   4d728:	010000c4 	movi	r4,3
   4d72c:	00c00044 	movi	r3,1
   4d730:	1c86983a 	sll	r3,r3,r18
   4d734:	19814c0c 	andi	r6,r3,1328
   4d738:	30002326 	beq	r6,zero,4d7c8 <__muldf3+0x20c>
   4d73c:	388000a0 	cmpeqi	r2,r7,2
   4d740:	1000601e 	bne	r2,zero,4d8c4 <__muldf3+0x308>
   4d744:	388000e0 	cmpeqi	r2,r7,3
   4d748:	10010b1e 	bne	r2,zero,4db78 <__muldf3+0x5bc>
   4d74c:	3809883a 	mov	r4,r7
   4d750:	21000060 	cmpeqi	r4,r4,1
   4d754:	8821883a 	mov	r16,r17
   4d758:	a02d883a 	mov	r22,r20
   4d75c:	203fd51e 	bne	r4,zero,4d6b4 <__muldf3+0xf8>
   4d760:	98c0ffc4 	addi	r3,r19,1023
   4d764:	00c07d0e 	bge	zero,r3,4d95c <__muldf3+0x3a0>
   4d768:	b08001cc 	andi	r2,r22,7
   4d76c:	10000726 	beq	r2,zero,4d78c <__muldf3+0x1d0>
   4d770:	b08003cc 	andi	r2,r22,15
   4d774:	10800120 	cmpeqi	r2,r2,4
   4d778:	1000041e 	bne	r2,zero,4d78c <__muldf3+0x1d0>
   4d77c:	b0800104 	addi	r2,r22,4
   4d780:	15ad803a 	cmpltu	r22,r2,r22
   4d784:	85a1883a 	add	r16,r16,r22
   4d788:	102d883a 	mov	r22,r2
   4d78c:	8080402c 	andhi	r2,r16,256
   4d790:	10000426 	beq	r2,zero,4d7a4 <__muldf3+0x1e8>
   4d794:	00bfc034 	movhi	r2,65280
   4d798:	10bfffc4 	addi	r2,r2,-1
   4d79c:	80a0703a 	and	r16,r16,r2
   4d7a0:	98c10004 	addi	r3,r19,1024
   4d7a4:	1881ffc8 	cmpgei	r2,r3,2047
   4d7a8:	1000461e 	bne	r2,zero,4d8c4 <__muldf3+0x308>
   4d7ac:	8028977a 	slli	r20,r16,29
   4d7b0:	b02cd0fa 	srli	r22,r22,3
   4d7b4:	8020927a 	slli	r16,r16,9
   4d7b8:	1901ffcc 	andi	r4,r3,2047
   4d7bc:	a5a8b03a 	or	r20,r20,r22
   4d7c0:	8020d33a 	srli	r16,r16,12
   4d7c4:	003fbe06 	br	4d6c0 <__muldf3+0x104>
   4d7c8:	1980900c 	andi	r6,r3,576
   4d7cc:	3000411e 	bne	r6,zero,4d8d4 <__muldf3+0x318>
   4d7d0:	18c0220c 	andi	r3,r3,136
   4d7d4:	18007e26 	beq	r3,zero,4d9d0 <__muldf3+0x414>
   4d7d8:	282b883a 	mov	r21,r5
   4d7dc:	8023883a 	mov	r17,r16
   4d7e0:	b029883a 	mov	r20,r22
   4d7e4:	200f883a 	mov	r7,r4
   4d7e8:	003fd406 	br	4d73c <__muldf3+0x180>
   4d7ec:	8184b03a 	or	r2,r16,r6
   4d7f0:	10005126 	beq	r2,zero,4d938 <__muldf3+0x37c>
   4d7f4:	d9800215 	stw	r6,8(sp)
   4d7f8:	d9400115 	stw	r5,4(sp)
   4d7fc:	d9c00015 	stw	r7,0(sp)
   4d800:	8000ec26 	beq	r16,zero,4dbb4 <__muldf3+0x5f8>
   4d804:	8009883a 	mov	r4,r16
   4d808:	00417180 	call	41718 <__clzsi2>
   4d80c:	d9c00017 	ldw	r7,0(sp)
   4d810:	d9400117 	ldw	r5,4(sp)
   4d814:	d9800217 	ldw	r6,8(sp)
   4d818:	113ffd44 	addi	r4,r2,-11
   4d81c:	00c00744 	movi	r3,29
   4d820:	15bffe04 	addi	r22,r2,-8
   4d824:	1907c83a 	sub	r3,r3,r4
   4d828:	85a0983a 	sll	r16,r16,r22
   4d82c:	30c6d83a 	srl	r3,r6,r3
   4d830:	35ac983a 	sll	r22,r6,r22
   4d834:	1c20b03a 	or	r16,r3,r16
   4d838:	9885c83a 	sub	r2,r19,r2
   4d83c:	10bf0344 	addi	r2,r2,-1011
   4d840:	90c002c8 	cmpgei	r3,r18,11
   4d844:	0009883a 	mov	r4,zero
   4d848:	14c00044 	addi	r19,r2,1
   4d84c:	183f8f26 	beq	r3,zero,4d68c <__muldf3+0xd0>
   4d850:	003fba06 	br	4d73c <__muldf3+0x180>
   4d854:	2468b03a 	or	r20,r4,r17
   4d858:	a0003226 	beq	r20,zero,4d924 <__muldf3+0x368>
   4d85c:	d9800015 	stw	r6,0(sp)
   4d860:	8800ca26 	beq	r17,zero,4db8c <__muldf3+0x5d0>
   4d864:	8809883a 	mov	r4,r17
   4d868:	00417180 	call	41718 <__clzsi2>
   4d86c:	d9800017 	ldw	r6,0(sp)
   4d870:	1009883a 	mov	r4,r2
   4d874:	117ffd44 	addi	r5,r2,-11
   4d878:	00c00744 	movi	r3,29
   4d87c:	253ffe04 	addi	r20,r4,-8
   4d880:	1947c83a 	sub	r3,r3,r5
   4d884:	8d22983a 	sll	r17,r17,r20
   4d888:	80c6d83a 	srl	r3,r16,r3
   4d88c:	8528983a 	sll	r20,r16,r20
   4d890:	1c62b03a 	or	r17,r3,r17
   4d894:	00bf0344 	movi	r2,-1011
   4d898:	1127c83a 	sub	r19,r2,r4
   4d89c:	0025883a 	mov	r18,zero
   4d8a0:	000f883a 	mov	r7,zero
   4d8a4:	003f6406 	br	4d638 <__muldf3+0x7c>
   4d8a8:	2468b03a 	or	r20,r4,r17
   4d8ac:	a000181e 	bne	r20,zero,4d910 <__muldf3+0x354>
   4d8b0:	0023883a 	mov	r17,zero
   4d8b4:	04800204 	movi	r18,8
   4d8b8:	04c1ffc4 	movi	r19,2047
   4d8bc:	01c00084 	movi	r7,2
   4d8c0:	003f5d06 	br	4d638 <__muldf3+0x7c>
   4d8c4:	0101ffc4 	movi	r4,2047
   4d8c8:	0021883a 	mov	r16,zero
   4d8cc:	0029883a 	mov	r20,zero
   4d8d0:	003f7b06 	br	4d6c0 <__muldf3+0x104>
   4d8d4:	04000434 	movhi	r16,16
   4d8d8:	002b883a 	mov	r21,zero
   4d8dc:	843fffc4 	addi	r16,r16,-1
   4d8e0:	053fffc4 	movi	r20,-1
   4d8e4:	0101ffc4 	movi	r4,2047
   4d8e8:	003f7506 	br	4d6c0 <__muldf3+0x104>
   4d8ec:	94800094 	ori	r18,r18,2
   4d8f0:	90c002c8 	cmpgei	r3,r18,11
   4d8f4:	9cc20004 	addi	r19,r19,2048
   4d8f8:	183f901e 	bne	r3,zero,4d73c <__muldf3+0x180>
   4d8fc:	2f2af03a 	xor	r21,r5,fp
   4d900:	002d883a 	mov	r22,zero
   4d904:	0021883a 	mov	r16,zero
   4d908:	01000084 	movi	r4,2
   4d90c:	003f6006 	br	4d690 <__muldf3+0xd4>
   4d910:	2029883a 	mov	r20,r4
   4d914:	04800304 	movi	r18,12
   4d918:	04c1ffc4 	movi	r19,2047
   4d91c:	01c000c4 	movi	r7,3
   4d920:	003f4506 	br	4d638 <__muldf3+0x7c>
   4d924:	0023883a 	mov	r17,zero
   4d928:	04800104 	movi	r18,4
   4d92c:	0027883a 	mov	r19,zero
   4d930:	01c00044 	movi	r7,1
   4d934:	003f4006 	br	4d638 <__muldf3+0x7c>
   4d938:	94800054 	ori	r18,r18,1
   4d93c:	9805883a 	mov	r2,r19
   4d940:	90c002c8 	cmpgei	r3,r18,11
   4d944:	0021883a 	mov	r16,zero
   4d948:	002d883a 	mov	r22,zero
   4d94c:	01000044 	movi	r4,1
   4d950:	14c00044 	addi	r19,r2,1
   4d954:	183f4d26 	beq	r3,zero,4d68c <__muldf3+0xd0>
   4d958:	003f7806 	br	4d73c <__muldf3+0x180>
   4d95c:	01000044 	movi	r4,1
   4d960:	20c9c83a 	sub	r4,r4,r3
   4d964:	20800e48 	cmpgei	r2,r4,57
   4d968:	103f521e 	bne	r2,zero,4d6b4 <__muldf3+0xf8>
   4d96c:	20800808 	cmpgei	r2,r4,32
   4d970:	1000a11e 	bne	r2,zero,4dbf8 <__muldf3+0x63c>
   4d974:	9cc10784 	addi	r19,r19,1054
   4d978:	b104d83a 	srl	r2,r22,r4
   4d97c:	84e8983a 	sll	r20,r16,r19
   4d980:	b4e6983a 	sll	r19,r22,r19
   4d984:	8108d83a 	srl	r4,r16,r4
   4d988:	a0a8b03a 	or	r20,r20,r2
   4d98c:	9826c03a 	cmpne	r19,r19,zero
   4d990:	a4e8b03a 	or	r20,r20,r19
   4d994:	a08001cc 	andi	r2,r20,7
   4d998:	10000726 	beq	r2,zero,4d9b8 <__muldf3+0x3fc>
   4d99c:	a08003cc 	andi	r2,r20,15
   4d9a0:	10800120 	cmpeqi	r2,r2,4
   4d9a4:	1000041e 	bne	r2,zero,4d9b8 <__muldf3+0x3fc>
   4d9a8:	a0800104 	addi	r2,r20,4
   4d9ac:	1529803a 	cmpltu	r20,r2,r20
   4d9b0:	2509883a 	add	r4,r4,r20
   4d9b4:	1029883a 	mov	r20,r2
   4d9b8:	2080202c 	andhi	r2,r4,128
   4d9bc:	1000a526 	beq	r2,zero,4dc54 <__muldf3+0x698>
   4d9c0:	01000044 	movi	r4,1
   4d9c4:	0021883a 	mov	r16,zero
   4d9c8:	0029883a 	mov	r20,zero
   4d9cc:	003f3c06 	br	4d6c0 <__muldf3+0x104>
   4d9d0:	a018d43a 	srli	r12,r20,16
   4d9d4:	b010d43a 	srli	r8,r22,16
   4d9d8:	a53fffcc 	andi	r20,r20,65535
   4d9dc:	b5bfffcc 	andi	r22,r22,65535
   4d9e0:	b509383a 	mul	r4,r22,r20
   4d9e4:	658d383a 	mul	r6,r12,r22
   4d9e8:	450b383a 	mul	r5,r8,r20
   4d9ec:	2006d43a 	srli	r3,r4,16
   4d9f0:	620f383a 	mul	r7,r12,r8
   4d9f4:	298b883a 	add	r5,r5,r6
   4d9f8:	1947883a 	add	r3,r3,r5
   4d9fc:	1980022e 	bgeu	r3,r6,4da08 <__muldf3+0x44c>
   4da00:	01400074 	movhi	r5,1
   4da04:	394f883a 	add	r7,r7,r5
   4da08:	8014d43a 	srli	r10,r16,16
   4da0c:	843fffcc 	andi	r16,r16,65535
   4da10:	8517383a 	mul	r11,r16,r20
   4da14:	641b383a 	mul	r13,r12,r16
   4da18:	5529383a 	mul	r20,r10,r20
   4da1c:	580ad43a 	srli	r5,r11,16
   4da20:	180c943a 	slli	r6,r3,16
   4da24:	a369883a 	add	r20,r20,r13
   4da28:	227fffcc 	andi	r9,r4,65535
   4da2c:	2d0b883a 	add	r5,r5,r20
   4da30:	1808d43a 	srli	r4,r3,16
   4da34:	6299383a 	mul	r12,r12,r10
   4da38:	324d883a 	add	r6,r6,r9
   4da3c:	2b40022e 	bgeu	r5,r13,4da48 <__muldf3+0x48c>
   4da40:	00c00074 	movhi	r3,1
   4da44:	60d9883a 	add	r12,r12,r3
   4da48:	881ad43a 	srli	r13,r17,16
   4da4c:	8c7fffcc 	andi	r17,r17,65535
   4da50:	b45f383a 	mul	r15,r22,r17
   4da54:	445d383a 	mul	r14,r8,r17
   4da58:	6dad383a 	mul	r22,r13,r22
   4da5c:	2812943a 	slli	r9,r5,16
   4da60:	7806d43a 	srli	r3,r15,16
   4da64:	280ad43a 	srli	r5,r5,16
   4da68:	5affffcc 	andi	r11,r11,65535
   4da6c:	759d883a 	add	r14,r14,r22
   4da70:	4ad3883a 	add	r9,r9,r11
   4da74:	1b87883a 	add	r3,r3,r14
   4da78:	4365383a 	mul	r18,r8,r13
   4da7c:	2b17883a 	add	r11,r5,r12
   4da80:	2249883a 	add	r4,r4,r9
   4da84:	1d80022e 	bgeu	r3,r22,4da90 <__muldf3+0x4d4>
   4da88:	01400074 	movhi	r5,1
   4da8c:	9165883a 	add	r18,r18,r5
   4da90:	8459383a 	mul	r12,r16,r17
   4da94:	5463383a 	mul	r17,r10,r17
   4da98:	6c21383a 	mul	r16,r13,r16
   4da9c:	6010d43a 	srli	r8,r12,16
   4daa0:	181cd43a 	srli	r14,r3,16
   4daa4:	180a943a 	slli	r5,r3,16
   4daa8:	8c23883a 	add	r17,r17,r16
   4daac:	78ffffcc 	andi	r3,r15,65535
   4dab0:	4451883a 	add	r8,r8,r17
   4dab4:	5355383a 	mul	r10,r10,r13
   4dab8:	749d883a 	add	r14,r14,r18
   4dabc:	28cb883a 	add	r5,r5,r3
   4dac0:	4400022e 	bgeu	r8,r16,4dacc <__muldf3+0x510>
   4dac4:	00c00074 	movhi	r3,1
   4dac8:	50d5883a 	add	r10,r10,r3
   4dacc:	4006943a 	slli	r3,r8,16
   4dad0:	633fffcc 	andi	r12,r12,65535
   4dad4:	21c9883a 	add	r4,r4,r7
   4dad8:	1b07883a 	add	r3,r3,r12
   4dadc:	2253803a 	cmpltu	r9,r4,r9
   4dae0:	1ac7883a 	add	r3,r3,r11
   4dae4:	2149883a 	add	r4,r4,r5
   4dae8:	1a5b883a 	add	r13,r3,r9
   4daec:	214b803a 	cmpltu	r5,r4,r5
   4daf0:	6b8f883a 	add	r7,r13,r14
   4daf4:	4010d43a 	srli	r8,r8,16
   4daf8:	3959883a 	add	r12,r7,r5
   4dafc:	1ae1803a 	cmpltu	r16,r3,r11
   4db00:	6a5b803a 	cmpltu	r13,r13,r9
   4db04:	614b803a 	cmpltu	r5,r12,r5
   4db08:	8360b03a 	or	r16,r16,r13
   4db0c:	3b8f803a 	cmpltu	r7,r7,r14
   4db10:	394eb03a 	or	r7,r7,r5
   4db14:	8221883a 	add	r16,r16,r8
   4db18:	202c927a 	slli	r22,r4,9
   4db1c:	81e1883a 	add	r16,r16,r7
   4db20:	82a1883a 	add	r16,r16,r10
   4db24:	8020927a 	slli	r16,r16,9
   4db28:	2008d5fa 	srli	r4,r4,23
   4db2c:	600ad5fa 	srli	r5,r12,23
   4db30:	6006927a 	slli	r3,r12,9
   4db34:	b1acb03a 	or	r22,r22,r6
   4db38:	b02cc03a 	cmpne	r22,r22,zero
   4db3c:	b12cb03a 	or	r22,r22,r4
   4db40:	8100402c 	andhi	r4,r16,256
   4db44:	b0ecb03a 	or	r22,r22,r3
   4db48:	8160b03a 	or	r16,r16,r5
   4db4c:	20002826 	beq	r4,zero,4dbf0 <__muldf3+0x634>
   4db50:	b006d07a 	srli	r3,r22,1
   4db54:	800497fa 	slli	r2,r16,31
   4db58:	b580004c 	andi	r22,r22,1
   4db5c:	1d86b03a 	or	r3,r3,r22
   4db60:	8020d07a 	srli	r16,r16,1
   4db64:	18acb03a 	or	r22,r3,r2
   4db68:	003efd06 	br	4d760 <__muldf3+0x1a4>
   4db6c:	282b883a 	mov	r21,r5
   4db70:	8023883a 	mov	r17,r16
   4db74:	3029883a 	mov	r20,r6
   4db78:	00800434 	movhi	r2,16
   4db7c:	8c000234 	orhi	r16,r17,8
   4db80:	10bfffc4 	addi	r2,r2,-1
   4db84:	80a0703a 	and	r16,r16,r2
   4db88:	003f5606 	br	4d8e4 <__muldf3+0x328>
   4db8c:	00417180 	call	41718 <__clzsi2>
   4db90:	11400544 	addi	r5,r2,21
   4db94:	28c00748 	cmpgei	r3,r5,29
   4db98:	d9800017 	ldw	r6,0(sp)
   4db9c:	11000804 	addi	r4,r2,32
   4dba0:	183f3526 	beq	r3,zero,4d878 <__muldf3+0x2bc>
   4dba4:	10bffe04 	addi	r2,r2,-8
   4dba8:	80a2983a 	sll	r17,r16,r2
   4dbac:	0029883a 	mov	r20,zero
   4dbb0:	003f3806 	br	4d894 <__muldf3+0x2d8>
   4dbb4:	3009883a 	mov	r4,r6
   4dbb8:	00417180 	call	41718 <__clzsi2>
   4dbbc:	11000544 	addi	r4,r2,21
   4dbc0:	22000748 	cmpgei	r8,r4,29
   4dbc4:	1007883a 	mov	r3,r2
   4dbc8:	d9c00017 	ldw	r7,0(sp)
   4dbcc:	d9400117 	ldw	r5,4(sp)
   4dbd0:	d9800217 	ldw	r6,8(sp)
   4dbd4:	10800804 	addi	r2,r2,32
   4dbd8:	403f1026 	beq	r8,zero,4d81c <__muldf3+0x260>
   4dbdc:	18fffe04 	addi	r3,r3,-8
   4dbe0:	b0c6983a 	sll	r3,r22,r3
   4dbe4:	002d883a 	mov	r22,zero
   4dbe8:	1821883a 	mov	r16,r3
   4dbec:	003f1206 	br	4d838 <__muldf3+0x27c>
   4dbf0:	1027883a 	mov	r19,r2
   4dbf4:	003eda06 	br	4d760 <__muldf3+0x1a4>
   4dbf8:	00bff844 	movi	r2,-31
   4dbfc:	10c7c83a 	sub	r3,r2,r3
   4dc00:	21000820 	cmpeqi	r4,r4,32
   4dc04:	80c6d83a 	srl	r3,r16,r3
   4dc08:	2000031e 	bne	r4,zero,4dc18 <__muldf3+0x65c>
   4dc0c:	9cc10f84 	addi	r19,r19,1086
   4dc10:	84e6983a 	sll	r19,r16,r19
   4dc14:	b4ecb03a 	or	r22,r22,r19
   4dc18:	b028c03a 	cmpne	r20,r22,zero
   4dc1c:	a0e8b03a 	or	r20,r20,r3
   4dc20:	a08001cc 	andi	r2,r20,7
   4dc24:	1000051e 	bne	r2,zero,4dc3c <__muldf3+0x680>
   4dc28:	0021883a 	mov	r16,zero
   4dc2c:	a028d0fa 	srli	r20,r20,3
   4dc30:	0009883a 	mov	r4,zero
   4dc34:	a0a8b03a 	or	r20,r20,r2
   4dc38:	003ea106 	br	4d6c0 <__muldf3+0x104>
   4dc3c:	a08003cc 	andi	r2,r20,15
   4dc40:	10800120 	cmpeqi	r2,r2,4
   4dc44:	1000111e 	bne	r2,zero,4dc8c <__muldf3+0x6d0>
   4dc48:	a0800104 	addi	r2,r20,4
   4dc4c:	1509803a 	cmpltu	r4,r2,r20
   4dc50:	1029883a 	mov	r20,r2
   4dc54:	2020927a 	slli	r16,r4,9
   4dc58:	2004977a 	slli	r2,r4,29
   4dc5c:	8020d33a 	srli	r16,r16,12
   4dc60:	003ff206 	br	4dc2c <__muldf3+0x670>
   4dc64:	948003e0 	cmpeqi	r18,r18,15
   4dc68:	903fc026 	beq	r18,zero,4db6c <__muldf3+0x5b0>
   4dc6c:	8880022c 	andhi	r2,r17,8
   4dc70:	103fc126 	beq	r2,zero,4db78 <__muldf3+0x5bc>
   4dc74:	b9c0022c 	andhi	r7,r23,8
   4dc78:	383fbf1e 	bne	r7,zero,4db78 <__muldf3+0x5bc>
   4dc7c:	84000234 	orhi	r16,r16,8
   4dc80:	282b883a 	mov	r21,r5
   4dc84:	3029883a 	mov	r20,r6
   4dc88:	003f1606 	br	4d8e4 <__muldf3+0x328>
   4dc8c:	0009883a 	mov	r4,zero
   4dc90:	003ff006 	br	4dc54 <__muldf3+0x698>

0004dc94 <__subdf3>:
   4dc94:	00800434 	movhi	r2,16
   4dc98:	3806d53a 	srli	r3,r7,20
   4dc9c:	10bfffc4 	addi	r2,r2,-1
   4dca0:	defffa04 	addi	sp,sp,-24
   4dca4:	2890703a 	and	r8,r5,r2
   4dca8:	3884703a 	and	r2,r7,r2
   4dcac:	2812d7fa 	srli	r9,r5,31
   4dcb0:	401090fa 	slli	r8,r8,3
   4dcb4:	280ad53a 	srli	r5,r5,20
   4dcb8:	100490fa 	slli	r2,r2,3
   4dcbc:	3016d77a 	srli	r11,r6,29
   4dcc0:	dc400115 	stw	r17,4(sp)
   4dcc4:	2022d77a 	srli	r17,r4,29
   4dcc8:	18c1ffcc 	andi	r3,r3,2047
   4dccc:	dd000415 	stw	r20,16(sp)
   4dcd0:	dcc00315 	stw	r19,12(sp)
   4dcd4:	dc000015 	stw	r16,0(sp)
   4dcd8:	dfc00515 	stw	ra,20(sp)
   4dcdc:	dc800215 	stw	r18,8(sp)
   4dce0:	1a81ffd8 	cmpnei	r10,r3,2047
   4dce4:	2c01ffcc 	andi	r16,r5,2047
   4dce8:	380ed7fa 	srli	r7,r7,31
   4dcec:	201890fa 	slli	r12,r4,3
   4dcf0:	301a90fa 	slli	r13,r6,3
   4dcf4:	4829883a 	mov	r20,r9
   4dcf8:	4cc03fcc 	andi	r19,r9,255
   4dcfc:	8a22b03a 	or	r17,r17,r8
   4dd00:	588ab03a 	or	r5,r11,r2
   4dd04:	50007126 	beq	r10,zero,4decc <__subdf3+0x238>
   4dd08:	39c0005c 	xori	r7,r7,1
   4dd0c:	3813883a 	mov	r9,r7
   4dd10:	3a803fcc 	andi	r10,r7,255
   4dd14:	80d1c83a 	sub	r8,r16,r3
   4dd18:	99c05526 	beq	r19,r7,4de70 <__subdf3+0x1dc>
   4dd1c:	0202320e 	bge	zero,r8,4e5e8 <__subdf3+0x954>
   4dd20:	18008426 	beq	r3,zero,4df34 <__subdf3+0x2a0>
   4dd24:	8081ffe0 	cmpeqi	r2,r16,2047
   4dd28:	10011b1e 	bne	r2,zero,4e198 <__subdf3+0x504>
   4dd2c:	40800e48 	cmpgei	r2,r8,57
   4dd30:	1000881e 	bne	r2,zero,4df54 <__subdf3+0x2c0>
   4dd34:	29402034 	orhi	r5,r5,128
   4dd38:	40800808 	cmpgei	r2,r8,32
   4dd3c:	1001451e 	bne	r2,zero,4e254 <__subdf3+0x5c0>
   4dd40:	00800804 	movi	r2,32
   4dd44:	1205c83a 	sub	r2,r2,r8
   4dd48:	28a4983a 	sll	r18,r5,r2
   4dd4c:	6a06d83a 	srl	r3,r13,r8
   4dd50:	6884983a 	sll	r2,r13,r2
   4dd54:	2a10d83a 	srl	r8,r5,r8
   4dd58:	90e4b03a 	or	r18,r18,r3
   4dd5c:	1004c03a 	cmpne	r2,r2,zero
   4dd60:	90a4b03a 	or	r18,r18,r2
   4dd64:	8a23c83a 	sub	r17,r17,r8
   4dd68:	64a5c83a 	sub	r18,r12,r18
   4dd6c:	6485803a 	cmpltu	r2,r12,r18
   4dd70:	88a3c83a 	sub	r17,r17,r2
   4dd74:	8880202c 	andhi	r2,r17,128
   4dd78:	1000ae26 	beq	r2,zero,4e034 <__subdf3+0x3a0>
   4dd7c:	00802034 	movhi	r2,128
   4dd80:	10bfffc4 	addi	r2,r2,-1
   4dd84:	88a2703a 	and	r17,r17,r2
   4dd88:	8800de26 	beq	r17,zero,4e104 <__subdf3+0x470>
   4dd8c:	8809883a 	mov	r4,r17
   4dd90:	00417180 	call	41718 <__clzsi2>
   4dd94:	10fffe04 	addi	r3,r2,-8
   4dd98:	01000804 	movi	r4,32
   4dd9c:	20c5c83a 	sub	r2,r4,r3
   4dda0:	9084d83a 	srl	r2,r18,r2
   4dda4:	88e2983a 	sll	r17,r17,r3
   4dda8:	90e4983a 	sll	r18,r18,r3
   4ddac:	1444b03a 	or	r2,r2,r17
   4ddb0:	1c010516 	blt	r3,r16,4e1c8 <__subdf3+0x534>
   4ddb4:	1c07c83a 	sub	r3,r3,r16
   4ddb8:	18c00044 	addi	r3,r3,1
   4ddbc:	20c9c83a 	sub	r4,r4,r3
   4ddc0:	910a983a 	sll	r5,r18,r4
   4ddc4:	90e2d83a 	srl	r17,r18,r3
   4ddc8:	280ac03a 	cmpne	r5,r5,zero
   4ddcc:	1108983a 	sll	r4,r2,r4
   4ddd0:	894ab03a 	or	r5,r17,r5
   4ddd4:	10e2d83a 	srl	r17,r2,r3
   4ddd8:	0021883a 	mov	r16,zero
   4dddc:	2164b03a 	or	r18,r4,r5
   4dde0:	908001cc 	andi	r2,r18,7
   4dde4:	10000726 	beq	r2,zero,4de04 <__subdf3+0x170>
   4dde8:	908003cc 	andi	r2,r18,15
   4ddec:	10800120 	cmpeqi	r2,r2,4
   4ddf0:	1000041e 	bne	r2,zero,4de04 <__subdf3+0x170>
   4ddf4:	90800104 	addi	r2,r18,4
   4ddf8:	14a5803a 	cmpltu	r18,r2,r18
   4ddfc:	8ca3883a 	add	r17,r17,r18
   4de00:	1025883a 	mov	r18,r2
   4de04:	8880202c 	andhi	r2,r17,128
   4de08:	1000d726 	beq	r2,zero,4e168 <__subdf3+0x4d4>
   4de0c:	8081ffa0 	cmpeqi	r2,r16,2046
   4de10:	84000044 	addi	r16,r16,1
   4de14:	10007c1e 	bne	r2,zero,4e008 <__subdf3+0x374>
   4de18:	013fe034 	movhi	r4,65408
   4de1c:	213fffc4 	addi	r4,r4,-1
   4de20:	8908703a 	and	r4,r17,r4
   4de24:	2004977a 	slli	r2,r4,29
   4de28:	2008927a 	slli	r4,r4,9
   4de2c:	9024d0fa 	srli	r18,r18,3
   4de30:	80c1ffcc 	andi	r3,r16,2047
   4de34:	2008d33a 	srli	r4,r4,12
   4de38:	1484b03a 	or	r2,r2,r18
   4de3c:	9d00004c 	andi	r20,r19,1
   4de40:	1806953a 	slli	r3,r3,20
   4de44:	a02897fa 	slli	r20,r20,31
   4de48:	1906b03a 	or	r3,r3,r4
   4de4c:	1d06b03a 	or	r3,r3,r20
   4de50:	dfc00517 	ldw	ra,20(sp)
   4de54:	dd000417 	ldw	r20,16(sp)
   4de58:	dcc00317 	ldw	r19,12(sp)
   4de5c:	dc800217 	ldw	r18,8(sp)
   4de60:	dc400117 	ldw	r17,4(sp)
   4de64:	dc000017 	ldw	r16,0(sp)
   4de68:	dec00604 	addi	sp,sp,24
   4de6c:	f800283a 	ret
   4de70:	0201e60e 	bge	zero,r8,4e60c <__subdf3+0x978>
   4de74:	18004d1e 	bne	r3,zero,4dfac <__subdf3+0x318>
   4de78:	2b44b03a 	or	r2,r5,r13
   4de7c:	1000d026 	beq	r2,zero,4e1c0 <__subdf3+0x52c>
   4de80:	823fffc4 	addi	r8,r16,-1
   4de84:	40006426 	beq	r8,zero,4e018 <__subdf3+0x384>
   4de88:	8081ffe0 	cmpeqi	r2,r16,2047
   4de8c:	10018e1e 	bne	r2,zero,4e4c8 <__subdf3+0x834>
   4de90:	40800e48 	cmpgei	r2,r8,57
   4de94:	1000491e 	bne	r2,zero,4dfbc <__subdf3+0x328>
   4de98:	40800808 	cmpgei	r2,r8,32
   4de9c:	1001431e 	bne	r2,zero,4e3ac <__subdf3+0x718>
   4dea0:	00800804 	movi	r2,32
   4dea4:	1205c83a 	sub	r2,r2,r8
   4dea8:	28a4983a 	sll	r18,r5,r2
   4deac:	6a06d83a 	srl	r3,r13,r8
   4deb0:	6884983a 	sll	r2,r13,r2
   4deb4:	2a10d83a 	srl	r8,r5,r8
   4deb8:	90e4b03a 	or	r18,r18,r3
   4debc:	1004c03a 	cmpne	r2,r2,zero
   4dec0:	90a4b03a 	or	r18,r18,r2
   4dec4:	8a23883a 	add	r17,r17,r8
   4dec8:	00003d06 	br	4dfc0 <__subdf3+0x32c>
   4decc:	2b44b03a 	or	r2,r5,r13
   4ded0:	823e0044 	addi	r8,r16,-2047
   4ded4:	1000211e 	bne	r2,zero,4df5c <__subdf3+0x2c8>
   4ded8:	39c0005c 	xori	r7,r7,1
   4dedc:	3813883a 	mov	r9,r7
   4dee0:	3a803fcc 	andi	r10,r7,255
   4dee4:	99c06b26 	beq	r19,r7,4e094 <__subdf3+0x400>
   4dee8:	40005526 	beq	r8,zero,4e040 <__subdf3+0x3ac>
   4deec:	8000201e 	bne	r16,zero,4df70 <__subdf3+0x2dc>
   4def0:	0401ffc4 	movi	r16,2047
   4def4:	8b04b03a 	or	r2,r17,r12
   4def8:	1000ae26 	beq	r2,zero,4e1b4 <__subdf3+0x520>
   4defc:	80bfffc4 	addi	r2,r16,-1
   4df00:	10015e26 	beq	r2,zero,4e47c <__subdf3+0x7e8>
   4df04:	8401ffe0 	cmpeqi	r16,r16,2047
   4df08:	8001801e 	bne	r16,zero,4e50c <__subdf3+0x878>
   4df0c:	11000e48 	cmpgei	r4,r2,57
   4df10:	5027883a 	mov	r19,r10
   4df14:	4829883a 	mov	r20,r9
   4df18:	20011326 	beq	r4,zero,4e368 <__subdf3+0x6d4>
   4df1c:	04800044 	movi	r18,1
   4df20:	6ca5c83a 	sub	r18,r13,r18
   4df24:	6c9b803a 	cmpltu	r13,r13,r18
   4df28:	2b63c83a 	sub	r17,r5,r13
   4df2c:	1821883a 	mov	r16,r3
   4df30:	003f9006 	br	4dd74 <__subdf3+0xe0>
   4df34:	2b44b03a 	or	r2,r5,r13
   4df38:	1000a126 	beq	r2,zero,4e1c0 <__subdf3+0x52c>
   4df3c:	823fffc4 	addi	r8,r16,-1
   4df40:	4000fe26 	beq	r8,zero,4e33c <__subdf3+0x6a8>
   4df44:	8081ffe0 	cmpeqi	r2,r16,2047
   4df48:	1000931e 	bne	r2,zero,4e198 <__subdf3+0x504>
   4df4c:	40800e48 	cmpgei	r2,r8,57
   4df50:	103f7926 	beq	r2,zero,4dd38 <__subdf3+0xa4>
   4df54:	04800044 	movi	r18,1
   4df58:	003f8306 	br	4dd68 <__subdf3+0xd4>
   4df5c:	3a803fcc 	andi	r10,r7,255
   4df60:	99c04c26 	beq	r19,r7,4e094 <__subdf3+0x400>
   4df64:	40003626 	beq	r8,zero,4e040 <__subdf3+0x3ac>
   4df68:	3813883a 	mov	r9,r7
   4df6c:	803fe026 	beq	r16,zero,4def0 <__subdf3+0x25c>
   4df70:	2804977a 	slli	r2,r5,29
   4df74:	00c80034 	movhi	r3,8192
   4df78:	18ffffc4 	addi	r3,r3,-1
   4df7c:	280ad0fa 	srli	r5,r5,3
   4df80:	30c6703a 	and	r3,r6,r3
   4df84:	10c4b03a 	or	r2,r2,r3
   4df88:	4829883a 	mov	r20,r9
   4df8c:	1146b03a 	or	r3,r2,r5
   4df90:	18019126 	beq	r3,zero,4e5d8 <__subdf3+0x944>
   4df94:	00c00434 	movhi	r3,16
   4df98:	18ffffc4 	addi	r3,r3,-1
   4df9c:	29000234 	orhi	r4,r5,8
   4dfa0:	20c8703a 	and	r4,r4,r3
   4dfa4:	00c1ffc4 	movi	r3,2047
   4dfa8:	003fa506 	br	4de40 <__subdf3+0x1ac>
   4dfac:	8081ffe0 	cmpeqi	r2,r16,2047
   4dfb0:	1000791e 	bne	r2,zero,4e198 <__subdf3+0x504>
   4dfb4:	40800e48 	cmpgei	r2,r8,57
   4dfb8:	1000b126 	beq	r2,zero,4e280 <__subdf3+0x5ec>
   4dfbc:	04800044 	movi	r18,1
   4dfc0:	9325883a 	add	r18,r18,r12
   4dfc4:	9305803a 	cmpltu	r2,r18,r12
   4dfc8:	88a3883a 	add	r17,r17,r2
   4dfcc:	8880202c 	andhi	r2,r17,128
   4dfd0:	10001826 	beq	r2,zero,4e034 <__subdf3+0x3a0>
   4dfd4:	84000044 	addi	r16,r16,1
   4dfd8:	8081ffe0 	cmpeqi	r2,r16,2047
   4dfdc:	10000a1e 	bne	r2,zero,4e008 <__subdf3+0x374>
   4dfe0:	00bfe034 	movhi	r2,65408
   4dfe4:	10bfffc4 	addi	r2,r2,-1
   4dfe8:	9006d07a 	srli	r3,r18,1
   4dfec:	8884703a 	and	r2,r17,r2
   4dff0:	100897fa 	slli	r4,r2,31
   4dff4:	9480004c 	andi	r18,r18,1
   4dff8:	1c86b03a 	or	r3,r3,r18
   4dffc:	1022d07a 	srli	r17,r2,1
   4e000:	20e4b03a 	or	r18,r4,r3
   4e004:	003f7606 	br	4dde0 <__subdf3+0x14c>
   4e008:	00c1ffc4 	movi	r3,2047
   4e00c:	0009883a 	mov	r4,zero
   4e010:	0005883a 	mov	r2,zero
   4e014:	003f8a06 	br	4de40 <__subdf3+0x1ac>
   4e018:	6365883a 	add	r18,r12,r13
   4e01c:	894b883a 	add	r5,r17,r5
   4e020:	9305803a 	cmpltu	r2,r18,r12
   4e024:	28a3883a 	add	r17,r5,r2
   4e028:	8880202c 	andhi	r2,r17,128
   4e02c:	1001241e 	bne	r2,zero,4e4c0 <__subdf3+0x82c>
   4e030:	04000044 	movi	r16,1
   4e034:	908001cc 	andi	r2,r18,7
   4e038:	103f6b1e 	bne	r2,zero,4dde8 <__subdf3+0x154>
   4e03c:	00007906 	br	4e224 <__subdf3+0x590>
   4e040:	80800044 	addi	r2,r16,1
   4e044:	1081ff8c 	andi	r2,r2,2046
   4e048:	1000781e 	bne	r2,zero,4e22c <__subdf3+0x598>
   4e04c:	2b44b03a 	or	r2,r5,r13
   4e050:	8b06b03a 	or	r3,r17,r12
   4e054:	8000af1e 	bne	r16,zero,4e314 <__subdf3+0x680>
   4e058:	18011026 	beq	r3,zero,4e49c <__subdf3+0x808>
   4e05c:	1000de26 	beq	r2,zero,4e3d8 <__subdf3+0x744>
   4e060:	6365c83a 	sub	r18,r12,r13
   4e064:	6485803a 	cmpltu	r2,r12,r18
   4e068:	8947c83a 	sub	r3,r17,r5
   4e06c:	1887c83a 	sub	r3,r3,r2
   4e070:	1880202c 	andhi	r2,r3,128
   4e074:	10014426 	beq	r2,zero,4e588 <__subdf3+0x8f4>
   4e078:	6b25c83a 	sub	r18,r13,r12
   4e07c:	2c4bc83a 	sub	r5,r5,r17
   4e080:	6c9b803a 	cmpltu	r13,r13,r18
   4e084:	2b63c83a 	sub	r17,r5,r13
   4e088:	5029883a 	mov	r20,r10
   4e08c:	5027883a 	mov	r19,r10
   4e090:	003f5306 	br	4dde0 <__subdf3+0x14c>
   4e094:	40005126 	beq	r8,zero,4e1dc <__subdf3+0x548>
   4e098:	80007b1e 	bne	r16,zero,4e288 <__subdf3+0x5f4>
   4e09c:	0401ffc4 	movi	r16,2047
   4e0a0:	8b04b03a 	or	r2,r17,r12
   4e0a4:	10010f26 	beq	r2,zero,4e4e4 <__subdf3+0x850>
   4e0a8:	80bfffc4 	addi	r2,r16,-1
   4e0ac:	10012a26 	beq	r2,zero,4e558 <__subdf3+0x8c4>
   4e0b0:	8401ffe0 	cmpeqi	r16,r16,2047
   4e0b4:	80013d1e 	bne	r16,zero,4e5ac <__subdf3+0x918>
   4e0b8:	11000e48 	cmpgei	r4,r2,57
   4e0bc:	2000cd1e 	bne	r4,zero,4e3f4 <__subdf3+0x760>
   4e0c0:	11000808 	cmpgei	r4,r2,32
   4e0c4:	2001191e 	bne	r4,zero,4e52c <__subdf3+0x898>
   4e0c8:	01000804 	movi	r4,32
   4e0cc:	2089c83a 	sub	r4,r4,r2
   4e0d0:	8924983a 	sll	r18,r17,r4
   4e0d4:	608cd83a 	srl	r6,r12,r2
   4e0d8:	6108983a 	sll	r4,r12,r4
   4e0dc:	8884d83a 	srl	r2,r17,r2
   4e0e0:	91a4b03a 	or	r18,r18,r6
   4e0e4:	2008c03a 	cmpne	r4,r4,zero
   4e0e8:	9124b03a 	or	r18,r18,r4
   4e0ec:	288b883a 	add	r5,r5,r2
   4e0f0:	9365883a 	add	r18,r18,r13
   4e0f4:	935b803a 	cmpltu	r13,r18,r13
   4e0f8:	6963883a 	add	r17,r13,r5
   4e0fc:	1821883a 	mov	r16,r3
   4e100:	003fb206 	br	4dfcc <__subdf3+0x338>
   4e104:	9009883a 	mov	r4,r18
   4e108:	00417180 	call	41718 <__clzsi2>
   4e10c:	10c00604 	addi	r3,r2,24
   4e110:	19000808 	cmpgei	r4,r3,32
   4e114:	203f2026 	beq	r4,zero,4dd98 <__subdf3+0x104>
   4e118:	10bffe04 	addi	r2,r2,-8
   4e11c:	9084983a 	sll	r2,r18,r2
   4e120:	1c006016 	blt	r3,r16,4e2a4 <__subdf3+0x610>
   4e124:	1c25c83a 	sub	r18,r3,r16
   4e128:	90c00044 	addi	r3,r18,1
   4e12c:	19000808 	cmpgei	r4,r3,32
   4e130:	20012526 	beq	r4,zero,4e5c8 <__subdf3+0x934>
   4e134:	94bff844 	addi	r18,r18,-31
   4e138:	19000820 	cmpeqi	r4,r3,32
   4e13c:	14a4d83a 	srl	r18,r2,r18
   4e140:	2000051e 	bne	r4,zero,4e158 <__subdf3+0x4c4>
   4e144:	01001004 	movi	r4,64
   4e148:	20c7c83a 	sub	r3,r4,r3
   4e14c:	10c4983a 	sll	r2,r2,r3
   4e150:	1004c03a 	cmpne	r2,r2,zero
   4e154:	90a4b03a 	or	r18,r18,r2
   4e158:	908001cc 	andi	r2,r18,7
   4e15c:	0021883a 	mov	r16,zero
   4e160:	103f211e 	bne	r2,zero,4dde8 <__subdf3+0x154>
   4e164:	00002f06 	br	4e224 <__subdf3+0x590>
   4e168:	9004d0fa 	srli	r2,r18,3
   4e16c:	8808977a 	slli	r4,r17,29
   4e170:	80c1ffe0 	cmpeqi	r3,r16,2047
   4e174:	880ad0fa 	srli	r5,r17,3
   4e178:	2084b03a 	or	r2,r4,r2
   4e17c:	183f831e 	bne	r3,zero,4df8c <__subdf3+0x2f8>
   4e180:	01000434 	movhi	r4,16
   4e184:	213fffc4 	addi	r4,r4,-1
   4e188:	2908703a 	and	r4,r5,r4
   4e18c:	80c1ffcc 	andi	r3,r16,2047
   4e190:	003f2b06 	br	4de40 <__subdf3+0x1ac>
   4e194:	1000a71e 	bne	r2,zero,4e434 <__subdf3+0x7a0>
   4e198:	8806977a 	slli	r3,r17,29
   4e19c:	00880034 	movhi	r2,8192
   4e1a0:	10bfffc4 	addi	r2,r2,-1
   4e1a4:	2084703a 	and	r2,r4,r2
   4e1a8:	880ad0fa 	srli	r5,r17,3
   4e1ac:	10c4b03a 	or	r2,r2,r3
   4e1b0:	003f7606 	br	4df8c <__subdf3+0x2f8>
   4e1b4:	6819883a 	mov	r12,r13
   4e1b8:	2823883a 	mov	r17,r5
   4e1bc:	4829883a 	mov	r20,r9
   4e1c0:	6004d0fa 	srli	r2,r12,3
   4e1c4:	003fe906 	br	4e16c <__subdf3+0x4d8>
   4e1c8:	047fe034 	movhi	r17,65408
   4e1cc:	8c7fffc4 	addi	r17,r17,-1
   4e1d0:	80e1c83a 	sub	r16,r16,r3
   4e1d4:	1462703a 	and	r17,r2,r17
   4e1d8:	003f0106 	br	4dde0 <__subdf3+0x14c>
   4e1dc:	80c00044 	addi	r3,r16,1
   4e1e0:	1881ff8c 	andi	r2,r3,2046
   4e1e4:	1000361e 	bne	r2,zero,4e2c0 <__subdf3+0x62c>
   4e1e8:	8b04b03a 	or	r2,r17,r12
   4e1ec:	80008e1e 	bne	r16,zero,4e428 <__subdf3+0x794>
   4e1f0:	1000bf26 	beq	r2,zero,4e4f0 <__subdf3+0x85c>
   4e1f4:	2b44b03a 	or	r2,r5,r13
   4e1f8:	10007726 	beq	r2,zero,4e3d8 <__subdf3+0x744>
   4e1fc:	6365883a 	add	r18,r12,r13
   4e200:	9305803a 	cmpltu	r2,r18,r12
   4e204:	894b883a 	add	r5,r17,r5
   4e208:	28a3883a 	add	r17,r5,r2
   4e20c:	8880202c 	andhi	r2,r17,128
   4e210:	10000426 	beq	r2,zero,4e224 <__subdf3+0x590>
   4e214:	00bfe034 	movhi	r2,65408
   4e218:	10bfffc4 	addi	r2,r2,-1
   4e21c:	88a2703a 	and	r17,r17,r2
   4e220:	04000044 	movi	r16,1
   4e224:	9019883a 	mov	r12,r18
   4e228:	003fe506 	br	4e1c0 <__subdf3+0x52c>
   4e22c:	6365c83a 	sub	r18,r12,r13
   4e230:	6485803a 	cmpltu	r2,r12,r18
   4e234:	8947c83a 	sub	r3,r17,r5
   4e238:	1887c83a 	sub	r3,r3,r2
   4e23c:	1880202c 	andhi	r2,r3,128
   4e240:	10002d1e 	bne	r2,zero,4e2f8 <__subdf3+0x664>
   4e244:	90c4b03a 	or	r2,r18,r3
   4e248:	10005426 	beq	r2,zero,4e39c <__subdf3+0x708>
   4e24c:	1823883a 	mov	r17,r3
   4e250:	003ecd06 	br	4dd88 <__subdf3+0xf4>
   4e254:	40bff804 	addi	r2,r8,-32
   4e258:	40c00820 	cmpeqi	r3,r8,32
   4e25c:	2884d83a 	srl	r2,r5,r2
   4e260:	1800041e 	bne	r3,zero,4e274 <__subdf3+0x5e0>
   4e264:	00c01004 	movi	r3,64
   4e268:	1a07c83a 	sub	r3,r3,r8
   4e26c:	28c6983a 	sll	r3,r5,r3
   4e270:	68dab03a 	or	r13,r13,r3
   4e274:	6824c03a 	cmpne	r18,r13,zero
   4e278:	90a4b03a 	or	r18,r18,r2
   4e27c:	003eba06 	br	4dd68 <__subdf3+0xd4>
   4e280:	29402034 	orhi	r5,r5,128
   4e284:	003f0406 	br	4de98 <__subdf3+0x204>
   4e288:	2804977a 	slli	r2,r5,29
   4e28c:	00c80034 	movhi	r3,8192
   4e290:	18ffffc4 	addi	r3,r3,-1
   4e294:	30c6703a 	and	r3,r6,r3
   4e298:	280ad0fa 	srli	r5,r5,3
   4e29c:	10c4b03a 	or	r2,r2,r3
   4e2a0:	003f3a06 	br	4df8c <__subdf3+0x2f8>
   4e2a4:	017fe034 	movhi	r5,65408
   4e2a8:	297fffc4 	addi	r5,r5,-1
   4e2ac:	114a703a 	and	r5,r2,r5
   4e2b0:	2804977a 	slli	r2,r5,29
   4e2b4:	80e1c83a 	sub	r16,r16,r3
   4e2b8:	280ad0fa 	srli	r5,r5,3
   4e2bc:	003fb006 	br	4e180 <__subdf3+0x4ec>
   4e2c0:	1881ffe0 	cmpeqi	r2,r3,2047
   4e2c4:	103f501e 	bne	r2,zero,4e008 <__subdf3+0x374>
   4e2c8:	6349883a 	add	r4,r12,r13
   4e2cc:	894b883a 	add	r5,r17,r5
   4e2d0:	2305803a 	cmpltu	r2,r4,r12
   4e2d4:	2885883a 	add	r2,r5,r2
   4e2d8:	2008d07a 	srli	r4,r4,1
   4e2dc:	102497fa 	slli	r18,r2,31
   4e2e0:	1022d07a 	srli	r17,r2,1
   4e2e4:	208001cc 	andi	r2,r4,7
   4e2e8:	9124b03a 	or	r18,r18,r4
   4e2ec:	1821883a 	mov	r16,r3
   4e2f0:	103ebd1e 	bne	r2,zero,4dde8 <__subdf3+0x154>
   4e2f4:	003fcb06 	br	4e224 <__subdf3+0x590>
   4e2f8:	6b25c83a 	sub	r18,r13,r12
   4e2fc:	2c4bc83a 	sub	r5,r5,r17
   4e300:	6c9b803a 	cmpltu	r13,r13,r18
   4e304:	2b63c83a 	sub	r17,r5,r13
   4e308:	5029883a 	mov	r20,r10
   4e30c:	5027883a 	mov	r19,r10
   4e310:	003e9d06 	br	4dd88 <__subdf3+0xf4>
   4e314:	183f9f1e 	bne	r3,zero,4e194 <__subdf3+0x500>
   4e318:	10009f26 	beq	r2,zero,4e598 <__subdf3+0x904>
   4e31c:	2804977a 	slli	r2,r5,29
   4e320:	00c80034 	movhi	r3,8192
   4e324:	18ffffc4 	addi	r3,r3,-1
   4e328:	30c6703a 	and	r3,r6,r3
   4e32c:	280ad0fa 	srli	r5,r5,3
   4e330:	5029883a 	mov	r20,r10
   4e334:	10c4b03a 	or	r2,r2,r3
   4e338:	003f1406 	br	4df8c <__subdf3+0x2f8>
   4e33c:	6365c83a 	sub	r18,r12,r13
   4e340:	894bc83a 	sub	r5,r17,r5
   4e344:	6485803a 	cmpltu	r2,r12,r18
   4e348:	28a3c83a 	sub	r17,r5,r2
   4e34c:	04000044 	movi	r16,1
   4e350:	003e8806 	br	4dd74 <__subdf3+0xe0>
   4e354:	11000e48 	cmpgei	r4,r2,57
   4e358:	2000a81e 	bne	r4,zero,4e5fc <__subdf3+0x968>
   4e35c:	8c402034 	orhi	r17,r17,128
   4e360:	5027883a 	mov	r19,r10
   4e364:	3829883a 	mov	r20,r7
   4e368:	11000808 	cmpgei	r4,r2,32
   4e36c:	2000231e 	bne	r4,zero,4e3fc <__subdf3+0x768>
   4e370:	01000804 	movi	r4,32
   4e374:	2089c83a 	sub	r4,r4,r2
   4e378:	8924983a 	sll	r18,r17,r4
   4e37c:	608cd83a 	srl	r6,r12,r2
   4e380:	6108983a 	sll	r4,r12,r4
   4e384:	8884d83a 	srl	r2,r17,r2
   4e388:	91a4b03a 	or	r18,r18,r6
   4e38c:	2008c03a 	cmpne	r4,r4,zero
   4e390:	9124b03a 	or	r18,r18,r4
   4e394:	288bc83a 	sub	r5,r5,r2
   4e398:	003ee106 	br	4df20 <__subdf3+0x28c>
   4e39c:	0029883a 	mov	r20,zero
   4e3a0:	0007883a 	mov	r3,zero
   4e3a4:	0009883a 	mov	r4,zero
   4e3a8:	003ea506 	br	4de40 <__subdf3+0x1ac>
   4e3ac:	40bff804 	addi	r2,r8,-32
   4e3b0:	40c00820 	cmpeqi	r3,r8,32
   4e3b4:	2884d83a 	srl	r2,r5,r2
   4e3b8:	1800041e 	bne	r3,zero,4e3cc <__subdf3+0x738>
   4e3bc:	00c01004 	movi	r3,64
   4e3c0:	1a07c83a 	sub	r3,r3,r8
   4e3c4:	28c6983a 	sll	r3,r5,r3
   4e3c8:	68dab03a 	or	r13,r13,r3
   4e3cc:	6824c03a 	cmpne	r18,r13,zero
   4e3d0:	90a4b03a 	or	r18,r18,r2
   4e3d4:	003efa06 	br	4dfc0 <__subdf3+0x32c>
   4e3d8:	8806977a 	slli	r3,r17,29
   4e3dc:	00880034 	movhi	r2,8192
   4e3e0:	10bfffc4 	addi	r2,r2,-1
   4e3e4:	2084703a 	and	r2,r4,r2
   4e3e8:	880ad0fa 	srli	r5,r17,3
   4e3ec:	10c4b03a 	or	r2,r2,r3
   4e3f0:	003f6306 	br	4e180 <__subdf3+0x4ec>
   4e3f4:	04800044 	movi	r18,1
   4e3f8:	003f3d06 	br	4e0f0 <__subdf3+0x45c>
   4e3fc:	113ff804 	addi	r4,r2,-32
   4e400:	11800820 	cmpeqi	r6,r2,32
   4e404:	8908d83a 	srl	r4,r17,r4
   4e408:	3000041e 	bne	r6,zero,4e41c <__subdf3+0x788>
   4e40c:	01801004 	movi	r6,64
   4e410:	3085c83a 	sub	r2,r6,r2
   4e414:	8884983a 	sll	r2,r17,r2
   4e418:	6098b03a 	or	r12,r12,r2
   4e41c:	6024c03a 	cmpne	r18,r12,zero
   4e420:	9124b03a 	or	r18,r18,r4
   4e424:	003ebe06 	br	4df20 <__subdf3+0x28c>
   4e428:	10005026 	beq	r2,zero,4e56c <__subdf3+0x8d8>
   4e42c:	2b5ab03a 	or	r13,r5,r13
   4e430:	683f5926 	beq	r13,zero,4e198 <__subdf3+0x504>
   4e434:	880ed0fa 	srli	r7,r17,3
   4e438:	00c80034 	movhi	r3,8192
   4e43c:	8822977a 	slli	r17,r17,29
   4e440:	18ffffc4 	addi	r3,r3,-1
   4e444:	20c4703a 	and	r2,r4,r3
   4e448:	3900022c 	andhi	r4,r7,8
   4e44c:	1444b03a 	or	r2,r2,r17
   4e450:	20000826 	beq	r4,zero,4e474 <__subdf3+0x7e0>
   4e454:	2808d0fa 	srli	r4,r5,3
   4e458:	2200022c 	andhi	r8,r4,8
   4e45c:	4000051e 	bne	r8,zero,4e474 <__subdf3+0x7e0>
   4e460:	2804977a 	slli	r2,r5,29
   4e464:	30c6703a 	and	r3,r6,r3
   4e468:	5029883a 	mov	r20,r10
   4e46c:	1884b03a 	or	r2,r3,r2
   4e470:	200f883a 	mov	r7,r4
   4e474:	380b883a 	mov	r5,r7
   4e478:	003ec406 	br	4df8c <__subdf3+0x2f8>
   4e47c:	6b25c83a 	sub	r18,r13,r12
   4e480:	2c4bc83a 	sub	r5,r5,r17
   4e484:	6c9b803a 	cmpltu	r13,r13,r18
   4e488:	2b63c83a 	sub	r17,r5,r13
   4e48c:	4829883a 	mov	r20,r9
   4e490:	5027883a 	mov	r19,r10
   4e494:	04000044 	movi	r16,1
   4e498:	003e3606 	br	4dd74 <__subdf3+0xe0>
   4e49c:	103fbf26 	beq	r2,zero,4e39c <__subdf3+0x708>
   4e4a0:	2806977a 	slli	r3,r5,29
   4e4a4:	00880034 	movhi	r2,8192
   4e4a8:	10bfffc4 	addi	r2,r2,-1
   4e4ac:	3084703a 	and	r2,r6,r2
   4e4b0:	280ad0fa 	srli	r5,r5,3
   4e4b4:	5029883a 	mov	r20,r10
   4e4b8:	10c4b03a 	or	r2,r2,r3
   4e4bc:	003f3006 	br	4e180 <__subdf3+0x4ec>
   4e4c0:	04000084 	movi	r16,2
   4e4c4:	003ec606 	br	4dfe0 <__subdf3+0x34c>
   4e4c8:	8804977a 	slli	r2,r17,29
   4e4cc:	00c80034 	movhi	r3,8192
   4e4d0:	18ffffc4 	addi	r3,r3,-1
   4e4d4:	20c8703a 	and	r4,r4,r3
   4e4d8:	880ad0fa 	srli	r5,r17,3
   4e4dc:	1104b03a 	or	r2,r2,r4
   4e4e0:	003eaa06 	br	4df8c <__subdf3+0x2f8>
   4e4e4:	6819883a 	mov	r12,r13
   4e4e8:	2823883a 	mov	r17,r5
   4e4ec:	003f3406 	br	4e1c0 <__subdf3+0x52c>
   4e4f0:	2806977a 	slli	r3,r5,29
   4e4f4:	00880034 	movhi	r2,8192
   4e4f8:	10bfffc4 	addi	r2,r2,-1
   4e4fc:	3084703a 	and	r2,r6,r2
   4e500:	280ad0fa 	srli	r5,r5,3
   4e504:	10c4b03a 	or	r2,r2,r3
   4e508:	003f1d06 	br	4e180 <__subdf3+0x4ec>
   4e50c:	2806977a 	slli	r3,r5,29
   4e510:	00880034 	movhi	r2,8192
   4e514:	10bfffc4 	addi	r2,r2,-1
   4e518:	3084703a 	and	r2,r6,r2
   4e51c:	280ad0fa 	srli	r5,r5,3
   4e520:	10c4b03a 	or	r2,r2,r3
   4e524:	4829883a 	mov	r20,r9
   4e528:	003e9806 	br	4df8c <__subdf3+0x2f8>
   4e52c:	113ff804 	addi	r4,r2,-32
   4e530:	11800820 	cmpeqi	r6,r2,32
   4e534:	8908d83a 	srl	r4,r17,r4
   4e538:	3000041e 	bne	r6,zero,4e54c <__subdf3+0x8b8>
   4e53c:	01801004 	movi	r6,64
   4e540:	3085c83a 	sub	r2,r6,r2
   4e544:	8884983a 	sll	r2,r17,r2
   4e548:	6098b03a 	or	r12,r12,r2
   4e54c:	6024c03a 	cmpne	r18,r12,zero
   4e550:	9124b03a 	or	r18,r18,r4
   4e554:	003ee606 	br	4e0f0 <__subdf3+0x45c>
   4e558:	6365883a 	add	r18,r12,r13
   4e55c:	894b883a 	add	r5,r17,r5
   4e560:	935b803a 	cmpltu	r13,r18,r13
   4e564:	2b63883a 	add	r17,r5,r13
   4e568:	003eaf06 	br	4e028 <__subdf3+0x394>
   4e56c:	2804977a 	slli	r2,r5,29
   4e570:	00c80034 	movhi	r3,8192
   4e574:	18ffffc4 	addi	r3,r3,-1
   4e578:	30cc703a 	and	r6,r6,r3
   4e57c:	280ad0fa 	srli	r5,r5,3
   4e580:	3084b03a 	or	r2,r6,r2
   4e584:	003e8106 	br	4df8c <__subdf3+0x2f8>
   4e588:	90c4b03a 	or	r2,r18,r3
   4e58c:	103f8326 	beq	r2,zero,4e39c <__subdf3+0x708>
   4e590:	1823883a 	mov	r17,r3
   4e594:	003f2306 	br	4e224 <__subdf3+0x590>
   4e598:	01400434 	movhi	r5,16
   4e59c:	297fffc4 	addi	r5,r5,-1
   4e5a0:	00bfffc4 	movi	r2,-1
   4e5a4:	0029883a 	mov	r20,zero
   4e5a8:	003e7a06 	br	4df94 <__subdf3+0x300>
   4e5ac:	2806977a 	slli	r3,r5,29
   4e5b0:	00880034 	movhi	r2,8192
   4e5b4:	10bfffc4 	addi	r2,r2,-1
   4e5b8:	3084703a 	and	r2,r6,r2
   4e5bc:	280ad0fa 	srli	r5,r5,3
   4e5c0:	10c4b03a 	or	r2,r2,r3
   4e5c4:	003e7106 	br	4df8c <__subdf3+0x2f8>
   4e5c8:	01000804 	movi	r4,32
   4e5cc:	20c9c83a 	sub	r4,r4,r3
   4e5d0:	000b883a 	mov	r5,zero
   4e5d4:	003dfd06 	br	4ddcc <__subdf3+0x138>
   4e5d8:	0005883a 	mov	r2,zero
   4e5dc:	00c1ffc4 	movi	r3,2047
   4e5e0:	0009883a 	mov	r4,zero
   4e5e4:	003e1606 	br	4de40 <__subdf3+0x1ac>
   4e5e8:	403e9526 	beq	r8,zero,4e040 <__subdf3+0x3ac>
   4e5ec:	1c05c83a 	sub	r2,r3,r16
   4e5f0:	803f581e 	bne	r16,zero,4e354 <__subdf3+0x6c0>
   4e5f4:	1021883a 	mov	r16,r2
   4e5f8:	003e3e06 	br	4def4 <__subdf3+0x260>
   4e5fc:	5027883a 	mov	r19,r10
   4e600:	3829883a 	mov	r20,r7
   4e604:	04800044 	movi	r18,1
   4e608:	003e4506 	br	4df20 <__subdf3+0x28c>
   4e60c:	403ef326 	beq	r8,zero,4e1dc <__subdf3+0x548>
   4e610:	1c05c83a 	sub	r2,r3,r16
   4e614:	8000021e 	bne	r16,zero,4e620 <__subdf3+0x98c>
   4e618:	1021883a 	mov	r16,r2
   4e61c:	003ea006 	br	4e0a0 <__subdf3+0x40c>
   4e620:	11000e48 	cmpgei	r4,r2,57
   4e624:	203f731e 	bne	r4,zero,4e3f4 <__subdf3+0x760>
   4e628:	8c402034 	orhi	r17,r17,128
   4e62c:	003ea406 	br	4e0c0 <__subdf3+0x42c>

0004e630 <__unorddf2>:
   4e630:	2804d53a 	srli	r2,r5,20
   4e634:	3806d53a 	srli	r3,r7,20
   4e638:	02000434 	movhi	r8,16
   4e63c:	1081ffcc 	andi	r2,r2,2047
   4e640:	423fffc4 	addi	r8,r8,-1
   4e644:	1081ffd8 	cmpnei	r2,r2,2047
   4e648:	2a0a703a 	and	r5,r5,r8
   4e64c:	3a0e703a 	and	r7,r7,r8
   4e650:	18c1ffcc 	andi	r3,r3,2047
   4e654:	10000426 	beq	r2,zero,4e668 <__unorddf2+0x38>
   4e658:	18c1ffd8 	cmpnei	r3,r3,2047
   4e65c:	18000626 	beq	r3,zero,4e678 <__unorddf2+0x48>
   4e660:	0005883a 	mov	r2,zero
   4e664:	f800283a 	ret
   4e668:	290ab03a 	or	r5,r5,r4
   4e66c:	283ffa26 	beq	r5,zero,4e658 <__unorddf2+0x28>
   4e670:	00800044 	movi	r2,1
   4e674:	f800283a 	ret
   4e678:	398eb03a 	or	r7,r7,r6
   4e67c:	3804c03a 	cmpne	r2,r7,zero
   4e680:	f800283a 	ret

0004e684 <__fixdfsi>:
   4e684:	2804d53a 	srli	r2,r5,20
   4e688:	00c00434 	movhi	r3,16
   4e68c:	18ffffc4 	addi	r3,r3,-1
   4e690:	1081ffcc 	andi	r2,r2,2047
   4e694:	1180ffd0 	cmplti	r6,r2,1023
   4e698:	280ed7fa 	srli	r7,r5,31
   4e69c:	28ca703a 	and	r5,r5,r3
   4e6a0:	3000061e 	bne	r6,zero,4e6bc <__fixdfsi+0x38>
   4e6a4:	10c10790 	cmplti	r3,r2,1054
   4e6a8:	1800061e 	bne	r3,zero,4e6c4 <__fixdfsi+0x40>
   4e6ac:	00a00034 	movhi	r2,32768
   4e6b0:	10bfffc4 	addi	r2,r2,-1
   4e6b4:	3885883a 	add	r2,r7,r2
   4e6b8:	f800283a 	ret
   4e6bc:	0005883a 	mov	r2,zero
   4e6c0:	f800283a 	ret
   4e6c4:	00c10cc4 	movi	r3,1075
   4e6c8:	1887c83a 	sub	r3,r3,r2
   4e6cc:	19800808 	cmpgei	r6,r3,32
   4e6d0:	29400434 	orhi	r5,r5,16
   4e6d4:	3000071e 	bne	r6,zero,4e6f4 <__fixdfsi+0x70>
   4e6d8:	10befb44 	addi	r2,r2,-1043
   4e6dc:	2884983a 	sll	r2,r5,r2
   4e6e0:	20c8d83a 	srl	r4,r4,r3
   4e6e4:	1104b03a 	or	r2,r2,r4
   4e6e8:	383ff526 	beq	r7,zero,4e6c0 <__fixdfsi+0x3c>
   4e6ec:	0085c83a 	sub	r2,zero,r2
   4e6f0:	f800283a 	ret
   4e6f4:	00c104c4 	movi	r3,1043
   4e6f8:	1885c83a 	sub	r2,r3,r2
   4e6fc:	2884d83a 	srl	r2,r5,r2
   4e700:	003ff906 	br	4e6e8 <__fixdfsi+0x64>

0004e704 <__floatsidf>:
   4e704:	defffd04 	addi	sp,sp,-12
   4e708:	dfc00215 	stw	ra,8(sp)
   4e70c:	dc400115 	stw	r17,4(sp)
   4e710:	dc000015 	stw	r16,0(sp)
   4e714:	20001326 	beq	r4,zero,4e764 <__floatsidf+0x60>
   4e718:	2022d7fa 	srli	r17,r4,31
   4e71c:	2021883a 	mov	r16,r4
   4e720:	20002416 	blt	r4,zero,4e7b4 <__floatsidf+0xb0>
   4e724:	8009883a 	mov	r4,r16
   4e728:	00417180 	call	41718 <__clzsi2>
   4e72c:	01010784 	movi	r4,1054
   4e730:	2089c83a 	sub	r4,r4,r2
   4e734:	10c002c8 	cmpgei	r3,r2,11
   4e738:	2101ffcc 	andi	r4,r4,2047
   4e73c:	1800161e 	bne	r3,zero,4e798 <__floatsidf+0x94>
   4e740:	014002c4 	movi	r5,11
   4e744:	288bc83a 	sub	r5,r5,r2
   4e748:	814ad83a 	srl	r5,r16,r5
   4e74c:	00c00434 	movhi	r3,16
   4e750:	10800544 	addi	r2,r2,21
   4e754:	18ffffc4 	addi	r3,r3,-1
   4e758:	8084983a 	sll	r2,r16,r2
   4e75c:	28ca703a 	and	r5,r5,r3
   4e760:	00000406 	br	4e774 <__floatsidf+0x70>
   4e764:	0023883a 	mov	r17,zero
   4e768:	0009883a 	mov	r4,zero
   4e76c:	000b883a 	mov	r5,zero
   4e770:	0005883a 	mov	r2,zero
   4e774:	2008953a 	slli	r4,r4,20
   4e778:	880697fa 	slli	r3,r17,31
   4e77c:	2148b03a 	or	r4,r4,r5
   4e780:	20c6b03a 	or	r3,r4,r3
   4e784:	dfc00217 	ldw	ra,8(sp)
   4e788:	dc400117 	ldw	r17,4(sp)
   4e78c:	dc000017 	ldw	r16,0(sp)
   4e790:	dec00304 	addi	sp,sp,12
   4e794:	f800283a 	ret
   4e798:	10bffd44 	addi	r2,r2,-11
   4e79c:	808a983a 	sll	r5,r16,r2
   4e7a0:	00800434 	movhi	r2,16
   4e7a4:	10bfffc4 	addi	r2,r2,-1
   4e7a8:	288a703a 	and	r5,r5,r2
   4e7ac:	0005883a 	mov	r2,zero
   4e7b0:	003ff006 	br	4e774 <__floatsidf+0x70>
   4e7b4:	0121c83a 	sub	r16,zero,r4
   4e7b8:	003fda06 	br	4e724 <__floatsidf+0x20>

0004e7bc <__floatunsidf>:
   4e7bc:	defffe04 	addi	sp,sp,-8
   4e7c0:	dc000015 	stw	r16,0(sp)
   4e7c4:	dfc00115 	stw	ra,4(sp)
   4e7c8:	2021883a 	mov	r16,r4
   4e7cc:	20000f26 	beq	r4,zero,4e80c <__floatunsidf+0x50>
   4e7d0:	00417180 	call	41718 <__clzsi2>
   4e7d4:	00c10784 	movi	r3,1054
   4e7d8:	1887c83a 	sub	r3,r3,r2
   4e7dc:	110002c8 	cmpgei	r4,r2,11
   4e7e0:	18c1ffcc 	andi	r3,r3,2047
   4e7e4:	2000121e 	bne	r4,zero,4e830 <__floatunsidf+0x74>
   4e7e8:	010002c4 	movi	r4,11
   4e7ec:	2089c83a 	sub	r4,r4,r2
   4e7f0:	8108d83a 	srl	r4,r16,r4
   4e7f4:	01400434 	movhi	r5,16
   4e7f8:	10800544 	addi	r2,r2,21
   4e7fc:	297fffc4 	addi	r5,r5,-1
   4e800:	80a0983a 	sll	r16,r16,r2
   4e804:	214a703a 	and	r5,r4,r5
   4e808:	00000206 	br	4e814 <__floatunsidf+0x58>
   4e80c:	0007883a 	mov	r3,zero
   4e810:	000b883a 	mov	r5,zero
   4e814:	1806953a 	slli	r3,r3,20
   4e818:	8005883a 	mov	r2,r16
   4e81c:	1946b03a 	or	r3,r3,r5
   4e820:	dfc00117 	ldw	ra,4(sp)
   4e824:	dc000017 	ldw	r16,0(sp)
   4e828:	dec00204 	addi	sp,sp,8
   4e82c:	f800283a 	ret
   4e830:	117ffd44 	addi	r5,r2,-11
   4e834:	814a983a 	sll	r5,r16,r5
   4e838:	00800434 	movhi	r2,16
   4e83c:	10bfffc4 	addi	r2,r2,-1
   4e840:	288a703a 	and	r5,r5,r2
   4e844:	0021883a 	mov	r16,zero
   4e848:	003ff206 	br	4e814 <__floatunsidf+0x58>

0004e84c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e84c:	defffe04 	addi	sp,sp,-8
   4e850:	dfc00115 	stw	ra,4(sp)
   4e854:	df000015 	stw	fp,0(sp)
   4e858:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e85c:	d0a00917 	ldw	r2,-32732(gp)
   4e860:	10000326 	beq	r2,zero,4e870 <alt_get_errno+0x24>
   4e864:	d0a00917 	ldw	r2,-32732(gp)
   4e868:	103ee83a 	callr	r2
   4e86c:	00000106 	br	4e874 <alt_get_errno+0x28>
   4e870:	d0a70a04 	addi	r2,gp,-25560
}
   4e874:	e037883a 	mov	sp,fp
   4e878:	dfc00117 	ldw	ra,4(sp)
   4e87c:	df000017 	ldw	fp,0(sp)
   4e880:	dec00204 	addi	sp,sp,8
   4e884:	f800283a 	ret

0004e888 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4e888:	defffb04 	addi	sp,sp,-20
   4e88c:	dfc00415 	stw	ra,16(sp)
   4e890:	df000315 	stw	fp,12(sp)
   4e894:	df000304 	addi	fp,sp,12
   4e898:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4e89c:	e0bffd17 	ldw	r2,-12(fp)
   4e8a0:	10000616 	blt	r2,zero,4e8bc <close+0x34>
   4e8a4:	e0bffd17 	ldw	r2,-12(fp)
   4e8a8:	10c00324 	muli	r3,r2,12
   4e8ac:	00800174 	movhi	r2,5
   4e8b0:	1088b704 	addi	r2,r2,8924
   4e8b4:	1885883a 	add	r2,r3,r2
   4e8b8:	00000106 	br	4e8c0 <close+0x38>
   4e8bc:	0005883a 	mov	r2,zero
   4e8c0:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   4e8c4:	e0bfff17 	ldw	r2,-4(fp)
   4e8c8:	10001926 	beq	r2,zero,4e930 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4e8cc:	e0bfff17 	ldw	r2,-4(fp)
   4e8d0:	10800017 	ldw	r2,0(r2)
   4e8d4:	10800417 	ldw	r2,16(r2)
   4e8d8:	10000626 	beq	r2,zero,4e8f4 <close+0x6c>
   4e8dc:	e0bfff17 	ldw	r2,-4(fp)
   4e8e0:	10800017 	ldw	r2,0(r2)
   4e8e4:	10800417 	ldw	r2,16(r2)
   4e8e8:	e13fff17 	ldw	r4,-4(fp)
   4e8ec:	103ee83a 	callr	r2
   4e8f0:	00000106 	br	4e8f8 <close+0x70>
   4e8f4:	0005883a 	mov	r2,zero
   4e8f8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4e8fc:	e13ffd17 	ldw	r4,-12(fp)
   4e900:	004f3680 	call	4f368 <alt_release_fd>
    if (rval < 0)
   4e904:	e0bffe17 	ldw	r2,-8(fp)
   4e908:	1000070e 	bge	r2,zero,4e928 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4e90c:	004e84c0 	call	4e84c <alt_get_errno>
   4e910:	1007883a 	mov	r3,r2
   4e914:	e0bffe17 	ldw	r2,-8(fp)
   4e918:	0085c83a 	sub	r2,zero,r2
   4e91c:	18800015 	stw	r2,0(r3)
      return -1;
   4e920:	00bfffc4 	movi	r2,-1
   4e924:	00000706 	br	4e944 <close+0xbc>
    }
    return 0;
   4e928:	0005883a 	mov	r2,zero
   4e92c:	00000506 	br	4e944 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e930:	004e84c0 	call	4e84c <alt_get_errno>
   4e934:	1007883a 	mov	r3,r2
   4e938:	00801444 	movi	r2,81
   4e93c:	18800015 	stw	r2,0(r3)
    return -1;
   4e940:	00bfffc4 	movi	r2,-1
  }
}
   4e944:	e037883a 	mov	sp,fp
   4e948:	dfc00117 	ldw	ra,4(sp)
   4e94c:	df000017 	ldw	fp,0(sp)
   4e950:	dec00204 	addi	sp,sp,8
   4e954:	f800283a 	ret

0004e958 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4e958:	defffc04 	addi	sp,sp,-16
   4e95c:	df000315 	stw	fp,12(sp)
   4e960:	df000304 	addi	fp,sp,12
   4e964:	e13fff15 	stw	r4,-4(fp)
   4e968:	e17ffe15 	stw	r5,-8(fp)
   4e96c:	e1bffd15 	stw	r6,-12(fp)
  return len;
   4e970:	e0bffd17 	ldw	r2,-12(fp)
}
   4e974:	e037883a 	mov	sp,fp
   4e978:	df000017 	ldw	fp,0(sp)
   4e97c:	dec00104 	addi	sp,sp,4
   4e980:	f800283a 	ret

0004e984 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4e984:	defffd04 	addi	sp,sp,-12
   4e988:	df000215 	stw	fp,8(sp)
   4e98c:	df000204 	addi	fp,sp,8
   4e990:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4e994:	0001883a 	nop
   4e998:	e0bffe17 	ldw	r2,-8(fp)
   4e99c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4e9a0:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4e9a4:	10000226 	beq	r2,zero,4e9b0 <_exit+0x2c>
    ALT_SIM_FAIL();
   4e9a8:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   4e9ac:	00000106 	br	4e9b4 <_exit+0x30>
    ALT_SIM_PASS();
   4e9b0:	002af0b0 	cmpltui	zero,zero,43970
}
   4e9b4:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4e9b8:	0001883a 	nop
   4e9bc:	003ffe06 	br	4e9b8 <_exit+0x34>

0004e9c0 <alt_get_errno>:
{
   4e9c0:	defffe04 	addi	sp,sp,-8
   4e9c4:	dfc00115 	stw	ra,4(sp)
   4e9c8:	df000015 	stw	fp,0(sp)
   4e9cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e9d0:	d0a00917 	ldw	r2,-32732(gp)
   4e9d4:	10000326 	beq	r2,zero,4e9e4 <alt_get_errno+0x24>
   4e9d8:	d0a00917 	ldw	r2,-32732(gp)
   4e9dc:	103ee83a 	callr	r2
   4e9e0:	00000106 	br	4e9e8 <alt_get_errno+0x28>
   4e9e4:	d0a70a04 	addi	r2,gp,-25560
}
   4e9e8:	e037883a 	mov	sp,fp
   4e9ec:	dfc00117 	ldw	ra,4(sp)
   4e9f0:	df000017 	ldw	fp,0(sp)
   4e9f4:	dec00204 	addi	sp,sp,8
   4e9f8:	f800283a 	ret

0004e9fc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4e9fc:	defffb04 	addi	sp,sp,-20
   4ea00:	dfc00415 	stw	ra,16(sp)
   4ea04:	df000315 	stw	fp,12(sp)
   4ea08:	df000304 	addi	fp,sp,12
   4ea0c:	e13ffe15 	stw	r4,-8(fp)
   4ea10:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4ea14:	e0bffe17 	ldw	r2,-8(fp)
   4ea18:	10000616 	blt	r2,zero,4ea34 <fstat+0x38>
   4ea1c:	e0bffe17 	ldw	r2,-8(fp)
   4ea20:	10c00324 	muli	r3,r2,12
   4ea24:	00800174 	movhi	r2,5
   4ea28:	1088b704 	addi	r2,r2,8924
   4ea2c:	1885883a 	add	r2,r3,r2
   4ea30:	00000106 	br	4ea38 <fstat+0x3c>
   4ea34:	0005883a 	mov	r2,zero
   4ea38:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4ea3c:	e0bfff17 	ldw	r2,-4(fp)
   4ea40:	10001026 	beq	r2,zero,4ea84 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4ea44:	e0bfff17 	ldw	r2,-4(fp)
   4ea48:	10800017 	ldw	r2,0(r2)
   4ea4c:	10800817 	ldw	r2,32(r2)
   4ea50:	10000726 	beq	r2,zero,4ea70 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4ea54:	e0bfff17 	ldw	r2,-4(fp)
   4ea58:	10800017 	ldw	r2,0(r2)
   4ea5c:	10800817 	ldw	r2,32(r2)
   4ea60:	e17ffd17 	ldw	r5,-12(fp)
   4ea64:	e13fff17 	ldw	r4,-4(fp)
   4ea68:	103ee83a 	callr	r2
   4ea6c:	00000a06 	br	4ea98 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4ea70:	e0bffd17 	ldw	r2,-12(fp)
   4ea74:	00c80004 	movi	r3,8192
   4ea78:	10c00115 	stw	r3,4(r2)
      return 0;
   4ea7c:	0005883a 	mov	r2,zero
   4ea80:	00000506 	br	4ea98 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4ea84:	004e9c00 	call	4e9c0 <alt_get_errno>
   4ea88:	1007883a 	mov	r3,r2
   4ea8c:	00801444 	movi	r2,81
   4ea90:	18800015 	stw	r2,0(r3)
    return -1;
   4ea94:	00bfffc4 	movi	r2,-1
  }
}
   4ea98:	e037883a 	mov	sp,fp
   4ea9c:	dfc00117 	ldw	ra,4(sp)
   4eaa0:	df000017 	ldw	fp,0(sp)
   4eaa4:	dec00204 	addi	sp,sp,8
   4eaa8:	f800283a 	ret

0004eaac <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   4eaac:	deffff04 	addi	sp,sp,-4
   4eab0:	df000015 	stw	fp,0(sp)
   4eab4:	d839883a 	mov	fp,sp
  return 0;
   4eab8:	0005883a 	mov	r2,zero
}
   4eabc:	e037883a 	mov	sp,fp
   4eac0:	df000017 	ldw	fp,0(sp)
   4eac4:	dec00104 	addi	sp,sp,4
   4eac8:	f800283a 	ret

0004eacc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4eacc:	defff904 	addi	sp,sp,-28
   4ead0:	dfc00615 	stw	ra,24(sp)
   4ead4:	df000515 	stw	fp,20(sp)
   4ead8:	df000504 	addi	fp,sp,20
   4eadc:	e13fff15 	stw	r4,-4(fp)
   4eae0:	e17ffe15 	stw	r5,-8(fp)
   4eae4:	e1bffd15 	stw	r6,-12(fp)
   4eae8:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4eaec:	e0800217 	ldw	r2,8(fp)
   4eaf0:	d8800015 	stw	r2,0(sp)
   4eaf4:	e1fffc17 	ldw	r7,-16(fp)
   4eaf8:	e1bffd17 	ldw	r6,-12(fp)
   4eafc:	e17ffe17 	ldw	r5,-8(fp)
   4eb00:	e13fff17 	ldw	r4,-4(fp)
   4eb04:	004ec7c0 	call	4ec7c <alt_iic_isr_register>
}  
   4eb08:	e037883a 	mov	sp,fp
   4eb0c:	dfc00117 	ldw	ra,4(sp)
   4eb10:	df000017 	ldw	fp,0(sp)
   4eb14:	dec00204 	addi	sp,sp,8
   4eb18:	f800283a 	ret

0004eb1c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4eb1c:	defff904 	addi	sp,sp,-28
   4eb20:	df000615 	stw	fp,24(sp)
   4eb24:	df000604 	addi	fp,sp,24
   4eb28:	e13ffb15 	stw	r4,-20(fp)
   4eb2c:	e17ffa15 	stw	r5,-24(fp)
   4eb30:	e0bffa17 	ldw	r2,-24(fp)
   4eb34:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   4eb38:	0005303a 	rdctl	r2,status
   4eb3c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4eb40:	e0fffe17 	ldw	r3,-8(fp)
   4eb44:	00bfff84 	movi	r2,-2
   4eb48:	1884703a 	and	r2,r3,r2
   4eb4c:	1001703a 	wrctl	status,r2
  return context;
   4eb50:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4eb54:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   4eb58:	00c00044 	movi	r3,1
   4eb5c:	e0bfff17 	ldw	r2,-4(fp)
   4eb60:	1884983a 	sll	r2,r3,r2
   4eb64:	1007883a 	mov	r3,r2
   4eb68:	d0a70c17 	ldw	r2,-25552(gp)
   4eb6c:	1884b03a 	or	r2,r3,r2
   4eb70:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4eb74:	d0a70c17 	ldw	r2,-25552(gp)
   4eb78:	100170fa 	wrctl	ienable,r2
   4eb7c:	e0bffd17 	ldw	r2,-12(fp)
   4eb80:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4eb84:	e0bffc17 	ldw	r2,-16(fp)
   4eb88:	1001703a 	wrctl	status,r2
}
   4eb8c:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   4eb90:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   4eb94:	e037883a 	mov	sp,fp
   4eb98:	df000017 	ldw	fp,0(sp)
   4eb9c:	dec00104 	addi	sp,sp,4
   4eba0:	f800283a 	ret

0004eba4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4eba4:	defff904 	addi	sp,sp,-28
   4eba8:	df000615 	stw	fp,24(sp)
   4ebac:	df000604 	addi	fp,sp,24
   4ebb0:	e13ffb15 	stw	r4,-20(fp)
   4ebb4:	e17ffa15 	stw	r5,-24(fp)
   4ebb8:	e0bffa17 	ldw	r2,-24(fp)
   4ebbc:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   4ebc0:	0005303a 	rdctl	r2,status
   4ebc4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ebc8:	e0fffe17 	ldw	r3,-8(fp)
   4ebcc:	00bfff84 	movi	r2,-2
   4ebd0:	1884703a 	and	r2,r3,r2
   4ebd4:	1001703a 	wrctl	status,r2
  return context;
   4ebd8:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
   4ebdc:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
   4ebe0:	00c00044 	movi	r3,1
   4ebe4:	e0bfff17 	ldw	r2,-4(fp)
   4ebe8:	1884983a 	sll	r2,r3,r2
   4ebec:	0084303a 	nor	r2,zero,r2
   4ebf0:	1007883a 	mov	r3,r2
   4ebf4:	d0a70c17 	ldw	r2,-25552(gp)
   4ebf8:	1884703a 	and	r2,r3,r2
   4ebfc:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4ec00:	d0a70c17 	ldw	r2,-25552(gp)
   4ec04:	100170fa 	wrctl	ienable,r2
   4ec08:	e0bffd17 	ldw	r2,-12(fp)
   4ec0c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4ec10:	e0bffc17 	ldw	r2,-16(fp)
   4ec14:	1001703a 	wrctl	status,r2
}
   4ec18:	0001883a 	nop
  return 0;
   4ec1c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   4ec20:	e037883a 	mov	sp,fp
   4ec24:	df000017 	ldw	fp,0(sp)
   4ec28:	dec00104 	addi	sp,sp,4
   4ec2c:	f800283a 	ret

0004ec30 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4ec30:	defffc04 	addi	sp,sp,-16
   4ec34:	df000315 	stw	fp,12(sp)
   4ec38:	df000304 	addi	fp,sp,12
   4ec3c:	e13ffe15 	stw	r4,-8(fp)
   4ec40:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4ec44:	000530fa 	rdctl	r2,ienable
   4ec48:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4ec4c:	00c00044 	movi	r3,1
   4ec50:	e0bffd17 	ldw	r2,-12(fp)
   4ec54:	1884983a 	sll	r2,r3,r2
   4ec58:	1007883a 	mov	r3,r2
   4ec5c:	e0bfff17 	ldw	r2,-4(fp)
   4ec60:	1884703a 	and	r2,r3,r2
   4ec64:	1004c03a 	cmpne	r2,r2,zero
   4ec68:	10803fcc 	andi	r2,r2,255
}
   4ec6c:	e037883a 	mov	sp,fp
   4ec70:	df000017 	ldw	fp,0(sp)
   4ec74:	dec00104 	addi	sp,sp,4
   4ec78:	f800283a 	ret

0004ec7c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4ec7c:	defff504 	addi	sp,sp,-44
   4ec80:	dfc00a15 	stw	ra,40(sp)
   4ec84:	df000915 	stw	fp,36(sp)
   4ec88:	df000904 	addi	fp,sp,36
   4ec8c:	e13ffa15 	stw	r4,-24(fp)
   4ec90:	e17ff915 	stw	r5,-28(fp)
   4ec94:	e1bff815 	stw	r6,-32(fp)
   4ec98:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
   4ec9c:	00bffa84 	movi	r2,-22
   4eca0:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4eca4:	e0bff917 	ldw	r2,-28(fp)
   4eca8:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4ecac:	e0bffe17 	ldw	r2,-8(fp)
   4ecb0:	10800808 	cmpgei	r2,r2,32
   4ecb4:	1000251e 	bne	r2,zero,4ed4c <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
   4ecb8:	0005303a 	rdctl	r2,status
   4ecbc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ecc0:	e0fffc17 	ldw	r3,-16(fp)
   4ecc4:	00bfff84 	movi	r2,-2
   4ecc8:	1884703a 	and	r2,r3,r2
   4eccc:	1001703a 	wrctl	status,r2
  return context;
   4ecd0:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4ecd4:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
   4ecd8:	e0bffe17 	ldw	r2,-8(fp)
   4ecdc:	100890fa 	slli	r4,r2,3
   4ece0:	e0fff817 	ldw	r3,-32(fp)
   4ece4:	00800174 	movhi	r2,5
   4ece8:	2085883a 	add	r2,r4,r2
   4ecec:	10d44d15 	stw	r3,20788(r2)
    alt_irq[id].context = isr_context;
   4ecf0:	e0bffe17 	ldw	r2,-8(fp)
   4ecf4:	100890fa 	slli	r4,r2,3
   4ecf8:	e0fff717 	ldw	r3,-36(fp)
   4ecfc:	00800174 	movhi	r2,5
   4ed00:	2085883a 	add	r2,r4,r2
   4ed04:	10d44e15 	stw	r3,20792(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4ed08:	e0bff817 	ldw	r2,-32(fp)
   4ed0c:	10000526 	beq	r2,zero,4ed24 <alt_iic_isr_register+0xa8>
   4ed10:	e0bffe17 	ldw	r2,-8(fp)
   4ed14:	100b883a 	mov	r5,r2
   4ed18:	e13ffa17 	ldw	r4,-24(fp)
   4ed1c:	004eb1c0 	call	4eb1c <alt_ic_irq_enable>
   4ed20:	00000406 	br	4ed34 <alt_iic_isr_register+0xb8>
   4ed24:	e0bffe17 	ldw	r2,-8(fp)
   4ed28:	100b883a 	mov	r5,r2
   4ed2c:	e13ffa17 	ldw	r4,-24(fp)
   4ed30:	004eba40 	call	4eba4 <alt_ic_irq_disable>
   4ed34:	e0bfff15 	stw	r2,-4(fp)
   4ed38:	e0bffd17 	ldw	r2,-12(fp)
   4ed3c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   4ed40:	e0bffb17 	ldw	r2,-20(fp)
   4ed44:	1001703a 	wrctl	status,r2
}
   4ed48:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
   4ed4c:	e0bfff17 	ldw	r2,-4(fp)
}
   4ed50:	e037883a 	mov	sp,fp
   4ed54:	dfc00117 	ldw	ra,4(sp)
   4ed58:	df000017 	ldw	fp,0(sp)
   4ed5c:	dec00204 	addi	sp,sp,8
   4ed60:	f800283a 	ret

0004ed64 <alt_get_errno>:
{
   4ed64:	defffe04 	addi	sp,sp,-8
   4ed68:	dfc00115 	stw	ra,4(sp)
   4ed6c:	df000015 	stw	fp,0(sp)
   4ed70:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ed74:	d0a00917 	ldw	r2,-32732(gp)
   4ed78:	10000326 	beq	r2,zero,4ed88 <alt_get_errno+0x24>
   4ed7c:	d0a00917 	ldw	r2,-32732(gp)
   4ed80:	103ee83a 	callr	r2
   4ed84:	00000106 	br	4ed8c <alt_get_errno+0x28>
   4ed88:	d0a70a04 	addi	r2,gp,-25560
}
   4ed8c:	e037883a 	mov	sp,fp
   4ed90:	dfc00117 	ldw	ra,4(sp)
   4ed94:	df000017 	ldw	fp,0(sp)
   4ed98:	dec00204 	addi	sp,sp,8
   4ed9c:	f800283a 	ret

0004eda0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4eda0:	deffea04 	addi	sp,sp,-88
   4eda4:	dfc01515 	stw	ra,84(sp)
   4eda8:	df001415 	stw	fp,80(sp)
   4edac:	df001404 	addi	fp,sp,80
   4edb0:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4edb4:	e0bfec17 	ldw	r2,-80(fp)
   4edb8:	10000616 	blt	r2,zero,4edd4 <isatty+0x34>
   4edbc:	e0bfec17 	ldw	r2,-80(fp)
   4edc0:	10c00324 	muli	r3,r2,12
   4edc4:	00800174 	movhi	r2,5
   4edc8:	1088b704 	addi	r2,r2,8924
   4edcc:	1885883a 	add	r2,r3,r2
   4edd0:	00000106 	br	4edd8 <isatty+0x38>
   4edd4:	0005883a 	mov	r2,zero
   4edd8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4eddc:	e0bfff17 	ldw	r2,-4(fp)
   4ede0:	10000e26 	beq	r2,zero,4ee1c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4ede4:	e0bfff17 	ldw	r2,-4(fp)
   4ede8:	10800017 	ldw	r2,0(r2)
   4edec:	10800817 	ldw	r2,32(r2)
   4edf0:	1000021e 	bne	r2,zero,4edfc <isatty+0x5c>
    {
      return 1;
   4edf4:	00800044 	movi	r2,1
   4edf8:	00000d06 	br	4ee30 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4edfc:	e0bfed04 	addi	r2,fp,-76
   4ee00:	100b883a 	mov	r5,r2
   4ee04:	e13fec17 	ldw	r4,-80(fp)
   4ee08:	004e9fc0 	call	4e9fc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4ee0c:	e0bfee17 	ldw	r2,-72(fp)
   4ee10:	10880020 	cmpeqi	r2,r2,8192
   4ee14:	10803fcc 	andi	r2,r2,255
   4ee18:	00000506 	br	4ee30 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4ee1c:	004ed640 	call	4ed64 <alt_get_errno>
   4ee20:	1007883a 	mov	r3,r2
   4ee24:	00801444 	movi	r2,81
   4ee28:	18800015 	stw	r2,0(r3)
    return 0;
   4ee2c:	0005883a 	mov	r2,zero
  }
}
   4ee30:	e037883a 	mov	sp,fp
   4ee34:	dfc00117 	ldw	ra,4(sp)
   4ee38:	df000017 	ldw	fp,0(sp)
   4ee3c:	dec00204 	addi	sp,sp,8
   4ee40:	f800283a 	ret

0004ee44 <alt_get_errno>:
{
   4ee44:	defffe04 	addi	sp,sp,-8
   4ee48:	dfc00115 	stw	ra,4(sp)
   4ee4c:	df000015 	stw	fp,0(sp)
   4ee50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ee54:	d0a00917 	ldw	r2,-32732(gp)
   4ee58:	10000326 	beq	r2,zero,4ee68 <alt_get_errno+0x24>
   4ee5c:	d0a00917 	ldw	r2,-32732(gp)
   4ee60:	103ee83a 	callr	r2
   4ee64:	00000106 	br	4ee6c <alt_get_errno+0x28>
   4ee68:	d0a70a04 	addi	r2,gp,-25560
}
   4ee6c:	e037883a 	mov	sp,fp
   4ee70:	dfc00117 	ldw	ra,4(sp)
   4ee74:	df000017 	ldw	fp,0(sp)
   4ee78:	dec00204 	addi	sp,sp,8
   4ee7c:	f800283a 	ret

0004ee80 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   4ee80:	defffb04 	addi	sp,sp,-20
   4ee84:	dfc00415 	stw	ra,16(sp)
   4ee88:	df000315 	stw	fp,12(sp)
   4ee8c:	df000304 	addi	fp,sp,12
   4ee90:	e13ffe15 	stw	r4,-8(fp)
   4ee94:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   4ee98:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   4ee9c:	e0bffe17 	ldw	r2,-8(fp)
   4eea0:	00801d16 	blt	zero,r2,4ef18 <kill+0x98>
  {
    switch (sig)
   4eea4:	e0bffd17 	ldw	r2,-12(fp)
   4eea8:	10002026 	beq	r2,zero,4ef2c <kill+0xac>
   4eeac:	e0bffd17 	ldw	r2,-12(fp)
   4eeb0:	10001616 	blt	r2,zero,4ef0c <kill+0x8c>
   4eeb4:	e0bffd17 	ldw	r2,-12(fp)
   4eeb8:	10800808 	cmpgei	r2,r2,32
   4eebc:	1000131e 	bne	r2,zero,4ef0c <kill+0x8c>
   4eec0:	e0bffd17 	ldw	r2,-12(fp)
   4eec4:	108000d0 	cmplti	r2,r2,3
   4eec8:	1000101e 	bne	r2,zero,4ef0c <kill+0x8c>
   4eecc:	e0bffd17 	ldw	r2,-12(fp)
   4eed0:	00c00044 	movi	r3,1
   4eed4:	1886983a 	sll	r3,r3,r2
   4eed8:	00b3e074 	movhi	r2,53121
   4eedc:	10bfde04 	addi	r2,r2,-136
   4eee0:	1884703a 	and	r2,r3,r2
   4eee4:	1004c03a 	cmpne	r2,r2,zero
   4eee8:	10803fcc 	andi	r2,r2,255
   4eeec:	1000051e 	bne	r2,zero,4ef04 <kill+0x84>
   4eef0:	1880046c 	andhi	r2,r3,17
   4eef4:	1004c03a 	cmpne	r2,r2,zero
   4eef8:	10803fcc 	andi	r2,r2,255
   4eefc:	10000d1e 	bne	r2,zero,4ef34 <kill+0xb4>
   4ef00:	00000206 	br	4ef0c <kill+0x8c>
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   4ef04:	0009883a 	mov	r4,zero
   4ef08:	004e9840 	call	4e984 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   4ef0c:	00800584 	movi	r2,22
   4ef10:	e0bfff15 	stw	r2,-4(fp)
   4ef14:	00000806 	br	4ef38 <kill+0xb8>
    }
  }

  else if (pid > 0)
   4ef18:	e0bffe17 	ldw	r2,-8(fp)
   4ef1c:	0080060e 	bge	zero,r2,4ef38 <kill+0xb8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   4ef20:	008000c4 	movi	r2,3
   4ef24:	e0bfff15 	stw	r2,-4(fp)
   4ef28:	00000306 	br	4ef38 <kill+0xb8>
      break;
   4ef2c:	0001883a 	nop
   4ef30:	00000106 	br	4ef38 <kill+0xb8>
      break;
   4ef34:	0001883a 	nop
  }

  if (status)
   4ef38:	e0bfff17 	ldw	r2,-4(fp)
   4ef3c:	10000626 	beq	r2,zero,4ef58 <kill+0xd8>
  {
    ALT_ERRNO = status;
   4ef40:	004ee440 	call	4ee44 <alt_get_errno>
   4ef44:	1007883a 	mov	r3,r2
   4ef48:	e0bfff17 	ldw	r2,-4(fp)
   4ef4c:	18800015 	stw	r2,0(r3)
    return -1;
   4ef50:	00bfffc4 	movi	r2,-1
   4ef54:	00000106 	br	4ef5c <kill+0xdc>
  }

  return 0;
   4ef58:	0005883a 	mov	r2,zero
}
   4ef5c:	e037883a 	mov	sp,fp
   4ef60:	dfc00117 	ldw	ra,4(sp)
   4ef64:	df000017 	ldw	fp,0(sp)
   4ef68:	dec00204 	addi	sp,sp,8
   4ef6c:	f800283a 	ret

0004ef70 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4ef70:	defffc04 	addi	sp,sp,-16
   4ef74:	df000315 	stw	fp,12(sp)
   4ef78:	df000304 	addi	fp,sp,12
   4ef7c:	e13fff15 	stw	r4,-4(fp)
   4ef80:	e17ffe15 	stw	r5,-8(fp)
   4ef84:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   4ef88:	e0fffe17 	ldw	r3,-8(fp)
   4ef8c:	e0bfff17 	ldw	r2,-4(fp)
   4ef90:	18800c26 	beq	r3,r2,4efc4 <alt_load_section+0x54>
  {
    while( to != end )
   4ef94:	00000806 	br	4efb8 <alt_load_section+0x48>
    {
      *to++ = *from++;
   4ef98:	e0ffff17 	ldw	r3,-4(fp)
   4ef9c:	18800104 	addi	r2,r3,4
   4efa0:	e0bfff15 	stw	r2,-4(fp)
   4efa4:	e0bffe17 	ldw	r2,-8(fp)
   4efa8:	11000104 	addi	r4,r2,4
   4efac:	e13ffe15 	stw	r4,-8(fp)
   4efb0:	18c00017 	ldw	r3,0(r3)
   4efb4:	10c00015 	stw	r3,0(r2)
    while( to != end )
   4efb8:	e0fffe17 	ldw	r3,-8(fp)
   4efbc:	e0bffd17 	ldw	r2,-12(fp)
   4efc0:	18bff51e 	bne	r3,r2,4ef98 <alt_load_section+0x28>
    }
  }
}
   4efc4:	0001883a 	nop
   4efc8:	e037883a 	mov	sp,fp
   4efcc:	df000017 	ldw	fp,0(sp)
   4efd0:	dec00104 	addi	sp,sp,4
   4efd4:	f800283a 	ret

0004efd8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4efd8:	defffe04 	addi	sp,sp,-8
   4efdc:	dfc00115 	stw	ra,4(sp)
   4efe0:	df000015 	stw	fp,0(sp)
   4efe4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4efe8:	01800174 	movhi	r6,5
   4efec:	318d3d04 	addi	r6,r6,13556
   4eff0:	01400174 	movhi	r5,5
   4eff4:	29464704 	addi	r5,r5,6428
   4eff8:	01000174 	movhi	r4,5
   4effc:	210d3d04 	addi	r4,r4,13556
   4f000:	004ef700 	call	4ef70 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4f004:	01800134 	movhi	r6,4
   4f008:	31808e04 	addi	r6,r6,568
   4f00c:	01400134 	movhi	r5,4
   4f010:	29400804 	addi	r5,r5,32
   4f014:	01000134 	movhi	r4,4
   4f018:	21000804 	addi	r4,r4,32
   4f01c:	004ef700 	call	4ef70 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4f020:	01800174 	movhi	r6,5
   4f024:	31864704 	addi	r6,r6,6428
   4f028:	01400174 	movhi	r5,5
   4f02c:	29448a04 	addi	r5,r5,4648
   4f030:	01000174 	movhi	r4,5
   4f034:	21048a04 	addi	r4,r4,4648
   4f038:	004ef700 	call	4ef70 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4f03c:	00504e80 	call	504e8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4f040:	00506e00 	call	506e0 <alt_icache_flush_all>
}
   4f044:	0001883a 	nop
   4f048:	e037883a 	mov	sp,fp
   4f04c:	dfc00117 	ldw	ra,4(sp)
   4f050:	df000017 	ldw	fp,0(sp)
   4f054:	dec00204 	addi	sp,sp,8
   4f058:	f800283a 	ret

0004f05c <alt_get_errno>:
{
   4f05c:	defffe04 	addi	sp,sp,-8
   4f060:	dfc00115 	stw	ra,4(sp)
   4f064:	df000015 	stw	fp,0(sp)
   4f068:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f06c:	d0a00917 	ldw	r2,-32732(gp)
   4f070:	10000326 	beq	r2,zero,4f080 <alt_get_errno+0x24>
   4f074:	d0a00917 	ldw	r2,-32732(gp)
   4f078:	103ee83a 	callr	r2
   4f07c:	00000106 	br	4f084 <alt_get_errno+0x28>
   4f080:	d0a70a04 	addi	r2,gp,-25560
}
   4f084:	e037883a 	mov	sp,fp
   4f088:	dfc00117 	ldw	ra,4(sp)
   4f08c:	df000017 	ldw	fp,0(sp)
   4f090:	dec00204 	addi	sp,sp,8
   4f094:	f800283a 	ret

0004f098 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4f098:	defff904 	addi	sp,sp,-28
   4f09c:	dfc00615 	stw	ra,24(sp)
   4f0a0:	df000515 	stw	fp,20(sp)
   4f0a4:	df000504 	addi	fp,sp,20
   4f0a8:	e13ffd15 	stw	r4,-12(fp)
   4f0ac:	e17ffc15 	stw	r5,-16(fp)
   4f0b0:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4f0b4:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f0b8:	e0bffd17 	ldw	r2,-12(fp)
   4f0bc:	10000616 	blt	r2,zero,4f0d8 <lseek+0x40>
   4f0c0:	e0bffd17 	ldw	r2,-12(fp)
   4f0c4:	10c00324 	muli	r3,r2,12
   4f0c8:	00800174 	movhi	r2,5
   4f0cc:	1088b704 	addi	r2,r2,8924
   4f0d0:	1885883a 	add	r2,r3,r2
   4f0d4:	00000106 	br	4f0dc <lseek+0x44>
   4f0d8:	0005883a 	mov	r2,zero
   4f0dc:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   4f0e0:	e0bffe17 	ldw	r2,-8(fp)
   4f0e4:	10001026 	beq	r2,zero,4f128 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4f0e8:	e0bffe17 	ldw	r2,-8(fp)
   4f0ec:	10800017 	ldw	r2,0(r2)
   4f0f0:	10800717 	ldw	r2,28(r2)
   4f0f4:	10000926 	beq	r2,zero,4f11c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4f0f8:	e0bffe17 	ldw	r2,-8(fp)
   4f0fc:	10800017 	ldw	r2,0(r2)
   4f100:	10800717 	ldw	r2,28(r2)
   4f104:	e1bffb17 	ldw	r6,-20(fp)
   4f108:	e17ffc17 	ldw	r5,-16(fp)
   4f10c:	e13ffe17 	ldw	r4,-8(fp)
   4f110:	103ee83a 	callr	r2
   4f114:	e0bfff15 	stw	r2,-4(fp)
   4f118:	00000506 	br	4f130 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4f11c:	00bfde84 	movi	r2,-134
   4f120:	e0bfff15 	stw	r2,-4(fp)
   4f124:	00000206 	br	4f130 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4f128:	00bfebc4 	movi	r2,-81
   4f12c:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   4f130:	e0bfff17 	ldw	r2,-4(fp)
   4f134:	1000070e 	bge	r2,zero,4f154 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4f138:	004f05c0 	call	4f05c <alt_get_errno>
   4f13c:	1007883a 	mov	r3,r2
   4f140:	e0bfff17 	ldw	r2,-4(fp)
   4f144:	0085c83a 	sub	r2,zero,r2
   4f148:	18800015 	stw	r2,0(r3)
    rc = -1;
   4f14c:	00bfffc4 	movi	r2,-1
   4f150:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   4f154:	e0bfff17 	ldw	r2,-4(fp)
}
   4f158:	e037883a 	mov	sp,fp
   4f15c:	dfc00117 	ldw	ra,4(sp)
   4f160:	df000017 	ldw	fp,0(sp)
   4f164:	dec00204 	addi	sp,sp,8
   4f168:	f800283a 	ret

0004f16c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4f16c:	defffd04 	addi	sp,sp,-12
   4f170:	dfc00215 	stw	ra,8(sp)
   4f174:	df000115 	stw	fp,4(sp)
   4f178:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4f17c:	0009883a 	mov	r4,zero
   4f180:	004f6100 	call	4f610 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4f184:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4f188:	004f64c0 	call	4f64c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4f18c:	01800174 	movhi	r6,5
   4f190:	31863d04 	addi	r6,r6,6388
   4f194:	01400174 	movhi	r5,5
   4f198:	29463d04 	addi	r5,r5,6388
   4f19c:	01000174 	movhi	r4,5
   4f1a0:	21063d04 	addi	r4,r4,6388
   4f1a4:	00508380 	call	50838 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4f1a8:	00506180 	call	50618 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4f1ac:	01000174 	movhi	r4,5
   4f1b0:	21019f04 	addi	r4,r4,1660
   4f1b4:	0050fb80 	call	50fb8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4f1b8:	d0a70d17 	ldw	r2,-25548(gp)
   4f1bc:	d0e70e17 	ldw	r3,-25544(gp)
   4f1c0:	d1270f17 	ldw	r4,-25540(gp)
   4f1c4:	200d883a 	mov	r6,r4
   4f1c8:	180b883a 	mov	r5,r3
   4f1cc:	1009883a 	mov	r4,r2
   4f1d0:	00408400 	call	40840 <main>
   4f1d4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4f1d8:	01000044 	movi	r4,1
   4f1dc:	004e8880 	call	4e888 <close>
  exit (result);
   4f1e0:	e13fff17 	ldw	r4,-4(fp)
   4f1e4:	0050fcc0 	call	50fcc <exit>

0004f1e8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4f1e8:	defffe04 	addi	sp,sp,-8
   4f1ec:	df000115 	stw	fp,4(sp)
   4f1f0:	df000104 	addi	fp,sp,4
   4f1f4:	e13fff15 	stw	r4,-4(fp)
}
   4f1f8:	0001883a 	nop
   4f1fc:	e037883a 	mov	sp,fp
   4f200:	df000017 	ldw	fp,0(sp)
   4f204:	dec00104 	addi	sp,sp,4
   4f208:	f800283a 	ret

0004f20c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4f20c:	defffe04 	addi	sp,sp,-8
   4f210:	df000115 	stw	fp,4(sp)
   4f214:	df000104 	addi	fp,sp,4
   4f218:	e13fff15 	stw	r4,-4(fp)
}
   4f21c:	0001883a 	nop
   4f220:	e037883a 	mov	sp,fp
   4f224:	df000017 	ldw	fp,0(sp)
   4f228:	dec00104 	addi	sp,sp,4
   4f22c:	f800283a 	ret

0004f230 <alt_get_errno>:
{
   4f230:	defffe04 	addi	sp,sp,-8
   4f234:	dfc00115 	stw	ra,4(sp)
   4f238:	df000015 	stw	fp,0(sp)
   4f23c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f240:	d0a00917 	ldw	r2,-32732(gp)
   4f244:	10000326 	beq	r2,zero,4f254 <alt_get_errno+0x24>
   4f248:	d0a00917 	ldw	r2,-32732(gp)
   4f24c:	103ee83a 	callr	r2
   4f250:	00000106 	br	4f258 <alt_get_errno+0x28>
   4f254:	d0a70a04 	addi	r2,gp,-25560
}
   4f258:	e037883a 	mov	sp,fp
   4f25c:	dfc00117 	ldw	ra,4(sp)
   4f260:	df000017 	ldw	fp,0(sp)
   4f264:	dec00204 	addi	sp,sp,8
   4f268:	f800283a 	ret

0004f26c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4f26c:	defff904 	addi	sp,sp,-28
   4f270:	dfc00615 	stw	ra,24(sp)
   4f274:	df000515 	stw	fp,20(sp)
   4f278:	df000504 	addi	fp,sp,20
   4f27c:	e13ffd15 	stw	r4,-12(fp)
   4f280:	e17ffc15 	stw	r5,-16(fp)
   4f284:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f288:	e0bffd17 	ldw	r2,-12(fp)
   4f28c:	10000616 	blt	r2,zero,4f2a8 <read+0x3c>
   4f290:	e0bffd17 	ldw	r2,-12(fp)
   4f294:	10c00324 	muli	r3,r2,12
   4f298:	00800174 	movhi	r2,5
   4f29c:	1088b704 	addi	r2,r2,8924
   4f2a0:	1885883a 	add	r2,r3,r2
   4f2a4:	00000106 	br	4f2ac <read+0x40>
   4f2a8:	0005883a 	mov	r2,zero
   4f2ac:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4f2b0:	e0bfff17 	ldw	r2,-4(fp)
   4f2b4:	10002226 	beq	r2,zero,4f340 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4f2b8:	e0bfff17 	ldw	r2,-4(fp)
   4f2bc:	10800217 	ldw	r2,8(r2)
   4f2c0:	108000cc 	andi	r2,r2,3
   4f2c4:	10800060 	cmpeqi	r2,r2,1
   4f2c8:	1000181e 	bne	r2,zero,4f32c <read+0xc0>
        (fd->dev->read))
   4f2cc:	e0bfff17 	ldw	r2,-4(fp)
   4f2d0:	10800017 	ldw	r2,0(r2)
   4f2d4:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4f2d8:	10001426 	beq	r2,zero,4f32c <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4f2dc:	e0bfff17 	ldw	r2,-4(fp)
   4f2e0:	10800017 	ldw	r2,0(r2)
   4f2e4:	10800517 	ldw	r2,20(r2)
   4f2e8:	e0fffb17 	ldw	r3,-20(fp)
   4f2ec:	180d883a 	mov	r6,r3
   4f2f0:	e17ffc17 	ldw	r5,-16(fp)
   4f2f4:	e13fff17 	ldw	r4,-4(fp)
   4f2f8:	103ee83a 	callr	r2
   4f2fc:	e0bffe15 	stw	r2,-8(fp)
   4f300:	e0bffe17 	ldw	r2,-8(fp)
   4f304:	1000070e 	bge	r2,zero,4f324 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4f308:	004f2300 	call	4f230 <alt_get_errno>
   4f30c:	1007883a 	mov	r3,r2
   4f310:	e0bffe17 	ldw	r2,-8(fp)
   4f314:	0085c83a 	sub	r2,zero,r2
   4f318:	18800015 	stw	r2,0(r3)
          return -1;
   4f31c:	00bfffc4 	movi	r2,-1
   4f320:	00000c06 	br	4f354 <read+0xe8>
        }
        return rval;
   4f324:	e0bffe17 	ldw	r2,-8(fp)
   4f328:	00000a06 	br	4f354 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4f32c:	004f2300 	call	4f230 <alt_get_errno>
   4f330:	1007883a 	mov	r3,r2
   4f334:	00800344 	movi	r2,13
   4f338:	18800015 	stw	r2,0(r3)
   4f33c:	00000406 	br	4f350 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4f340:	004f2300 	call	4f230 <alt_get_errno>
   4f344:	1007883a 	mov	r3,r2
   4f348:	00801444 	movi	r2,81
   4f34c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4f350:	00bfffc4 	movi	r2,-1
}
   4f354:	e037883a 	mov	sp,fp
   4f358:	dfc00117 	ldw	ra,4(sp)
   4f35c:	df000017 	ldw	fp,0(sp)
   4f360:	dec00204 	addi	sp,sp,8
   4f364:	f800283a 	ret

0004f368 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4f368:	defffe04 	addi	sp,sp,-8
   4f36c:	df000115 	stw	fp,4(sp)
   4f370:	df000104 	addi	fp,sp,4
   4f374:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4f378:	e0bfff17 	ldw	r2,-4(fp)
   4f37c:	108000d0 	cmplti	r2,r2,3
   4f380:	10000a1e 	bne	r2,zero,4f3ac <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
   4f384:	e0bfff17 	ldw	r2,-4(fp)
   4f388:	10c00324 	muli	r3,r2,12
   4f38c:	00800174 	movhi	r2,5
   4f390:	1885883a 	add	r2,r3,r2
   4f394:	1008b915 	stw	zero,8932(r2)
    alt_fd_list[fd].dev      = 0;
   4f398:	e0bfff17 	ldw	r2,-4(fp)
   4f39c:	10c00324 	muli	r3,r2,12
   4f3a0:	00800174 	movhi	r2,5
   4f3a4:	1885883a 	add	r2,r3,r2
   4f3a8:	1008b715 	stw	zero,8924(r2)
  }
}
   4f3ac:	0001883a 	nop
   4f3b0:	e037883a 	mov	sp,fp
   4f3b4:	df000017 	ldw	fp,0(sp)
   4f3b8:	dec00104 	addi	sp,sp,4
   4f3bc:	f800283a 	ret

0004f3c0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4f3c0:	defff904 	addi	sp,sp,-28
   4f3c4:	df000615 	stw	fp,24(sp)
   4f3c8:	df000604 	addi	fp,sp,24
   4f3cc:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   4f3d0:	0005303a 	rdctl	r2,status
   4f3d4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f3d8:	e0fffd17 	ldw	r3,-12(fp)
   4f3dc:	00bfff84 	movi	r2,-2
   4f3e0:	1884703a 	and	r2,r3,r2
   4f3e4:	1001703a 	wrctl	status,r2
  return context;
   4f3e8:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4f3ec:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4f3f0:	d0a00b17 	ldw	r2,-32724(gp)
   4f3f4:	10c000c4 	addi	r3,r2,3
   4f3f8:	00bfff04 	movi	r2,-4
   4f3fc:	1884703a 	and	r2,r3,r2
   4f400:	d0a00b15 	stw	r2,-32724(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4f404:	d0e00b17 	ldw	r3,-32724(gp)
   4f408:	e0bffa17 	ldw	r2,-24(fp)
   4f40c:	1887883a 	add	r3,r3,r2
   4f410:	008001b4 	movhi	r2,6
   4f414:	10960004 	addi	r2,r2,22528
   4f418:	10c0072e 	bgeu	r2,r3,4f438 <sbrk+0x78>
   4f41c:	e0bfff17 	ldw	r2,-4(fp)
   4f420:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4f424:	e0bffc17 	ldw	r2,-16(fp)
   4f428:	1001703a 	wrctl	status,r2
}
   4f42c:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4f430:	00bfffc4 	movi	r2,-1
   4f434:	00000c06 	br	4f468 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   4f438:	d0a00b17 	ldw	r2,-32724(gp)
   4f43c:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   4f440:	d0e00b17 	ldw	r3,-32724(gp)
   4f444:	e0bffa17 	ldw	r2,-24(fp)
   4f448:	1885883a 	add	r2,r3,r2
   4f44c:	d0a00b15 	stw	r2,-32724(gp)
   4f450:	e0bfff17 	ldw	r2,-4(fp)
   4f454:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   4f458:	e0bffb17 	ldw	r2,-20(fp)
   4f45c:	1001703a 	wrctl	status,r2
}
   4f460:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4f464:	e0bffe17 	ldw	r2,-8(fp)
} 
   4f468:	e037883a 	mov	sp,fp
   4f46c:	df000017 	ldw	fp,0(sp)
   4f470:	dec00104 	addi	sp,sp,4
   4f474:	f800283a 	ret

0004f478 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   4f478:	defffd04 	addi	sp,sp,-12
   4f47c:	dfc00215 	stw	ra,8(sp)
   4f480:	df000115 	stw	fp,4(sp)
   4f484:	df000104 	addi	fp,sp,4
   4f488:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   4f48c:	e13fff17 	ldw	r4,-4(fp)
   4f490:	00503900 	call	50390 <alt_busy_sleep>
}
   4f494:	e037883a 	mov	sp,fp
   4f498:	dfc00117 	ldw	ra,4(sp)
   4f49c:	df000017 	ldw	fp,0(sp)
   4f4a0:	dec00204 	addi	sp,sp,8
   4f4a4:	f800283a 	ret

0004f4a8 <alt_get_errno>:
{
   4f4a8:	defffe04 	addi	sp,sp,-8
   4f4ac:	dfc00115 	stw	ra,4(sp)
   4f4b0:	df000015 	stw	fp,0(sp)
   4f4b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f4b8:	d0a00917 	ldw	r2,-32732(gp)
   4f4bc:	10000326 	beq	r2,zero,4f4cc <alt_get_errno+0x24>
   4f4c0:	d0a00917 	ldw	r2,-32732(gp)
   4f4c4:	103ee83a 	callr	r2
   4f4c8:	00000106 	br	4f4d0 <alt_get_errno+0x28>
   4f4cc:	d0a70a04 	addi	r2,gp,-25560
}
   4f4d0:	e037883a 	mov	sp,fp
   4f4d4:	dfc00117 	ldw	ra,4(sp)
   4f4d8:	df000017 	ldw	fp,0(sp)
   4f4dc:	dec00204 	addi	sp,sp,8
   4f4e0:	f800283a 	ret

0004f4e4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4f4e4:	defff904 	addi	sp,sp,-28
   4f4e8:	dfc00615 	stw	ra,24(sp)
   4f4ec:	df000515 	stw	fp,20(sp)
   4f4f0:	df000504 	addi	fp,sp,20
   4f4f4:	e13ffd15 	stw	r4,-12(fp)
   4f4f8:	e17ffc15 	stw	r5,-16(fp)
   4f4fc:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f500:	e0bffd17 	ldw	r2,-12(fp)
   4f504:	10000616 	blt	r2,zero,4f520 <write+0x3c>
   4f508:	e0bffd17 	ldw	r2,-12(fp)
   4f50c:	10c00324 	muli	r3,r2,12
   4f510:	00800174 	movhi	r2,5
   4f514:	1088b704 	addi	r2,r2,8924
   4f518:	1885883a 	add	r2,r3,r2
   4f51c:	00000106 	br	4f524 <write+0x40>
   4f520:	0005883a 	mov	r2,zero
   4f524:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4f528:	e0bfff17 	ldw	r2,-4(fp)
   4f52c:	10002126 	beq	r2,zero,4f5b4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4f530:	e0bfff17 	ldw	r2,-4(fp)
   4f534:	10800217 	ldw	r2,8(r2)
   4f538:	108000cc 	andi	r2,r2,3
   4f53c:	10001826 	beq	r2,zero,4f5a0 <write+0xbc>
   4f540:	e0bfff17 	ldw	r2,-4(fp)
   4f544:	10800017 	ldw	r2,0(r2)
   4f548:	10800617 	ldw	r2,24(r2)
   4f54c:	10001426 	beq	r2,zero,4f5a0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4f550:	e0bfff17 	ldw	r2,-4(fp)
   4f554:	10800017 	ldw	r2,0(r2)
   4f558:	10800617 	ldw	r2,24(r2)
   4f55c:	e0fffb17 	ldw	r3,-20(fp)
   4f560:	180d883a 	mov	r6,r3
   4f564:	e17ffc17 	ldw	r5,-16(fp)
   4f568:	e13fff17 	ldw	r4,-4(fp)
   4f56c:	103ee83a 	callr	r2
   4f570:	e0bffe15 	stw	r2,-8(fp)
   4f574:	e0bffe17 	ldw	r2,-8(fp)
   4f578:	1000070e 	bge	r2,zero,4f598 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4f57c:	004f4a80 	call	4f4a8 <alt_get_errno>
   4f580:	1007883a 	mov	r3,r2
   4f584:	e0bffe17 	ldw	r2,-8(fp)
   4f588:	0085c83a 	sub	r2,zero,r2
   4f58c:	18800015 	stw	r2,0(r3)
        return -1;
   4f590:	00bfffc4 	movi	r2,-1
   4f594:	00000c06 	br	4f5c8 <write+0xe4>
      }
      return rval;
   4f598:	e0bffe17 	ldw	r2,-8(fp)
   4f59c:	00000a06 	br	4f5c8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4f5a0:	004f4a80 	call	4f4a8 <alt_get_errno>
   4f5a4:	1007883a 	mov	r3,r2
   4f5a8:	00800344 	movi	r2,13
   4f5ac:	18800015 	stw	r2,0(r3)
   4f5b0:	00000406 	br	4f5c4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4f5b4:	004f4a80 	call	4f4a8 <alt_get_errno>
   4f5b8:	1007883a 	mov	r3,r2
   4f5bc:	00801444 	movi	r2,81
   4f5c0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4f5c4:	00bfffc4 	movi	r2,-1
}
   4f5c8:	e037883a 	mov	sp,fp
   4f5cc:	dfc00117 	ldw	ra,4(sp)
   4f5d0:	df000017 	ldw	fp,0(sp)
   4f5d4:	dec00204 	addi	sp,sp,8
   4f5d8:	f800283a 	ret

0004f5dc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4f5dc:	defffd04 	addi	sp,sp,-12
   4f5e0:	dfc00215 	stw	ra,8(sp)
   4f5e4:	df000115 	stw	fp,4(sp)
   4f5e8:	df000104 	addi	fp,sp,4
   4f5ec:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4f5f0:	d1600604 	addi	r5,gp,-32744
   4f5f4:	e13fff17 	ldw	r4,-4(fp)
   4f5f8:	00505700 	call	50570 <alt_dev_llist_insert>
}
   4f5fc:	e037883a 	mov	sp,fp
   4f600:	dfc00117 	ldw	ra,4(sp)
   4f604:	df000017 	ldw	fp,0(sp)
   4f608:	dec00204 	addi	sp,sp,8
   4f60c:	f800283a 	ret

0004f610 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4f610:	defffd04 	addi	sp,sp,-12
   4f614:	dfc00215 	stw	ra,8(sp)
   4f618:	df000115 	stw	fp,4(sp)
   4f61c:	df000104 	addi	fp,sp,4
   4f620:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   4f624:	0050ccc0 	call	50ccc <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4f628:	00800044 	movi	r2,1
   4f62c:	1001703a 	wrctl	status,r2
}
   4f630:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   4f634:	0001883a 	nop
   4f638:	e037883a 	mov	sp,fp
   4f63c:	dfc00117 	ldw	ra,4(sp)
   4f640:	df000017 	ldw	fp,0(sp)
   4f644:	dec00204 	addi	sp,sp,8
   4f648:	f800283a 	ret

0004f64c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4f64c:	defffe04 	addi	sp,sp,-8
   4f650:	dfc00115 	stw	ra,4(sp)
   4f654:	df000015 	stw	fp,0(sp)
   4f658:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
   4f65c:	01c0fa04 	movi	r7,1000
   4f660:	01800044 	movi	r6,1
   4f664:	000b883a 	mov	r5,zero
   4f668:	01000234 	movhi	r4,8
   4f66c:	21040804 	addi	r4,r4,4128
   4f670:	00501ac0 	call	501ac <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   4f674:	01800284 	movi	r6,10
   4f678:	000b883a 	mov	r5,zero
   4f67c:	01000174 	movhi	r4,5
   4f680:	21092104 	addi	r4,r4,9348
   4f684:	004f8100 	call	4f810 <altera_avalon_jtag_uart_init>
   4f688:	01000174 	movhi	r4,5
   4f68c:	21091704 	addi	r4,r4,9308
   4f690:	004f5dc0 	call	4f5dc <alt_dev_reg>
}
   4f694:	0001883a 	nop
   4f698:	e037883a 	mov	sp,fp
   4f69c:	dfc00117 	ldw	ra,4(sp)
   4f6a0:	df000017 	ldw	fp,0(sp)
   4f6a4:	dec00204 	addi	sp,sp,8
   4f6a8:	f800283a 	ret

0004f6ac <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4f6ac:	defffa04 	addi	sp,sp,-24
   4f6b0:	dfc00515 	stw	ra,20(sp)
   4f6b4:	df000415 	stw	fp,16(sp)
   4f6b8:	df000404 	addi	fp,sp,16
   4f6bc:	e13ffe15 	stw	r4,-8(fp)
   4f6c0:	e17ffd15 	stw	r5,-12(fp)
   4f6c4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f6c8:	e0bffe17 	ldw	r2,-8(fp)
   4f6cc:	10800017 	ldw	r2,0(r2)
   4f6d0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4f6d4:	e0bfff17 	ldw	r2,-4(fp)
   4f6d8:	10c00a04 	addi	r3,r2,40
   4f6dc:	e0bffe17 	ldw	r2,-8(fp)
   4f6e0:	10800217 	ldw	r2,8(r2)
   4f6e4:	100f883a 	mov	r7,r2
   4f6e8:	e1bffc17 	ldw	r6,-16(fp)
   4f6ec:	e17ffd17 	ldw	r5,-12(fp)
   4f6f0:	1809883a 	mov	r4,r3
   4f6f4:	004fce80 	call	4fce8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4f6f8:	e037883a 	mov	sp,fp
   4f6fc:	dfc00117 	ldw	ra,4(sp)
   4f700:	df000017 	ldw	fp,0(sp)
   4f704:	dec00204 	addi	sp,sp,8
   4f708:	f800283a 	ret

0004f70c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4f70c:	defffa04 	addi	sp,sp,-24
   4f710:	dfc00515 	stw	ra,20(sp)
   4f714:	df000415 	stw	fp,16(sp)
   4f718:	df000404 	addi	fp,sp,16
   4f71c:	e13ffe15 	stw	r4,-8(fp)
   4f720:	e17ffd15 	stw	r5,-12(fp)
   4f724:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f728:	e0bffe17 	ldw	r2,-8(fp)
   4f72c:	10800017 	ldw	r2,0(r2)
   4f730:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4f734:	e0bfff17 	ldw	r2,-4(fp)
   4f738:	10c00a04 	addi	r3,r2,40
   4f73c:	e0bffe17 	ldw	r2,-8(fp)
   4f740:	10800217 	ldw	r2,8(r2)
   4f744:	100f883a 	mov	r7,r2
   4f748:	e1bffc17 	ldw	r6,-16(fp)
   4f74c:	e17ffd17 	ldw	r5,-12(fp)
   4f750:	1809883a 	mov	r4,r3
   4f754:	004ff080 	call	4ff08 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4f758:	e037883a 	mov	sp,fp
   4f75c:	dfc00117 	ldw	ra,4(sp)
   4f760:	df000017 	ldw	fp,0(sp)
   4f764:	dec00204 	addi	sp,sp,8
   4f768:	f800283a 	ret

0004f76c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4f76c:	defffc04 	addi	sp,sp,-16
   4f770:	dfc00315 	stw	ra,12(sp)
   4f774:	df000215 	stw	fp,8(sp)
   4f778:	df000204 	addi	fp,sp,8
   4f77c:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4f780:	e0bffe17 	ldw	r2,-8(fp)
   4f784:	10800017 	ldw	r2,0(r2)
   4f788:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4f78c:	e0bfff17 	ldw	r2,-4(fp)
   4f790:	10c00a04 	addi	r3,r2,40
   4f794:	e0bffe17 	ldw	r2,-8(fp)
   4f798:	10800217 	ldw	r2,8(r2)
   4f79c:	100b883a 	mov	r5,r2
   4f7a0:	1809883a 	mov	r4,r3
   4f7a4:	004fb8c0 	call	4fb8c <altera_avalon_jtag_uart_close>
}
   4f7a8:	e037883a 	mov	sp,fp
   4f7ac:	dfc00117 	ldw	ra,4(sp)
   4f7b0:	df000017 	ldw	fp,0(sp)
   4f7b4:	dec00204 	addi	sp,sp,8
   4f7b8:	f800283a 	ret

0004f7bc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4f7bc:	defffa04 	addi	sp,sp,-24
   4f7c0:	dfc00515 	stw	ra,20(sp)
   4f7c4:	df000415 	stw	fp,16(sp)
   4f7c8:	df000404 	addi	fp,sp,16
   4f7cc:	e13ffe15 	stw	r4,-8(fp)
   4f7d0:	e17ffd15 	stw	r5,-12(fp)
   4f7d4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4f7d8:	e0bffe17 	ldw	r2,-8(fp)
   4f7dc:	10800017 	ldw	r2,0(r2)
   4f7e0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4f7e4:	e0bfff17 	ldw	r2,-4(fp)
   4f7e8:	10800a04 	addi	r2,r2,40
   4f7ec:	e1bffc17 	ldw	r6,-16(fp)
   4f7f0:	e17ffd17 	ldw	r5,-12(fp)
   4f7f4:	1009883a 	mov	r4,r2
   4f7f8:	004fbf40 	call	4fbf4 <altera_avalon_jtag_uart_ioctl>
}
   4f7fc:	e037883a 	mov	sp,fp
   4f800:	dfc00117 	ldw	ra,4(sp)
   4f804:	df000017 	ldw	fp,0(sp)
   4f808:	dec00204 	addi	sp,sp,8
   4f80c:	f800283a 	ret

0004f810 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4f810:	defffa04 	addi	sp,sp,-24
   4f814:	dfc00515 	stw	ra,20(sp)
   4f818:	df000415 	stw	fp,16(sp)
   4f81c:	df000404 	addi	fp,sp,16
   4f820:	e13fff15 	stw	r4,-4(fp)
   4f824:	e17ffe15 	stw	r5,-8(fp)
   4f828:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f82c:	e0bfff17 	ldw	r2,-4(fp)
   4f830:	00c00044 	movi	r3,1
   4f834:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4f838:	e0bfff17 	ldw	r2,-4(fp)
   4f83c:	10800017 	ldw	r2,0(r2)
   4f840:	10800104 	addi	r2,r2,4
   4f844:	1007883a 	mov	r3,r2
   4f848:	e0bfff17 	ldw	r2,-4(fp)
   4f84c:	10800817 	ldw	r2,32(r2)
   4f850:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4f854:	e0bffe17 	ldw	r2,-8(fp)
   4f858:	e0fffd17 	ldw	r3,-12(fp)
   4f85c:	d8000015 	stw	zero,0(sp)
   4f860:	e1ffff17 	ldw	r7,-4(fp)
   4f864:	01800174 	movhi	r6,5
   4f868:	31be3404 	addi	r6,r6,-1840
   4f86c:	180b883a 	mov	r5,r3
   4f870:	1009883a 	mov	r4,r2
   4f874:	004eacc0 	call	4eacc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4f878:	e0bfff17 	ldw	r2,-4(fp)
   4f87c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4f880:	e0bfff17 	ldw	r2,-4(fp)
   4f884:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4f888:	d0e71117 	ldw	r3,-25532(gp)
   4f88c:	e1ffff17 	ldw	r7,-4(fp)
   4f890:	01800174 	movhi	r6,5
   4f894:	31beb904 	addi	r6,r6,-1308
   4f898:	180b883a 	mov	r5,r3
   4f89c:	1009883a 	mov	r4,r2
   4f8a0:	00502300 	call	50230 <alt_alarm_start>
   4f8a4:	1000040e 	bge	r2,zero,4f8b8 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4f8a8:	e0ffff17 	ldw	r3,-4(fp)
   4f8ac:	00a00034 	movhi	r2,32768
   4f8b0:	10bfffc4 	addi	r2,r2,-1
   4f8b4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4f8b8:	0001883a 	nop
   4f8bc:	e037883a 	mov	sp,fp
   4f8c0:	dfc00117 	ldw	ra,4(sp)
   4f8c4:	df000017 	ldw	fp,0(sp)
   4f8c8:	dec00204 	addi	sp,sp,8
   4f8cc:	f800283a 	ret

0004f8d0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4f8d0:	defff704 	addi	sp,sp,-36
   4f8d4:	df000815 	stw	fp,32(sp)
   4f8d8:	df000804 	addi	fp,sp,32
   4f8dc:	e13ff815 	stw	r4,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4f8e0:	e0bff817 	ldw	r2,-32(fp)
   4f8e4:	e0bffc15 	stw	r2,-16(fp)
  unsigned int base = sp->base;
   4f8e8:	e0bffc17 	ldw	r2,-16(fp)
   4f8ec:	10800017 	ldw	r2,0(r2)
   4f8f0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int postflag=0;
   4f8f4:	e03fff15 	stw	zero,-4(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f8f8:	e0bffb17 	ldw	r2,-20(fp)
   4f8fc:	10800104 	addi	r2,r2,4
   4f900:	10800037 	ldwio	r2,0(r2)
   4f904:	e0bffa15 	stw	r2,-24(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4f908:	e0bffa17 	ldw	r2,-24(fp)
   4f90c:	1080c00c 	andi	r2,r2,768
   4f910:	10006e26 	beq	r2,zero,4facc <altera_avalon_jtag_uart_irq+0x1fc>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4f914:	e0bffa17 	ldw	r2,-24(fp)
   4f918:	1080400c 	andi	r2,r2,256
   4f91c:	10003526 	beq	r2,zero,4f9f4 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4f920:	00800074 	movhi	r2,1
   4f924:	e0bffe15 	stw	r2,-8(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f928:	e0bffc17 	ldw	r2,-16(fp)
   4f92c:	10800a17 	ldw	r2,40(r2)
   4f930:	10800044 	addi	r2,r2,1
   4f934:	1081ffcc 	andi	r2,r2,2047
   4f938:	e0bff915 	stw	r2,-28(fp)
        if (next == sp->rx_out)
   4f93c:	e0bffc17 	ldw	r2,-16(fp)
   4f940:	10800b17 	ldw	r2,44(r2)
   4f944:	e0fff917 	ldw	r3,-28(fp)
   4f948:	18801526 	beq	r3,r2,4f9a0 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4f94c:	e0bffb17 	ldw	r2,-20(fp)
   4f950:	10800037 	ldwio	r2,0(r2)
   4f954:	e0bffe15 	stw	r2,-8(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4f958:	e0bffe17 	ldw	r2,-8(fp)
   4f95c:	10a0000c 	andi	r2,r2,32768
   4f960:	10001126 	beq	r2,zero,4f9a8 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4f964:	e0bffc17 	ldw	r2,-16(fp)
   4f968:	10800a17 	ldw	r2,40(r2)
   4f96c:	e0fffe17 	ldw	r3,-8(fp)
   4f970:	1809883a 	mov	r4,r3
   4f974:	e0fffc17 	ldw	r3,-16(fp)
   4f978:	1885883a 	add	r2,r3,r2
   4f97c:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f980:	e0bffc17 	ldw	r2,-16(fp)
   4f984:	10800a17 	ldw	r2,40(r2)
   4f988:	10800044 	addi	r2,r2,1
   4f98c:	10c1ffcc 	andi	r3,r2,2047
   4f990:	e0bffc17 	ldw	r2,-16(fp)
   4f994:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   4f998:	0001883a 	nop
      {
   4f99c:	003fe206 	br	4f928 <altera_avalon_jtag_uart_irq+0x58>
          break;
   4f9a0:	0001883a 	nop
   4f9a4:	00000106 	br	4f9ac <altera_avalon_jtag_uart_irq+0xdc>
          break;
   4f9a8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, ALT_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4f9ac:	e0bffe17 	ldw	r2,-8(fp)
   4f9b0:	00ffffd4 	movui	r3,65535
   4f9b4:	18800f2e 	bgeu	r3,r2,4f9f4 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f9b8:	e0bffc17 	ldw	r2,-16(fp)
   4f9bc:	10c00817 	ldw	r3,32(r2)
   4f9c0:	00bfff84 	movi	r2,-2
   4f9c4:	1886703a 	and	r3,r3,r2
   4f9c8:	e0bffc17 	ldw	r2,-16(fp)
   4f9cc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4f9d0:	e0bffb17 	ldw	r2,-20(fp)
   4f9d4:	10800104 	addi	r2,r2,4
   4f9d8:	1007883a 	mov	r3,r2
   4f9dc:	e0bffc17 	ldw	r2,-16(fp)
   4f9e0:	10800817 	ldw	r2,32(r2)
   4f9e4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4f9e8:	e0bffb17 	ldw	r2,-20(fp)
   4f9ec:	10800104 	addi	r2,r2,4
   4f9f0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4f9f4:	e0bffa17 	ldw	r2,-24(fp)
   4f9f8:	1080800c 	andi	r2,r2,512
   4f9fc:	103fbe26 	beq	r2,zero,4f8f8 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4fa00:	e0bffa17 	ldw	r2,-24(fp)
   4fa04:	1004d43a 	srli	r2,r2,16
   4fa08:	e0bffd15 	stw	r2,-12(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4fa0c:	00001506 	br	4fa64 <altera_avalon_jtag_uart_irq+0x194>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4fa10:	e0bffb17 	ldw	r2,-20(fp)
   4fa14:	e0fffc17 	ldw	r3,-16(fp)
   4fa18:	18c00d17 	ldw	r3,52(r3)
   4fa1c:	e13ffc17 	ldw	r4,-16(fp)
   4fa20:	20c7883a 	add	r3,r4,r3
   4fa24:	18c20e03 	ldbu	r3,2104(r3)
   4fa28:	18c03fcc 	andi	r3,r3,255
   4fa2c:	18c0201c 	xori	r3,r3,128
   4fa30:	18ffe004 	addi	r3,r3,-128
   4fa34:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4fa38:	e0bffc17 	ldw	r2,-16(fp)
   4fa3c:	10800d17 	ldw	r2,52(r2)
   4fa40:	10800044 	addi	r2,r2,1
   4fa44:	10c1ffcc 	andi	r3,r2,2047
   4fa48:	e0bffc17 	ldw	r2,-16(fp)
   4fa4c:	10c00d15 	stw	r3,52(r2)
        
        /* indicate that the ALT_FLAG_POST routine must be called */
        postflag=1;
   4fa50:	00800044 	movi	r2,1
   4fa54:	e0bfff15 	stw	r2,-4(fp)

        space--;
   4fa58:	e0bffd17 	ldw	r2,-12(fp)
   4fa5c:	10bfffc4 	addi	r2,r2,-1
   4fa60:	e0bffd15 	stw	r2,-12(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   4fa64:	e0bffd17 	ldw	r2,-12(fp)
   4fa68:	10000526 	beq	r2,zero,4fa80 <altera_avalon_jtag_uart_irq+0x1b0>
   4fa6c:	e0bffc17 	ldw	r2,-16(fp)
   4fa70:	10c00d17 	ldw	r3,52(r2)
   4fa74:	e0bffc17 	ldw	r2,-16(fp)
   4fa78:	10800c17 	ldw	r2,48(r2)
   4fa7c:	18bfe41e 	bne	r3,r2,4fa10 <altera_avalon_jtag_uart_irq+0x140>
      {
        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, ALT_FLAG_SET);
      }

      if (space > 0)
   4fa80:	e0bffd17 	ldw	r2,-12(fp)
   4fa84:	103f9c26 	beq	r2,zero,4f8f8 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4fa88:	e0bffc17 	ldw	r2,-16(fp)
   4fa8c:	10c00817 	ldw	r3,32(r2)
   4fa90:	00bfff44 	movi	r2,-3
   4fa94:	1886703a 	and	r3,r3,r2
   4fa98:	e0bffc17 	ldw	r2,-16(fp)
   4fa9c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4faa0:	e0bffc17 	ldw	r2,-16(fp)
   4faa4:	10800017 	ldw	r2,0(r2)
   4faa8:	10800104 	addi	r2,r2,4
   4faac:	1007883a 	mov	r3,r2
   4fab0:	e0bffc17 	ldw	r2,-16(fp)
   4fab4:	10800817 	ldw	r2,32(r2)
   4fab8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4fabc:	e0bffb17 	ldw	r2,-20(fp)
   4fac0:	10800104 	addi	r2,r2,4
   4fac4:	10800037 	ldwio	r2,0(r2)
  {
   4fac8:	003f8b06 	br	4f8f8 <altera_avalon_jtag_uart_irq+0x28>
      break;
   4facc:	0001883a 	nop
      }
    }
  }
}
   4fad0:	0001883a 	nop
   4fad4:	e037883a 	mov	sp,fp
   4fad8:	df000017 	ldw	fp,0(sp)
   4fadc:	dec00104 	addi	sp,sp,4
   4fae0:	f800283a 	ret

0004fae4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4fae4:	defffc04 	addi	sp,sp,-16
   4fae8:	df000315 	stw	fp,12(sp)
   4faec:	df000304 	addi	fp,sp,12
   4faf0:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4faf4:	e0bffd17 	ldw	r2,-12(fp)
   4faf8:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4fafc:	e0bfff17 	ldw	r2,-4(fp)
   4fb00:	10800017 	ldw	r2,0(r2)
   4fb04:	10800104 	addi	r2,r2,4
   4fb08:	10800037 	ldwio	r2,0(r2)
   4fb0c:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4fb10:	e0bffe17 	ldw	r2,-8(fp)
   4fb14:	1081000c 	andi	r2,r2,1024
   4fb18:	10000b26 	beq	r2,zero,4fb48 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4fb1c:	e0bfff17 	ldw	r2,-4(fp)
   4fb20:	10800017 	ldw	r2,0(r2)
   4fb24:	10800104 	addi	r2,r2,4
   4fb28:	1007883a 	mov	r3,r2
   4fb2c:	e0bfff17 	ldw	r2,-4(fp)
   4fb30:	10800817 	ldw	r2,32(r2)
   4fb34:	10810014 	ori	r2,r2,1024
   4fb38:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4fb3c:	e0bfff17 	ldw	r2,-4(fp)
   4fb40:	10000915 	stw	zero,36(r2)
   4fb44:	00000c06 	br	4fb78 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4fb48:	e0bfff17 	ldw	r2,-4(fp)
   4fb4c:	10c00917 	ldw	r3,36(r2)
   4fb50:	00a00034 	movhi	r2,32768
   4fb54:	10bfff04 	addi	r2,r2,-4
   4fb58:	10c00736 	bltu	r2,r3,4fb78 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   4fb5c:	e0bfff17 	ldw	r2,-4(fp)
   4fb60:	10800917 	ldw	r2,36(r2)
   4fb64:	10c00044 	addi	r3,r2,1
   4fb68:	e0bfff17 	ldw	r2,-4(fp)
   4fb6c:	10c00915 	stw	r3,36(r2)
    
    if (sp->host_inactive >= sp->timeout) {
   4fb70:	e0bfff17 	ldw	r2,-4(fp)
   4fb74:	10800917 	ldw	r2,36(r2)
   4fb78:	d0a71117 	ldw	r2,-25532(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, ALT_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4fb7c:	e037883a 	mov	sp,fp
   4fb80:	df000017 	ldw	fp,0(sp)
   4fb84:	dec00104 	addi	sp,sp,4
   4fb88:	f800283a 	ret

0004fb8c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4fb8c:	defffd04 	addi	sp,sp,-12
   4fb90:	df000215 	stw	fp,8(sp)
   4fb94:	df000204 	addi	fp,sp,8
   4fb98:	e13fff15 	stw	r4,-4(fp)
   4fb9c:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4fba0:	00000506 	br	4fbb8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4fba4:	e0bffe17 	ldw	r2,-8(fp)
   4fba8:	1090000c 	andi	r2,r2,16384
   4fbac:	10000226 	beq	r2,zero,4fbb8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4fbb0:	00bffd44 	movi	r2,-11
   4fbb4:	00000b06 	br	4fbe4 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4fbb8:	e0bfff17 	ldw	r2,-4(fp)
   4fbbc:	10c00d17 	ldw	r3,52(r2)
   4fbc0:	e0bfff17 	ldw	r2,-4(fp)
   4fbc4:	10800c17 	ldw	r2,48(r2)
   4fbc8:	18800526 	beq	r3,r2,4fbe0 <altera_avalon_jtag_uart_close+0x54>
   4fbcc:	e0bfff17 	ldw	r2,-4(fp)
   4fbd0:	10c00917 	ldw	r3,36(r2)
   4fbd4:	e0bfff17 	ldw	r2,-4(fp)
   4fbd8:	10800117 	ldw	r2,4(r2)
   4fbdc:	18bff136 	bltu	r3,r2,4fba4 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   4fbe0:	0005883a 	mov	r2,zero
}
   4fbe4:	e037883a 	mov	sp,fp
   4fbe8:	df000017 	ldw	fp,0(sp)
   4fbec:	dec00104 	addi	sp,sp,4
   4fbf0:	f800283a 	ret

0004fbf4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4fbf4:	defffa04 	addi	sp,sp,-24
   4fbf8:	df000515 	stw	fp,20(sp)
   4fbfc:	df000504 	addi	fp,sp,20
   4fc00:	e13ffd15 	stw	r4,-12(fp)
   4fc04:	e17ffc15 	stw	r5,-16(fp)
   4fc08:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   4fc0c:	00bff9c4 	movi	r2,-25
   4fc10:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   4fc14:	e0bffc17 	ldw	r2,-16(fp)
   4fc18:	109a8060 	cmpeqi	r2,r2,27137
   4fc1c:	1000041e 	bne	r2,zero,4fc30 <altera_avalon_jtag_uart_ioctl+0x3c>
   4fc20:	e0bffc17 	ldw	r2,-16(fp)
   4fc24:	109a80a0 	cmpeqi	r2,r2,27138
   4fc28:	1000181e 	bne	r2,zero,4fc8c <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   4fc2c:	00002906 	br	4fcd4 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   4fc30:	e0bffd17 	ldw	r2,-12(fp)
   4fc34:	10c00117 	ldw	r3,4(r2)
   4fc38:	00a00034 	movhi	r2,32768
   4fc3c:	10bfffc4 	addi	r2,r2,-1
   4fc40:	18802126 	beq	r3,r2,4fcc8 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   4fc44:	e0bffb17 	ldw	r2,-20(fp)
   4fc48:	10800017 	ldw	r2,0(r2)
   4fc4c:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4fc50:	e0bffe17 	ldw	r2,-8(fp)
   4fc54:	10800090 	cmplti	r2,r2,2
   4fc58:	1000061e 	bne	r2,zero,4fc74 <altera_avalon_jtag_uart_ioctl+0x80>
   4fc5c:	e0fffe17 	ldw	r3,-8(fp)
   4fc60:	00a00034 	movhi	r2,32768
   4fc64:	10bfffc4 	addi	r2,r2,-1
   4fc68:	18800226 	beq	r3,r2,4fc74 <altera_avalon_jtag_uart_ioctl+0x80>
   4fc6c:	e0bffe17 	ldw	r2,-8(fp)
   4fc70:	00000206 	br	4fc7c <altera_avalon_jtag_uart_ioctl+0x88>
   4fc74:	00a00034 	movhi	r2,32768
   4fc78:	10bfff84 	addi	r2,r2,-2
   4fc7c:	e0fffd17 	ldw	r3,-12(fp)
   4fc80:	18800115 	stw	r2,4(r3)
      rc = 0;
   4fc84:	e03fff15 	stw	zero,-4(fp)
    break;
   4fc88:	00000f06 	br	4fcc8 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   4fc8c:	e0bffd17 	ldw	r2,-12(fp)
   4fc90:	10c00117 	ldw	r3,4(r2)
   4fc94:	00a00034 	movhi	r2,32768
   4fc98:	10bfffc4 	addi	r2,r2,-1
   4fc9c:	18800c26 	beq	r3,r2,4fcd0 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4fca0:	e0bffd17 	ldw	r2,-12(fp)
   4fca4:	10c00917 	ldw	r3,36(r2)
   4fca8:	e0bffd17 	ldw	r2,-12(fp)
   4fcac:	10800117 	ldw	r2,4(r2)
   4fcb0:	1885803a 	cmpltu	r2,r3,r2
   4fcb4:	10c03fcc 	andi	r3,r2,255
   4fcb8:	e0bffb17 	ldw	r2,-20(fp)
   4fcbc:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4fcc0:	e03fff15 	stw	zero,-4(fp)
    break;
   4fcc4:	00000206 	br	4fcd0 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   4fcc8:	0001883a 	nop
   4fccc:	00000106 	br	4fcd4 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   4fcd0:	0001883a 	nop
  }

  return rc;
   4fcd4:	e0bfff17 	ldw	r2,-4(fp)
}
   4fcd8:	e037883a 	mov	sp,fp
   4fcdc:	df000017 	ldw	fp,0(sp)
   4fce0:	dec00104 	addi	sp,sp,4
   4fce4:	f800283a 	ret

0004fce8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4fce8:	defff304 	addi	sp,sp,-52
   4fcec:	dfc00c15 	stw	ra,48(sp)
   4fcf0:	df000b15 	stw	fp,44(sp)
   4fcf4:	df000b04 	addi	fp,sp,44
   4fcf8:	e13ff815 	stw	r4,-32(fp)
   4fcfc:	e17ff715 	stw	r5,-36(fp)
   4fd00:	e1bff615 	stw	r6,-40(fp)
   4fd04:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   4fd08:	e0bff717 	ldw	r2,-36(fp)
   4fd0c:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4fd10:	00004706 	br	4fe30 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4fd14:	e0bff817 	ldw	r2,-32(fp)
   4fd18:	10800a17 	ldw	r2,40(r2)
   4fd1c:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   4fd20:	e0bff817 	ldw	r2,-32(fp)
   4fd24:	10800b17 	ldw	r2,44(r2)
   4fd28:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   4fd2c:	e0fffd17 	ldw	r3,-12(fp)
   4fd30:	e0bffc17 	ldw	r2,-16(fp)
   4fd34:	18800536 	bltu	r3,r2,4fd4c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4fd38:	e0fffd17 	ldw	r3,-12(fp)
   4fd3c:	e0bffc17 	ldw	r2,-16(fp)
   4fd40:	1885c83a 	sub	r2,r3,r2
   4fd44:	e0bffe15 	stw	r2,-8(fp)
   4fd48:	00000406 	br	4fd5c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4fd4c:	00c20004 	movi	r3,2048
   4fd50:	e0bffc17 	ldw	r2,-16(fp)
   4fd54:	1885c83a 	sub	r2,r3,r2
   4fd58:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   4fd5c:	e0bffe17 	ldw	r2,-8(fp)
   4fd60:	10001e26 	beq	r2,zero,4fddc <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4fd64:	e0fff617 	ldw	r3,-40(fp)
   4fd68:	e0bffe17 	ldw	r2,-8(fp)
   4fd6c:	1880022e 	bgeu	r3,r2,4fd78 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4fd70:	e0bff617 	ldw	r2,-40(fp)
   4fd74:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4fd78:	e0bff817 	ldw	r2,-32(fp)
   4fd7c:	10c00e04 	addi	r3,r2,56
   4fd80:	e0bffc17 	ldw	r2,-16(fp)
   4fd84:	1885883a 	add	r2,r3,r2
   4fd88:	e1bffe17 	ldw	r6,-8(fp)
   4fd8c:	100b883a 	mov	r5,r2
   4fd90:	e13fff17 	ldw	r4,-4(fp)
   4fd94:	00474480 	call	47448 <memcpy>
      ptr   += n;
   4fd98:	e0ffff17 	ldw	r3,-4(fp)
   4fd9c:	e0bffe17 	ldw	r2,-8(fp)
   4fda0:	1885883a 	add	r2,r3,r2
   4fda4:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   4fda8:	e0fff617 	ldw	r3,-40(fp)
   4fdac:	e0bffe17 	ldw	r2,-8(fp)
   4fdb0:	1885c83a 	sub	r2,r3,r2
   4fdb4:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4fdb8:	e0fffc17 	ldw	r3,-16(fp)
   4fdbc:	e0bffe17 	ldw	r2,-8(fp)
   4fdc0:	1885883a 	add	r2,r3,r2
   4fdc4:	10c1ffcc 	andi	r3,r2,2047
   4fdc8:	e0bff817 	ldw	r2,-32(fp)
   4fdcc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4fdd0:	e0bff617 	ldw	r2,-40(fp)
   4fdd4:	00bfcf16 	blt	zero,r2,4fd14 <altera_avalon_jtag_uart_read+0x2c>
   4fdd8:	00000106 	br	4fde0 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   4fddc:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   4fde0:	e0ffff17 	ldw	r3,-4(fp)
   4fde4:	e0bff717 	ldw	r2,-36(fp)
   4fde8:	1880141e 	bne	r3,r2,4fe3c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4fdec:	e0bff517 	ldw	r2,-44(fp)
   4fdf0:	1090000c 	andi	r2,r2,16384
   4fdf4:	1000131e 	bne	r2,zero,4fe44 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4fdf8:	0001883a 	nop
   4fdfc:	e0bff817 	ldw	r2,-32(fp)
   4fe00:	10800a17 	ldw	r2,40(r2)
   4fe04:	e0fffd17 	ldw	r3,-12(fp)
   4fe08:	1880051e 	bne	r3,r2,4fe20 <altera_avalon_jtag_uart_read+0x138>
   4fe0c:	e0bff817 	ldw	r2,-32(fp)
   4fe10:	10c00917 	ldw	r3,36(r2)
   4fe14:	e0bff817 	ldw	r2,-32(fp)
   4fe18:	10800117 	ldw	r2,4(r2)
   4fe1c:	18bff736 	bltu	r3,r2,4fdfc <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4fe20:	e0bff817 	ldw	r2,-32(fp)
   4fe24:	10800a17 	ldw	r2,40(r2)
   4fe28:	e0fffd17 	ldw	r3,-12(fp)
   4fe2c:	18800726 	beq	r3,r2,4fe4c <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   4fe30:	e0bff617 	ldw	r2,-40(fp)
   4fe34:	00bfb716 	blt	zero,r2,4fd14 <altera_avalon_jtag_uart_read+0x2c>
   4fe38:	00000506 	br	4fe50 <altera_avalon_jtag_uart_read+0x168>
      break;
   4fe3c:	0001883a 	nop
   4fe40:	00000306 	br	4fe50 <altera_avalon_jtag_uart_read+0x168>
      break;
   4fe44:	0001883a 	nop
   4fe48:	00000106 	br	4fe50 <altera_avalon_jtag_uart_read+0x168>
      break;
   4fe4c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4fe50:	e0ffff17 	ldw	r3,-4(fp)
   4fe54:	e0bff717 	ldw	r2,-36(fp)
   4fe58:	18801926 	beq	r3,r2,4fec0 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   4fe5c:	0005303a 	rdctl	r2,status
   4fe60:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4fe64:	e0fff917 	ldw	r3,-28(fp)
   4fe68:	00bfff84 	movi	r2,-2
   4fe6c:	1884703a 	and	r2,r3,r2
   4fe70:	1001703a 	wrctl	status,r2
  return context;
   4fe74:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4fe78:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4fe7c:	e0bff817 	ldw	r2,-32(fp)
   4fe80:	10800817 	ldw	r2,32(r2)
   4fe84:	10c00054 	ori	r3,r2,1
   4fe88:	e0bff817 	ldw	r2,-32(fp)
   4fe8c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4fe90:	e0bff817 	ldw	r2,-32(fp)
   4fe94:	10800017 	ldw	r2,0(r2)
   4fe98:	10800104 	addi	r2,r2,4
   4fe9c:	1007883a 	mov	r3,r2
   4fea0:	e0bff817 	ldw	r2,-32(fp)
   4fea4:	10800817 	ldw	r2,32(r2)
   4fea8:	18800035 	stwio	r2,0(r3)
   4feac:	e0bffb17 	ldw	r2,-20(fp)
   4feb0:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   4feb4:	e0bffa17 	ldw	r2,-24(fp)
   4feb8:	1001703a 	wrctl	status,r2
}
   4febc:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4fec0:	e0ffff17 	ldw	r3,-4(fp)
   4fec4:	e0bff717 	ldw	r2,-36(fp)
   4fec8:	18800426 	beq	r3,r2,4fedc <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   4fecc:	e0ffff17 	ldw	r3,-4(fp)
   4fed0:	e0bff717 	ldw	r2,-36(fp)
   4fed4:	1885c83a 	sub	r2,r3,r2
   4fed8:	00000606 	br	4fef4 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   4fedc:	e0bff517 	ldw	r2,-44(fp)
   4fee0:	1090000c 	andi	r2,r2,16384
   4fee4:	10000226 	beq	r2,zero,4fef0 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   4fee8:	00bffd44 	movi	r2,-11
   4feec:	00000106 	br	4fef4 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   4fef0:	00bffec4 	movi	r2,-5
}
   4fef4:	e037883a 	mov	sp,fp
   4fef8:	dfc00117 	ldw	ra,4(sp)
   4fefc:	df000017 	ldw	fp,0(sp)
   4ff00:	dec00204 	addi	sp,sp,8
   4ff04:	f800283a 	ret

0004ff08 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4ff08:	defff304 	addi	sp,sp,-52
   4ff0c:	dfc00c15 	stw	ra,48(sp)
   4ff10:	df000b15 	stw	fp,44(sp)
   4ff14:	df000b04 	addi	fp,sp,44
   4ff18:	e13ff815 	stw	r4,-32(fp)
   4ff1c:	e17ff715 	stw	r5,-36(fp)
   4ff20:	e1bff615 	stw	r6,-40(fp)
   4ff24:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4ff28:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4ff2c:	e0bff717 	ldw	r2,-36(fp)
   4ff30:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4ff34:	00003706 	br	50014 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4ff38:	e0bff817 	ldw	r2,-32(fp)
   4ff3c:	10800c17 	ldw	r2,48(r2)
   4ff40:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   4ff44:	e0bff817 	ldw	r2,-32(fp)
   4ff48:	10800d17 	ldw	r2,52(r2)
   4ff4c:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   4ff50:	e0fffc17 	ldw	r3,-16(fp)
   4ff54:	e0bfff17 	ldw	r2,-4(fp)
   4ff58:	1880062e 	bgeu	r3,r2,4ff74 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4ff5c:	e0ffff17 	ldw	r3,-4(fp)
   4ff60:	e0bffc17 	ldw	r2,-16(fp)
   4ff64:	1885c83a 	sub	r2,r3,r2
   4ff68:	10bfffc4 	addi	r2,r2,-1
   4ff6c:	e0bffe15 	stw	r2,-8(fp)
   4ff70:	00000b06 	br	4ffa0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4ff74:	e0bfff17 	ldw	r2,-4(fp)
   4ff78:	10000526 	beq	r2,zero,4ff90 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4ff7c:	00c20004 	movi	r3,2048
   4ff80:	e0bffc17 	ldw	r2,-16(fp)
   4ff84:	1885c83a 	sub	r2,r3,r2
   4ff88:	e0bffe15 	stw	r2,-8(fp)
   4ff8c:	00000406 	br	4ffa0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4ff90:	00c1ffc4 	movi	r3,2047
   4ff94:	e0bffc17 	ldw	r2,-16(fp)
   4ff98:	1885c83a 	sub	r2,r3,r2
   4ff9c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   4ffa0:	e0bffe17 	ldw	r2,-8(fp)
   4ffa4:	10001e26 	beq	r2,zero,50020 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4ffa8:	e0fff617 	ldw	r3,-40(fp)
   4ffac:	e0bffe17 	ldw	r2,-8(fp)
   4ffb0:	1880022e 	bgeu	r3,r2,4ffbc <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4ffb4:	e0bff617 	ldw	r2,-40(fp)
   4ffb8:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4ffbc:	e0bff817 	ldw	r2,-32(fp)
   4ffc0:	10c20e04 	addi	r3,r2,2104
   4ffc4:	e0bffc17 	ldw	r2,-16(fp)
   4ffc8:	1885883a 	add	r2,r3,r2
   4ffcc:	e1bffe17 	ldw	r6,-8(fp)
   4ffd0:	e17ff717 	ldw	r5,-36(fp)
   4ffd4:	1009883a 	mov	r4,r2
   4ffd8:	00474480 	call	47448 <memcpy>
      ptr   += n;
   4ffdc:	e0fff717 	ldw	r3,-36(fp)
   4ffe0:	e0bffe17 	ldw	r2,-8(fp)
   4ffe4:	1885883a 	add	r2,r3,r2
   4ffe8:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   4ffec:	e0fff617 	ldw	r3,-40(fp)
   4fff0:	e0bffe17 	ldw	r2,-8(fp)
   4fff4:	1885c83a 	sub	r2,r3,r2
   4fff8:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4fffc:	e0fffc17 	ldw	r3,-16(fp)
   50000:	e0bffe17 	ldw	r2,-8(fp)
   50004:	1885883a 	add	r2,r3,r2
   50008:	10c1ffcc 	andi	r3,r2,2047
   5000c:	e0bff817 	ldw	r2,-32(fp)
   50010:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   50014:	e0bff617 	ldw	r2,-40(fp)
   50018:	00bfc716 	blt	zero,r2,4ff38 <altera_avalon_jtag_uart_write+0x30>
   5001c:	00000106 	br	50024 <altera_avalon_jtag_uart_write+0x11c>
        break;
   50020:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   50024:	0005303a 	rdctl	r2,status
   50028:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5002c:	e0fff917 	ldw	r3,-28(fp)
   50030:	00bfff84 	movi	r2,-2
   50034:	1884703a 	and	r2,r3,r2
   50038:	1001703a 	wrctl	status,r2
  return context;
   5003c:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   50040:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   50044:	e0bff817 	ldw	r2,-32(fp)
   50048:	10800817 	ldw	r2,32(r2)
   5004c:	10c00094 	ori	r3,r2,2
   50050:	e0bff817 	ldw	r2,-32(fp)
   50054:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   50058:	e0bff817 	ldw	r2,-32(fp)
   5005c:	10800017 	ldw	r2,0(r2)
   50060:	10800104 	addi	r2,r2,4
   50064:	1007883a 	mov	r3,r2
   50068:	e0bff817 	ldw	r2,-32(fp)
   5006c:	10800817 	ldw	r2,32(r2)
   50070:	18800035 	stwio	r2,0(r3)
   50074:	e0bffb17 	ldw	r2,-20(fp)
   50078:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   5007c:	e0bffa17 	ldw	r2,-24(fp)
   50080:	1001703a 	wrctl	status,r2
}
   50084:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   50088:	e0bff617 	ldw	r2,-40(fp)
   5008c:	0080100e 	bge	zero,r2,500d0 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   50090:	e0bff517 	ldw	r2,-44(fp)
   50094:	1090000c 	andi	r2,r2,16384
   50098:	1000101e 	bne	r2,zero,500dc <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   5009c:	0001883a 	nop
   500a0:	e0bff817 	ldw	r2,-32(fp)
   500a4:	10800d17 	ldw	r2,52(r2)
   500a8:	e0ffff17 	ldw	r3,-4(fp)
   500ac:	1880051e 	bne	r3,r2,500c4 <altera_avalon_jtag_uart_write+0x1bc>
   500b0:	e0bff817 	ldw	r2,-32(fp)
   500b4:	10c00917 	ldw	r3,36(r2)
   500b8:	e0bff817 	ldw	r2,-32(fp)
   500bc:	10800117 	ldw	r2,4(r2)
   500c0:	18bff736 	bltu	r3,r2,500a0 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   500c4:	e0bff817 	ldw	r2,-32(fp)
   500c8:	10800917 	ldw	r2,36(r2)
   500cc:	1000051e 	bne	r2,zero,500e4 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   500d0:	e0bff617 	ldw	r2,-40(fp)
   500d4:	00bfcf16 	blt	zero,r2,50014 <altera_avalon_jtag_uart_write+0x10c>
   500d8:	00000306 	br	500e8 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   500dc:	0001883a 	nop
   500e0:	00000106 	br	500e8 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   500e4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   500e8:	e0fff717 	ldw	r3,-36(fp)
   500ec:	e0bffd17 	ldw	r2,-12(fp)
   500f0:	18800426 	beq	r3,r2,50104 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   500f4:	e0fff717 	ldw	r3,-36(fp)
   500f8:	e0bffd17 	ldw	r2,-12(fp)
   500fc:	1885c83a 	sub	r2,r3,r2
   50100:	00000606 	br	5011c <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   50104:	e0bff517 	ldw	r2,-44(fp)
   50108:	1090000c 	andi	r2,r2,16384
   5010c:	10000226 	beq	r2,zero,50118 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   50110:	00bffd44 	movi	r2,-11
   50114:	00000106 	br	5011c <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   50118:	00bffec4 	movi	r2,-5
}
   5011c:	e037883a 	mov	sp,fp
   50120:	dfc00117 	ldw	ra,4(sp)
   50124:	df000017 	ldw	fp,0(sp)
   50128:	dec00204 	addi	sp,sp,8
   5012c:	f800283a 	ret

00050130 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   50130:	defffa04 	addi	sp,sp,-24
   50134:	dfc00515 	stw	ra,20(sp)
   50138:	df000415 	stw	fp,16(sp)
   5013c:	df000404 	addi	fp,sp,16
   50140:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   50144:	0007883a 	mov	r3,zero
   50148:	e0bffc17 	ldw	r2,-16(fp)
   5014c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   50150:	e0bffc17 	ldw	r2,-16(fp)
   50154:	10800104 	addi	r2,r2,4
   50158:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
   5015c:	0005303a 	rdctl	r2,status
   50160:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50164:	e0fffd17 	ldw	r3,-12(fp)
   50168:	00bfff84 	movi	r2,-2
   5016c:	1884703a 	and	r2,r3,r2
   50170:	1001703a 	wrctl	status,r2
  return context;
   50174:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   50178:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
   5017c:	0050ba00 	call	50ba0 <alt_tick>
   50180:	e0bfff17 	ldw	r2,-4(fp)
   50184:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   50188:	e0bffe17 	ldw	r2,-8(fp)
   5018c:	1001703a 	wrctl	status,r2
}
   50190:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
   50194:	0001883a 	nop
   50198:	e037883a 	mov	sp,fp
   5019c:	dfc00117 	ldw	ra,4(sp)
   501a0:	df000017 	ldw	fp,0(sp)
   501a4:	dec00204 	addi	sp,sp,8
   501a8:	f800283a 	ret

000501ac <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   501ac:	defff804 	addi	sp,sp,-32
   501b0:	dfc00715 	stw	ra,28(sp)
   501b4:	df000615 	stw	fp,24(sp)
   501b8:	df000604 	addi	fp,sp,24
   501bc:	e13ffe15 	stw	r4,-8(fp)
   501c0:	e17ffd15 	stw	r5,-12(fp)
   501c4:	e1bffc15 	stw	r6,-16(fp)
   501c8:	e1fffb15 	stw	r7,-20(fp)
   501cc:	e0bffb17 	ldw	r2,-20(fp)
   501d0:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   501d4:	d0a71117 	ldw	r2,-25532(gp)
   501d8:	1000031e 	bne	r2,zero,501e8 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
   501dc:	e0bfff17 	ldw	r2,-4(fp)
   501e0:	d0a71115 	stw	r2,-25532(gp)
    return 0;
   501e4:	00000106 	br	501ec <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
   501e8:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   501ec:	e0bffe17 	ldw	r2,-8(fp)
   501f0:	10800104 	addi	r2,r2,4
   501f4:	00c001c4 	movi	r3,7
   501f8:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   501fc:	d8000015 	stw	zero,0(sp)
   50200:	e1fffe17 	ldw	r7,-8(fp)
   50204:	01800174 	movhi	r6,5
   50208:	31804c04 	addi	r6,r6,304
   5020c:	e17ffc17 	ldw	r5,-16(fp)
   50210:	e13ffd17 	ldw	r4,-12(fp)
   50214:	004eacc0 	call	4eacc <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   50218:	0001883a 	nop
   5021c:	e037883a 	mov	sp,fp
   50220:	dfc00117 	ldw	ra,4(sp)
   50224:	df000017 	ldw	fp,0(sp)
   50228:	dec00204 	addi	sp,sp,8
   5022c:	f800283a 	ret

00050230 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   50230:	defff404 	addi	sp,sp,-48
   50234:	df000b15 	stw	fp,44(sp)
   50238:	df000b04 	addi	fp,sp,44
   5023c:	e13ff815 	stw	r4,-32(fp)
   50240:	e17ff715 	stw	r5,-36(fp)
   50244:	e1bff615 	stw	r6,-40(fp)
   50248:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
   5024c:	e03ffe15 	stw	zero,-8(fp)
   50250:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
   50254:	d0a71117 	ldw	r2,-25532(gp)
  
  if (alt_ticks_per_second ())
   50258:	10004826 	beq	r2,zero,5037c <alt_alarm_start+0x14c>
  {
    if (alarm)
   5025c:	e0bff817 	ldw	r2,-32(fp)
   50260:	10004426 	beq	r2,zero,50374 <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
   50264:	e0bff817 	ldw	r2,-32(fp)
   50268:	e0fff617 	ldw	r3,-40(fp)
   5026c:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
   50270:	e0bff817 	ldw	r2,-32(fp)
   50274:	e0fff517 	ldw	r3,-44(fp)
   50278:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   5027c:	0005303a 	rdctl	r2,status
   50280:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50284:	e0fff917 	ldw	r3,-28(fp)
   50288:	00bfff84 	movi	r2,-2
   5028c:	1884703a 	and	r2,r3,r2
   50290:	1001703a 	wrctl	status,r2
  return context;
   50294:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   50298:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   5029c:	d0a71217 	ldw	r2,-25528(gp)
   502a0:	d0e71317 	ldw	r3,-25524(gp)
      
      current_nticks = alt_nticks();
   502a4:	e0bffe15 	stw	r2,-8(fp)
   502a8:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
   502ac:	e0bff717 	ldw	r2,-36(fp)
   502b0:	1011883a 	mov	r8,r2
   502b4:	0013883a 	mov	r9,zero
   502b8:	e13ffe17 	ldw	r4,-8(fp)
   502bc:	e17fff17 	ldw	r5,-4(fp)
   502c0:	4105883a 	add	r2,r8,r4
   502c4:	120d803a 	cmpltu	r6,r2,r8
   502c8:	4947883a 	add	r3,r9,r5
   502cc:	30c9883a 	add	r4,r6,r3
   502d0:	2007883a 	mov	r3,r4
   502d4:	1009883a 	mov	r4,r2
   502d8:	180b883a 	mov	r5,r3
   502dc:	01800044 	movi	r6,1
   502e0:	000f883a 	mov	r7,zero
   502e4:	2185883a 	add	r2,r4,r6
   502e8:	1111803a 	cmpltu	r8,r2,r4
   502ec:	29c7883a 	add	r3,r5,r7
   502f0:	40c9883a 	add	r4,r8,r3
   502f4:	2007883a 	mov	r3,r4
   502f8:	1009883a 	mov	r4,r2
   502fc:	180b883a 	mov	r5,r3
   50300:	e0bff817 	ldw	r2,-32(fp)
   50304:	11000215 	stw	r4,8(r2)
   50308:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   5030c:	e0bff817 	ldw	r2,-32(fp)
   50310:	d0e00c04 	addi	r3,gp,-32720
   50314:	e0fffb15 	stw	r3,-20(fp)
   50318:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   5031c:	e0bffa17 	ldw	r2,-24(fp)
   50320:	e0fffb17 	ldw	r3,-20(fp)
   50324:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   50328:	e0bffb17 	ldw	r2,-20(fp)
   5032c:	10c00017 	ldw	r3,0(r2)
   50330:	e0bffa17 	ldw	r2,-24(fp)
   50334:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   50338:	e0bffb17 	ldw	r2,-20(fp)
   5033c:	10800017 	ldw	r2,0(r2)
   50340:	e0fffa17 	ldw	r3,-24(fp)
   50344:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   50348:	e0bffb17 	ldw	r2,-20(fp)
   5034c:	e0fffa17 	ldw	r3,-24(fp)
   50350:	10c00015 	stw	r3,0(r2)
}
   50354:	0001883a 	nop
   50358:	e0bffd17 	ldw	r2,-12(fp)
   5035c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   50360:	e0bffc17 	ldw	r2,-16(fp)
   50364:	1001703a 	wrctl	status,r2
}
   50368:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   5036c:	0005883a 	mov	r2,zero
   50370:	00000306 	br	50380 <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
   50374:	00bffa84 	movi	r2,-22
   50378:	00000106 	br	50380 <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
   5037c:	00bfde84 	movi	r2,-134
  }
}
   50380:	e037883a 	mov	sp,fp
   50384:	df000017 	ldw	fp,0(sp)
   50388:	dec00104 	addi	sp,sp,4
   5038c:	f800283a 	ret

00050390 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   50390:	defffa04 	addi	sp,sp,-24
   50394:	dfc00515 	stw	ra,20(sp)
   50398:	df000415 	stw	fp,16(sp)
   5039c:	df000404 	addi	fp,sp,16
   503a0:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   503a4:	008000c4 	movi	r2,3
   503a8:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   503ac:	e0fffe17 	ldw	r3,-8(fp)
   503b0:	008003f4 	movhi	r2,15
   503b4:	10909004 	addi	r2,r2,16960
   503b8:	1885383a 	mul	r2,r3,r2
   503bc:	100b883a 	mov	r5,r2
   503c0:	0100bef4 	movhi	r4,763
   503c4:	213c2004 	addi	r4,r4,-3968
   503c8:	004c1280 	call	4c128 <__udivsi3>
  big_loops = us / (INT_MAX/
   503cc:	100b883a 	mov	r5,r2
   503d0:	01200034 	movhi	r4,32768
   503d4:	213fffc4 	addi	r4,r4,-1
   503d8:	004c1280 	call	4c128 <__udivsi3>
   503dc:	100b883a 	mov	r5,r2
   503e0:	e13ffc17 	ldw	r4,-16(fp)
   503e4:	004c1280 	call	4c128 <__udivsi3>
   503e8:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
   503ec:	e0bffd17 	ldw	r2,-12(fp)
   503f0:	10002a26 	beq	r2,zero,5049c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   503f4:	e03fff15 	stw	zero,-4(fp)
   503f8:	00001706 	br	50458 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   503fc:	00a00034 	movhi	r2,32768
   50400:	10bfffc4 	addi	r2,r2,-1
   50404:	10bfffc4 	addi	r2,r2,-1
   50408:	103ffe1e 	bne	r2,zero,50404 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   5040c:	e0fffe17 	ldw	r3,-8(fp)
   50410:	008003f4 	movhi	r2,15
   50414:	10909004 	addi	r2,r2,16960
   50418:	1885383a 	mul	r2,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
   5041c:	100b883a 	mov	r5,r2
   50420:	0100bef4 	movhi	r4,763
   50424:	213c2004 	addi	r4,r4,-3968
   50428:	004c1280 	call	4c128 <__udivsi3>
   5042c:	100b883a 	mov	r5,r2
   50430:	01200034 	movhi	r4,32768
   50434:	213fffc4 	addi	r4,r4,-1
   50438:	004c1280 	call	4c128 <__udivsi3>
   5043c:	1007883a 	mov	r3,r2
   50440:	e0bffc17 	ldw	r2,-16(fp)
   50444:	10c5c83a 	sub	r2,r2,r3
   50448:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
   5044c:	e0bfff17 	ldw	r2,-4(fp)
   50450:	10800044 	addi	r2,r2,1
   50454:	e0bfff15 	stw	r2,-4(fp)
   50458:	e0ffff17 	ldw	r3,-4(fp)
   5045c:	e0bffd17 	ldw	r2,-12(fp)
   50460:	18bfe616 	blt	r3,r2,503fc <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   50464:	e0fffe17 	ldw	r3,-8(fp)
   50468:	008003f4 	movhi	r2,15
   5046c:	10909004 	addi	r2,r2,16960
   50470:	1885383a 	mul	r2,r3,r2
   50474:	100b883a 	mov	r5,r2
   50478:	0100bef4 	movhi	r4,763
   5047c:	213c2004 	addi	r4,r4,-3968
   50480:	004c1280 	call	4c128 <__udivsi3>
   50484:	1007883a 	mov	r3,r2
   50488:	e0bffc17 	ldw	r2,-16(fp)
   5048c:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   50490:	10bfffc4 	addi	r2,r2,-1
   50494:	103ffe1e 	bne	r2,zero,50490 <alt_busy_sleep+0x100>
   50498:	00000d06 	br	504d0 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   5049c:	e0fffe17 	ldw	r3,-8(fp)
   504a0:	008003f4 	movhi	r2,15
   504a4:	10909004 	addi	r2,r2,16960
   504a8:	1885383a 	mul	r2,r3,r2
   504ac:	100b883a 	mov	r5,r2
   504b0:	0100bef4 	movhi	r4,763
   504b4:	213c2004 	addi	r4,r4,-3968
   504b8:	004c1280 	call	4c128 <__udivsi3>
   504bc:	1007883a 	mov	r3,r2
   504c0:	e0bffc17 	ldw	r2,-16(fp)
   504c4:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   504c8:	10bfffc4 	addi	r2,r2,-1
   504cc:	00bffe16 	blt	zero,r2,504c8 <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   504d0:	0005883a 	mov	r2,zero
}
   504d4:	e037883a 	mov	sp,fp
   504d8:	dfc00117 	ldw	ra,4(sp)
   504dc:	df000017 	ldw	fp,0(sp)
   504e0:	dec00204 	addi	sp,sp,8
   504e4:	f800283a 	ret

000504e8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   504e8:	defffe04 	addi	sp,sp,-8
   504ec:	df000115 	stw	fp,4(sp)
   504f0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   504f4:	e03fff15 	stw	zero,-4(fp)
   504f8:	00000506 	br	50510 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   504fc:	e0bfff17 	ldw	r2,-4(fp)
   50500:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   50504:	e0bfff17 	ldw	r2,-4(fp)
   50508:	10800804 	addi	r2,r2,32
   5050c:	e0bfff15 	stw	r2,-4(fp)
   50510:	e0bfff17 	ldw	r2,-4(fp)
   50514:	10820030 	cmpltui	r2,r2,2048
   50518:	103ff81e 	bne	r2,zero,504fc <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   5051c:	0001883a 	nop
   50520:	0001883a 	nop
   50524:	e037883a 	mov	sp,fp
   50528:	df000017 	ldw	fp,0(sp)
   5052c:	dec00104 	addi	sp,sp,4
   50530:	f800283a 	ret

00050534 <alt_get_errno>:
{
   50534:	defffe04 	addi	sp,sp,-8
   50538:	dfc00115 	stw	ra,4(sp)
   5053c:	df000015 	stw	fp,0(sp)
   50540:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50544:	d0a00917 	ldw	r2,-32732(gp)
   50548:	10000326 	beq	r2,zero,50558 <alt_get_errno+0x24>
   5054c:	d0a00917 	ldw	r2,-32732(gp)
   50550:	103ee83a 	callr	r2
   50554:	00000106 	br	5055c <alt_get_errno+0x28>
   50558:	d0a70a04 	addi	r2,gp,-25560
}
   5055c:	e037883a 	mov	sp,fp
   50560:	dfc00117 	ldw	ra,4(sp)
   50564:	df000017 	ldw	fp,0(sp)
   50568:	dec00204 	addi	sp,sp,8
   5056c:	f800283a 	ret

00050570 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   50570:	defffa04 	addi	sp,sp,-24
   50574:	dfc00515 	stw	ra,20(sp)
   50578:	df000415 	stw	fp,16(sp)
   5057c:	df000404 	addi	fp,sp,16
   50580:	e13ffd15 	stw	r4,-12(fp)
   50584:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   50588:	e0bffd17 	ldw	r2,-12(fp)
   5058c:	10000326 	beq	r2,zero,5059c <alt_dev_llist_insert+0x2c>
   50590:	e0bffd17 	ldw	r2,-12(fp)
   50594:	10800217 	ldw	r2,8(r2)
   50598:	1000061e 	bne	r2,zero,505b4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   5059c:	00505340 	call	50534 <alt_get_errno>
   505a0:	1007883a 	mov	r3,r2
   505a4:	00800584 	movi	r2,22
   505a8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   505ac:	00bffa84 	movi	r2,-22
   505b0:	00001406 	br	50604 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   505b4:	e0bffd17 	ldw	r2,-12(fp)
   505b8:	e0fffc17 	ldw	r3,-16(fp)
   505bc:	e0ffff15 	stw	r3,-4(fp)
   505c0:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   505c4:	e0bffe17 	ldw	r2,-8(fp)
   505c8:	e0ffff17 	ldw	r3,-4(fp)
   505cc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   505d0:	e0bfff17 	ldw	r2,-4(fp)
   505d4:	10c00017 	ldw	r3,0(r2)
   505d8:	e0bffe17 	ldw	r2,-8(fp)
   505dc:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   505e0:	e0bfff17 	ldw	r2,-4(fp)
   505e4:	10800017 	ldw	r2,0(r2)
   505e8:	e0fffe17 	ldw	r3,-8(fp)
   505ec:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   505f0:	e0bfff17 	ldw	r2,-4(fp)
   505f4:	e0fffe17 	ldw	r3,-8(fp)
   505f8:	10c00015 	stw	r3,0(r2)
}
   505fc:	0001883a 	nop

  return 0;  
   50600:	0005883a 	mov	r2,zero
}
   50604:	e037883a 	mov	sp,fp
   50608:	dfc00117 	ldw	ra,4(sp)
   5060c:	df000017 	ldw	fp,0(sp)
   50610:	dec00204 	addi	sp,sp,8
   50614:	f800283a 	ret

00050618 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   50618:	defffd04 	addi	sp,sp,-12
   5061c:	dfc00215 	stw	ra,8(sp)
   50620:	df000115 	stw	fp,4(sp)
   50624:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   50628:	00800174 	movhi	r2,5
   5062c:	10848904 	addi	r2,r2,4644
   50630:	e0bfff15 	stw	r2,-4(fp)
   50634:	00000606 	br	50650 <_do_ctors+0x38>
        (*ctor) (); 
   50638:	e0bfff17 	ldw	r2,-4(fp)
   5063c:	10800017 	ldw	r2,0(r2)
   50640:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   50644:	e0bfff17 	ldw	r2,-4(fp)
   50648:	10bfff04 	addi	r2,r2,-4
   5064c:	e0bfff15 	stw	r2,-4(fp)
   50650:	e0ffff17 	ldw	r3,-4(fp)
   50654:	00800174 	movhi	r2,5
   50658:	10848a04 	addi	r2,r2,4648
   5065c:	18bff62e 	bgeu	r3,r2,50638 <_do_ctors+0x20>
}
   50660:	0001883a 	nop
   50664:	0001883a 	nop
   50668:	e037883a 	mov	sp,fp
   5066c:	dfc00117 	ldw	ra,4(sp)
   50670:	df000017 	ldw	fp,0(sp)
   50674:	dec00204 	addi	sp,sp,8
   50678:	f800283a 	ret

0005067c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   5067c:	defffd04 	addi	sp,sp,-12
   50680:	dfc00215 	stw	ra,8(sp)
   50684:	df000115 	stw	fp,4(sp)
   50688:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   5068c:	00800174 	movhi	r2,5
   50690:	10848904 	addi	r2,r2,4644
   50694:	e0bfff15 	stw	r2,-4(fp)
   50698:	00000606 	br	506b4 <_do_dtors+0x38>
        (*dtor) (); 
   5069c:	e0bfff17 	ldw	r2,-4(fp)
   506a0:	10800017 	ldw	r2,0(r2)
   506a4:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   506a8:	e0bfff17 	ldw	r2,-4(fp)
   506ac:	10bfff04 	addi	r2,r2,-4
   506b0:	e0bfff15 	stw	r2,-4(fp)
   506b4:	e0ffff17 	ldw	r3,-4(fp)
   506b8:	00800174 	movhi	r2,5
   506bc:	10848a04 	addi	r2,r2,4648
   506c0:	18bff62e 	bgeu	r3,r2,5069c <_do_dtors+0x20>
}
   506c4:	0001883a 	nop
   506c8:	0001883a 	nop
   506cc:	e037883a 	mov	sp,fp
   506d0:	dfc00117 	ldw	ra,4(sp)
   506d4:	df000017 	ldw	fp,0(sp)
   506d8:	dec00204 	addi	sp,sp,8
   506dc:	f800283a 	ret

000506e0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   506e0:	defffe04 	addi	sp,sp,-8
   506e4:	dfc00115 	stw	ra,4(sp)
   506e8:	df000015 	stw	fp,0(sp)
   506ec:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   506f0:	01440004 	movi	r5,4096
   506f4:	0009883a 	mov	r4,zero
   506f8:	0050f280 	call	50f28 <alt_icache_flush>
#endif
}
   506fc:	0001883a 	nop
   50700:	e037883a 	mov	sp,fp
   50704:	dfc00117 	ldw	ra,4(sp)
   50708:	df000017 	ldw	fp,0(sp)
   5070c:	dec00204 	addi	sp,sp,8
   50710:	f800283a 	ret

00050714 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   50714:	defffe04 	addi	sp,sp,-8
   50718:	df000115 	stw	fp,4(sp)
   5071c:	df000104 	addi	fp,sp,4
   50720:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   50724:	e0bfff17 	ldw	r2,-4(fp)
   50728:	10bffe84 	addi	r2,r2,-6
   5072c:	10c00428 	cmpgeui	r3,r2,16
   50730:	18c03fcc 	andi	r3,r3,255
   50734:	18000f1e 	bne	r3,zero,50774 <alt_exception_cause_generated_bad_addr+0x60>
   50738:	00c00044 	movi	r3,1
   5073c:	1884983a 	sll	r2,r3,r2
   50740:	10e2c8cc 	andi	r3,r2,35619
   50744:	1806c03a 	cmpne	r3,r3,zero
   50748:	18c03fcc 	andi	r3,r3,255
   5074c:	1800051e 	bne	r3,zero,50764 <alt_exception_cause_generated_bad_addr+0x50>
   50750:	1084100c 	andi	r2,r2,4160
   50754:	1004c03a 	cmpne	r2,r2,zero
   50758:	10803fcc 	andi	r2,r2,255
   5075c:	1000031e 	bne	r2,zero,5076c <alt_exception_cause_generated_bad_addr+0x58>
   50760:	00000406 	br	50774 <alt_exception_cause_generated_bad_addr+0x60>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   50764:	00800044 	movi	r2,1
   50768:	00000306 	br	50778 <alt_exception_cause_generated_bad_addr+0x64>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   5076c:	0005883a 	mov	r2,zero
   50770:	00000106 	br	50778 <alt_exception_cause_generated_bad_addr+0x64>

  default:
    return 0;
   50774:	0005883a 	mov	r2,zero
  }
}
   50778:	e037883a 	mov	sp,fp
   5077c:	df000017 	ldw	fp,0(sp)
   50780:	dec00104 	addi	sp,sp,4
   50784:	f800283a 	ret

00050788 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   50788:	defff904 	addi	sp,sp,-28
   5078c:	dfc00615 	stw	ra,24(sp)
   50790:	df000515 	stw	fp,20(sp)
   50794:	df000504 	addi	fp,sp,20
   50798:	e13ffe15 	stw	r4,-8(fp)
   5079c:	e17ffd15 	stw	r5,-12(fp)
   507a0:	e1bffc15 	stw	r6,-16(fp)
   507a4:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   507a8:	e1bffb17 	ldw	r6,-20(fp)
   507ac:	e17ffc17 	ldw	r5,-16(fp)
   507b0:	e13ffd17 	ldw	r4,-12(fp)
   507b4:	00509a80 	call	509a8 <open>
   507b8:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   507bc:	e0bfff17 	ldw	r2,-4(fp)
   507c0:	10001716 	blt	r2,zero,50820 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
   507c4:	e0bfff17 	ldw	r2,-4(fp)
   507c8:	10c00324 	muli	r3,r2,12
   507cc:	00800174 	movhi	r2,5
   507d0:	1885883a 	add	r2,r3,r2
   507d4:	10c8b717 	ldw	r3,8924(r2)
   507d8:	e0bffe17 	ldw	r2,-8(fp)
   507dc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   507e0:	e0bfff17 	ldw	r2,-4(fp)
   507e4:	10c00324 	muli	r3,r2,12
   507e8:	00800174 	movhi	r2,5
   507ec:	1885883a 	add	r2,r3,r2
   507f0:	10c8b817 	ldw	r3,8928(r2)
   507f4:	e0bffe17 	ldw	r2,-8(fp)
   507f8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   507fc:	e0bfff17 	ldw	r2,-4(fp)
   50800:	10c00324 	muli	r3,r2,12
   50804:	00800174 	movhi	r2,5
   50808:	1885883a 	add	r2,r3,r2
   5080c:	10c8b917 	ldw	r3,8932(r2)
   50810:	e0bffe17 	ldw	r2,-8(fp)
   50814:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   50818:	e13fff17 	ldw	r4,-4(fp)
   5081c:	004f3680 	call	4f368 <alt_release_fd>
  }
} 
   50820:	0001883a 	nop
   50824:	e037883a 	mov	sp,fp
   50828:	dfc00117 	ldw	ra,4(sp)
   5082c:	df000017 	ldw	fp,0(sp)
   50830:	dec00204 	addi	sp,sp,8
   50834:	f800283a 	ret

00050838 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   50838:	defffb04 	addi	sp,sp,-20
   5083c:	dfc00415 	stw	ra,16(sp)
   50840:	df000315 	stw	fp,12(sp)
   50844:	df000304 	addi	fp,sp,12
   50848:	e13fff15 	stw	r4,-4(fp)
   5084c:	e17ffe15 	stw	r5,-8(fp)
   50850:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   50854:	01c07fc4 	movi	r7,511
   50858:	01800044 	movi	r6,1
   5085c:	e17fff17 	ldw	r5,-4(fp)
   50860:	01000174 	movhi	r4,5
   50864:	2108ba04 	addi	r4,r4,8936
   50868:	00507880 	call	50788 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   5086c:	01c07fc4 	movi	r7,511
   50870:	000d883a 	mov	r6,zero
   50874:	e17ffe17 	ldw	r5,-8(fp)
   50878:	01000174 	movhi	r4,5
   5087c:	2108b704 	addi	r4,r4,8924
   50880:	00507880 	call	50788 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   50884:	01c07fc4 	movi	r7,511
   50888:	01800044 	movi	r6,1
   5088c:	e17ffd17 	ldw	r5,-12(fp)
   50890:	01000174 	movhi	r4,5
   50894:	2108bd04 	addi	r4,r4,8948
   50898:	00507880 	call	50788 <alt_open_fd>
}  
   5089c:	0001883a 	nop
   508a0:	e037883a 	mov	sp,fp
   508a4:	dfc00117 	ldw	ra,4(sp)
   508a8:	df000017 	ldw	fp,0(sp)
   508ac:	dec00204 	addi	sp,sp,8
   508b0:	f800283a 	ret

000508b4 <alt_get_errno>:
{
   508b4:	defffe04 	addi	sp,sp,-8
   508b8:	dfc00115 	stw	ra,4(sp)
   508bc:	df000015 	stw	fp,0(sp)
   508c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   508c4:	d0a00917 	ldw	r2,-32732(gp)
   508c8:	10000326 	beq	r2,zero,508d8 <alt_get_errno+0x24>
   508cc:	d0a00917 	ldw	r2,-32732(gp)
   508d0:	103ee83a 	callr	r2
   508d4:	00000106 	br	508dc <alt_get_errno+0x28>
   508d8:	d0a70a04 	addi	r2,gp,-25560
}
   508dc:	e037883a 	mov	sp,fp
   508e0:	dfc00117 	ldw	ra,4(sp)
   508e4:	df000017 	ldw	fp,0(sp)
   508e8:	dec00204 	addi	sp,sp,8
   508ec:	f800283a 	ret

000508f0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   508f0:	defffd04 	addi	sp,sp,-12
   508f4:	df000215 	stw	fp,8(sp)
   508f8:	df000204 	addi	fp,sp,8
   508fc:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   50900:	e0bffe17 	ldw	r2,-8(fp)
   50904:	10800217 	ldw	r2,8(r2)
   50908:	10d00034 	orhi	r3,r2,16384
   5090c:	e0bffe17 	ldw	r2,-8(fp)
   50910:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   50914:	e03fff15 	stw	zero,-4(fp)
   50918:	00001a06 	br	50984 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   5091c:	e0bfff17 	ldw	r2,-4(fp)
   50920:	10c00324 	muli	r3,r2,12
   50924:	00800174 	movhi	r2,5
   50928:	1885883a 	add	r2,r3,r2
   5092c:	10c8b717 	ldw	r3,8924(r2)
   50930:	e0bffe17 	ldw	r2,-8(fp)
   50934:	10800017 	ldw	r2,0(r2)
   50938:	18800f1e 	bne	r3,r2,50978 <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   5093c:	e0bfff17 	ldw	r2,-4(fp)
   50940:	10c00324 	muli	r3,r2,12
   50944:	00800174 	movhi	r2,5
   50948:	1885883a 	add	r2,r3,r2
   5094c:	1088b917 	ldw	r2,8932(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
   50950:	1000090e 	bge	r2,zero,50978 <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
   50954:	e0bfff17 	ldw	r2,-4(fp)
   50958:	10c00324 	muli	r3,r2,12
   5095c:	00800174 	movhi	r2,5
   50960:	1088b704 	addi	r2,r2,8924
   50964:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   50968:	e0fffe17 	ldw	r3,-8(fp)
   5096c:	18800226 	beq	r3,r2,50978 <alt_file_locked+0x88>
    {
      return -EACCES;
   50970:	00bffcc4 	movi	r2,-13
   50974:	00000806 	br	50998 <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
   50978:	e0bfff17 	ldw	r2,-4(fp)
   5097c:	10800044 	addi	r2,r2,1
   50980:	e0bfff15 	stw	r2,-4(fp)
   50984:	d0a00817 	ldw	r2,-32736(gp)
   50988:	1007883a 	mov	r3,r2
   5098c:	e0bfff17 	ldw	r2,-4(fp)
   50990:	18bfe22e 	bgeu	r3,r2,5091c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   50994:	0005883a 	mov	r2,zero
}
   50998:	e037883a 	mov	sp,fp
   5099c:	df000017 	ldw	fp,0(sp)
   509a0:	dec00104 	addi	sp,sp,4
   509a4:	f800283a 	ret

000509a8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   509a8:	defff604 	addi	sp,sp,-40
   509ac:	dfc00915 	stw	ra,36(sp)
   509b0:	df000815 	stw	fp,32(sp)
   509b4:	df000804 	addi	fp,sp,32
   509b8:	e13ffa15 	stw	r4,-24(fp)
   509bc:	e17ff915 	stw	r5,-28(fp)
   509c0:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   509c4:	00bfffc4 	movi	r2,-1
   509c8:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   509cc:	00bffb44 	movi	r2,-19
   509d0:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   509d4:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   509d8:	d1600604 	addi	r5,gp,-32744
   509dc:	e13ffa17 	ldw	r4,-24(fp)
   509e0:	0050cf00 	call	50cf0 <alt_find_dev>
   509e4:	e0bfff15 	stw	r2,-4(fp)
   509e8:	e0bfff17 	ldw	r2,-4(fp)
   509ec:	1000051e 	bne	r2,zero,50a04 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   509f0:	e13ffa17 	ldw	r4,-24(fp)
   509f4:	0050d800 	call	50d80 <alt_find_file>
   509f8:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   509fc:	00800044 	movi	r2,1
   50a00:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   50a04:	e0bfff17 	ldw	r2,-4(fp)
   50a08:	10002926 	beq	r2,zero,50ab0 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   50a0c:	e13fff17 	ldw	r4,-4(fp)
   50a10:	0050e880 	call	50e88 <alt_get_fd>
   50a14:	e0bffe15 	stw	r2,-8(fp)
   50a18:	e0bffe17 	ldw	r2,-8(fp)
   50a1c:	1000030e 	bge	r2,zero,50a2c <open+0x84>
    {
      status = index;
   50a20:	e0bffe17 	ldw	r2,-8(fp)
   50a24:	e0bffd15 	stw	r2,-12(fp)
   50a28:	00002306 	br	50ab8 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   50a2c:	e0bffe17 	ldw	r2,-8(fp)
   50a30:	10c00324 	muli	r3,r2,12
   50a34:	00800174 	movhi	r2,5
   50a38:	1088b704 	addi	r2,r2,8924
   50a3c:	1885883a 	add	r2,r3,r2
   50a40:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   50a44:	e0fff917 	ldw	r3,-28(fp)
   50a48:	00900034 	movhi	r2,16384
   50a4c:	10bfffc4 	addi	r2,r2,-1
   50a50:	1886703a 	and	r3,r3,r2
   50a54:	e0bffb17 	ldw	r2,-20(fp)
   50a58:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   50a5c:	e0bffc17 	ldw	r2,-16(fp)
   50a60:	1000051e 	bne	r2,zero,50a78 <open+0xd0>
   50a64:	e13ffb17 	ldw	r4,-20(fp)
   50a68:	00508f00 	call	508f0 <alt_file_locked>
   50a6c:	e0bffd15 	stw	r2,-12(fp)
   50a70:	e0bffd17 	ldw	r2,-12(fp)
   50a74:	10001016 	blt	r2,zero,50ab8 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   50a78:	e0bfff17 	ldw	r2,-4(fp)
   50a7c:	10800317 	ldw	r2,12(r2)
   50a80:	10000826 	beq	r2,zero,50aa4 <open+0xfc>
   50a84:	e0bfff17 	ldw	r2,-4(fp)
   50a88:	10800317 	ldw	r2,12(r2)
   50a8c:	e1fff817 	ldw	r7,-32(fp)
   50a90:	e1bff917 	ldw	r6,-28(fp)
   50a94:	e17ffa17 	ldw	r5,-24(fp)
   50a98:	e13ffb17 	ldw	r4,-20(fp)
   50a9c:	103ee83a 	callr	r2
   50aa0:	00000106 	br	50aa8 <open+0x100>
   50aa4:	0005883a 	mov	r2,zero
   50aa8:	e0bffd15 	stw	r2,-12(fp)
   50aac:	00000206 	br	50ab8 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   50ab0:	00bffb44 	movi	r2,-19
   50ab4:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   50ab8:	e0bffd17 	ldw	r2,-12(fp)
   50abc:	1000090e 	bge	r2,zero,50ae4 <open+0x13c>
  {
    alt_release_fd (index);  
   50ac0:	e13ffe17 	ldw	r4,-8(fp)
   50ac4:	004f3680 	call	4f368 <alt_release_fd>
    ALT_ERRNO = -status;
   50ac8:	00508b40 	call	508b4 <alt_get_errno>
   50acc:	1007883a 	mov	r3,r2
   50ad0:	e0bffd17 	ldw	r2,-12(fp)
   50ad4:	0085c83a 	sub	r2,zero,r2
   50ad8:	18800015 	stw	r2,0(r3)
    return -1;
   50adc:	00bfffc4 	movi	r2,-1
   50ae0:	00000106 	br	50ae8 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   50ae4:	e0bffe17 	ldw	r2,-8(fp)
}
   50ae8:	e037883a 	mov	sp,fp
   50aec:	dfc00117 	ldw	ra,4(sp)
   50af0:	df000017 	ldw	fp,0(sp)
   50af4:	dec00204 	addi	sp,sp,8
   50af8:	f800283a 	ret

00050afc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   50afc:	defffa04 	addi	sp,sp,-24
   50b00:	df000515 	stw	fp,20(sp)
   50b04:	df000504 	addi	fp,sp,20
   50b08:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   50b0c:	0005303a 	rdctl	r2,status
   50b10:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50b14:	e0fffc17 	ldw	r3,-16(fp)
   50b18:	00bfff84 	movi	r2,-2
   50b1c:	1884703a 	and	r2,r3,r2
   50b20:	1001703a 	wrctl	status,r2
  return context;
   50b24:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   50b28:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   50b2c:	e0bffb17 	ldw	r2,-20(fp)
   50b30:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   50b34:	e0bffd17 	ldw	r2,-12(fp)
   50b38:	10800017 	ldw	r2,0(r2)
   50b3c:	e0fffd17 	ldw	r3,-12(fp)
   50b40:	18c00117 	ldw	r3,4(r3)
   50b44:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   50b48:	e0bffd17 	ldw	r2,-12(fp)
   50b4c:	10800117 	ldw	r2,4(r2)
   50b50:	e0fffd17 	ldw	r3,-12(fp)
   50b54:	18c00017 	ldw	r3,0(r3)
   50b58:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   50b5c:	e0bffd17 	ldw	r2,-12(fp)
   50b60:	e0fffd17 	ldw	r3,-12(fp)
   50b64:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   50b68:	e0bffd17 	ldw	r2,-12(fp)
   50b6c:	e0fffd17 	ldw	r3,-12(fp)
   50b70:	10c00015 	stw	r3,0(r2)
} 
   50b74:	0001883a 	nop
   50b78:	e0bfff17 	ldw	r2,-4(fp)
   50b7c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   50b80:	e0bffe17 	ldw	r2,-8(fp)
   50b84:	1001703a 	wrctl	status,r2
}
   50b88:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   50b8c:	0001883a 	nop
   50b90:	e037883a 	mov	sp,fp
   50b94:	df000017 	ldw	fp,0(sp)
   50b98:	dec00104 	addi	sp,sp,4
   50b9c:	f800283a 	ret

00050ba0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   50ba0:	defff904 	addi	sp,sp,-28
   50ba4:	dfc00615 	stw	ra,24(sp)
   50ba8:	df000515 	stw	fp,20(sp)
   50bac:	dc400415 	stw	r17,16(sp)
   50bb0:	dc000315 	stw	r16,12(sp)
   50bb4:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   50bb8:	d0a00c17 	ldw	r2,-32720(gp)
   50bbc:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   50bc0:	d1271217 	ldw	r4,-25528(gp)
   50bc4:	d1671317 	ldw	r5,-25524(gp)
   50bc8:	01800044 	movi	r6,1
   50bcc:	000f883a 	mov	r7,zero
   50bd0:	2185883a 	add	r2,r4,r6
   50bd4:	1111803a 	cmpltu	r8,r2,r4
   50bd8:	29c7883a 	add	r3,r5,r7
   50bdc:	40c9883a 	add	r4,r8,r3
   50be0:	2007883a 	mov	r3,r4
   50be4:	1009883a 	mov	r4,r2
   50be8:	180b883a 	mov	r5,r3
   50bec:	d1271215 	stw	r4,-25528(gp)
   50bf0:	d1671315 	stw	r5,-25524(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   50bf4:	00002906 	br	50c9c <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
   50bf8:	e0bffd17 	ldw	r2,-12(fp)
   50bfc:	10800017 	ldw	r2,0(r2)
   50c00:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
   50c04:	e13ffd17 	ldw	r4,-12(fp)
   50c08:	20800217 	ldw	r2,8(r4)
   50c0c:	20c00317 	ldw	r3,12(r4)
   50c10:	d1271217 	ldw	r4,-25528(gp)
   50c14:	d1671317 	ldw	r5,-25524(gp)
   50c18:	28c01e36 	bltu	r5,r3,50c94 <alt_tick+0xf4>
   50c1c:	1940011e 	bne	r3,r5,50c24 <alt_tick+0x84>
   50c20:	20801c36 	bltu	r4,r2,50c94 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
   50c24:	e0bffd17 	ldw	r2,-12(fp)
   50c28:	10800417 	ldw	r2,16(r2)
   50c2c:	e0fffd17 	ldw	r3,-12(fp)
   50c30:	18c00517 	ldw	r3,20(r3)
   50c34:	1809883a 	mov	r4,r3
   50c38:	103ee83a 	callr	r2
   50c3c:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   50c40:	e0bffb17 	ldw	r2,-20(fp)
   50c44:	1000031e 	bne	r2,zero,50c54 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
   50c48:	e13ffd17 	ldw	r4,-12(fp)
   50c4c:	0050afc0 	call	50afc <alt_alarm_stop>
   50c50:	00001006 	br	50c94 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
   50c54:	e0bffd17 	ldw	r2,-12(fp)
   50c58:	11000217 	ldw	r4,8(r2)
   50c5c:	11400317 	ldw	r5,12(r2)
   50c60:	e0bffb17 	ldw	r2,-20(fp)
   50c64:	1021883a 	mov	r16,r2
   50c68:	0023883a 	mov	r17,zero
   50c6c:	2405883a 	add	r2,r4,r16
   50c70:	110d803a 	cmpltu	r6,r2,r4
   50c74:	2c47883a 	add	r3,r5,r17
   50c78:	30c9883a 	add	r4,r6,r3
   50c7c:	2007883a 	mov	r3,r4
   50c80:	1009883a 	mov	r4,r2
   50c84:	180b883a 	mov	r5,r3
   50c88:	e0bffd17 	ldw	r2,-12(fp)
   50c8c:	11000215 	stw	r4,8(r2)
   50c90:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
   50c94:	e0bffc17 	ldw	r2,-16(fp)
   50c98:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   50c9c:	e0fffd17 	ldw	r3,-12(fp)
   50ca0:	d0a00c04 	addi	r2,gp,-32720
   50ca4:	18bfd41e 	bne	r3,r2,50bf8 <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   50ca8:	0001883a 	nop
}
   50cac:	0001883a 	nop
   50cb0:	e6fffe04 	addi	sp,fp,-8
   50cb4:	dfc00317 	ldw	ra,12(sp)
   50cb8:	df000217 	ldw	fp,8(sp)
   50cbc:	dc400117 	ldw	r17,4(sp)
   50cc0:	dc000017 	ldw	r16,0(sp)
   50cc4:	dec00404 	addi	sp,sp,16
   50cc8:	f800283a 	ret

00050ccc <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   50ccc:	deffff04 	addi	sp,sp,-4
   50cd0:	df000015 	stw	fp,0(sp)
   50cd4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   50cd8:	000170fa 	wrctl	ienable,zero
}
   50cdc:	0001883a 	nop
   50ce0:	e037883a 	mov	sp,fp
   50ce4:	df000017 	ldw	fp,0(sp)
   50ce8:	dec00104 	addi	sp,sp,4
   50cec:	f800283a 	ret

00050cf0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   50cf0:	defffa04 	addi	sp,sp,-24
   50cf4:	dfc00515 	stw	ra,20(sp)
   50cf8:	df000415 	stw	fp,16(sp)
   50cfc:	df000404 	addi	fp,sp,16
   50d00:	e13ffd15 	stw	r4,-12(fp)
   50d04:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   50d08:	e0bffc17 	ldw	r2,-16(fp)
   50d0c:	10800017 	ldw	r2,0(r2)
   50d10:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   50d14:	e13ffd17 	ldw	r4,-12(fp)
   50d18:	00418b00 	call	418b0 <strlen>
   50d1c:	10800044 	addi	r2,r2,1
   50d20:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   50d24:	00000d06 	br	50d5c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   50d28:	e0bfff17 	ldw	r2,-4(fp)
   50d2c:	10800217 	ldw	r2,8(r2)
   50d30:	e0fffe17 	ldw	r3,-8(fp)
   50d34:	180d883a 	mov	r6,r3
   50d38:	e17ffd17 	ldw	r5,-12(fp)
   50d3c:	1009883a 	mov	r4,r2
   50d40:	00510000 	call	51000 <memcmp>
   50d44:	1000021e 	bne	r2,zero,50d50 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   50d48:	e0bfff17 	ldw	r2,-4(fp)
   50d4c:	00000706 	br	50d6c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   50d50:	e0bfff17 	ldw	r2,-4(fp)
   50d54:	10800017 	ldw	r2,0(r2)
   50d58:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   50d5c:	e0ffff17 	ldw	r3,-4(fp)
   50d60:	e0bffc17 	ldw	r2,-16(fp)
   50d64:	18bff01e 	bne	r3,r2,50d28 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   50d68:	0005883a 	mov	r2,zero
}
   50d6c:	e037883a 	mov	sp,fp
   50d70:	dfc00117 	ldw	ra,4(sp)
   50d74:	df000017 	ldw	fp,0(sp)
   50d78:	dec00204 	addi	sp,sp,8
   50d7c:	f800283a 	ret

00050d80 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   50d80:	defffb04 	addi	sp,sp,-20
   50d84:	dfc00415 	stw	ra,16(sp)
   50d88:	df000315 	stw	fp,12(sp)
   50d8c:	df000304 	addi	fp,sp,12
   50d90:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   50d94:	d0a00417 	ldw	r2,-32752(gp)
   50d98:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   50d9c:	00003106 	br	50e64 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   50da0:	e0bfff17 	ldw	r2,-4(fp)
   50da4:	10800217 	ldw	r2,8(r2)
   50da8:	1009883a 	mov	r4,r2
   50dac:	00418b00 	call	418b0 <strlen>
   50db0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   50db4:	e0bfff17 	ldw	r2,-4(fp)
   50db8:	10c00217 	ldw	r3,8(r2)
   50dbc:	e0bffe17 	ldw	r2,-8(fp)
   50dc0:	10bfffc4 	addi	r2,r2,-1
   50dc4:	1885883a 	add	r2,r3,r2
   50dc8:	10800003 	ldbu	r2,0(r2)
   50dcc:	10803fcc 	andi	r2,r2,255
   50dd0:	1080201c 	xori	r2,r2,128
   50dd4:	10bfe004 	addi	r2,r2,-128
   50dd8:	10800bd8 	cmpnei	r2,r2,47
   50ddc:	1000031e 	bne	r2,zero,50dec <alt_find_file+0x6c>
    {
      len -= 1;
   50de0:	e0bffe17 	ldw	r2,-8(fp)
   50de4:	10bfffc4 	addi	r2,r2,-1
   50de8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   50dec:	e0bffe17 	ldw	r2,-8(fp)
   50df0:	e0fffd17 	ldw	r3,-12(fp)
   50df4:	1885883a 	add	r2,r3,r2
   50df8:	10800003 	ldbu	r2,0(r2)
   50dfc:	10803fcc 	andi	r2,r2,255
   50e00:	1080201c 	xori	r2,r2,128
   50e04:	10bfe004 	addi	r2,r2,-128
   50e08:	10800be0 	cmpeqi	r2,r2,47
   50e0c:	1000081e 	bne	r2,zero,50e30 <alt_find_file+0xb0>
   50e10:	e0bffe17 	ldw	r2,-8(fp)
   50e14:	e0fffd17 	ldw	r3,-12(fp)
   50e18:	1885883a 	add	r2,r3,r2
   50e1c:	10800003 	ldbu	r2,0(r2)
   50e20:	10803fcc 	andi	r2,r2,255
   50e24:	1080201c 	xori	r2,r2,128
   50e28:	10bfe004 	addi	r2,r2,-128
   50e2c:	10000a1e 	bne	r2,zero,50e58 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   50e30:	e0bfff17 	ldw	r2,-4(fp)
   50e34:	10800217 	ldw	r2,8(r2)
   50e38:	e0fffe17 	ldw	r3,-8(fp)
   50e3c:	180d883a 	mov	r6,r3
   50e40:	e17ffd17 	ldw	r5,-12(fp)
   50e44:	1009883a 	mov	r4,r2
   50e48:	00510000 	call	51000 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   50e4c:	1000021e 	bne	r2,zero,50e58 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   50e50:	e0bfff17 	ldw	r2,-4(fp)
   50e54:	00000706 	br	50e74 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   50e58:	e0bfff17 	ldw	r2,-4(fp)
   50e5c:	10800017 	ldw	r2,0(r2)
   50e60:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   50e64:	e0ffff17 	ldw	r3,-4(fp)
   50e68:	d0a00404 	addi	r2,gp,-32752
   50e6c:	18bfcc1e 	bne	r3,r2,50da0 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   50e70:	0005883a 	mov	r2,zero
}
   50e74:	e037883a 	mov	sp,fp
   50e78:	dfc00117 	ldw	ra,4(sp)
   50e7c:	df000017 	ldw	fp,0(sp)
   50e80:	dec00204 	addi	sp,sp,8
   50e84:	f800283a 	ret

00050e88 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   50e88:	defffc04 	addi	sp,sp,-16
   50e8c:	df000315 	stw	fp,12(sp)
   50e90:	df000304 	addi	fp,sp,12
   50e94:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   50e98:	00bffa04 	movi	r2,-24
   50e9c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   50ea0:	e03fff15 	stw	zero,-4(fp)
   50ea4:	00001706 	br	50f04 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
   50ea8:	e0bfff17 	ldw	r2,-4(fp)
   50eac:	10c00324 	muli	r3,r2,12
   50eb0:	00800174 	movhi	r2,5
   50eb4:	1885883a 	add	r2,r3,r2
   50eb8:	1088b717 	ldw	r2,8924(r2)
   50ebc:	10000e1e 	bne	r2,zero,50ef8 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
   50ec0:	e0bfff17 	ldw	r2,-4(fp)
   50ec4:	11000324 	muli	r4,r2,12
   50ec8:	e0fffd17 	ldw	r3,-12(fp)
   50ecc:	00800174 	movhi	r2,5
   50ed0:	2085883a 	add	r2,r4,r2
   50ed4:	10c8b715 	stw	r3,8924(r2)
      if (i > alt_max_fd)
   50ed8:	d0e00817 	ldw	r3,-32736(gp)
   50edc:	e0bfff17 	ldw	r2,-4(fp)
   50ee0:	1880020e 	bge	r3,r2,50eec <alt_get_fd+0x64>
      {
        alt_max_fd = i;
   50ee4:	e0bfff17 	ldw	r2,-4(fp)
   50ee8:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   50eec:	e0bfff17 	ldw	r2,-4(fp)
   50ef0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   50ef4:	00000706 	br	50f14 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
   50ef8:	e0bfff17 	ldw	r2,-4(fp)
   50efc:	10800044 	addi	r2,r2,1
   50f00:	e0bfff15 	stw	r2,-4(fp)
   50f04:	e0bfff17 	ldw	r2,-4(fp)
   50f08:	10800810 	cmplti	r2,r2,32
   50f0c:	103fe61e 	bne	r2,zero,50ea8 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   50f10:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   50f14:	e0bffe17 	ldw	r2,-8(fp)
}
   50f18:	e037883a 	mov	sp,fp
   50f1c:	df000017 	ldw	fp,0(sp)
   50f20:	dec00104 	addi	sp,sp,4
   50f24:	f800283a 	ret

00050f28 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   50f28:	defffb04 	addi	sp,sp,-20
   50f2c:	df000415 	stw	fp,16(sp)
   50f30:	df000404 	addi	fp,sp,16
   50f34:	e13ffd15 	stw	r4,-12(fp)
   50f38:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   50f3c:	e0bffc17 	ldw	r2,-16(fp)
   50f40:	10840070 	cmpltui	r2,r2,4097
   50f44:	1000021e 	bne	r2,zero,50f50 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   50f48:	00840004 	movi	r2,4096
   50f4c:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
   50f50:	e0fffd17 	ldw	r3,-12(fp)
   50f54:	e0bffc17 	ldw	r2,-16(fp)
   50f58:	1885883a 	add	r2,r3,r2
   50f5c:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   50f60:	e0bffd17 	ldw	r2,-12(fp)
   50f64:	e0bfff15 	stw	r2,-4(fp)
   50f68:	00000506 	br	50f80 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   50f6c:	e0bfff17 	ldw	r2,-4(fp)
   50f70:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   50f74:	e0bfff17 	ldw	r2,-4(fp)
   50f78:	10800804 	addi	r2,r2,32
   50f7c:	e0bfff15 	stw	r2,-4(fp)
   50f80:	e0ffff17 	ldw	r3,-4(fp)
   50f84:	e0bffe17 	ldw	r2,-8(fp)
   50f88:	18bff836 	bltu	r3,r2,50f6c <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   50f8c:	e0bffd17 	ldw	r2,-12(fp)
   50f90:	108007cc 	andi	r2,r2,31
   50f94:	10000226 	beq	r2,zero,50fa0 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   50f98:	e0bfff17 	ldw	r2,-4(fp)
   50f9c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   50fa0:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   50fa4:	0001883a 	nop
   50fa8:	e037883a 	mov	sp,fp
   50fac:	df000017 	ldw	fp,0(sp)
   50fb0:	dec00104 	addi	sp,sp,4
   50fb4:	f800283a 	ret

00050fb8 <atexit>:
   50fb8:	200b883a 	mov	r5,r4
   50fbc:	000f883a 	mov	r7,zero
   50fc0:	000d883a 	mov	r6,zero
   50fc4:	0009883a 	mov	r4,zero
   50fc8:	00510781 	jmpi	51078 <__register_exitproc>

00050fcc <exit>:
   50fcc:	defffe04 	addi	sp,sp,-8
   50fd0:	000b883a 	mov	r5,zero
   50fd4:	dc000015 	stw	r16,0(sp)
   50fd8:	dfc00115 	stw	ra,4(sp)
   50fdc:	2021883a 	mov	r16,r4
   50fe0:	00511080 	call	51108 <__call_exitprocs>
   50fe4:	00800174 	movhi	r2,5
   50fe8:	110d2f17 	ldw	r4,13500(r2)
   50fec:	20800f17 	ldw	r2,60(r4)
   50ff0:	10000126 	beq	r2,zero,50ff8 <exit+0x2c>
   50ff4:	103ee83a 	callr	r2
   50ff8:	8009883a 	mov	r4,r16
   50ffc:	004e9840 	call	4e984 <_exit>

00051000 <memcmp>:
   51000:	30800128 	cmpgeui	r2,r6,4
   51004:	10000d26 	beq	r2,zero,5103c <memcmp+0x3c>
   51008:	2144b03a 	or	r2,r4,r5
   5100c:	108000cc 	andi	r2,r2,3
   51010:	10000726 	beq	r2,zero,51030 <memcmp+0x30>
   51014:	30bfffc4 	addi	r2,r6,-1
   51018:	00000a06 	br	51044 <memcmp+0x44>
   5101c:	31bfff04 	addi	r6,r6,-4
   51020:	30800128 	cmpgeui	r2,r6,4
   51024:	21000104 	addi	r4,r4,4
   51028:	29400104 	addi	r5,r5,4
   5102c:	10000326 	beq	r2,zero,5103c <memcmp+0x3c>
   51030:	20c00017 	ldw	r3,0(r4)
   51034:	28800017 	ldw	r2,0(r5)
   51038:	18bff826 	beq	r3,r2,5101c <memcmp+0x1c>
   5103c:	30bfffc4 	addi	r2,r6,-1
   51040:	30000b26 	beq	r6,zero,51070 <memcmp+0x70>
   51044:	11800044 	addi	r6,r2,1
   51048:	218d883a 	add	r6,r4,r6
   5104c:	00000106 	br	51054 <memcmp+0x54>
   51050:	21800726 	beq	r4,r6,51070 <memcmp+0x70>
   51054:	20800003 	ldbu	r2,0(r4)
   51058:	28c00003 	ldbu	r3,0(r5)
   5105c:	21000044 	addi	r4,r4,1
   51060:	29400044 	addi	r5,r5,1
   51064:	10fffa26 	beq	r2,r3,51050 <memcmp+0x50>
   51068:	10c5c83a 	sub	r2,r2,r3
   5106c:	f800283a 	ret
   51070:	0005883a 	mov	r2,zero
   51074:	f800283a 	ret

00051078 <__register_exitproc>:
   51078:	00800174 	movhi	r2,5
   5107c:	10cd2f17 	ldw	r3,13500(r2)
   51080:	18805217 	ldw	r2,328(r3)
   51084:	10001726 	beq	r2,zero,510e4 <__register_exitproc+0x6c>
   51088:	10c00117 	ldw	r3,4(r2)
   5108c:	1a000808 	cmpgei	r8,r3,32
   51090:	40001b1e 	bne	r8,zero,51100 <__register_exitproc+0x88>
   51094:	20000b26 	beq	r4,zero,510c4 <__register_exitproc+0x4c>
   51098:	181090ba 	slli	r8,r3,2
   5109c:	02400044 	movi	r9,1
   510a0:	48d2983a 	sll	r9,r9,r3
   510a4:	1211883a 	add	r8,r2,r8
   510a8:	41802215 	stw	r6,136(r8)
   510ac:	11806217 	ldw	r6,392(r2)
   510b0:	21000098 	cmpnei	r4,r4,2
   510b4:	324cb03a 	or	r6,r6,r9
   510b8:	11806215 	stw	r6,392(r2)
   510bc:	41c04215 	stw	r7,264(r8)
   510c0:	20000b26 	beq	r4,zero,510f0 <__register_exitproc+0x78>
   510c4:	19000084 	addi	r4,r3,2
   510c8:	200890ba 	slli	r4,r4,2
   510cc:	18c00044 	addi	r3,r3,1
   510d0:	10c00115 	stw	r3,4(r2)
   510d4:	1105883a 	add	r2,r2,r4
   510d8:	11400015 	stw	r5,0(r2)
   510dc:	0005883a 	mov	r2,zero
   510e0:	f800283a 	ret
   510e4:	18805304 	addi	r2,r3,332
   510e8:	18805215 	stw	r2,328(r3)
   510ec:	003fe606 	br	51088 <__register_exitproc+0x10>
   510f0:	11006317 	ldw	r4,396(r2)
   510f4:	2248b03a 	or	r4,r4,r9
   510f8:	11006315 	stw	r4,396(r2)
   510fc:	003ff106 	br	510c4 <__register_exitproc+0x4c>
   51100:	00bfffc4 	movi	r2,-1
   51104:	f800283a 	ret

00051108 <__call_exitprocs>:
   51108:	defff704 	addi	sp,sp,-36
   5110c:	00800174 	movhi	r2,5
   51110:	dcc00315 	stw	r19,12(sp)
   51114:	14cd2f17 	ldw	r19,13500(r2)
   51118:	dc800215 	stw	r18,8(sp)
   5111c:	dfc00815 	stw	ra,32(sp)
   51120:	9c805217 	ldw	r18,328(r19)
   51124:	ddc00715 	stw	r23,28(sp)
   51128:	dd800615 	stw	r22,24(sp)
   5112c:	dd400515 	stw	r21,20(sp)
   51130:	dd000415 	stw	r20,16(sp)
   51134:	dc400115 	stw	r17,4(sp)
   51138:	dc000015 	stw	r16,0(sp)
   5113c:	90001026 	beq	r18,zero,51180 <__call_exitprocs+0x78>
   51140:	202b883a 	mov	r21,r4
   51144:	282d883a 	mov	r22,r5
   51148:	05000044 	movi	r20,1
   5114c:	94000117 	ldw	r16,4(r18)
   51150:	847fffc4 	addi	r17,r16,-1
   51154:	88000a16 	blt	r17,zero,51180 <__call_exitprocs+0x78>
   51158:	84000044 	addi	r16,r16,1
   5115c:	802090ba 	slli	r16,r16,2
   51160:	9421883a 	add	r16,r18,r16
   51164:	b0001126 	beq	r22,zero,511ac <__call_exitprocs+0xa4>
   51168:	80804017 	ldw	r2,256(r16)
   5116c:	15800f26 	beq	r2,r22,511ac <__call_exitprocs+0xa4>
   51170:	8c7fffc4 	addi	r17,r17,-1
   51174:	88bfffd8 	cmpnei	r2,r17,-1
   51178:	843fff04 	addi	r16,r16,-4
   5117c:	103ff91e 	bne	r2,zero,51164 <__call_exitprocs+0x5c>
   51180:	dfc00817 	ldw	ra,32(sp)
   51184:	ddc00717 	ldw	r23,28(sp)
   51188:	dd800617 	ldw	r22,24(sp)
   5118c:	dd400517 	ldw	r21,20(sp)
   51190:	dd000417 	ldw	r20,16(sp)
   51194:	dcc00317 	ldw	r19,12(sp)
   51198:	dc800217 	ldw	r18,8(sp)
   5119c:	dc400117 	ldw	r17,4(sp)
   511a0:	dc000017 	ldw	r16,0(sp)
   511a4:	dec00904 	addi	sp,sp,36
   511a8:	f800283a 	ret
   511ac:	90800117 	ldw	r2,4(r18)
   511b0:	81800017 	ldw	r6,0(r16)
   511b4:	10bfffc4 	addi	r2,r2,-1
   511b8:	14401726 	beq	r2,r17,51218 <__call_exitprocs+0x110>
   511bc:	80000015 	stw	zero,0(r16)
   511c0:	303feb26 	beq	r6,zero,51170 <__call_exitprocs+0x68>
   511c4:	a446983a 	sll	r3,r20,r17
   511c8:	90806217 	ldw	r2,392(r18)
   511cc:	95c00117 	ldw	r23,4(r18)
   511d0:	1884703a 	and	r2,r3,r2
   511d4:	1000081e 	bne	r2,zero,511f8 <__call_exitprocs+0xf0>
   511d8:	303ee83a 	callr	r6
   511dc:	90c00117 	ldw	r3,4(r18)
   511e0:	98805217 	ldw	r2,328(r19)
   511e4:	1dc0011e 	bne	r3,r23,511ec <__call_exitprocs+0xe4>
   511e8:	14bfe126 	beq	r2,r18,51170 <__call_exitprocs+0x68>
   511ec:	103fe426 	beq	r2,zero,51180 <__call_exitprocs+0x78>
   511f0:	1025883a 	mov	r18,r2
   511f4:	003fd506 	br	5114c <__call_exitprocs+0x44>
   511f8:	90806317 	ldw	r2,396(r18)
   511fc:	81002017 	ldw	r4,128(r16)
   51200:	1886703a 	and	r3,r3,r2
   51204:	1800061e 	bne	r3,zero,51220 <__call_exitprocs+0x118>
   51208:	200b883a 	mov	r5,r4
   5120c:	a809883a 	mov	r4,r21
   51210:	303ee83a 	callr	r6
   51214:	003ff106 	br	511dc <__call_exitprocs+0xd4>
   51218:	94400115 	stw	r17,4(r18)
   5121c:	003fe806 	br	511c0 <__call_exitprocs+0xb8>
   51220:	303ee83a 	callr	r6
   51224:	003fed06 	br	511dc <__call_exitprocs+0xd4>
